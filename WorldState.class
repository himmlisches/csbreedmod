import java.net.*;
import java.io.*;
import javax.swing.text.*;
import java.awt.event.*;
import javax.swing.*;
import java.awt.*;
import java.util.*;
import java.text.*;

public class WorldState implements Serializable
{
    private static final long serialVersionUID = 4L;
    int textSize;
    String version;
    Color PURPLE;
    Color ORANGE;
    Color RED;
    Color GREEN;
    Color BLUE;
    Color BACKGROUND;
    Color FOREGROUND;
    String separator;
    int[] nameSeed;
    int[] statSeed;
    String[] genders;
    int[] genderBalance;
    int maleShift;
    int femaleShift;
    Boolean repeatShift;
    Boolean tickleOn;
    Boolean portraits;
    Boolean disableAdaptations;
    String shopTutorial;
    String groupTutorial;
    int totalThreatened;
    int totalSlimed;
    int totalAttacked;
    int totalTaunted;
    String[] tips;
    int nextTip;
    Chosen[] cast;
    Tech[] techs;
    int evilEnergy;
    int day;
    int totalRounds;
    long highScore;
    long parScore;
    String saveTitle;
    int[][] friendship;
    int[][] friction;
    int[][] remaining;
    Boolean[] groupScenes;
    Chosen lastSpeaker;
    int lastLine;
    int lastLastLine;
    int[] pendingBreaks;
    int[] resolvedBreaks;
    int evacuationPerTurn;
    int exterminationPerChosen;
    Chosen[] currentCombatants;
    int battleRound;
    int evacuationProgress;
    int evacuationComplete;
    Boolean evacNotice;
    int exterminationProgress;
    int exterminationComplete;
    int exterminationMultiplier;
    int[] rallyBonus;
    int[] distractBonus;
    Chosen nextSurround;
    Chosen nextCapture;
    int captureDuration;
    int capturesPossible;
    int[] arrivalTimer;
    Boolean readyToEnd;
    long barrierMulti;
    int clampStart;
    int clampPercent;
    Boolean[] bodyStatus;
    Boolean tutorial;
    Boolean onTrack;
    String[] commentary;
    String currentComment;
    int[] actions;
    int currentAction;
    Boolean[][] recordedCommanders;
    Boolean commentaryRead;
    Boolean commentaryWrite;
    Boolean cheater;
    Boolean earlyCheat;
    Boolean hardMode;
    int eventOffset;
    String[] customNames;
    String[] customTop;
    String[] customTopAccess;
    String[] customBottom;
    String[] customBottomAccess;
    String[] customUnder;
    String[] customColor;
    String[] customAccessory;
    String[] customWeapons;
    String[] customWeaponTypes;
    String[] customFeet;
    String[] customAliases;
    String[] customTitles;
    String[] customIncantations;
    Boolean[] invertVVirg;
    Boolean[] invertCVirg;
    Boolean[] invertAVirg;
    Boolean[] invertModest;
    Boolean[] gaijinStatus;
    int[][][] personalityWeights;
    String[] quizAnswers;
    int orgyStage;
    int[] lastOrgyStage;
    Boolean finalBattle;
    transient SaveData save;
    Boolean active;
    Forsaken usedForsaken;
    int usedForsakenIndex;
    public Forsaken[] trainedForsaken;
    Boolean[] vignetteSeen;
    Boolean campaign;
    int loops;
    int downtimeMultiplier;
    Forsaken[] conquered;
    Forsaken[] sacrificed;
    Chosen[] returning;
    Chosen[] deceased;
    Chosen[] formerChosen;
    Chosen[] campaignCustom;
    Chosen[] loopChosen;
    String cityName;
    Random campaignRand;
    Boolean loopComplete;
    WorldState[] nextCities;
    int[] achievementSeen;
    Chosen.Species[] types;
    
    public void BeCaptured(final JTextPane t, final JPanel p, final JFrame f, final WorldState w, final Chosen c) {
        c.lastAction = 0;
        c.captured = true;
        w.append(t, "\n\n" + w.getSeparator() + "\n\n");
        final int thisAttack = c.nextAttack[0];
        c.nextAttack[0] = c.nextAttack[1];
        c.nextAttack[1] = c.nextAttack[2];
        c.nextAttack[2] = thisAttack;
        int[] startDamage = new int[8];
        if (w.getBodyStatus()[3]) {
            startDamage = c.addArray(startDamage, new int[] { 100, 75, 50, 25, 200, 0, 0, 0 });
        }
        if (w.getBodyStatus()[4]) {
            startDamage = c.addArray(startDamage, new int[] { 25, 100, 75, 50, 0, 200, 0, 0 });
        }
        if (w.getBodyStatus()[5]) {
            startDamage = c.addArray(startDamage, new int[] { 50, 25, 100, 75, 0, 0, 200, 0 });
        }
        if (w.getBodyStatus()[6]) {
            startDamage = c.addArray(startDamage, new int[] { 75, 50, 25, 100, 0, 0, 0, 200 });
        }
        if (w.getBodyStatus()[11]) {
            startDamage = c.addArray(startDamage, new int[] { 200, 100, 50, 25, 300, 150, 0, 0 });
        }
        if (w.getBodyStatus()[12]) {
            startDamage = c.addArray(startDamage, new int[] { 25, 200, 100, 50, 0, 300, 150, 0 });
        }
        if (w.getBodyStatus()[13]) {
            startDamage = c.addArray(startDamage, new int[] { 50, 25, 200, 100, 0, 0, 300, 150 });
        }
        if (w.getBodyStatus()[14]) {
            startDamage = c.addArray(startDamage, new int[] { 100, 50, 25, 200, 150, 0, 0, 300 });
        }
        if (w.getBodyStatus()[19]) {
            startDamage = c.addArray(startDamage, new int[] { 1000, 300, 100, 30, 3000, 0, 0, 0 });
            startDamage = c.multiplyArray(startDamage, c.getImpregnationEffectiveness());
        }
        if (w.getBodyStatus()[20]) {
            startDamage = c.addArray(startDamage, new int[] { 30, 1000, 300, 100, 0, 3000, 0, 0 });
            startDamage = c.multiplyArray(startDamage, c.getHypnosisEffectiveness());
        }
        if (w.getBodyStatus()[21]) {
            startDamage = c.addArray(startDamage, new int[] { 100, 30, 1000, 300, 0, 0, 3000, 0 });
            startDamage = c.multiplyArray(startDamage, c.getDrainEffectiveness());
        }
        if (w.getBodyStatus()[22]) {
            startDamage = c.addArray(startDamage, new int[] { 300, 100, 30, 1000, 0, 0, 0, 3000 });
            startDamage = c.multiplyArray(startDamage, c.getParasitismEffectiveness());
        }
        if (c.captureProgression == 0 && w.progressExtermination(0)) {
            if (c.defenseLevel >= 9000) {
                w.append(t, String.valueOf(c.mainName) + " abruptly plummets to earth, pulled from the sky by your telekinetic powers.  Before " + c.heShe() + " can recover, you make your move.  ");
            }
            c.defenseLevel += 9000;
        }
        Boolean breakCapture = false;
        if (c.usingDetonate && c.captureProgression + c.getINJULevel() + 1 >= w.getCaptureDuration() && !w.adaptationsDisabled()) {
            breakCapture = true;
            if (c.captureProgression == 0) {
                w.setCaptureTarget(null);
            }
            c.PerformDetonate(t, p, f, w);
        }
        else if (c.captureProgression == 0) {
            w.setCaptureTarget(null);
            if (w.finalBattle) {
                Boolean otherTarget = false;
                Boolean otherKiller = false;
                for (int i = 0; i < 3; ++i) {
                    if (w.getCombatants()[i] != null && w.getCombatants()[i] != c) {
                        if (!w.getCombatants()[i].isSurrounded() && !w.getCombatants()[i].isCaptured() && w.getCombatants()[i].alive && w.getCombatants()[i].resolve > 0 && w.getCombatants()[i].getConfidence() < c.confidence) {
                            otherKiller = true;
                        }
                        else if (w.getCombatants()[i].isSurrounded() || w.getCombatants()[i].isCaptured()) {
                            otherTarget = true;
                        }
                    }
                }
                if (otherKiller && !otherTarget) {
                    w.readyToEnd = false;
                }
            }
            c.announceCapture(t, w);
        }
        else if ((!w.getBodyStatus()[26] && (w.getBodyStatus()[19] || w.getBodyStatus()[20])) || w.getBodyStatus()[21] || w.getBodyStatus()[22]) {
            w.punisherFlavor(t, w, thisAttack, c);
        }
        else if (w.getBodyStatus()[11] || w.getBodyStatus()[12] || w.getBodyStatus()[13] || w.getBodyStatus()[14]) {
            w.defilerFlavor(t, w, thisAttack, c);
        }
        else {
            c.suppressorFlavor(t, w, thisAttack);
        }
        if (!breakCapture) {
            w.append(t, "\n\n");
            c.captureDamage(t, w, startDamage);
        }
        if (c.captureProgression >= w.getCaptureDuration() || breakCapture) {
            c.removeSurround = true;
            if (!breakCapture) {
                if (w.getBodyStatus()[19] && !w.getBodyStatus()[26]) {
                    w.append(t, "Finally, " + c.mainName);
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, " manages to break free of your Commander's strong grip.  " + c.HeShe() + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, " manages to break free of your Commander's strong grip.  The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, " lands a solid blow with " + c.hisHer() + " " + c.weapon + " into the narrowest part of your form - your neck.");
                    }
                }
                else if (w.getBodyStatus()[20] && !w.getBodyStatus()[26]) {
                    if (c.hypnotized) {
                        w.append(t, "Finally, " + c.mainName + " manages to come to " + c.hisHer() + " senses, blast a hole in your dome, and crawl outside.  ");
                    }
                    else {
                        w.append(t, "Finally, " + c.mainName + " manages to blast a hole in your dome and crawl outside.  ");
                    }
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, String.valueOf(c.HeShe()) + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, "The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, "With nothing deceiving " + c.hisHer() + " senses, " + c.heShe() + " quickly lands a mighty blow with " + c.hisHer() + " " + c.weapon + ".");
                    }
                }
                else if (w.getBodyStatus()[21]) {
                    w.append(t, "Finally, " + c.mainName + " manages to break free of the tentacles and climb away from your body.  ");
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, String.valueOf(c.HeShe()) + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, "The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, "With " + c.hisHer() + " limbs freed, there's nothing stopping " + c.himHer() + " from landing a mighty blow with " + c.hisHer() + " " + c.weapon + ".");
                    }
                }
                else if (w.getBodyStatus()[22]) {
                    w.append(t, "Finally, " + c.mainName + "'s own psychic energy surges strong enough to expel you from " + c.hisHer() + " clothes.  ");
                    if (c.parasitized) {
                        w.append(t, "However, now that the public has seen " + c.hisHer() + " new outfit, the only effect is that new tentacles stop emerging and trying to strip " + c.himHer() + ".  ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " clothes quickly return to normal.  ");
                    }
                }
                else if (w.getBodyStatus()[11]) {
                    w.append(t, "Finally, " + c.mainName + " manages to escape out from under your body.  ");
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, String.valueOf(c.HeShe()) + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, "The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, "With nothing pinning " + c.himHer() + " down, " + c.heShe() + " quickly lands a mighty blow with " + c.hisHer() + " " + c.weapon + ".");
                    }
                }
                else if (w.getBodyStatus()[12]) {
                    w.append(t, "Finally, " + c.mainName + " manages to break free of the tentacles and climb out of your body.  ");
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, String.valueOf(c.HeShe()) + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, "The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, "With " + c.hisHer() + " limbs freed, there's nothing stopping " + c.himHer() + " from landing a mighty blow with " + c.hisHer() + " " + c.weapon + ".");
                    }
                }
                else if (w.getBodyStatus()[13]) {
                    w.append(t, "Finally, " + c.mainName);
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, " manages to break free of your Commander's strong grip.  " + c.HeShe() + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, " manages to break free of your Commander's strong grip.  The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, " lands a solid blow with " + c.hisHer() + " " + c.weapon + " into the narrowest part of your muscled form - your neck.");
                    }
                }
                else if (w.getBodyStatus()[14]) {
                    w.append(t, "Finally, " + c.mainName + " manages to break free of the cables holding " + c.himHer() + " in place.  ");
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, String.valueOf(c.HeShe()) + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, "The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, "With " + c.hisHer() + " limbs freed, there's nothing stopping " + c.himHer() + " from landing a mighty blow with " + c.hisHer() + " " + c.weapon + ".");
                    }
                }
                else if (w.getBodyStatus()[3]) {
                    w.append(t, "Finally, " + c.mainName);
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.customWeaponType.equals("shoot")) {
                        w.append(t, " manages to angle " + c.hisHer() + " arms so that " + c.heShe() + " can land several shots with " + c.hisHer() + " " + c.weapon + " directly in the largest mouth on your chest.");
                    }
                    else if (c.weapon.equals("spirits")) {
                        w.append(t, "'s " + c.weapon + " catch up to where your tongues have dragged " + c.himHer() + " and begin draining the life from your body.");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, " manages to pull far enough away from your body that " + c.hisHer() + " " + c.weapon + " can land a clawed swipe between the two of you, severing the tongues you've wrapped around " + c.himHer() + ".");
                    }
                    else if (c.customWeaponType.equals("command")) {
                        w.append(t, "'s predicament is solved when your body abruptly comes under attack from " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else {
                        w.append(t, " lands a solid blow with " + c.hisHer() + " " + c.weapon + " into the largest mouth on your chest.");
                    }
                }
                else if (w.getBodyStatus()[4]) {
                    w.append(t, "Finally, " + c.mainName + " manages to break free of the tentacles.  ");
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, String.valueOf(c.HeShe()) + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, "The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, "With " + c.hisHer() + " limbs freed, there's nothing stopping " + c.himHer() + " from landing a mighty blow with " + c.hisHer() + " " + c.weapon + ".");
                    }
                }
                else if (w.getBodyStatus()[5]) {
                    w.append(t, "Finally, " + c.mainName);
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, " manages to break free of your Commander's strong grip.  " + c.HeShe() + " reaches a safe distance, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, " manages to break free of your Commander's strong grip.  The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, " lands a solid blow with " + c.hisHer() + " " + c.weapon + " into the narrowest part of your muscled form - your neck.");
                    }
                }
                else if (w.getBodyStatus()[6]) {
                    w.append(t, "Finally, " + c.mainName);
                    if (c.weapon.equals("revolver") || c.weapon.equals("pistols") || c.weapon.equals("rifle") || c.weapon.equals("shurikens") || c.weapon.equals("bow") || c.weapon.equals("staff") || c.weapon.equals("spirits") || c.customWeaponType.equals("shoot") || c.customWeaponType.equals("command")) {
                        w.append(t, " manages to break the chains ensaring " + c.hisHer() + " clothes.  " + c.HeShe() + " reaches a safe distance, dragging the ends of the chains behind, then turns and launches and all-out attack with " + c.hisHer() + " " + c.weapon + ".");
                    }
                    else if (c.weapon.equals("monster")) {
                        w.append(t, " manages to break the chains ensaring " + c.hisHer() + " clothes.  The moment " + c.heShe() + " reaches a safe distance, " + c.hisHer() + " monster charges forward, swiping at your body with one huge claw.");
                    }
                    else {
                        w.append(t, " lands a solid blow with " + c.hisHer() + " " + c.weapon + " into the core of your body.  The embedded machinery bursts into intense flames, melting the chains connecting you to " + c.himHer() + ".");
                    }
                }
                if (w.spendCapture()) {
                    if (w.getBodyStatus()[22]) {
                        w.append(t, "  You're still energized enough to do this again.");
                    }
                    else {
                        w.append(t, "  You stumble backward, your body badly injured but still functional.");
                    }
                }
                else if (w.getBodyStatus()[22]) {
                    w.append(t, "  Completely exhausted, the parasitic energy field dissipates.");
                }
                else {
                    w.append(t, "  The mortal wound causes your body to crumble to ash.");
                }
                w.append(t, "\n\n");
                if ((w.getBodyStatus()[11] && (c.getHATELevel() >= 3 || (c.getPLEALevel() >= 3 && !c.cVirg))) || (w.getBodyStatus()[12] && (c.getPLEALevel() >= 3 || (c.getINJULevel() >= 3 && !c.aVirg))) || (w.getBodyStatus()[13] && (c.getINJULevel() >= 3 || (c.getEXPOLevel() >= 3 && !c.modest))) || (w.getBodyStatus()[14] && (c.getEXPOLevel() >= 3 || (c.getHATELevel() >= 3 && !c.vVirg)))) {
                    if (c.battleSeriousness < 2) {
                        c.battleSeriousness = 2;
                    }
                    if ((w.getBodyStatus()[11] && c.getHATELevel() >= 3 && c.vVirg) || (w.getBodyStatus()[12] && c.getPLEALevel() >= 3 && c.cVirg) || (w.getBodyStatus()[13] && c.getINJULevel() >= 3 && c.aVirg) || (w.getBodyStatus()[14] && c.getEXPOLevel() >= 3 && c.modest)) {
                        c.printCapturedLine(t, w, thisAttack);
                    }
                    else {
                        c.printEscape(t, w, thisAttack);
                    }
                }
                else {
                    c.printEscape(t, w, thisAttack);
                }
            }
            c.defenseLevel += 2;
            c.captureProgression = 0;
        }
        else {
            c.printCapturedLine(t, w, c.captureProgression % 3);
            ++c.captureProgression;
        }
    }
    
    public String[] nameCombatants() {
        final String[] shown = new String[5];
        for (int i = 0; i < 3 && this.getCombatants()[i] != null; ++i) {
            shown[i] = this.getCombatants()[i].mainName;
        }
        if (this.usedForsaken != null) {
            shown[3] = this.usedForsaken.mainName;
        }
        return shown;
    }
    
    public int threatenResolve() {
        final int amount = 3 + this.achievementHeld(6)[0];
        return amount;
    }
    
    public int slimeResolve() {
        int amount = 4 + this.achievementHeld(6)[0] * 2;
        if (amount == 14) {
            ++amount;
        }
        return amount;
    }
    
    public int attackResolve() {
        int amount = 3 + this.achievementHeld(6)[0];
        if (this.achievementHeld(6)[0] > 1) {
            amount += this.achievementHeld(6)[0] - 1;
        }
        return amount;
    }
    
    public int tauntResolve() {
        int amount = 5 + this.achievementHeld(6)[0] * 2;
        if (this.achievementHeld(6)[0] > 2) {
            amount += this.achievementHeld(6)[0] - 2;
        }
        return amount;
    }
    
    public int[] achievementHeld(final int index) {
        int result = 0;
        int stat = 0;
        final Chosen[] checkedChosen = new Chosen[this.formerChosen.length + this.returning.length + this.deceased.length];
        for (int i = 0; i < this.formerChosen.length; ++i) {
            checkedChosen[i] = this.formerChosen[i];
        }
        for (int i = 0; i < this.returning.length; ++i) {
            checkedChosen[i + this.formerChosen.length] = this.returning[i];
        }
        for (int i = 0; i < this.deceased.length; ++i) {
            checkedChosen[i + this.formerChosen.length + this.returning.length] = this.deceased[i];
        }
        if (index == 0) {
            for (int i = 0; i < this.sacrificed.length; ++i) {
                ++stat;
                if (this.sacrificed[i].type == Chosen.Species.SUPERIOR) {
                    ++stat;
                }
            }
            if (this.sacrificed.length > 0) {
                result = 1;
            }
            if (this.sacrificed.length > 2) {
                result = 2;
            }
            if (this.sacrificed.length > 5) {
                result = 3;
            }
            if (this.sacrificed.length > 14) {
                result = 4;
            }
            if (this.sacrificed.length > 39) {
                result = 5;
            }
        }
        else if (index == 1) {
            int impregnated = 0;
            for (int j = 0; j < 3 && !this.loopComplete; ++j) {
                if (this.getCast()[j] != null && this.getCast()[j].impregnated) {
                    ++impregnated;
                    if (this.getCast()[j].type == Chosen.Species.SUPERIOR) {
                        ++impregnated;
                    }
                }
            }
            for (int j = 0; j < checkedChosen.length; ++j) {
                if (checkedChosen[j].impregnated) {
                    ++impregnated;
                    if (checkedChosen[j].type == Chosen.Species.SUPERIOR) {
                        ++impregnated;
                    }
                }
            }
            if ((stat = impregnated) > 3) {
                result = 1;
            }
            if (impregnated > 9) {
                result = 2;
            }
            if (impregnated > 24) {
                result = 3;
            }
            if (impregnated > 59) {
                result = 4;
            }
            if (impregnated > 159) {
                result = 5;
            }
        }
        else if (index == 2) {
            int hypnotized = 0;
            for (int j = 0; j < 3 && !this.loopComplete; ++j) {
                if (this.getCast()[j] != null && this.getCast()[j].hypnotized) {
                    ++hypnotized;
                    if (this.getCast()[j].type == Chosen.Species.SUPERIOR) {
                        ++hypnotized;
                    }
                }
            }
            for (int j = 0; j < checkedChosen.length; ++j) {
                if (checkedChosen[j].hypnotized) {
                    ++hypnotized;
                    if (checkedChosen[j].type == Chosen.Species.SUPERIOR) {
                        ++hypnotized;
                    }
                }
            }
            if ((stat = hypnotized) > 3) {
                result = 1;
            }
            if (hypnotized > 9) {
                result = 2;
            }
            if (hypnotized > 24) {
                result = 3;
            }
            if (hypnotized > 59) {
                result = 4;
            }
            if (hypnotized > 159) {
                result = 5;
            }
        }
        else if (index == 3) {
            int drained = 0;
            for (int j = 0; j < 3 && !this.loopComplete; ++j) {
                if (this.getCast()[j] != null && this.getCast()[j].drained) {
                    ++drained;
                    if (this.getCast()[j].type == Chosen.Species.SUPERIOR) {
                        ++drained;
                    }
                }
            }
            for (int j = 0; j < checkedChosen.length; ++j) {
                if (checkedChosen[j].drained) {
                    ++drained;
                    if (checkedChosen[j].type == Chosen.Species.SUPERIOR) {
                        ++drained;
                    }
                }
            }
            if ((stat = drained) > 3) {
                result = 1;
            }
            if (drained > 9) {
                result = 2;
            }
            if (drained > 24) {
                result = 3;
            }
            if (drained > 59) {
                result = 4;
            }
            if (drained > 159) {
                result = 5;
            }
        }
        else if (index == 4) {
            int parasitized = 0;
            for (int j = 0; j < 3 && !this.loopComplete; ++j) {
                if (this.getCast()[j] != null && this.getCast()[j].parasitized) {
                    ++parasitized;
                    if (this.getCast()[j].type == Chosen.Species.SUPERIOR) {
                        ++parasitized;
                    }
                }
            }
            for (int j = 0; j < checkedChosen.length; ++j) {
                if (checkedChosen[j].parasitized) {
                    ++parasitized;
                    if (checkedChosen[j].type == Chosen.Species.SUPERIOR) {
                        ++parasitized;
                    }
                }
            }
            if (parasitized > 3) {
                result = 1;
            }
            if (parasitized > 9) {
                result = 2;
            }
            if (parasitized > 24) {
                result = 3;
            }
            if (parasitized > 59) {
                result = 4;
            }
            if (parasitized > 159) {
                result = 5;
            }
            stat = parasitized;
        }
        else if (index == 5) {
            for (int i = 0; i < 3 && !this.loopComplete; ++i) {
                if (this.getCast()[i] != null && this.getCast()[i].pastTempted) {
                    ++stat;
                    if (this.getCast()[i].type == Chosen.Species.SUPERIOR) {
                        ++stat;
                    }
                }
            }
            for (int i = 0; i < checkedChosen.length; ++i) {
                if (checkedChosen[i].pastTempted) {
                    ++stat;
                    if (checkedChosen[i].type == Chosen.Species.SUPERIOR) {
                        ++stat;
                    }
                }
            }
            if (stat > 79) {
                result = 5;
            }
            else if (stat > 29) {
                result = 4;
            }
            else if (stat > 11) {
                result = 3;
            }
            else if (stat > 4) {
                result = 2;
            }
            else if (stat > 1) {
                result = 1;
            }
        }
        else if (index == 6) {
            for (int i = 0; i < checkedChosen.length; ++i) {
                if (checkedChosen[i].type == Chosen.Species.SUPERIOR) {
                    ++stat;
                }
            }
            if (stat > 0) {
                result = 1;
            }
            if (stat > 2) {
                result = 2;
            }
            if (stat > 5) {
                result = 3;
            }
            if (stat > 14) {
                result = 4;
            }
            if (stat > 39) {
                result = 5;
            }
        }
        if (!this.campaign) {
            result = 0;
        }
        return new int[] { result, stat };
    }
    
    public Boolean newAchievement() {
        Boolean result = false;
        for (int i = 0; i < this.achievementSeen.length; ++i) {
            if (this.achievementSeen[i] < this.achievementHeld(i)[0]) {
                result = true;
            }
        }
        return result;
    }
    
    public String getCityName(int index) {
        index %= 47;
        String result = "";
        if (index == 0) {
            result = "Nagano";
        }
        else if (index == 1) {
            result = "Toyonaka";
        }
        else if (index == 2) {
            result = "Kashiwa";
        }
        else if (index == 3) {
            result = "Fujisawa";
        }
        else if (index == 4) {
            result = "Hirakata";
        }
        else if (index == 5) {
            result = "Gifu";
        }
        else if (index == 6) {
            result = "Takamatsu";
        }
        else if (index == 7) {
            result = "Toyota";
        }
        else if (index == 8) {
            result = "Toyama";
        }
        else if (index == 9) {
            result = "Yokosuka";
        }
        else if (index == 10) {
            result = "Nagasaki";
        }
        else if (index == 11) {
            result = "Kanazawa";
        }
        else if (index == 12) {
            result = "Amagasaki";
        }
        else if (index == 13) {
            result = "Fukuyama";
        }
        else if (index == 14) {
            result = "Ooita";
        }
        else if (index == 15) {
            result = "Ichikawa";
        }
        else if (index == 16) {
            result = "Kurashiki";
        }
        else if (index == 17) {
            result = "Nishinomiya";
        }
        else if (index == 18) {
            result = "Matsudo";
        }
        else if (index == 19) {
            result = "Utsunomiya";
        }
        else if (index == 20) {
            result = "Higashioosaka";
        }
        else if (index == 21) {
            result = "Matsuyama";
        }
        else if (index == 22) {
            result = "Himeji";
        }
        else if (index == 23) {
            result = "Kawaguchi";
        }
        else if (index == 24) {
            result = "Funabashi";
        }
        else if (index == 25) {
            result = "Kagoshima";
        }
        else if (index == 26) {
            result = "Hamamatsu";
        }
        else if (index == 27) {
            result = "Shizuoka";
        }
        else if (index == 28) {
            result = "Okayama";
        }
        else if (index == 29) {
            result = "Sagamihara";
        }
        else if (index == 30) {
            result = "Kumamoto";
        }
        else if (index == 31) {
            result = "Niigata";
        }
        else if (index == 32) {
            result = "Sakai";
        }
        else if (index == 33) {
            result = "Kitakyushu";
        }
        else if (index == 34) {
            result = "Chiba";
        }
        else if (index == 35) {
            result = "Sendai";
        }
        else if (index == 36) {
            result = "Hiroshima";
        }
        else if (index == 37) {
            result = "Saitama";
        }
        else if (index == 38) {
            result = "Kyoto";
        }
        else if (index == 39) {
            result = "Kobe";
        }
        else if (index == 40) {
            result = "Kawasaki";
        }
        else if (index == 41) {
            result = "Fukuoka";
        }
        else if (index == 42) {
            result = "Sapporo";
        }
        else if (index == 43) {
            result = "Nagoya";
        }
        else if (index == 44) {
            result = "Osaka";
        }
        else if (index == 45) {
            result = "Yokohama";
        }
        else if (index == 46) {
            result = "Tokyo";
        }
        return result;
    }
    
    public Forsaken[] getHarem() {
        if (this.campaign) {
            return this.conquered;
        }
        return this.save.harem;
    }
    
    public void distortionScene(final JTextPane t, final Chosen subject, final Chosen c, final Chosen d, final int sceneType) {
        this.save.newScene();
        int EEGained = 0;
        if (sceneType == 16) {
            subject.pastTempted = true;
            Boolean startOne = false;
            if (this.getRelationship(subject.number, c.number) >= 0) {
                startOne = true;
            }
            if (subject.morality > 66 && c.morality < 34) {
                if (c.temptReq < 100000L) {
                    this.addFriendship(subject.number, c.number, 49);
                }
                else {
                    this.addFriction(subject.number, c.number, 49);
                    EEGained += 15;
                }
            }
            if (subject.confidence > 66 && c.confidence < 34) {
                if (c.temptReq < 100000L) {
                    this.addFriendship(subject.number, c.number, 39);
                }
                else {
                    this.addFriction(subject.number, c.number, 39);
                    EEGained += 15;
                }
            }
            Boolean endOne = false;
            if (this.getRelationship(subject.number, c.number) >= 0) {
                endOne = true;
            }
            else if (startOne) {
                if (c.morality < 34) {
                    EEGained += 15;
                }
                if (c.confidence < 34) {
                    EEGained += 15;
                }
            }
            Boolean startTwo = false;
            Boolean endTwo = false;
            if (d != null) {
                if (this.getRelationship(subject.number, d.number) >= 0) {
                    startTwo = true;
                }
                if (subject.morality > 66 && d.morality < 34) {
                    if (d.temptReq < 100000L) {
                        this.addFriendship(subject.number, d.number, 35);
                    }
                    else {
                        this.addFriction(subject.number, d.number, 35);
                        EEGained += 15;
                    }
                }
                if (subject.confidence > 66 && d.confidence < 34) {
                    if (d.temptReq < 100000L) {
                        this.addFriendship(subject.number, d.number, 25);
                    }
                    else {
                        this.addFriction(subject.number, d.number, 25);
                        EEGained += 15;
                    }
                }
                if (this.getRelationship(subject.number, d.number) >= 0) {
                    endTwo = true;
                }
                else if (startTwo) {
                    if (d.morality < 34) {
                        EEGained += 15;
                    }
                    if (d.confidence < 34) {
                        EEGained += 15;
                    }
                }
            }
            final String[] array = new String[5];
            array[0] = subject.mainName;
            final String[] nameDisplay = array;
            Chosen leader = c;
            Chosen follower;
            if ((follower = d) != null) {
                if (d.confidence > c.confidence) {
                    leader = d;
                    follower = c;
                }
                else {
                    follower = d;
                }
                nameDisplay[1] = leader.mainName;
                nameDisplay[2] = follower.mainName;
            }
            else {
                nameDisplay[1] = c.mainName;
            }
            String Thrall = "him";
            if (subject.morality > 66) {
                this.append(t, "With all the Demons defeated, the Chosen split up to assist the authorities in capturing Thralls and purifying them of Demonic influence so that they may return to their lives as regular civilians.  However, when ");
                if (d == null) {
                    this.append(t, String.valueOf(c.mainName) + "'s patrol path overlaps " + subject.mainName + "'s, " + c.heShe() + "'s surprised to find " + subject.mainName + " in the arms of a Thrall.  ");
                }
                else {
                    this.append(t, String.valueOf(subject.mainName) + " stops responding to their callls, " + c.mainName + " and " + d.mainName + " converge on " + subject.hisHer() + " last known position, ready to rescue " + subject.himHer() + " if necessary.  Much to their surprise, they instead find " + subject.himHer() + " in the arms of a Thrall.  ");
                }
                if (subject.gender.equals("female")) {
                    this.append(t, String.valueOf(subject.mainName) + " is bouncing up and down on his lap, and at first it looks like " + subject.heShe() + " must have given up " + subject.hisHer() + " virginity.  But closer inspection reveals that " + subject.heShe() + "'s taking his cock up " + subject.hisHer() + " butt, and quite happily at that, moaning and kissing him deeply as if they were lovers.");
                }
                else {
                    this.append(t, "This one is a female Thrall, and she's riding " + subject.mainName + " from the front, sliding herself up and down " + subject.hisHer() + " cock while they passionately share a kiss, moaning into each other's mouths as they approach mutual climax.");
                    Thrall = "her";
                }
            }
            else {
                this.append(t, "Once all the Demons are defeated, " + subject.mainName + " usually takes charge of the situation, ordering around the other two Chosen and the police until " + subject.heShe() + "'s satisfied that they've properly acknowledged " + subject.hisHer() + " authority.  However, when " + c.mainName);
                if (d == null) {
                    this.append(t, " realizes that " + subject.heShe() + "'s nowhere to be seen, " + c.heShe() + " starts searching.  " + c.HeShe() + " finds ");
                }
                else {
                    this.append(t, " and " + d.mainName + " realize that " + subject.heShe() + "'s nowhere to be seen, they both start searching.  They find ");
                }
                if (subject.gender.equals("female")) {
                    this.append(t, String.valueOf(subject.mainName) + " completely naked, a similarly-naked Thrall laying face-up at " + subject.hisHer() + " feet.  " + subject.HeShe() + " steps on the Thrall's erect, twitching penis, taunting him and using one hand to between " + subject.hisHer() + " own legs to play with " + subject.himHer() + "self as " + subject.heShe() + " does so.");
                }
                else {
                    Thrall = "them";
                    this.append(t, String.valueOf(subject.mainName) + " sitting with " + subject.hisHer() + " legs spread wide and two female Thralls kneeling between them.  They both eagerly lick their way up and down " + subject.hisHer() + " cock, not even seeming to notice the approaching footsteps.");
                }
            }
            this.append(t, "\n\n");
            if (leader.cVirg) {
                if (leader.confidence > 66) {
                    this.append(t, "For a moment, " + leader.mainName + " is tempted to join them.  But " + leader.heShe() + " wants to finish up and go home, so " + leader.heShe() + " steps forward.  However, " + leader.heShe() + "'s surprised when " + subject.mainName + " abruptly stands up, putting " + subject.hisHer() + " sexual pleasure aside for the moment in order to stand in " + leader.mainName + "'s path, blocking " + leader.hisHer() + " way and protesting in an unusually determined voice.");
                }
                else if (leader.confidence > 33) {
                    this.append(t, "The sight of " + subject.mainName + "'s defenseless form makes " + leader.mainName + " want to jump in and start messing with " + subject.himHer() + " from behind.  " + leader.HeShe() + " hesitates, trying to decide how much " + leader.heShe() + " cares about apprehending the Thralls, and that gives " + subject.mainName + " time to notice " + leader.himHer() + " and hold out a protective hand.");
                }
                else {
                    this.append(t, String.valueOf(leader.mainName) + "'s eyes go wide, and " + leader.heShe() + " gulps nervously, too turned on by the sight to interfere.  The next thing " + leader.heShe() + " knows, " + subject.mainName + " has already finished and is casually walking toward " + leader.himHer() + ".");
                }
            }
            else if (leader.confidence > 66) {
                this.append(t, "Muttering with annoyance at " + subject.mainName + "'s lewd ways, " + leader.mainName + " strides forward to put a stop to it, but " + leader.heShe() + "'s startled by how quickly " + subject.mainName + " notices " + leader.himHer() + " and protests in a surprisingly stern voice.");
            }
            else if (leader.confidence > 33) {
                this.append(t, String.valueOf(leader.mainName) + " clenches " + leader.hisHer() + " fist in annoyance at how " + subject.mainName + " is wasting " + leader.hisHer() + " time, but as soon as " + leader.heShe() + " raises that fist, " + subject.mainName + " notices " + leader.himHer() + " and moves to block the blow with " + subject.hisHer() + " body.");
            }
            else {
                this.append(t, String.valueOf(leader.mainName) + " is nervous about interfering, and " + leader.heShe() + " ends up standing by and fidgeting until " + subject.mainName + " is finished.  Then, " + subject.mainName + " glances in " + leader.mainName + "'s direction, stands up straight, and starts walking toward " + leader.himHer() + ".");
            }
            subject.say(t, "\n\n\"");
            if (subject.morality > 66) {
                subject.say(t, "Don't hurt " + Thrall + "!  I haven't seen " + Thrall + " attack anyone since the start of the battle.  Thralls who don't cause any harm don't need to be purified if they don't want to be!\"\n\n");
                if (leader.temptReq < 100000L) {
                    this.append(t, String.valueOf(leader.mainName) + " stares at " + subject.mainName + " for a moment, then snorts with laughter and makes a placating gesture.\n\n");
                    leader.say(t, "\"I never would have expected you to come around to this way of thinking.  But I'm not complaining.  ");
                }
                else {
                    this.append(t, String.valueOf(subject.mainName) + "'s words only make " + leader.mainName + " angrier, and " + leader.heShe() + " shakes " + leader.hisHer() + " violenty as " + leader.heShe() + " replies.\n\n");
                    leader.say(t, "\"Why would that matter!?  They're our enemies!  ");
                }
            }
            else if (subject.morality > 33) {
                subject.say(t, "I'm not letting you arrest " + Thrall + ".  We're... friends now, I suppose.  I don't care if we're on opposite sides of some pointless war.\"\n\n");
                if (leader.temptReq < 100000L) {
                    this.append(t, "But instead of pressing onward, " + leader.mainName + " sighs in relief.\n\n");
                    leader.say(t, "\"I was hoping you'd say that.  I have some Thrall friends too, but I haven't said anything until now because I was worried you'd try to purify them.  ");
                }
                else {
                    this.append(t, String.valueOf(leader.mainName) + " obediently shrinks backward, but the sullen frown on " + leader.hisHer() + " face shows that " + leader.heShe() + " hasn't given up.\n\n");
                    leader.say(t, "\"This war isn't pointless!  We have to keep fighting!  ");
                }
            }
            else {
                subject.say(t, "Don't even think about taking " + Thrall + ".  I'm keeping " + Thrall + " for my personal use, and I can't do that if you purify " + Thrall + ".  You'd better not argue.\"\n\n");
                if (leader.temptReq < 100000L) {
                    this.append(t, String.valueOf(leader.mainName) + " is clearly intimidated, but " + leader.heShe() + " manages to put on an unsteady smile.\n\n");
                    leader.say(t, "\"Don't worry, I'm not going to try to take what's yours.  I already have my own... um, friends among the Thralls.  ");
                }
                else {
                    this.append(t, String.valueOf(leader.mainName) + " flinches, eyes widening in horror.\n\n");
                    leader.say(t, "\"But that's...  You're...  You hate the Demons!  You're our strongest fighter against them!  ");
                }
            }
            Project.clearPortraits();
            Project.changePortrait(subject.convertGender(), subject.type, false, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
            Project.changePortrait(leader.convertGender(), leader.type, false, false, this, nameDisplay, 1, Project.Emotion.ANGER, Project.Emotion.ANGER);
            if (follower != null) {
                Project.changePortrait(follower.convertGender(), follower.type, false, false, this, nameDisplay, 2, Project.Emotion.ANGER, Project.Emotion.ANGER);
            }
            if (leader.temptReq < 100000L) {
                if (d == null) {
                    leader.say(t, "Actually, it might be fun to join you.\"\n\n");
                    this.append(t, String.valueOf(leader.mainName) + " accompanies " + subject.mainName + " to one of the Thralls' hidden safe havens in the district.  There, the two of them participate in a wild orgy together with a large crowd of Thralls.  Eventually, the two of them are left relaxing in the afterglow together, dozens of exhausted Thralls sprawled out before them.\n\n");
                    subject.say(t, "\"");
                    if (startOne) {
                        if (subject.confidence > 66) {
                            subject.say(t, "Sometimes I'm a little too eager to fight.  You were right all along about how nice it can be to make peace, " + leader.mainName + ".");
                        }
                        else if (subject.confidence > 33) {
                            subject.say(t, "I never knew how nice this could be.  Thanks for showing it to me, " + leader.mainName + ".");
                        }
                        else {
                            subject.say(t, "I should have realized from the start that it was better to make friends with the Thralls.  Th-Thanks for putting up with me, " + leader.mainName + "...");
                        }
                        subject.say(t, "\"\n\n");
                        this.append(t, String.valueOf(leader.mainName) + " smiles brightly at " + subject.mainName + " and leans over in " + leader.hisHer() + " seat to give " + subject.himHer() + " a one-armed hug.\n\n");
                        leader.say(t, "\"");
                        if (leader.morality > 66) {
                            leader.say(t, "I-I'm just glad we didn't let it come between us...");
                        }
                        else if (leader.morality > 33) {
                            leader.say(t, "I-It's fine, really...  As long as we're both happy.");
                        }
                        else {
                            leader.say(t, "Heh, you owe me one.");
                        }
                        leader.say(t, "\"\n\n");
                        Project.changePortrait(subject.convertGender(), subject.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                    }
                    else {
                        if (subject.confidence > 66) {
                            subject.say(t, "Listen closely, because I'm only going to say this once.  You were right, " + leader.mainName + ".");
                        }
                        else if (subject.confidence > 33) {
                            subject.say(t, "I never thought I'd be learning about making friends from you, " + leader.mainName + "...");
                        }
                        else {
                            subject.say(t, "I-I'm sorry for how I acted toward you before, " + leader.mainName + "...");
                        }
                        subject.say(t, "\"\n\n");
                        this.append(t, String.valueOf(leader.mainName) + " shoots an annoyed glance at " + subject.mainName + ", but after a moment, " + subject.heShe() + " nods.\n\n");
                        leader.say(t, "\"");
                        if (leader.morality > 66) {
                            leader.say(t, "Well...  It's a start.");
                        }
                        else if (leader.morality > 33) {
                            leader.say(t, "I guess I can forgive you.  Maybe.");
                        }
                        else {
                            leader.say(t, "You'll definitely be making it up to me.");
                        }
                        leader.say(t, "\"\n\n");
                    }
                    Project.changePortrait(leader.convertGender(), leader.type, false, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                    if (this.getRelationship(subject.number, leader.number) == 4) {
                        this.append(t, "Their shared experiences among the Thralls begin to build an ");
                        this.underlineAppend(t, "unbreakable bond");
                        this.append(t, " between " + subject.mainName + " and " + leader.mainName + ".  ");
                    }
                    else {
                        this.append(t, String.valueOf(subject.mainName) + " and " + leader.mainName + " grow closer as they spend more and more time in hedonistic bliss together among the Thralls.  ");
                    }
                    this.append(t, "However, their willingness to doom humanity to defeat against the Demons for the sake of mere momentary pleasure is a grave sin.");
                    this.save.saveScene(21, String.valueOf(subject.mainName) + "/" + leader.mainName, String.valueOf(subject.mainName) + " begins to surrender to the Thralls, and when " + subject.heShe() + " finds that " + leader.mainName + " is the same, the two grow closer.");
                }
                else {
                    leader.say(t, "What about you, " + follower.mainName + "?\"\n\n");
                    if (follower.temptReq < 100000L) {
                        Project.changePortrait(subject.convertGender(), subject.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                        Project.changePortrait(leader.convertGender(), leader.type, false, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                        Project.changePortrait(follower.convertGender(), follower.type, false, false, this, nameDisplay, 2, Project.Emotion.LEWD, Project.Emotion.LEWD);
                        this.append(t, String.valueOf(follower.mainName) + " was too engrossed in watching to be paying much attention, but " + follower.heShe() + " jumps at the sound of " + follower.hisHer() + " name.\n\n");
                        follower.say(t, "\"I, um...  I'm actually really turned on... from watching you.  Would you mind if I... joined in?\"\n\n");
                        this.append(t, String.valueOf(subject.mainName) + " looks pleasantly surprised as " + subject.heShe() + " glances between " + leader.mainName + " and " + follower.mainName + ".\n\n");
                        subject.say(t, "\"I didn't mean to imply that you were excluded.  " + leader.mainName + ", you should come enjoy yourself as well!  If I had known that this sort of peace was possible, I never would have started fighting in the first place!\"\n\n");
                        if (this.getRelationship(subject.number, leader.number) == 4) {
                            if (this.getRelationship(subject.number, follower.number) == 4) {
                                this.append(t, "Their shared willingness to abandon the war in favor of their own pleasure helps to solidify the ");
                                this.underlineAppend(t, "unbreakable bond");
                                this.append(t, " " + subject.mainName + " has with " + leader.mainName + " and " + follower.mainName + ".");
                            }
                            else {
                                this.append(t, "As " + subject.mainName + " surrenders to " + subject.hisHer() + " lust, " + subject.heShe() + " deepens" + subject.hisHer() + " friendship with " + follower.mainName + " and " + subject.hisHer() + " ");
                                this.underlineAppend(t, "unbreakable bond");
                                this.append(t, " with " + leader.mainName + ".");
                            }
                        }
                        else if (this.getRelationship(subject.number, follower.number) == 4) {
                            this.append(t, "As " + subject.mainName + " surrenders to " + subject.hisHer() + " lust, " + subject.heShe() + " deepens" + subject.hisHer() + " friendship with " + leader.mainName + " and " + subject.hisHer() + " ");
                            this.underlineAppend(t, "unbreakable bond");
                            this.append(t, " with " + follower.mainName + ".");
                        }
                        else {
                            this.append(t, "Their shared willingness to abandon the war in favor of their own pleasure helps to solidify the ");
                            this.append(t, "relationship");
                            this.append(t, " " + subject.mainName + " has with " + leader.mainName + " and " + follower.mainName + ".");
                        }
                        this.append(t, "  And with none of the Chosen truly interested in fighting the Demons, the city is almost certainly doomed.");
                        this.save.saveScene(21, String.valueOf(subject.mainName) + "/" + leader.mainName + "/" + follower.mainName, String.valueOf(subject.mainName) + " joins " + leader.mainName + " and " + subject.mainName + " in turning " + subject.hisHer() + " back on the war.");
                    }
                    else {
                        Project.changePortrait(subject.convertGender(), subject.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                        Project.changePortrait(leader.convertGender(), leader.type, false, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                        Project.changePortrait(follower.convertGender(), follower.type, false, false, this, nameDisplay, 2, Project.Emotion.FEAR, Project.Emotion.FEAR);
                        this.append(t, String.valueOf(follower.mainName) + " gapes in horror at both of the other Chosen.  " + follower.HeShe() + " shakes " + follower.hisHer() + " head and backs away.");
                        follower.say(t, "\"H-Have you both gone crazy?  No!  I don't want anything to do with this!\"\n\n");
                        this.append(t, String.valueOf(subject.mainName) + " smiles sadly, but " + subject.hisHer() + " expression brightens as " + subject.heShe() + " turns toward " + leader.mainName + ".\n\n");
                        subject.say(t, "If you ever change your mind, we'd be happy to welcome you.  But until then... " + leader.mainName + ", shall we move somewhere else?\"\n\n");
                        if (this.getRelationship(subject.number, leader.number) == 4) {
                            if (this.getRelationship(subject.number, follower.number) == -4) {
                                this.append(t, "By turning " + subject.hisHer() + " back on the war, " + subject.mainName + " forms an ");
                                this.underlineAppend(t, "unbreakable bond");
                                this.append(t, " with " + leader.mainName + ", but an ");
                                this.underlineAppend(t, "irreparable rift");
                                this.append(t, " between " + subject.himHer() + " and " + follower.mainName + ".");
                            }
                            else {
                                this.append(t, String.valueOf(subject.mainName) + "'s decision to turn " + subject.hisHer() + " back on the war will form an ");
                                this.underlineAppend(t, "unbreakable bond");
                                this.append(t, " between " + subject.himHer() + " and " + leader.mainName + ", but it only drives " + follower.mainName + " away.");
                            }
                        }
                        else if (this.getRelationship(subject.number, follower.number) == -4) {
                            this.append(t, "By turning " + subject.hisHer() + " back on the war, " + subject.mainName + " deepens " + subject.hisHer() + " friendship with " + leader.mainName + ", but only at the cost of creating an ");
                            this.underlineAppend(t, "irreparable rift");
                            this.append(t, " between " + subject.himHer() + " and " + follower.mainName + ".");
                        }
                        else {
                            this.append(t, String.valueOf(subject.mainName) + "'s decision to turn " + subject.hisHer() + " back on the war draws " + subject.himHer() + " closer to " + leader.mainName + ", but it only drives " + follower.mainName + " away.");
                        }
                        this.append(t, "  And with only one of the Chosen truly interested in fighting the Demons, the city is almost certainly doomed.");
                        this.save.saveScene(21, String.valueOf(subject.mainName) + "/" + leader.mainName + "/" + follower.mainName, String.valueOf(subject.mainName) + " joins " + leader.mainName + " in turning " + subject.hisHer() + " back to the war, much to " + follower.mainName + "'s horror.");
                    }
                }
            }
            else if (d == null) {
                leader.say(t, "What's wrong with you!?\"\n\n");
                this.append(t, String.valueOf(subject.mainName) + " pauses, glancing behind " + subject.himHer() + "self.\n\n");
                subject.say(t, "\"");
                if (subject.confidence > 66) {
                    subject.say(t, "I'm just tired of fighting for people who don't deserve it.  Now, you're going to stay here with me until all the Thralls have safely escaped.");
                }
                else if (subject.confidence > 33) {
                    subject.say(t, "I don't want to fight you, " + leader.mainName + ", but if you try to hurt them, I absolutely will.");
                }
                else {
                    subject.say(t, "You can take me down if you want, " + leader.mainName + ".  But... I-I'll still stall you long enough for the Thralls here to escape!");
                }
                subject.say(t, "\"\n\n");
                if (startOne) {
                    this.append(t, String.valueOf(leader.mainName) + " tenses up, gritting " + leader.hisHer() + " teeth, but then " + leader.heShe() + " lets it out with a sigh, hanging " + leader.hisHer() + " head.\n\n");
                    leader.say(t, "\"");
                    if (leader.morality > 66) {
                        leader.say(t, "I know I can't beat you, " + subject.mainName + ".  I'm just... r-really sad that it turned out like this...");
                    }
                    else if (leader.morality > 33) {
                        leader.say(t, "I trusted you, " + subject.mainName + "...");
                    }
                    else {
                        leader.say(t, "You're choosing them over me?  You'll pay for this, " + subject.mainName + "...!");
                    }
                    leader.say(t, "\"\n\n");
                }
                else {
                    this.append(t, "With tears of frustration in " + leader.hisHer() + " eyes, " + leader.mainName + " tackles " + subject.mainName + " to the ground.  They scuffle briefly before the authorities arrive to pry them apart, but in that time, the Thralls have all gone.\n\n");
                    leader.say(t, "\"");
                    if (leader.morality > 66) {
                        leader.say(t, "I... I actually attacked " + subject.himHer() + "...");
                    }
                    else if (leader.morality > 33) {
                        leader.say(t, "Traitor!  Y-You traitor!");
                    }
                    else {
                        leader.say(t, "Let me go!  I'll kill " + subject.himHer() + "!");
                    }
                    leader.say(t, "\"\n\n");
                }
                if (this.getRelationship(subject.number, leader.number) == -4) {
                    this.append(t, String.valueOf(subject.mainName) + "'s decision to turn " + subject.hisHer() + " back on the war has created an ");
                    this.underlineAppend(t, "irreparable rift");
                    this.append(t, " between " + subject.himHer() + " and " + leader.mainName + ".");
                }
                else {
                    this.append(t, String.valueOf(subject.mainName) + "'s decision to turn " + subject.hisHer() + " back on the war has driven a wedge");
                    this.append(t, " between " + subject.himHer() + " and " + leader.mainName + ".");
                }
                this.append(t, "  And " + subject.hisHer() + " willingness to doom humanity to defeat against the Demons for the sake of mere momentary pleasure is an especially grave sin.");
                this.save.saveScene(21, String.valueOf(subject.mainName) + "/" + leader.mainName, String.valueOf(subject.mainName) + " turns " + subject.hisHer() + " back on the war and on " + leader.mainName + " both.");
            }
            else {
                leader.say(t, "Right, " + follower.mainName + "!?\"\n\n");
                if (follower.temptReq < 100000L) {
                    Project.changePortrait(subject.convertGender(), subject.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                    Project.changePortrait(follower.convertGender(), follower.type, false, false, this, nameDisplay, 2, Project.Emotion.SHAME, Project.Emotion.SHAME);
                    this.append(t, "An awkward silence stretches for several seconds before " + follower.mainName + " can force " + follower.himHer() + "self to speak up.");
                    follower.say(t, "\"Um, actually...  I think " + subject.mainName + " is right.  S-Sorry, " + leader.mainName + "...\"\n\n");
                    this.append(t, "Hanging " + follower.hisHer() + " head, " + follower.mainName + " walks over to join " + subject.mainName + ", who embraces " + follower.himHer() + " with one arm and smiles sadly at " + leader.mainName + ".\n\n");
                    subject.say(t, "\"We're just tired of fighting for no good reason, " + leader.mainName + ".  Once you get tired of it too, you're welcome to join us.\"\n\n");
                    if (this.getRelationship(subject.number, leader.number) == -4) {
                        if (this.getRelationship(subject.number, follower.number) == 4) {
                            this.append(t, String.valueOf(subject.mainName) + "'s acceptance of " + follower.hisHer() + " peaceful ways deepens the ");
                            this.underlineAppend(t, "unbreakable bond");
                            this.append(t, " between " + subject.himHer() + " and " + follower.mainName + ", but also the ");
                            this.underlineAppend(t, "irreparable rift");
                            this.append(t, " with " + leader.mainName + ".");
                        }
                        else {
                            this.append(t, String.valueOf(follower.mainName) + " is grateful that " + subject.mainName + " has come around to a more peaceful way of thinking, but now " + leader.mainName + " feels an ");
                            this.underlineAppend(t, "indelible hatred");
                            this.append(t, " toward " + subject.mainName + ".");
                        }
                    }
                    else if (this.getRelationship(subject.number, follower.number) == 4) {
                        this.append(t, String.valueOf(subject.mainName) + "'s acceptance of " + follower.hisHer() + " peaceful ways deepens the ");
                        this.underlineAppend(t, "unbreakable bond");
                        this.append(t, " between " + subject.himHer() + " and " + follower.mainName + ", but also the ");
                        this.append(t, "rivalry");
                        this.append(t, " with " + leader.mainName + ".");
                    }
                    else {
                        this.append(t, String.valueOf(follower.mainName) + " is grateful that " + subject.mainName + " has come around to a more peaceful way of thinking, but " + leader.mainName + " is much less happy about it.");
                    }
                    this.append(t, "  And with only one of the Chosen truly interested in fighting the Demons, the city is almost certainly doomed.");
                    this.save.saveScene(21, String.valueOf(subject.mainName) + "/" + leader.mainName + "/" + follower.mainName, String.valueOf(subject.mainName) + " joins " + follower.mainName + " in turning " + subject.hisHer() + " back to the war, much to " + leader.mainName + "'s fury.");
                }
                else {
                    Project.changePortrait(follower.convertGender(), follower.type, false, false, this, nameDisplay, 2, Project.Emotion.SHAME, Project.Emotion.SHAME);
                    this.append(t, "There are tears in " + follower.hisHer() + " eyes as " + follower.mainName + " stares with disbelief at " + subject.mainName + ".\n\n");
                    follower.say(t, "\"Weren't you supposed to be a hero?  H-How could you betray us like this...?\"\n\n");
                    this.append(t, "For a moment, " + subject.mainName + " looks hurt by their rejection.  But then " + subject.hisHer() + " expression grows hard.\n\n");
                    subject.say(t, "\"If you don't believe in this, then go home.  Because if you try to go after my friends...  I don't want to hurt you.\"\n\n");
                    if (this.getRelationship(subject.number, leader.number) == -4) {
                        if (this.getRelationship(subject.number, follower.number) == -4) {
                            this.append(t, String.valueOf(subject.mainName) + "'s decision to turn " + subject.hisHer() + " back on the war has created an ");
                            this.underlineAppend(t, "irreparable rift");
                            this.append(t, " between " + subject.himHer() + " and the other two Chosen.");
                        }
                        else {
                            this.append(t, String.valueOf(follower.mainName) + " is horrified by " + subject.mainName + "'s decision to turn " + subject.hisHer() + " back on the war, and " + subject.heShe() + " has created an ");
                            this.underlineAppend(t, "irreparable rift");
                            this.append(t, " between " + subject.himHer() + "self and " + leader.mainName + ".");
                        }
                    }
                    else if (this.getRelationship(subject.number, follower.number) == -4) {
                        this.append(t, String.valueOf(leader.mainName) + " is enraged by " + subject.mainName + "'s decision to turn " + subject.hisHer() + " back on the war, and " + subject.heShe() + " has created an ");
                        this.underlineAppend(t, "irreparable rift");
                        this.append(t, " between " + subject.himHer() + "self and " + follower.mainName + ".");
                    }
                    else {
                        this.append(t, String.valueOf(subject.mainName) + "'s decision to turn " + subject.hisHer() + " back on the war has horrified and enraged the other two Chosen.");
                    }
                    this.append(t, "  Furthermore, the loss of the city's bravest and most heroic defender surely bodes ill for its fate against the Demons.");
                    this.save.saveScene(21, String.valueOf(subject.mainName) + "/" + leader.mainName + "/" + follower.mainName, String.valueOf(subject.mainName) + " turns " + subject.hisHer() + " back both on the war effort and on the other two Chosen.");
                }
            }
        }
        if (EEGained > 0) {
            this.addEnergy(EEGained);
            this.append(t, "\n\n+" + EEGained + " Evil Energy");
        }
        this.resolveBreak();
    }
    
    public void beTempted(final JTextPane t, final JPanel p, final JFrame f, final Chosen c) {
        c.battleSeriousness = 0;
        if (!c.betraying) {
            if (c.temptReq == 100000L) {
                this.underlineAppend(t, "Morality/Confidence Distortion");
                this.append(t, "\n\n");
                if (c.morality > 66 || c.confidence > 66) {
                    this.addBreak(16);
                }
                if (c.dignity > 66) {
                    if (c.morality > 66) {
                        this.append(t, "Although " + c.mainName + " has always remained fixated on the goal of becoming a worthy hero, the truth is that " + c.hisHer() + " self-image was more dependent on reactions from the public than " + c.heShe() + " cared to admit.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, String.valueOf(c.mainName) + "'s heroic actions have always been motivated less by " + c.hisHer() + " own personal beliefs and more by " + c.hisHer() + " desire for public praise and approval.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " has never cared about fighting the Demons except insofar as it provided " + c.himHer() + " a path to fame and fortune.  ");
                    }
                    if (c.confidence > 66) {
                        this.append(t, "With " + c.hisHer() + " rage at the constant disrespect from the populace " + c.heShe() + " endures on a daily basis now, ");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + "'s already spent sleepless nights dwelling on how wrong it is for those ungrateful people to benefit from " + c.hisHer() + " suffering, and the tension inside " + c.himHer() + " has built to the point that ");
                    }
                    else {
                        this.append(t, "Faced with rejection from those whose acceptance " + c.heShe() + " desperately craved, " + c.heShe() + "'s been put in a fragile mental state, and ");
                    }
                    if (c.innocence > 66) {
                        this.append(t, String.valueOf(c.heShe()) + "'s eager for any excuse to stop worrying about the fight and just let " + c.himHer() + "self feel good.");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, String.valueOf(c.heShe()) + "'s able to make the conscious, free decision to stop fighting back.");
                    }
                    else {
                        this.append(t, String.valueOf(c.heShe()) + "'s able to come up with plenty of reasons to just enjoy " + c.himHer() + "self, and none at all to keep fighting.");
                    }
                }
                else if (c.innocence > 66) {
                    if (c.confidence > 66) {
                        this.append(t, String.valueOf(c.mainName) + " has always been headstrong, but that doesn't translate to having much willpower, and ");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, String.valueOf(c.mainName) + " is a very impressionable person, prone to getting swept up in what those around " + c.himHer() + " are doing, but ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " is still embarrassed and uncertain about how good " + c.heShe() + " sometimes feels when the Thralls get their hands on " + c.himHer() + ", but ");
                    }
                    if (c.dignity > 33) {
                        this.append(t, String.valueOf(c.heShe()) + "'s started to grow numb to the constant ridicule " + c.heShe() + " receives for being a pervert.  If that's what " + c.heShe() + " is, then " + c.heShe() + "'s decided to embrace it.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.heShe()) + "'s never been one to hide or deny " + c.hisHer() + " own feelings.  When the public tells " + c.himHer() + " that only a bad person would enjoy doing sexual things in public, " + c.heShe() + " simply thinks that maybe it's not so wrong to be a bad person.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, "After all, if it makes other people feel good too, then it can't be that bad.");
                    }
                    else if (c.morality > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " just doesn't care that much about the war anymore.");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " likes sexual pleasure, and more than that, " + c.heShe() + " likes messing with all the stuffy authority figures who are always scolding " + c.himHer() + ".");
                    }
                }
                else if (c.confidence > 66) {
                    if (c.dignity > 33) {
                        this.append(t, String.valueOf(c.mainName) + " was never especially dependent on the public's adoration of " + c.himHer() + ", but " + c.heShe() + "'s still angered by how quickly they've begun to judge " + c.himHer() + " for " + c.hisHer() + " supposed sexual impropriety.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " has always had a contrarian streak, prideful of " + c.hisHer() + " willingness to defy the public's expectations.  The recent controversy over " + c.hisHer() + " sexual behavior has only served to feed into that.  ");
                    }
                    if (c.innocence > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " has no idea how severely " + c.hisHer() + " judgment is being affected by the instinctive desire to seek out the pleasure you're regularly inflicting on " + c.himHer() + ".  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + "'s confident in " + c.hisHer() + " ability to think clearly through pleasure, and while that would ordinarily be enough to resist your manipulation, the knowledge that the rest of humanity is rejecting " + c.himHer() + " has a profound impact on " + c.hisHer() + " thought process.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " remains committed to following a strict moral code with people in " + c.hisHer() + " personal life, but " + c.heShe() + "'s less and less convinced that there's any point to suffering in battle against the Demons.");
                    }
                    else if (c.morality > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + "'s started to consider the Thralls to be no better nor worse than the rest of humanity, and at least the former are willing to sexually service " + c.himHer() + ".");
                    }
                    else {
                        this.append(t, "Out of spite for the rest of humanity, " + c.heShe() + "'s even willing to act a bit submissively as long as " + c.heShe() + " can get some sexual pleasure in the process.");
                    }
                }
                else {
                    if (c.confidence > 33) {
                        this.append(t, "After fighting against being forced into sexual behavior for so long, " + c.mainName + " has started to question whether there's really any harm in it.  After having experienced so much firsthand pleasure, " + c.heShe() + "'s beginning to think that it's a purely good thing to ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " has come to consider " + c.himHer() + "self to be utterly worthless as one of the Chosen, good only for " + c.hisHer() + " body.  But it's not all bad, as long as " + c.heShe() + " can ");
                    }
                    if (c.dignity > 33) {
                        this.append(t, "service the Thralls however they want.  At least they actually appreciate " + c.himHer() + ", unlike the judgmental public.  ");
                    }
                    else {
                        this.append(t, "cause as many orgasms as possible.  The supposed reasons that such behavior is immoral are sounding less and less convincing to " + c.himHer() + " by the moment, and " + c.heShe() + "'s starting to suspect that the authority figures who criticize " + c.himHer() + " for this sort of thing are the truly evil ones.  ");
                    }
                    if (c.innocence > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " was never a naturally violent person in the first place, so just doing whatever causes the most pleasure in the short term feels much more right to " + c.himHer() + ".");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " remains totally committed to increasing the total happiness in the world, but " + c.hisHer() + " experiences are causing " + c.himHer() + " to question whether fighting the Demons and their servants is an effective method for doing so.");
                    }
                }
                this.append(t, "\n\n+100 Evil Energy\n\n");
                this.addEnergy(100);
            }
            c.temptReq = c.temptReq * (90 - this.achievementHeld(5)[0] * 5) / 100L;
            if (c.temptReq > 10000L) {
                c.temptReq = c.temptReq / 100L * 100L;
            }
            else if (c.temptReq > 1000L) {
                c.temptReq = c.temptReq / 10L * 10L;
            }
        }
        String organ = "penis";
        if (c.gender.equals("female")) {
            organ = "clit";
        }
        if (c.defilementStage == 0) {
            this.append(t, "The Thralls offer to be gentler with " + c.mainName + " if " + c.heShe() + " stops resisting");
            if (c.temptReq >= 80000L) {
                if (c.confidence > 66) {
                    this.append(t, ".  " + c.HeShe() + " accepts, though " + c.heShe() + " warns them that " + c.heShe() + "'ll punish them harshly if they're trying to trick " + c.himHer() + ".  ");
                }
                else if (c.confidence > 33) {
                    this.append(t, ".  " + c.HeShe() + " hesitantly accepts, though " + c.heShe() + "'s still suspicious of a trap.  ");
                }
                else {
                    this.append(t, ".  " + c.HeShe() + "'s afraid that they're only setting " + c.himHer() + " up for even more torture, but " + c.hisHer() + " growing masochistic side wouldn't be entirely disappointed by that outcome.  ");
                }
                if (c.getINJULevel() > 2) {
                    if (this.tickle()) {
                        if (c.morality > 66) {
                            this.append(t, String.valueOf(c.HeShe()) + " tells " + c.himHer() + "self that there's nothing wrong with doing this in order to have a chance to calm down and gather " + c.hisHer() + " power.  ");
                        }
                        else if (c.morality > 33) {
                            this.append(t, "In any case, " + c.heShe() + "'s not sure " + c.heShe() + "'d be able to put up much effective resistance until " + c.hisHer() + " stamina recovers.  ");
                        }
                        else {
                            this.append(t, String.valueOf(c.HeShe()) + " figures that " + c.heShe() + " can betray them once " + c.heShe() + "'s gotten a chance to catch " + c.hisHer() + " breath anyway.  ");
                        }
                    }
                    else if (c.morality > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " tells " + c.himHer() + "self that there's nothing wrong with doing this in order to have a chance to heal " + c.himHer() + "self.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, "In any case, " + c.heShe() + "'s not sure " + c.heShe() + "'d be able to put up much effective resistance until " + c.hisHer() + " body regenerates from its injuries.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " figures that " + c.heShe() + " can betray them once " + c.hisHer() + " injuries heal anyway.  ");
                    }
                }
                else if (c.morality > 66) {
                    this.append(t, "The Thralls have clearly been holding back in order to avoid hurting " + c.himHer() + " too badly, so it seems only fair.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + "'s just tired of fighting.  ");
                }
                else {
                    this.append(t, "At first, " + c.heShe() + " plans to go back to fighting as soon as they let their guard down.  ");
                }
                if (c.dignity > 66) {
                    this.append(t, "Rather than letting the Thralls bring " + c.himHer() + " to orgasm, " + c.heShe() + " insists on touching " + c.himHer() + "self, but the feeling of so many eyes patiently watching " + c.himHer() + " fondle " + c.hisHer() + " " + organ + " - and from so close - is more stimulating than " + c.heShe() + " expected.  " + c.HeShe() + " cums hard, and when the Thralls' groping hands return to " + c.hisHer() + " chest and crotch, " + c.heShe() + " doesn't object.  ");
                }
                else if (c.dignity > 33) {
                    this.append(t, "Now that they don't need to worry about " + c.hisHer() + " squirming around, the Thralls are able to tweak " + c.hisHer() + " nipples and rub " + c.hisHer() + " clit with far greater precision.  " + c.HeShe() + "'s unable to stifle " + c.hisHer() + " moans as " + c.heShe() + " cums, shuddering and spasming in the midst of the grinning Thralls.  ");
                }
                else {
                    this.append(t, "After all the cruel squeezing and pinching before, the gentle touch of the Thrall reaching around from behind " + c.himHer() + " to stroke " + c.hisHer() + " " + organ + " is enough to make " + c.himHer() + " sigh as much with relief as with pleasure.  " + c.HeShe() + " cums almost instantly, legs wobbling as " + c.heShe() + " collapses into the arms of the Thralls holding " + c.himHer() + " upright.  ");
                }
                if (c.getHATELevel() > 2) {
                    if (c.innocence > 66) {
                        this.append(t, "In the deepening mental haze of pleasure, " + c.heShe() + " forgets all " + c.hisHer() + " anger and frustration, and when the Thralls instruct " + c.himHer() + " to get undressed, " + c.heShe() + " doesn't even think about disobeying.");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, "One of the Thralls tries to pull " + c.hisHer() + " " + c.bottomDesc() + " all the way off, and " + c.heShe() + " comes to " + c.hisHer() + " senses enough to shout a few angry words at him.  However, " + c.heShe() + "'s so turned on that " + c.heShe() + " doesn't actually want to be dressed, and soon " + c.heShe() + "'s absentmindedly pulling " + c.hisHer() + " own clothes off, quickly forgetting " + c.hisHer() + " anger.");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " still remembers " + c.hisHer() + " anger at " + c.hisHer() + " earlier treatment, and when the Thralls try to undress " + c.himHer() + ", " + c.heShe() + " grabs " + c.hisHer() + " clothes back and stares at them sharply.  But when they apologize and beg for " + c.himHer() + " to take " + c.hisHer() + " own clothes off, " + c.heShe() + " sighs with good-natured resignation and complies.");
                    }
                }
                else if (c.innocence > 66) {
                    this.append(t, "When they ask " + c.himHer() + " to get undressed so that they can make " + c.himHer() + " feel even better, " + c.heShe() + " happily obeys, a dreamy smile on " + c.hisHer() + " face.");
                }
                else if (c.innocence > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " realizes that " + c.hisHer() + " clothes are just in the way, and " + c.heShe() + " quickly starts to get undressed.");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " still has the presence of mind to hesitate when the Thralls ask " + c.himHer() + " to get undressed, but when " + c.heShe() + " realizes that removing the intervening clothes will probably make this all easier, " + c.heShe() + " decides to go along with it.");
                }
            }
            else {
                if (c.getINJULevel() > 2) {
                    if (c.morality > 66) {
                        this.append(t, ", and " + c.heShe() + " eagerly complies, telling " + c.himHer() + "self that " + c.heShe() + "'s surely fought back hard enough that there's no need to feel guilty.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, ", and " + c.heShe() + "'s happy to relax " + c.hisHer() + " tired limbs and let them do as they please.  ");
                    }
                    else {
                        this.append(t, ".  " + c.HeShe() + " has been taking a perverse enjoyment out of making them wait, but " + c.heShe() + "'s turned on enough by now that " + c.heShe() + "'s content to let them have their fun.  ");
                    }
                }
                else if (c.morality > 66) {
                    this.append(t, ", and even though " + c.heShe() + " feels like " + c.heShe() + " should probably be fighting back a little more, " + c.heShe() + " still immediately complies.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, ", but by this point they know " + c.himHer() + " well enough that they don't even need to wait for a reply before they release " + c.hisHer() + " limbs and start to focus their attention on " + c.hisHer() + " " + organ + ".  ");
                }
                else {
                    this.append(t, ", and " + c.heShe() + " laughs out loud as " + c.heShe() + " encourages them to try making " + c.himHer() + " cum.  ");
                }
                if (c.innocence > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + "'s grateful for the excuse to stop thinking about difficult things and just feel good.  ");
                }
                else if (c.innocence > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " can never decide whether " + c.heShe() + " wants this to happen or not.  ");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + "'s decided that " + c.heShe() + "'d like to win against the Demons, but if " + c.heShe() + " can't, then this is fine too.  ");
                }
                if (c.confidence > 66) {
                    this.append(t, "Soon, " + c.heShe() + "'s commanding the Thralls to pleasure " + c.himHer() + " even as " + c.heShe() + " undresses " + c.himHer() + "self to give them easier access.  ");
                }
                else if (c.confidence > 33) {
                    this.append(t, "The only bit of pride " + c.heShe() + " retains is that " + c.heShe() + " makes the Thralls ask nicely before " + c.heShe() + " agrees to undress for them.  ");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " doesn't even need to be asked to undress " + c.himHer() + "self now, and " + c.hisHer() + " cheeks are bright red with embarrassment and anticipation as " + c.heShe() + " peels " + c.hisHer() + " clothes off.  ");
                }
                if (c.getHATELevel() > 2) {
                    if (c.dignity > 66) {
                        this.append(t, "As one of the Thralls persistently rubs " + c.hisHer() + " " + organ + ", " + c.heShe() + " hides " + c.hisHer() + " first orgasm as best " + c.heShe() + " can, claiming that the Thrall must have just gotten some slime on his fingers, but then the second orgasm makes " + c.himHer() + " cry out loud, and " + c.heShe() + " can't even pretend to be angry anymore.");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, "A trace of lingering annoyance causes " + c.himHer() + " to twist away from their grasping hands, denying them access to " + c.hisHer() + " " + organ + " for only a few moments longer, but after the first orgasm, all is forgiven.");
                    }
                    else {
                        this.append(t, "Once they get started, " + c.heShe() + "'s all too happy to forgive them for their previous abuses, screaming in shameless climax under their fingers.");
                    }
                }
                else if (c.dignity > 66) {
                    if (c.lustful) {
                        this.append(t, String.valueOf(c.HeShe()) + " insists on sucking each of the Thralls' cocks first, pretending that " + c.heShe() + "'s not so turned on that " + c.heShe() + " can barely see straight.  But when the one behind " + c.himHer() + " starts to fondle " + c.hisHer() + " " + organ + ", " + c.heShe() + " can't hold out for long, and soon " + c.heShe() + "'s cumming as well.");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " tries to insist on making the Thralls cum first, but after several moments of holding one's cock in both hands, it becomes clear that " + c.heShe() + " has no idea what to do and is too turned on to figure it out.  The Thralls don't mind, only more turned on than ever by the adorable display, and soon " + c.heShe() + "'s writhing and cumming amidst their grasping hands anyway.");
                    }
                }
                else if (c.dignity > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " tries to resist cumming as long as possible - less out of a genuine desire to fight it and more from the knowledge that it'll feel even better when it finally does overwhelm " + c.himHer() + ".  " + c.HeShe() + "'s soon proven right, wailing and bucking " + c.hisHer() + " hips against one of the Thralls' hands, eyes rolling into the back of " + c.hisHer() + " head.");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " can't hold " + c.himHer() + "self back for long, and " + c.heShe() + " jumps into the arms of one lucky Thrall, grinding their crotches together as " + c.heShe() + " kisses him deeply with shameless abandon.");
                }
            }
        }
        else if (c.defilementStage % 3 == 1) {
            if (c.defilementStage % 6 == 4) {
                String hole = "pussy";
                if (c.gender.equals("male")) {
                    hole = "anus";
                }
                if (c.temptReq >= 60000L) {
                    if (c.parasitized) {
                        if (c.innocence > 66) {
                            this.append(t, "When the Thralls ask " + c.mainName + " to spread " + c.hisHer() + " hole so they can take some close-up pictures, " + c.heShe() + " almost complies without thinking, but then it occurs to " + c.himHer() + " that " + c.heShe() + " can make use of their request.  ");
                        }
                        else if (c.innocence > 33) {
                            this.append(t, String.valueOf(c.mainName) + " has come to enjoy showing off " + c.hisHer() + " body in the most degrading, most extreme ways possible.  But " + c.heShe() + " cares about other things, too, and as the Thralls pull out their cameras, " + c.heShe() + " tells them that " + c.heShe() + "'ll only spread " + c.hisHer() + " " + hole + " for them on one condition.  ");
                        }
                        else {
                            this.append(t, String.valueOf(c.mainName) + " already knew that it was practically certain that the Thralls would ask to take pictures of " + c.hisHer() + " spread " + hole + ", and when they voice their request, " + c.heShe() + "'s already decided " + c.hisHer() + " price.  ");
                        }
                        if (c.morality > 66) {
                            this.append(t, String.valueOf(c.HeShe()) + " asks that they only cum by masturbating to " + c.hisHer() + " photographs from now on and stop raping anyone but " + c.himHer() + ".  ");
                        }
                        else if (c.morality > 33) {
                            this.append(t, String.valueOf(c.HeShe()) + " wants them to promise that they'll go easier on " + c.himHer() + " in the future, even when " + c.heShe() + " doesn't feel like being molested by them.  ");
                        }
                        else {
                            this.append(t, "All " + c.heShe() + " wants is for them to switch sides and join " + c.himHer() + " when it's finally time for " + c.himHer() + " to kill the Demon Lord.  ");
                        }
                        if (c.confidence > 66) {
                            this.append(t, String.valueOf(c.HisHer()) + " voice is imperious, as if the Thralls' obedience is a foregone conclusion, and they agree without thinking, giving meaningless oaths that will be forgotten by tomorrow.  ");
                        }
                        else if (c.confidence > 33) {
                            this.append(t, "The Thralls are quick to agree, although their suppressed inhibitions cause them to view promises as meaningless.  ");
                        }
                        else {
                            this.append(t, "Even though " + c.mainName + " is normally timid, " + c.heShe() + " cares a lot about this, and " + c.hisHer() + " voice has a surprising firmness to it.  Not that it matters, as the Thralls would promise anything at all to get a closer look at " + c.hisHer() + " private places.  ");
                        }
                        if (c.dignity > 66) {
                            this.append(t, String.valueOf(c.mainName) + " is thrilled at the way that " + c.heShe() + " can use " + c.hisHer() + " body to command this kind of respect, and " + c.heShe() + " almost cums again just from the act of spreading " + c.himHer() + "self.  As a virgin, " + c.heShe() + "'s very sensitive down there.");
                        }
                        else if (c.dignity > 33) {
                            this.append(t, String.valueOf(c.mainName) + " pauses only a moment longer before spreading " + c.hisHer() + " virgin " + hole + " for all to see, releasing a soft moan as " + c.heShe() + " does so.");
                        }
                        else {
                            this.append(t, String.valueOf(c.mainName) + " has long since lost " + c.hisHer() + " last scrap of modesty, so all " + c.heShe() + " feels as " + c.heShe() + " spreads " + c.himHer() + "self is cool air on " + c.hisHer() + " virgin opening - and perhaps a bit of elation at the sense of power.");
                        }
                    }
                    else {
                        if (c.innocence > 66) {
                            this.append(t, String.valueOf(c.mainName) + " doesn't even notice the Thralls pulling out their cameras again, and when they ask " + c.himHer() + " to spread " + c.hisHer() + " " + hole + " so they can take some pictures, " + c.heShe() + " stumbles over " + c.hisHer() + " own words as " + c.heShe() + " refuses.  ");
                        }
                        else if (c.innocence > 33) {
                            this.append(t, "The Thralls ask " + c.mainName + " for permission to spread " + c.hisHer() + " " + hole + " so that they can take some close-up pictures, but " + c.heShe() + " refuses.  ");
                        }
                        else {
                            this.append(t, "Even as " + c.heShe() + " recovers from " + c.hisHer() + " last orgasm, " + c.mainName + " is still sharp enough to notice the Thralls getting their cameras out again, and even before they can finish asking " + c.himHer() + " to spread " + c.hisHer() + " " + hole + " for their benefit, " + c.heShe() + "'s already voicing " + c.hisHer() + " refusal.  ");
                        }
                        if (c.dignity > 66) {
                            this.append(t, String.valueOf(c.HeShe()) + " might have given up most of " + c.hisHer() + " modesty, but the tiny scrap that remains is enough to color " + c.hisHer() + " face bright red.  ");
                        }
                        else if (c.dignity > 33) {
                            this.append(t, String.valueOf(c.HisHer()) + " virginity down there is practically the last pure part of " + c.himHer() + ", and even having it looked at makes " + c.himHer() + " feel dirty in a way " + c.heShe() + " still hasn't quite learned to enjoy.  ");
                        }
                        else {
                            this.append(t, String.valueOf(c.HeShe()) + " is no longer even slightly embarrassed about showing off, but " + c.heShe() + "'s worried that they might not be able to stand the temptation to violate " + c.hisHer() + " virgin hole if " + c.heShe() + " flaunts it that much.  ");
                        }
                        if (c.confidence > 66) {
                            this.append(t, "Even though the Thralls are asking nicely and being careful to avoid arousing " + c.hisHer() + " anger, there's still steel in " + c.hisHer() + " voice as " + c.heShe() + " responds.  ");
                        }
                        else if (c.confidence > 33) {
                            this.append(t, "It's only after " + c.heShe() + " sees all the cameras put away that " + c.heShe() + " nods firmly and lets " + c.hisHer() + " guard down again.  ");
                        }
                        else {
                            this.append(t, "Voice quavering, " + c.heShe() + " clenches both hands between " + c.hisHer() + " legs, only relaxing after they reassure " + c.himHer() + " that they won't force it.  ");
                        }
                        if (c.morality > 66) {
                            this.append(t, "But then, " + c.heShe() + " apologizes for disappointing them and promises to make it up to them however " + c.heShe() + " can.");
                        }
                        else if (c.morality > 33) {
                            this.append(t, "Soon, " + c.heShe() + "'s cumming again under their hands, as carefree as " + c.heShe() + "'s ever been.");
                        }
                        else {
                            this.append(t, "But " + c.heShe() + " does dangle the promise of playing along later if they make " + c.himHer() + " happy enough.");
                        }
                    }
                }
                else if (c.parasitized) {
                    if (c.innocence > 66) {
                        this.append(t, "As " + c.heShe() + " gets more and more turned on, " + c.mainName + " loses the concentration necessary to form coherent words for the filming cameras.  ");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, "Even as " + c.heShe() + " talks to the cameras filming " + c.himHer() + " from every angle, " + c.mainName + "'s hands dip down between " + c.hisHer() + " widely parted legs.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " has been enjoying being able to say whatever " + c.heShe() + " wants to the filming cameras, but " + c.heShe() + " also knows that if " + c.heShe() + " wants anyone to watch the videos, " + c.heShe() + " needs to put on more of a show.  ");
                    }
                    if (c.dignity > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " digs " + c.hisHer() + " fingers into " + c.hisHer() + " " + hole + ", spreading it so wide that it must be painful, but all " + c.mainName + " cares about is inviting the crowd to take a look at the pretty pink color, untouched by any cock.  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " takes the phone from one of the Thralls and holds it close between " + c.hisHer() + " own thighs, using " + c.hisHer() + " other hand to spread " + c.hisHer() + " " + hole + " and happily narrating that the viewers should be able to tell from the appearance that " + c.heShe() + "'s never taken a cock down there before.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " begins to masturbate, quickly losing interest in the crowd.  As " + c.heShe() + " does so, the fingers of " + c.hisHer() + " other hand spread open " + c.hisHer() + " " + hole + ", and the assembled Thralls drool over the thought of being the first to penetrate the tight pink opening.  ");
                    }
                    if (c.confidence > 66) {
                        this.append(t, "Even when the watching Thralls, stroking their own members, begin to reach orgasm and begin painting " + c.hisHer() + " body with trails of ejaculate, " + c.hisHer() + " prideful bearing doesn't diminish in the slighest.  " + c.HeShe() + " even smiles back at them.  ");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, "The feeling of being looked at so closely in such a private place is incredibly stimulating, and soon " + c.hisHer() + " fingers go from simply spreading to actively thrusting in and out.  " + c.HeShe() + " cums, thighs clenching together, and that ends the show.  ");
                    }
                    else {
                        this.append(t, "Just a few weeks before, being seen like this would fill " + c.himHer() + " with the fear of being raped, but now " + c.heShe() + " feels perfectly safe and content, smiling up at all the erect penises pointed in " + c.hisHer() + " direction.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, "After making sure that they're all satisfied with what they've seen, " + c.heShe() + " asks the Thralls what they'd like to do with " + c.himHer() + " next.");
                    }
                    else if (c.morality > 33) {
                        this.append(t, "The display has gotten the Thralls even more aroused, and they begin to crowd around " + c.himHer() + " again.  " + c.HeShe() + " laughs as " + c.heShe() + " surrenders " + c.himHer() + "self to their groping hands.");
                    }
                    else {
                        this.append(t, "Then, smiling sweetly at the Thralls, " + c.heShe() + " tells them that it's time to reward " + c.himHer() + " for cooperating.  They surge forward as one, their hands reaching for " + c.hisHer() + " chest and crotch in order to do just that.");
                    }
                }
                else {
                    if (c.confidence > 66) {
                        this.append(t, String.valueOf(c.mainName) + " tells the Thralls that they're allowed to take some close-up pictures of " + c.hisHer() + " " + hole + ", then hesitates for only a moment before taking a deep breath and spreading it open with " + c.hisHer() + " fingers.  ");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, "The Thralls ask " + c.mainName + " for permission to take some close-up pictures of " + c.hisHer() + " spread " + hole + ".  " + c.HeShe() + " needs to take a moment to gather " + c.hisHer() + " willpower before agreeing, and " + c.heShe() + " pauses again when it becomes clear that they expect " + c.himHer() + " to use " + c.hisHer() + " own fingers to present " + c.himHer() + "self, but " + c.heShe() + " eventually complies, releasing a breathy moan as " + c.heShe() + " does so.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + "'s heart leaps with fear when the Thralls ask " + c.himHer() + " to spread " + c.hisHer() + " " + hole + ", but " + c.heShe() + " doesn't refuse.  With a soft whimper, " + c.heShe() + " places " + c.hisHer() + " fingers around the outside and lightly pulls it open.  ");
                    }
                    if (c.dignity > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " trembles with embarrassment, and " + c.heShe() + "'s even offended when the Thralls discuss how the virgin opening is in 'good condition', as if " + c.heShe() + " were a piece of meat.  But the comments also send jolts of shameful pleasure through " + c.hisHer() + " spine.  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + "'s gotten used to being seen naked, but this kind of scrutiny is far more extreme than that, and " + c.heShe() + " can feel the gaze of everyone watching now, the gaze of everyone who will look at the pictures in the future, as an almost-palpable pressure down there.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " doesn't feel embarrassed much anymore, but the vulnerable position still fills " + c.himHer() + " with uncomfortable fantasies of the Thralls losing control and deciding to rape " + c.himHer() + " after all.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " puts up with it because " + c.heShe() + " desperately wants to make them all happy.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + "'d never go this far if " + c.heShe() + " didn't feel like " + c.heShe() + " owed it to the Thralls for all the times they've made " + c.himHer() + " cum.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " isn't actually afraid of the Thralls betraying " + c.himHer() + " anymore, but " + c.heShe() + " is afraid that they'll grow bored of " + c.himHer() + ", and " + c.heShe() + "'s willing to go even this far in order to keep them entertained.  ");
                    }
                    if (c.innocence > 66) {
                        this.append(t, String.valueOf(c.HisHer()) + " eyes glaze over as " + c.heShe() + " loses " + c.himHer() + "self in the complicated feelings, and it's only after a Thrall rouses " + c.himHer() + " with a hand on " + c.hisHer() + " shoulder that " + c.heShe() + " realizes that they're done taking pictures and they're ready to move on to other things.");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, "As soon as the Thralls pull back to admire the photos they've taken, " + c.heShe() + " slumps onto " + c.hisHer() + " back and closes " + c.hisHer() + " eyes, relieved that it's over.");
                    }
                    else {
                        this.append(t, "The moment " + c.heShe() + " judges that the Thralls are satisfied, " + c.heShe() + " slams " + c.hisHer() + " thighs shut with a loud slap and tries to steer them into doing something else with " + c.himHer() + ".");
                    }
                }
            }
            else if (c.temptReq >= 60000L) {
                if (c.timesFantasized() > 0) {
                    if (c.morality > 66) {
                        this.append(t, String.valueOf(c.mainName) + "'s conscious mind can't quite banish the last twinge of guilt " + c.heShe() + " feels for giving up the fight against the Thralls.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, String.valueOf(c.mainName) + " is having trouble letting go of " + c.hisHer() + " suspicions and entrusting " + c.hisHer() + " body to the Thralls.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + "'s subconscious mind is divided between " + c.hisHer() + " desire to feel pleasure and " + c.hisHer() + " remembered hatred of everyone on the Demons' side.  ");
                    }
                    if (c.innocence > 66) {
                        this.append(t, "Without completely understanding what " + c.heShe() + "'s doing, " + c.heShe() + " starts trying to remember how good " + c.heShe() + " feels when " + c.heShe() + " embraces " + c.hisHer() + " fantasies, and by doing so, " + c.heShe() + " ends up putting " + c.himHer() + "self in a dissociative state.  ");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, "The stress is too much to handle, and " + c.heShe() + " eagerly retreats into a world of delusion.  ");
                    }
                    else {
                        this.append(t, "But by closing " + c.hisHer() + " eyes and going through practiced breathing exercises, " + c.heShe() + "'s able to deliberately hypnotize " + c.himHer() + "self.  ");
                    }
                    if (c.dignity > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " sees the Thralls not as lustful men intent on " + c.hisHer() + " body, but as truly worshipful fans, the kind of fans " + c.heShe() + " had before " + c.hisHer() + " humiliation.  But unlike what actually happened, these fans are perfectly understanding - even encouraging - of " + c.hisHer() + " new lustful appetites, happy to use their hands to satisfy " + c.himHer() + ".  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, "As the Thralls ask " + c.himHer() + " to stick " + c.hisHer() + " butt out or to show them how " + c.heShe() + " masturbates, their voices stop sounding harsh and lustful, instead taking on a soothing, peaceful tone in " + c.hisHer() + " ears.  Even as they lustfully grope " + c.himHer() + ", it feels more like avid worship of " + c.hisHer() + " body.  ");
                    }
                    else {
                        this.append(t, "The Thralls seem to wear the faces of " + c.hisHer() + " close friends, even the ones who were repulsed or intimidated and left " + c.himHer() + " when " + c.heShe() + " started to tell them about " + c.hisHer() + " increasingly deviant sexual desires.  " + c.HeShe() + " calls them by name, asking them to touch " + c.himHer() + ", and they're happy to comply.  ");
                    }
                    if (c.confidence > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " can tell them outright to make " + c.himHer() + " cum, and none of them find it strange at all.");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, "As if a barrier inside " + c.hisHer() + " mind has come down, " + c.heShe() + "'s able to start responding with unrestrained enthusiasm, bucking " + c.hisHer() + " hips against the Thralls' hands and crying out as they make " + c.himHer() + " cum.");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " finally relaxes, happy that " + c.heShe() + " can just lay back and let them make " + c.himHer() + " cum.");
                    }
                }
                else {
                    if (c.innocence > 66) {
                        this.append(t, "Surrendering to the Thralls seemed like a good idea a few moments ago, but in the clarity following an orgasm, " + c.mainName + " suddenly remembers " + c.hisHer() + " doubts.  ");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, "The more the Thralls rub " + c.mainName + "'s " + organ + ", the better " + c.hisHer() + " body feels, but having " + c.hisHer() + " lust satisfied also allows doubts to creep back into " + c.hisHer() + " mind.  ");
                    }
                    else {
                        this.append(t, "Even as " + c.hisHer() + " body is wracked by orgasm after orgasm, " + c.mainName + "'s mind remains clear enough to question what " + c.heShe() + "'s doing here.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + "'s still committed to doing what's right for as many people as possible, right now, and " + c.heShe() + " has to wonder whether " + c.heShe() + "'s being selfish by enjoying " + c.himHer() + "self like this.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, "Although " + c.heShe() + " has no desire to hurt the Thralls, " + c.heShe() + "'s worried about switching sides like this.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " knows that people seeing this will have no doubt at all that " + c.heShe() + "'s no longer fighting for humanity, and " + c.heShe() + "'s worried about being caught on the losing side of the war.  ");
                    }
                    if (c.dignity > 66) {
                        this.append(t, "But when " + c.heShe() + " looks into the Thralls' eyes and sees the way they're so happy to be around " + c.himHer() + " and so eager to please " + c.himHer() + ", " + c.heShe() + " realizes that " + c.heShe() + " doesn't care that much about anything else.  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, "What ultimately decides " + c.himHer() + " is the memory of " + c.hisHer() + " anger at the public for turning against " + c.himHer() + ".  ");
                    }
                    else {
                        this.append(t, "In the end, " + c.heShe() + " decides that since " + c.heShe() + "'s come this far already, there's probably no going back.  ");
                    }
                    if (c.confidence > 66) {
                        this.append(t, "Frowning with anger at " + c.himHer() + "self for having a moment of indecisiveness, " + c.heShe() + " starts to tear " + c.hisHer() + " clothes off with even more force, knocking several Thralls back in the process.");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, "The Thralls notice " + c.hisHer() + " hesitation, but when they ask, " + c.heShe() + " reassures them that everything's fine and resumes undressing " + c.himHer() + "self.");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " lowers " + c.hisHer() + " head and starts undressing with even more speed, wanting to distract " + c.himHer() + "self from all other thoughts.");
                    }
                }
            }
            else if (c.timesFantasized() > 0) {
                if (c.morality > 66) {
                    this.append(t, "Even in " + c.hisHer() + " most lucid moments, " + c.mainName + " no longer feels guilty about taking a break from the fighting every once in awhile in order to satisfy " + c.hisHer() + " lust with " + c.hisHer() + " supposed enemies.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, String.valueOf(c.mainName) + " has begun to completely let " + c.hisHer() + " guard down around the Thralls, not even making any attempt to struggle when delusional sexual fantasies start to sweep " + c.himHer() + " away.  ");
                }
                else {
                    this.append(t, "Now bearing little trace of the antisocial, misanthropic attitude " + c.heShe() + " used to hold, " + c.mainName + " happily indulges in lighthearted fantasies of peace and free love with the Thralls.  ");
                }
                if (c.dignity > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + "'s completely abandoned the pretense of being a dignified warrior, shouting that " + c.heShe() + "'s cumming as ");
                }
                else if (c.dignity > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " sloppily kisses each of the Thralls in turn, eyes fluttering as ");
                }
                else {
                    this.append(t, String.valueOf(c.HisHer()) + " tongue lolls out of " + c.hisHer() + " mouth and " + c.hisHer() + " eyes roll upward as ");
                }
                if (c.confidence > 66) {
                    this.append(t, String.valueOf(c.heShe()) + " buries " + c.hisHer() + " hands in the hair of the Thrall whose face " + c.heShe() + "'s riding, enjoying the feeling of his tongue on " + c.hisHer() + " " + organ + ".  ");
                }
                else if (c.confidence > 33) {
                    this.append(t, String.valueOf(c.heShe()) + " aggressively humps the hand working between " + c.hisHer() + " thighs.  ");
                }
                else {
                    this.append(t, "one of the Thralls gently spanks " + c.himHer() + " and another tugs " + c.hisHer() + " " + organ + ".  ");
                }
                if (c.innocence > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + " can't even remember what it was like to have a problem with this sort of thing.");
                }
                else if (c.innocence > 33) {
                    this.append(t, String.valueOf(c.HisHer()) + " body moves purely on instinct.");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + "'s been spending every night doing self-hypnosis in order to ensure that " + c.hisHer() + " doubts won't come back.");
                }
            }
            else {
                if (c.innocence > 66) {
                    this.append(t, String.valueOf(c.mainName) + " happily cooperates with the Thralls as they show " + c.himHer() + " new and exciting ways to make " + c.hisHer() + " body feel good.  ");
                }
                else if (c.innocence > 33) {
                    this.append(t, String.valueOf(c.mainName) + " is no longer cooperating with the Thralls out of fear or desire for advantage.  " + c.HeShe() + "'s happily doing it for its own sake.  ");
                }
                else {
                    this.append(t, "The pleasure " + c.heShe() + "'s feeling helps to convince " + c.mainName + " that " + c.heShe() + " was a fool for resisting " + c.hisHer() + " sexual instincts for so long.  ");
                }
                if (c.morality > 66) {
                    this.append(t, "Being surrounded by smiling faces like this is what " + c.heShe() + "'s always wanted out of life, and " + c.heShe() + " feels no guilt whatsoever about it.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, "Seeing the Thralls repeatedly refuse to take advantage of " + c.hisHer() + " vulnerability has finally convinced " + c.himHer() + " that " + c.heShe() + " can trust them.  ");
                }
                else {
                    this.append(t, "After a lifetime of giving and receiving acts of cruelty, " + c.heShe() + "'s now seeing what it's like to be with people who just want to make " + c.himHer() + " happy, and who " + c.heShe() + " just wants to make happy in turn.  ");
                }
                if (c.confidence > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + " doesn't even mind letting the Thralls have control of the encounter, letting them grind their cocks against " + c.hisHer() + " hair and " + c.hisHer() + " body");
                }
                else if (c.confidence > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " lets " + c.hisHer() + " guard down completely as one last stroke against " + c.hisHer() + " " + organ + " makes " + c.himHer() + " cum again");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " isn't afraid, even with one of the Thralls grinding his cock against " + c.hisHer() + " sensitive " + organ + ", right next to " + c.hisHer() + " virgin ");
                    if (c.gender.equals("male")) {
                        this.append(t, "anus");
                    }
                    else {
                        this.append(t, "pussy");
                    }
                }
                if (c.dignity > 66) {
                    this.append(t, ", and " + c.heShe() + "'s finally able to scream with shameless orgasmic pleasure no matter what the rest of the world thinks.");
                }
                else if (c.dignity > 33) {
                    this.append(t, ".");
                }
                else {
                    this.append(t, ", made all the better by the fact that " + c.heShe() + "'s finally surrounded by people who don't want " + c.himHer() + " to pretend to be someone " + c.heShe() + "'s not.");
                }
            }
        }
        else if (c.defilementStage % 3 == 2) {
            if (c.temptReq >= 50000L) {
                if (c.gender.equals("male") || (c.gender.equals("futanari") && c.temptReq / 10000L % 2L == 0L)) {
                    if (c.confidence > 66) {
                        this.append(t, String.valueOf(c.mainName) + " grins, laying down and crossing " + c.hisHer() + " arms behind " + c.hisHer() + " head ");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, String.valueOf(c.mainName) + "'s heart jumps and " + c.hisHer() + " eyes go wide ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " whimpers with arousal, tired penis still twitching upright ");
                    }
                    if (c.innocence > 66) {
                        this.append(t, "when a voluptuous female Thrall walks over to " + c.himHer() + ", hips swaying, and asks whether " + c.heShe() + "'d like to learn how to please a woman.  ");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, "when a stunningly beautiful female Thrall gently pushes " + c.himHer() + " down onto " + c.hisHer() + " back and straddles " + c.himHer() + ", then starts to guide " + c.himHer() + " inside.  ");
                    }
                    else {
                        this.append(t, "when a sweet, impossibly innocent-looking female Thrall steps right up to " + c.himHer() + " and asks whether " + c.heShe() + "'d like to cum inside her.  ");
                    }
                    if (c.dignity > 66) {
                        this.append(t, "Despite having cum so much already, " + c.heShe() + " still almost shoots " + c.hisHer() + " load inside the Thrall the moment " + c.heShe() + " enters.  " + c.HeShe() + " grits " + c.hisHer() + " teeth and tries to hold out as long as possible, not wanting to disappoint with an early finish.  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " gasps at the intense sensation of being enveloped, reflexively bucking " + c.hisHer() + " hips in response to the Thrall's every moment atop " + c.himHer() + ".  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " should be too tired to move, but the moment " + c.heShe() + " slips inside her, " + c.hisHer() + " instincts take over and " + c.heShe() + " starts savagely thrusting into the Thrall, eager to fill " + c.himHer() + " up.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, String.valueOf(c.mainName) + " tries to be a generous lover, matching " + c.hisHer() + " pace and thumbing the Thrall's clit, but when " + c.heShe() + " finally climaxes, " + c.hisHer() + " movements become spastic and " + c.heShe() + " finds " + c.himHer() + "self embracing and kissing the Thrall, simply enjoying her warmth.");
                    }
                    else if (c.morality > 33) {
                        this.append(t, String.valueOf(c.mainName) + " climaxes with a loud moan, overwhelmed with pleasure as each spurt comes out inside " + c.hisHer() + " partner.  When " + c.heShe() + " helps the Thrall to her feet, there's applause and cheering from the other spectating Thralls.");
                    }
                    else {
                        this.append(t, "The moment " + c.heShe() + " climaxes, " + c.mainName + " lets " + c.himHer() + "self lay back with a sigh, enjoying the sight of " + c.hisHer() + " seed trickling down from the Thrall's slit.");
                    }
                }
                else {
                    if (c.morality > 66) {
                        this.append(t, String.valueOf(c.mainName) + " feels guilty about all the Thralls giving " + c.himHer() + " pleasure without getting much in return.  While " + c.heShe() + " still feels it would be wrong to give up " + c.hisHer() + " virginity, " + c.heShe() + " offers them " + c.hisHer() + " rear hole instead.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, "After much sweet-talking and many promises that it will feel better and better the more " + c.heShe() + " does it, the Thralls are able to convince " + c.mainName + " to have some anal sex.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " enjoys the respect " + c.heShe() + " can command from some people and the lust " + c.heShe() + " can provoke from others by retaining " + c.hisHer() + " virginity, but " + c.heShe() + " still longs for the pleasures that can only be felt during penetration, so " + c.heShe() + " decides to allow the Thralls to use " + c.hisHer() + " asshole instead.  ");
                    }
                    if (c.dignity > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " claims that they don't need to use any lube, but " + c.heShe() + "'s privately relieved when they insist on applying plenty of it anyway.  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " gets on " + c.hisHer() + " hands and knees, spreading " + c.hisHer() + " thighs wide apart and looking over " + c.hisHer() + " shoulder at the Thrall whose lubed-up cock presses against " + c.hisHer() + " anus.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " asks that the Thrall with the smallest cock come forward, and after a wave of laughter from the crowd, one of them finally swallows his pride and approaches " + c.himHer() + ", lubing up his shaft.  ");
                    }
                    if (c.confidence > 66) {
                        this.append(t, String.valueOf(c.mainName) + " grits " + c.hisHer() + " teeth at first, enduring the penetration for the sake of " + c.hisHer() + " pride but not enjoying it at all.  That changes quickly, however.  ");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, String.valueOf(c.mainName) + " asks the Thrall to go slowly, and he complies, starting out with slow, steady thrusts that make " + c.himHer() + " shudder every time he bottoms out in " + c.hisHer() + " bowels.  It's not long before he can start going faster.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " whimpers at the uncomfortable insertion and almost asks to stop, but " + c.heShe() + " bites " + c.hisHer() + " lip and manages to hold out until " + c.hisHer() + " moans start to take on a more throaty, passionate quality.  ");
                    }
                    if (c.innocence > 66) {
                        this.append(t, "The strange sensations turn into a sudden surge of pleasure as the tip begins to put pressure on " + c.hisHer() + " g-spot, and when the Thrall starts fondling " + c.hisHer() + " " + organ + " at the same time, " + c.heShe() + " cries out wordlessly with an abrupt orgasm, squeezing down hard on the cock inside " + c.himHer() + ".");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, "As the thrusts grow deeper and deeper, the repeated impacts against " + c.hisHer() + " deepest place start to feel incredibly good.  " + c.HeShe() + " starts masturbating at the same time, desperately rubbing " + c.hisHer() + " " + organ + ", until the sensation of the Thrall's cum shooting inside " + c.hisHer() + " bowels finally pushes " + c.himHer() + " over the edge and " + c.heShe() + " climaxes as well.");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " angles " + c.hisHer() + " hips carefully, searching until " + c.heShe() + " feels a pleasurable pressure against " + c.hisHer() + " g-spot.  Then, " + c.heShe() + " starts rocking " + c.hisHer() + " body back and forth, encouraging the Thrall to thrust all the way inside " + c.himHer() + " until they're both gasping and moaning in mutual climax.");
                    }
                }
            }
            else if (c.gender.equals("male") || (c.gender.equals("futanari") && c.temptReq / 10000L % 2L == 0L)) {
                if (c.confidence > 66) {
                    this.append(t, "When " + c.mainName + " sees two of the female Thralls " + c.heShe() + "'s fucked before, " + c.heShe() + " grins and gestures them both over.  ");
                }
                else if (c.confidence > 33) {
                    this.append(t, "In the press of lustful bodies, " + c.mainName + " finds " + c.himHer() + "self between two of the female Thralls who have pleasured " + c.himHer() + " before.  ");
                }
                else {
                    this.append(t, String.valueOf(c.mainName) + " smiles timidly and averts " + c.hisHer() + " eyes as two of the female Thralls " + c.heShe() + "'s been with before make their way over to " + c.himHer() + ".  ");
                }
                if (c.dignity > 66) {
                    this.append(t, "They've both become very enamored with " + c.himHer() + ", even to the point of refusing advances from male Thralls, but " + c.heShe() + "'s happy to give them some sexual release.  ");
                }
                else if (c.dignity > 33) {
                    this.append(t, "They briefly talk, catching up on what the other has been doing since their last meeting, but it's not long before they're doing what they came here to do in the first place.  ");
                }
                else {
                    this.append(t, "Without even exchanging any words, " + c.heShe() + " pulls them both close.  ");
                }
                if (c.morality > 66) {
                    this.append(t, String.valueOf(c.mainName) + " works hard to satisfy both of them, having them lay face-to-face while " + c.heShe() + " alternates between thrusting into each of them.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, String.valueOf(c.mainName) + " lays on " + c.hisHer() + " back, one Thrall riding " + c.hisHer() + " cock while the other sits on " + c.hisHer() + " face.  They all cum together, raising their voices in a chorus of orgasmic moans.  ");
                }
                else {
                    this.append(t, String.valueOf(c.mainName) + " is content to lay back and let them pleasure " + c.himHer() + ", one sucking " + c.hisHer() + " cock while the other ");
                    if (c.gender.equals("male")) {
                        this.append(t, "licks and kisses " + c.hisHer() + " balls.  ");
                    }
                    else {
                        this.append(t, "tongues " + c.hisHer() + " anus.  ");
                    }
                }
                if (c.innocence > 66) {
                    this.append(t, "For a moment, " + c.mainName + " loves them both with all " + c.hisHer() + " heart, even though " + c.heShe() + "'s having trouble remembering their names.");
                }
                else if (c.innocence > 33) {
                    this.append(t, "They have a three-way embrace in the afterglow, but it doesn't last long, as all of them are eager to go back to more debauchery.");
                }
                else {
                    this.append(t, String.valueOf(c.mainName) + " is a bit reluctant to let the male Thralls have their turn playing with " + c.himHer() + " again, but " + c.heShe() + " knows that it'll only be a matter of time until they can do this again.");
                }
            }
            else {
                if (c.confidence > 66) {
                    this.append(t, "Acting on " + c.hisHer() + " own initiative, " + c.mainName + " pushes one of the Thralls down onto his back and then straddles him, lining his cock up with " + c.hisHer() + " anus.  ");
                }
                else if (c.confidence > 33) {
                    this.append(t, "Flushed and breathless as " + c.heShe() + " recovers from " + c.hisHer() + " last orgasm, " + c.mainName + " tells the Thralls that they can fuck " + c.hisHer() + " ass if they want.  ");
                }
                else {
                    this.append(t, String.valueOf(c.mainName) + " has been too timid to outright ask for it, but when one of the Thralls suggests doing anal again, " + c.heShe() + " squeaks " + c.hisHer() + " approval and trembles with anticipation.  ");
                }
                if (c.innocence > 66) {
                    this.append(t, "The flash of pain when the first cock penetrates " + c.himHer() + " reminds " + c.mainName + " that " + c.heShe() + " forgot to lube up.  But fortunately, " + c.hisHer() + " experienced hole no longer really requires it.  ");
                }
                else if (c.innocence > 33) {
                    this.append(t, "Pausing only briefly to borrow some lube from one of the Thralls and hurriedly finger it into " + c.hisHer() + " hole, " + c.mainName + " spreads " + c.hisHer() + " lower cheeks and welcomes the first cock inside.  ");
                }
                else {
                    this.append(t, "The first cock slides smoothly in, much to " + c.hisHer() + " satisfaction.  " + c.HeShe() + " was careful to lube up in advance before the battle, after all.  ");
                }
                if (c.morality > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + " rides " + c.hisHer() + " partner with practiced skill, smiling down at him and studying his reaction in order to milk his cock as pleasurably as possible.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " moans out loud with every thrust, complimenting " + c.hisHer() + " partner on his technique and his wonderfully thick member.  ");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " slams " + c.hisHer() + " hips forward and back with savage passion, using " + c.hisHer() + " Chosen strength to its fullest, even when the Thrall grunts in discomfort at the force of it.  " + c.HeShe() + " just smirks at " + c.himHer() + ", enjoying the fact that " + c.heShe() + " can be in control even when being taken like this.  ");
                }
                if (c.dignity > 66) {
                    this.append(t, "For the benefit of the watching spectators, " + c.heShe() + " uses both hands to spread " + c.hisHer() + " pussy, smirking as " + c.heShe() + " reminds everyone of " + c.hisHer() + " intact virginity.");
                }
                else if (c.dignity > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " teases the Thrall in between gasps of pleasure, asking him whether he'd rather be deflowering " + c.himHer() + " right now.");
                }
                else {
                    this.append(t, "Then, as " + c.heShe() + " feverishly rubs " + c.hisHer() + " " + organ + " and " + c.hisHer() + " virgin pussy, " + c.heShe() + " cums hard, " + c.hisHer() + " sphincter squeezing every spurt of cum out of the Thrall and ushering it into " + c.hisHer() + " bowels.");
                }
            }
        }
        else if (c.defilementStage % 3 == 0) {
            if (c.temptReq >= 40000L) {
                if (c.timesStripped() > 0) {
                    if (c.dignity > 66) {
                        this.append(t, String.valueOf(c.mainName) + " is happy with the attention when the Thralls start filming " + c.himHer() + " having sex, but " + c.heShe() + " enjoys it less when they start asking " + c.himHer() + " to denounce " + c.hisHer() + " supposed human allies on-camera.  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, "The Thralls teasing " + c.mainName + "'s " + organ + " try to get " + c.himHer() + " to say some nasty stuff about the Chosen leadership on-camera, but " + c.heShe() + " isn't having any of it.  ");
                    }
                    else {
                        this.append(t, "Shouting to be heard over " + c.mainName + "'s cries of pleasure, the Thralls tell " + c.himHer() + " to say what " + c.heShe() + " really thinks about the forces of humanity, but " + c.heShe() + " barely acknowledges them.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + "'s come to believe that the Thralls are good people who deserve to be happy, but " + c.heShe() + " doesn't think that the human leadership are bad people, either.  ");
                    }
                    else if (c.morality > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " doesn't care as much about the war anymore, but this would be tantamount to switching sides, which is another matter entirely.  ");
                    }
                    else {
                        this.append(t, "As much as " + c.heShe() + " enjoys causing scandals, " + c.heShe() + " doesn't see any benefit to burning what's left of " + c.hisHer() + " bridges with the human governments.  ");
                    }
                    if (c.innocence > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " just mumbles something about how " + c.heShe() + " feels way happier now that " + c.heShe() + "'s friends with the Thralls too.  It isn't what they want to hear, but ");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " spreads " + c.hisHer() + " legs wider, asking whether the Thralls would really rather talk than play with " + c.hisHer() + " body.  For many of them, seeing " + c.hisHer() + " morals corrupted actually is more satisfying than sex itself, but ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " chooses " + c.hisHer() + " very words carefully, even as " + c.hisHer() + " voice wavers from the Thrall's tongue down below making " + c.himHer() + " cum mid-sentence.  In the end, " + c.heShe() + " doesn't end up saying anything against the human cause at all, but ");
                    }
                    if (c.confidence > 66) {
                        this.append(t, "they know better than to push " + c.mainName + " when " + c.heShe() + " doesn't want to budge.");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, "it's clear that they'll have to try again later.");
                    }
                    else {
                        this.append(t, "from the way " + c.heShe() + " starts to tremble and tears fill " + c.hisHer() + " eyes, they know that being more forceful about it would just cause " + c.himHer() + " to panic.");
                    }
                }
                else {
                    if (c.dignity > 66) {
                        this.append(t, "When " + c.mainName + " notices that some of the Thralls are filming their sexual encounters with " + c.himHer() + ", " + c.hisHer() + " face goes bright red and " + c.heShe() + " reflexively raises " + c.hisHer() + " hands to block the shot.  ");
                    }
                    else if (c.dignity > 33) {
                        this.append(t, String.valueOf(c.mainName) + " blinks and shields " + c.hisHer() + " eyes against a flurry of flashing cameras, and when " + c.heShe() + " lowers " + c.hisHer() + " arm, there's a frown on " + c.hisHer() + " face.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + "'s face flushes with annoyance when " + c.heShe() + " sees that some of the Thralls at the edge of the crowd are filming " + c.himHer() + ".  " + c.HeShe() + " wanted to stop being a propaganda tool, not to just end up as propaganda for the other side.  ");
                    }
                    if (c.innocence > 66) {
                        this.append(t, String.valueOf(c.HeShe()) + " protests that even if doing this sort of thing is fun, showing it to other people is way too naughty.  ");
                    }
                    else if (c.innocence > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " shouts at them for taking footage of " + c.himHer() + " without asking first.  ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " knows it's too late to ask them to stop, but " + c.heShe() + " does ask that they keep the videos as nothing more than their own private masturbation material.  ");
                    }
                    if (c.confidence > 66) {
                        this.append(t, "At first, they try to keep pleasuring " + c.himHer() + ", but " + c.heShe() + " swats their hands away until " + c.heShe() + "'s sure they've all gotten the message.  ");
                    }
                    else if (c.confidence > 33) {
                        this.append(t, String.valueOf(c.HeShe()) + " even threatens to go back to fighting them.  ");
                    }
                    else {
                        this.append(t, "The quaver in " + c.hisHer() + " voice and the tears in " + c.hisHer() + " eyes are enough to make even a Thrall feel guilty.  ");
                    }
                    if (c.morality > 66) {
                        this.append(t, "However, " + c.heShe() + "'s quick to forgive, and soon " + c.heShe() + "'s happily moaning with pleasure in their hands like nothing happened.");
                    }
                    else if (c.morality > 33) {
                        this.append(t, "It's only after the Thralls' phones are all put away that " + c.heShe() + " starts going back to normal.");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " continues to glare at them for awhile after that, but after enough promises not to share what they filmed (and after making " + c.himHer() + " cum several more times), all is forgiven.");
                    }
                }
            }
            else if (c.timesStripped() > 0) {
                if (c.dignity > 66) {
                    this.append(t, String.valueOf(c.mainName) + "'s face lights up when " + c.heShe() + " sees several of the surrounding Thralls pulling out their cameras.  ");
                }
                else if (c.dignity > 33) {
                    this.append(t, "Even as " + c.mainName + " writhes under the hands of the Thralls all around " + c.himHer() + ", the more distant ones filming with their phones start to chant, calling for " + c.himHer() + " to make a speech.  " + c.HeShe() + " struggles to find the mental clarity to respond.  ");
                }
                else {
                    this.append(t, "More and more of the Thralls start pulling out their phones to film " + c.mainName + ", and although " + c.heShe() + "'d prefer to keep focusing on sex, " + c.heShe() + "'s grateful enough toward the Thralls to help them make some propaganda.  ");
                }
                if (c.morality > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + "'s become convinced that the Thralls are the only truly good people involved in the war, and only " + c.hisHer() + " doubts about the Demon Lord himself prevent " + c.himHer() + " from switching sides on the spot.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " knows exactly what the Thralls want from " + c.himHer() + ", and " + c.heShe() + "'s happy to provide it.  ");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + "'s eager to strike more fear and outrage into the general public that rejected " + c.himHer() + ".  ");
                }
                if (c.confidence > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + " launches into a grand speech about ");
                }
                else if (c.confidence > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + " looks directly into the cameras and talks about ");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " takes a deep breath to calm " + c.hisHer() + " nerves before speaking about ");
                }
                if (c.innocence > 66) {
                    this.append(t, "how everyone should just stop fighting the Demons and let naughty stuff be done to them until they start to enjoy it like " + c.heShe() + " did.  Perhaps fortunately for " + c.mainName + ", the pleasure from the Thralls kneeling in front of " + c.himHer() + " and behind " + c.himHer() + ", licking " + c.hisHer() + " " + organ + " and anus, causes " + c.hisHer() + " words to be more or less unintelligible.");
                }
                else if (c.innocence > 33) {
                    this.append(t, "the superiority of the Demons, but " + c.heShe() + " doesn't get too far before the Thralls' hands crawling all over " + c.hisHer() + " body cause " + c.himHer() + " to cry out with another orgasm and collapse to " + c.hisHer() + " knees.  The footage of the Thralls swarming over " + c.hisHer() + " helpless body as " + c.heShe() + " screams in joyous ecstasy makes for effective propaganda as well.");
                }
                else {
                    this.append(t, "the subject of the war as a whole and how the humans' resistance is futile.  " + c.HeShe() + " manages to speak quite eloquently, which is made all the more impressive and surreal by the fact that the Thrall standing behind " + c.himHer() + " continues to tweak " + c.hisHer() + " nipple and fondle " + c.hisHer() + " " + organ + " the whole time.");
                }
            }
            else {
                if (c.innocence > 66) {
                    this.append(t, "When the Thralls ask " + c.mainName + " what " + c.heShe() + " thinks of the human governments and military, " + c.heShe() + " starts to laugh and talk about how they're all lame and " + c.heShe() + "'d rather just fight alongside the Thralls, but " + c.heShe() + " comes up short and " + c.hisHer() + " eyes go wide when " + c.heShe() + " sees that they're filming " + c.himHer() + ".  ");
                }
                else if (c.innocence > 33) {
                    this.append(t, "The Thralls pull out their cameras and ask for " + c.mainName + " to denounce the human side of the war once and for all.  " + c.HeShe() + " thinks about it, but " + c.heShe() + " ultimately refuses, carefully explaining " + c.hisHer() + " reasoning to them.  ");
                }
                else {
                    this.append(t, "After making sure that none of the Thralls are filming, " + c.mainName + " uses a lull in the sexual activities to talk to them about what " + c.heShe() + " really thinks of the war.  ");
                }
                if (c.dignity > 66) {
                    this.append(t, String.valueOf(c.HeShe()) + " just enjoys what's left of " + c.hisHer() + " celebrity status too much to go against society in such a visible way, and " + c.heShe() + " knows that the Thralls want " + c.himHer() + " to be happy too.  ");
                }
                else if (c.dignity > 33) {
                    this.append(t, "It's not that " + c.heShe() + " cares so much about what the general public thinks of " + c.himHer() + " anymore, but " + c.heShe() + " knows that retaining what's left of " + c.hisHer() + " reputation will have some perks.  ");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " wants to help the Thralls however " + c.heShe() + " can, but " + c.heShe() + " also wants to put " + c.hisHer() + " days as a tool of propaganda behind " + c.himHer() + ".  ");
                }
                if (c.morality > 66) {
                    this.append(t, "With as much solemnity as " + c.heShe() + " can manage in the afterglow of so many consecutive orgasms, " + c.heShe() + " assures the Thralls that if the human governments ever attempt any kind of large-scale violent purge of the Thralls, then " + c.heShe() + "'ll defend them no matter what.  ");
                }
                else if (c.morality > 33) {
                    this.append(t, String.valueOf(c.HeShe()) + "'d much rather do whatever feels good for all of them right now, rather than putting effort into long-term strategic matters.  ");
                }
                else {
                    this.append(t, String.valueOf(c.HeShe()) + " just doesn't really care that much about the war itself.  ");
                }
                if (c.confidence > 66) {
                    this.append(t, "Then, to signal that the talking is done, " + c.heShe() + " grabs the two nearest Thralls, kissing one hungrily on the lips and pushing the other's head down to " + c.hisHer() + " " + organ + ".");
                }
                else if (c.confidence > 33) {
                    this.append(t, "The Thralls accept " + c.hisHer() + " decision without complaint, and soon " + c.heShe() + "'s back to crying out in orgasmic pleasure as the Thralls kiss and lick all over " + c.hisHer() + " body.");
                }
                else {
                    this.append(t, "When it becomes clear that the Thralls don't really mind, " + c.mainName + " sighs with deep relief, and " + c.heShe() + " practically melts into the arms of the next Thrall to embrace " + c.himHer() + ", lips trembling as " + c.heShe() + " kisses him.");
                }
            }
        }
        this.append(t, "\n\n");
        final int previousPLEA = c.getPLEALevel();
        final int previousEXPO = c.getEXPOLevel();
        c.currentHATE = 0L;
        c.currentINJU = 0L;
        c.damage(t, this, new int[] { 0, 0, 0, 0, 0, 100000, 0, 100000 });
        if (c.bonusEXPO && c.getEXPOLevel() >= 2) {
            c.DignityBreakZero(t, this);
            this.append(t, "\n\n");
        }
        if (c.getPLEALevel() > previousPLEA) {
            this.purpleAppend(t, "PLEA up!  ");
            if (c.getEXPOLevel() > previousEXPO) {
                this.purpleAppend(t, "EXPO up!  ");
            }
            if (c.getPLEALevel() < 5) {
                if (c.innocence > 66) {
                    this.append(t, "The waves of intense pleasure are coming one after another, leaving " + c.mainName + "'s mind completely blank.  ");
                }
                else if (c.innocence > 33) {
                    this.append(t, String.valueOf(c.mainName) + " is cumming constantly now, without even having time to catch " + c.hisHer() + " breath in between orgasms.  ");
                }
                else {
                    this.append(t, String.valueOf(c.mainName) + " is in a state of constant climax, " + c.hisHer() + " usual rationality drowning beneath an unstoppable torrent of pleasure.  ");
                }
                if (c.gender.equals("female")) {
                    this.append(t, String.valueOf(c.HisHer()) + " body spasms uncontrollably, fluids streaming down " + c.hisHer() + " thighs.");
                }
                else {
                    this.append(t, String.valueOf(c.HisHer()) + " body spasms uncontrollably, cum constantly trickling from " + c.hisHer() + " cock.");
                }
            }
            else {
                this.append(t, String.valueOf(c.mainName) + "'s pleasure builds to an even greater peak.  " + c.HisHer() + " whole body feels like an erogenous zone, every abuse only making " + c.himHer() + " cum harder and harder by the moment.");
            }
            this.append(t, "\n\n");
        }
        else if (c.getEXPOLevel() > previousEXPO) {
            this.purpleAppend(t, "EXPO up!  ");
            if (c.getEXPOLevel() == 1) {
                this.append(t, "Swaying " + c.hisHer() + " hips back and forth, " + c.mainName + " ");
                if (c.bottomCover.equals("skirt")) {
                    this.append(t, "rips " + c.hisHer() + " skirt up the side so that " + c.hisHer() + " leg is visible up to the hip.  ");
                }
                else if (c.bottomCover.equals("miniskirt")) {
                    this.append(t, "tucks the side of " + c.hisHer() + " miniskirt into its waistband so that one of " + c.hisHer() + " hips is clearly visible.  ");
                }
                else if (c.bottomCover.equals("robe")) {
                    this.append(t, "unties " + c.hisHer() + " robe so that it hangs open and exposes " + c.hisHer() + " thighs.  ");
                }
                else if (c.bottomCover.equals("cloak")) {
                    this.append(t, "opens " + c.hisHer() + " cloak so that it easily billows and exposes flashes of " + c.hisHer() + " legs.  ");
                }
                else if (c.bottomCover.equals("trousers")) {
                    this.append(t, "tears a hole in " + c.hisHer() + " trousers, providing a glimpse of " + c.hisHer() + " ass.  ");
                }
                else if (c.bottomCover.equals("leotard")) {
                    this.append(t, "unfastens the side of " + c.hisHer() + " leotard so that " + c.hisHer() + " waist is partially exposed.  ");
                }
                else if (c.bottomCover.equals("bodysuit")) {
                    this.append(t, "unzips " + c.hisHer() + " bodysuit, exposing " + c.hisHer() + " legs.  ");
                }
                else if (c.bottomCover.equals("armor")) {
                    this.append(t, "lets one of " + c.hisHer() + " armor plates drop to the ground so that " + c.hisHer() + " thigh is exposed.  ");
                }
                else if (c.bottomCover.equals("strips")) {
                    this.append(t, "partially unravels the strips of cloth covering " + c.himHer() + " to the point that " + c.hisHer() + " ass is partially visible between the ones that remain.  ");
                }
                else if (c.bottomCover.equals("belts")) {
                    this.append(t, "unbuckles several of the belts covering " + c.himHer() + " and casts them aside so that flashes of skin can be seen between the ones covering " + c.hisHer() + " hips.  ");
                }
                else if (c.bottomCover.equals("shorts")) {
                    this.append(t, "tears open the crotch of " + c.hisHer() + " shorts so that they turn into more of a miniskirt.  ");
                }
                else {
                    this.append(t, "rips open " + c.hisHer() + " own " + c.bottomDesc() + " all the way up to " + c.hisHer() + " hip.   ");
                }
                if (this.tickle()) {
                    if (c.feetType.equals("none")) {
                        this.append(t, "It's nothing " + c.heShe() + " hasn't shown off before, but ");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " takes off " + c.hisHer() + " " + c.feetType + " too, and even though it's nothing " + c.heShe() + " hasn't shown off before, ");
                    }
                }
                else {
                    if (!c.feetType.equals("none")) {
                        this.append(t, String.valueOf(c.HeShe()) + " takes off " + c.hisHer() + " " + c.feetType + " too.  ");
                    }
                    this.append(t, "It's nothing " + c.heShe() + " hasn't shown off before, but ");
                }
                if (c.getPLEALevel() < 1) {
                    if (this.tickle()) {
                        this.append(t, "seeing the Thralls' eagerness is part of what makes " + c.himHer() + " want to strip in the first place.");
                    }
                    else {
                        this.append(t, "the Thralls still watch eagerly in hopes that " + c.heShe() + "'ll reveal more.");
                    }
                }
                else if (c.getPLEALevel() > 1) {
                    this.append(t, "in " + c.hisHer() + " aroused state, " + c.heShe() + " can't help but want to reveal more.");
                }
                else {
                    this.append(t, String.valueOf(c.heShe()) + "'s still blushing with arousal at the feeling of all the eyes on " + c.himHer() + ".");
                }
            }
            else if (c.getEXPOLevel() == 2) {
                if (c.topCover.equals("blouse")) {
                    this.append(t, String.valueOf(c.mainName) + " opens " + c.hisHer() + " blouse");
                }
                else if (c.topCover.equals("bodice")) {
                    this.append(t, String.valueOf(c.mainName) + " unfastens " + c.hisHer() + " bodice");
                }
                else if (c.topCover.equals("cloak")) {
                    this.append(t, String.valueOf(c.mainName) + " tears " + c.hisHer() + " own cloak in half");
                }
                else if (c.topCover.equals("robe")) {
                    this.append(t, String.valueOf(c.mainName) + " completely opens " + c.hisHer() + " robe");
                }
                else if (c.topCover.equals("jacket")) {
                    this.append(t, String.valueOf(c.mainName) + " lets " + c.hisHer() + " jacket hang open");
                }
                else if (c.topCover.equals("shirt")) {
                    this.append(t, String.valueOf(c.mainName) + " tears " + c.hisHer() + " shirt open down the front");
                }
                else if (c.topCover.equals("strips")) {
                    this.append(t, String.valueOf(c.mainName) + " unravels most of the strips of cloth running around " + c.hisHer() + " chest, letting them hang loose");
                }
                else if (c.topCover.equals("crop")) {
                    this.append(t, String.valueOf(c.mainName) + "  rips " + c.hisHer() + " crop top in half down the middle");
                }
                else if (c.topCover.equals("bindings")) {
                    this.append(t, String.valueOf(c.mainName) + " partially unravels " + c.hisHer() + " chest bindings");
                }
                else if (c.topCover.equals("belts")) {
                    this.append(t, String.valueOf(c.mainName) + " unbuckles the belts covering " + c.hisHer() + " chest");
                }
                else if (c.topCover.equals("leotard")) {
                    this.append(t, String.valueOf(c.mainName) + " completely unzips " + c.hisHer() + " leotard");
                }
                else if (c.topCover.equals("armor")) {
                    this.append(t, String.valueOf(c.mainName) + " unclips the pieces of " + c.hisHer() + " chest armor from each other");
                }
                else if (c.topCover.equals("bodysuit")) {
                    this.append(t, String.valueOf(c.mainName) + " tears " + c.hisHer() + " bodysuit from neck to navel");
                }
                else if (c.topCover.equals(c.bottomCover)) {
                    this.append(t, String.valueOf(c.mainName) + " tears open the front of " + c.hisHer() + " own " + c.topCover);
                }
                else {
                    this.append(t, String.valueOf(c.mainName) + " tears open " + c.hisHer() + " " + c.topCover);
                }
                this.append(t, " so that " + c.heShe() + "'s at risk of showing " + c.hisHer() + " nipples if " + c.heShe() + "'s not careful.  ");
                if (c.getPLEALevel() < 2) {
                    this.append(t, String.valueOf(c.HeShe()) + " frowns with exertion");
                }
                else if (c.getPLEALevel() > 2) {
                    if (c.gender.equals("male")) {
                        this.append(t, String.valueOf(c.HisHer()) + " legs wobble as " + c.heShe() + " suppresses the urge to cum");
                    }
                    else {
                        this.append(t, String.valueOf(c.HisHer()) + " breasts heave as " + c.heShe() + " grunts and moans with arousal");
                    }
                }
                else if (c.gender.equals("male")) {
                    this.append(t, String.valueOf(c.HisHer()) + " erection remains hidden as " + c.heShe() + " struggles with " + c.hisHer() + " arousal");
                }
                else {
                    this.append(t, String.valueOf(c.HisHer()) + " breasts heave as " + c.heShe() + " gasps with arousal");
                }
                this.append(t, " and tries to focus on gyrating for " + c.hisHer() + " audience's benefit.");
            }
            else if (c.getEXPOLevel() == 3) {
                if (c.underType.equals("none")) {
                    if (c.gender.equals("female")) {
                        this.append(t, String.valueOf(c.mainName) + " tears away the front of " + c.hisHer() + " " + c.bottomDesc() + " so that " + c.hisHer() + " bare pussy is blatantly exposed.  " + c.HeShe() + " teasingly covers " + c.himHer() + "self with one hand between " + c.hisHer() + " ");
                    }
                    else if (c.gender.equals("male")) {
                        this.append(t, String.valueOf(c.mainName) + " tears away the front of " + c.hisHer() + " " + c.bottomDesc() + " so that " + c.hisHer() + " bare penis is blatantly exposed.  " + c.HeShe() + " teasingly covers " + c.himHer() + "self with one hand between " + c.hisHer() + " ");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + " tears away the front of " + c.hisHer() + " " + c.bottomDesc() + " so that " + c.hisHer() + " penis and pussy are both blatantly exposed.  " + c.HeShe() + " teasingly covers " + c.himHer() + "self with one hand between " + c.hisHer() + " ");
                    }
                }
                else {
                    if (c.underType.equals("panties") || c.underType.equals("wrap")) {
                        this.append(t, String.valueOf(c.mainName) + " tears " + c.hisHer() + " panties ");
                    }
                    else if (c.underType.equals("g-string")) {
                        this.append(t, String.valueOf(c.mainName) + " tears " + c.hisHer() + " g-string ");
                    }
                    else if (c.underType.equals("shorts")) {
                        this.append(t, String.valueOf(c.mainName) + " tears " + c.hisHer() + " undershorts ");
                    }
                    else if (c.underType.equals("straps")) {
                        this.append(t, String.valueOf(c.mainName) + " unfastens the straps of " + c.hisHer() + " underharness and pulls them ");
                    }
                    if (c.bottomAccess.equals("front") || c.bottomAccess.equals("cutout") || c.bottomAccess.equals("into") || c.bottomAccess.equals("around")) {
                        this.append(t, "apart, removing them from under " + c.hisHer() + " torn " + c.bottomDesc() + ".  The only thing stopping " + c.himHer() + " from being completely exposed is one teasing hand between " + c.hisHer() + " ");
                    }
                    else if (c.bottomAccess.equals("top")) {
                        this.append(t, "apart, removing them through " + c.hisHer() + " torn " + c.bottomDesc() + ".  The only thing stopping " + c.himHer() + " from being completely exposed is one teasing hand between " + c.hisHer() + " ");
                    }
                    else {
                        this.append(t, "down " + c.hisHer() + " ");
                    }
                }
                if (c.getPLEALevel() < 3) {
                    this.append(t, "thighs.  ");
                }
                else if (c.getPLEALevel() > 3) {
                    this.append(t, "thighs, spasming with exhibitionistic pleasure.  ");
                }
                else if (c.gender.equals("female")) {
                    this.append(t, "thighs, " + c.hisHer() + " love juices flowing freely.  ");
                }
                else {
                    this.append(t, "thighs, leaving " + c.hisHer() + " erection immediately obvious.  ");
                }
                this.append(t, String.valueOf(c.HeShe()) + " smirks at " + c.hisHer() + " audience");
                this.append(t, ", enjoying the way that everyone watches " + c.himHer() + " with rapt attention.");
            }
            else if (c.getEXPOLevel() == 4) {
                if (c.getPLEALevel() < 4) {
                    if (c.gender.equals("male")) {
                        this.append(t, String.valueOf(c.mainName) + "'s chest is completely exposed");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + "'s breasts are completely exposed");
                    }
                }
                else if (c.getPLEALevel() > 4) {
                    if (c.gender.equals("male")) {
                        this.append(t, String.valueOf(c.mainName) + "'s bare chest heaves with " + c.hisHer() + " uncontrollable screams of pleasure");
                    }
                    else {
                        this.append(t, String.valueOf(c.mainName) + "'s bare breasts heave with " + c.hisHer() + " uncontrollable screams of pleasure");
                    }
                }
                else if (c.gender.equals("male")) {
                    this.append(t, String.valueOf(c.mainName) + "'s orgasmic spasms emphasize " + c.hisHer() + " bare chest and fully erect nipples");
                }
                else {
                    this.append(t, String.valueOf(c.mainName) + "'s orgasmic spasms emphasize " + c.hisHer() + " bare breasts and fully erect nipples");
                }
                if (c.bottomCover.equals("skirt")) {
                    this.append(t, " as " + c.heShe() + " lifts up " + c.hisHer() + " skirt to show off " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("miniskirt")) {
                    this.append(t, " as " + c.heShe() + " rolls up " + c.hisHer() + " miniskirt in order to make it too short to hide " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("robe")) {
                    this.append(t, " as " + c.heShe() + " throws open " + c.hisHer() + " robe to reveal " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("cloak")) {
                    this.append(t, " as " + c.heShe() + " throws back " + c.hisHer() + " cloak to reveal " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("trousers")) {
                    this.append(t, " as " + c.heShe() + " pulls down and steps out of " + c.hisHer() + " trousers, revealing " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("leotard")) {
                    this.append(t, " as " + c.heShe() + " unzips " + c.hisHer() + " leotard to reveal ");
                }
                else if (c.bottomCover.equals("bodysuit")) {
                    this.append(t, " as " + c.heShe() + " tears open " + c.hisHer() + " bodysuit to reveal ");
                }
                else if (c.bottomCover.equals("armor")) {
                    this.append(t, " as " + c.heShe() + " unfastens and casts aside the armor plates over " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("strips")) {
                    this.append(t, " as " + c.heShe() + " unravels and drops the strips of cloth that once covered " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("belts")) {
                    this.append(t, " as " + c.heShe() + " unbuckles and discards the belts that once covered " + c.hisHer() + " ");
                }
                else if (c.bottomCover.equals("shorts")) {
                    this.append(t, " as " + c.heShe() + " pulls down " + c.hisHer() + " shorts, revealing " + c.hisHer() + " ");
                }
                else {
                    this.append(t, " as " + c.heShe() + " removes " + c.hisHer() + " " + c.bottomDesc() + " to reveal " + c.hisHer() + " ");
                }
                if (c.gender.equals("female")) {
                    this.append(t, "pussy.  ");
                }
                else if (c.gender.equals("male")) {
                    this.append(t, "penis.  ");
                }
                else {
                    this.append(t, "penis and pussy.  ");
                }
                this.append(t, String.valueOf(c.HeShe()) + " makes no effort to cover " + c.himHer() + "self");
                this.append(t, ", and that only causes the Thralls to pay even more attention to " + c.himHer() + ".");
            }
            else {
                this.append(t, String.valueOf(c.mainName) + " flaunts " + c.hisHer() + " nude body, enjoying all the eyes on " + c.hisHer() + " ");
                if (c.gender.equals("female")) {
                    this.append(t, "pussy.  ");
                }
                else if (c.gender.equals("male")) {
                    this.append(t, "penis.  ");
                }
                else {
                    this.append(t, "penis and pussy.  ");
                }
                this.append(t, String.valueOf(c.HeShe()) + "'s briefly the center of the battlefield.");
            }
            this.append(t, "\n\n");
        }
        c.say(t, "\"");
        if (!c.betraying && c.temptReq == 90000L) {
            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
            if (c.morality > 66) {
                if (c.confidence > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                    c.say(t, "If it keeps these Thralls occupied, then it certainly harms no one to indulge them.");
                }
                else if (c.confidence > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                    c.say(t, "Okay, but if someone needs to be saved, you'd better not try to stop me from leaving.");
                }
                else {
                    c.say(t, "I-I'm... tired of fighting people who aren't truly evil...");
                }
            }
            else if (c.morality > 33) {
                if (c.confidence > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                    c.say(t, "I suppose I've earned the right to take a little break.");
                }
                else if (c.confidence > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                    c.say(t, "They really just want to give me pleasure...?");
                }
                else {
                    c.say(t, "It's not like I'm helping things much by fighting...");
                }
            }
            else if (c.confidence > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                c.say(t, "If this is a trick, I'll make you regret it...");
            }
            else if (c.confidence > 33) {
                c.say(t, "I don't care what happens anymore.");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.LEWD);
                c.say(t, "Ah...  Feels too good to resist...");
            }
        }
        else if (c.defilementStage == 0) {
            if (c.temptReq >= 80000L) {
                if (c.getINJULevel() > 2) {
                    if (c.innocence > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                        c.say(t, "As soon as I'm rested up, I'll-  Aah!  Ooh, that feels good...");
                    }
                    else if (c.innocence > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                        c.say(t, "This will give me a chance to rest...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                        c.say(t, "In my exhausted state, I have little choice.");
                    }
                }
                else if (c.morality > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FOCUS);
                    c.say(t, "If I can get out of this without hurting them...");
                }
                else if (c.morality > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                    c.say(t, "As long as you don't try to stop me once we're done...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                    c.say(t, "Don't think this means I've forgiven you.");
                }
            }
            else if (c.getINJULevel() > 2) {
                if (c.dignity > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                    c.say(t, "Hmph, it's not like I was hoping you'd take me by force.");
                }
                else if (c.dignity > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.FOCUS);
                    c.say(t, "I thought you'd never ask...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.LEWD);
                    c.say(t, "Okay, okay, you win this round!");
                }
            }
            else if (c.confidence > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FOCUS);
                c.say(t, "I'm feeling merciful, so I'll play along.");
            }
            else if (c.confidence > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.LEWD);
                c.say(t, "You've given me some pleasure, so now I suppose I can return the favor.");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.LEWD);
                c.say(t, "Th-Thanks for being so gentle...");
            }
        }
        else if (c.defilementStage % 3 == 0) {
            if (c.temptReq >= 40000L) {
                if (c.timesStripped() > 0) {
                    if (c.morality > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                        c.say(t, "Please, don't make me choose...");
                    }
                    else if (c.morality > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                        c.say(t, "Even I have my limits...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.LEWD);
                        c.say(t, "Let's go back to the part where you make me feel good.");
                    }
                }
                else if (c.dignity > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "W-W-Wait!  Turn that off!");
                }
                else if (c.dignity > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.FEAR);
                    c.say(t, "Hey!  What are you doing!?");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                    c.say(t, "I don't like this.");
                }
            }
            else if (c.timesStripped() > 0) {
                if (c.confidence > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                    c.say(t, "Right, I'm just about ready to join the Demons.  Who's going to try to stop me?");
                }
                else if (c.confidence > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                    c.say(t, "It's time to let everyone know how I really feel.");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                    c.say(t, "I'm not going to hide from it anymore.  I'm... a traitor.  A-And I'm happy to be a traitor!");
                }
            }
            else if (c.innocence > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FEAR);
                c.say(t, "Um, I know we're friends and all, but maybe we shouldn't be super obvious about it...?");
            }
            else if (c.innocence > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FEAR);
                c.say(t, "It's not like I don't want to publicly support you, but I'm worried about what would happen afterward...");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                c.say(t, "When the time comes, I may well join you.  But the time... has not come yet.");
            }
        }
        else if (c.defilementStage % 3 == 1) {
            if (c.defilementStage % 6 == 4) {
                String hole2 = "vagina";
                if (c.gender.equals("male")) {
                    hole2 = "butt";
                }
                if (c.temptReq >= 60000L) {
                    if (c.parasitized) {
                        if (c.morality > 66) {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.LEWD);
                            c.say(t, "If you rape anybody else, then that's basically cheating on me!");
                        }
                        else if (c.morality > 33) {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.LEWD);
                            c.say(t, "If I say I don't want it, then just back off!  Or at least... be gentle.");
                        }
                        else {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.LEWD);
                            c.say(t, "If you're good, I might even let one of you be my first!");
                        }
                    }
                    else if (c.confidence > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                        c.say(t, "You should be grateful that I'm letting you use every other part of my body!");
                    }
                    else if (c.confidence > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                        c.say(t, "That's going too far, even for me.");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.SHAME);
                        c.say(t, "P-Please... just leave my " + hole2 + " alone...");
                    }
                }
                else if (c.parasitized) {
                    if (c.dignity > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                        if (c.gender.equals("male")) {
                            c.say(t, "It's never been penetrated by a penis... so far...");
                        }
                        else {
                            c.say(t, "A-As you can see, my hymen is... still intact...");
                        }
                    }
                    else if (c.dignity > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                        c.say(t, "Yes, I do sometimes wonder what it would be like to let one of you go all the way with me...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                        c.say(t, "Mm...  Even my finger barely fits...");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                    if (c.innocence > 66) {
                        c.say(t, "Aaah...  Being looked at feels crazy...!");
                    }
                    else if (c.innocence > 33) {
                        c.say(t, "Phew...  Everyone could see...");
                    }
                    else {
                        c.say(t, "N-Now, let's do something completely different!");
                    }
                }
            }
            else if (c.temptReq >= 60000L) {
                if (c.timesFantasized() > 0) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.LEWD);
                    if (c.dignity > 66) {
                        c.say(t, "They love me, they all love me...!");
                    }
                    else if (c.dignity > 33) {
                        c.say(t, "Hahah, there's plenty of me to go around...");
                    }
                    else {
                        c.say(t, "Ah, I love you all...!");
                    }
                }
                else if (c.confidence > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.SHAME);
                    c.say(t, "Don't start doubting yourself now, " + c.mainName + "!");
                }
                else if (c.confidence > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                    c.say(t, "I'm fine, let's keep going.");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                    c.say(t, "S-Sorry, I'll hurry up...");
                }
            }
            else if (c.timesFantasized() > 0) {
                if (c.innocence > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.LEWD);
                    c.say(t, "Why would I ever fight you?  That's silly!");
                }
                else if (c.innocence > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                    c.say(t, "Aaah, yes!  Cumming, cumming, cummiiing...!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                    c.say(t, "Yes...  Let my mind melt away...");
                }
            }
            else if (c.morality > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.LEWD);
                c.say(t, "As long as we're all happy, that's what really matters.");
            }
            else if (c.morality > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                c.say(t, "I'm addicted to this...!");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.LEWD);
                c.say(t, "I've finally found the place where I belong...");
            }
        }
        else if (c.defilementStage % 3 == 2) {
            if (c.temptReq >= 50000L) {
                if (c.gender.equals("male") || (c.gender.equals("futanari") && c.temptReq / 10000L % 2L == 0L)) {
                    if (c.morality > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.LEWD);
                        c.say(t, "I will... make you... feel good too...!");
                    }
                    else if (c.morality > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                        c.say(t, "That was... intense...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                        c.say(t, "Ah...  It really does feel better to cum inside a woman...");
                    }
                }
                else if (c.dignity > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.SHAME);
                    c.say(t, "You don't need to treat me like a weakling...  Thanks, though.");
                }
                else if (c.dignity > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    c.say(t, "It's going...  Nng!  Insiiide!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FOCUS);
                    c.say(t, "Nghfff...  Whew, it doesn't look like much, but it feels plenty big once it's inside...");
                }
            }
            else if (c.gender.equals("male") || (c.gender.equals("futanari") && c.temptReq / 10000L % 2L == 0L)) {
                if (c.confidence > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                    c.say(t, "Hello, ladies!");
                }
                else if (c.confidence > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                    c.say(t, "You both... feel so good...!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                    c.say(t, "B-Both at once?  Oh, wow...");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                if (c.innocence > 66) {
                    c.say(t, "I'm so happy that you all taught me how good butt stuff feels!");
                }
                else if (c.innocence > 33) {
                    c.say(t, "Yes!  Yes!  I love anal sex!");
                }
                else {
                    c.say(t, "Incredible...!  To stimulate the Graefenberg spot through the colon...!  Oooh!");
                }
            }
        }
        c.say(t, "\"");
        c.cKnown = true;
        c.mKnown = true;
        c.betraying = true;
        if (c.usingSlaughter) {
            c.usingSlaughter = false;
            c.nextAdaptation /= 10L;
        }
        if (c.usingDetonate) {
            c.usingDetonate = false;
            c.nextAdaptation /= 10L;
        }
    }
    
    public void showVignette(final JTextPane t, final int id) {
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        this.save.newScene();
        Project.clearPortraits();
        Chosen c = null;
        Chosen d = null;
        Label_47698: {
            if (id == 0) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] array = new String[5];
                            array[0] = c.mainName;
                            final String[] nameDisplay = array;
                            this.append(t, "As public figures, the Chosen have the ability to exert a great deal of influence simply by choosing where to make appearances.  Some Chosen use that power for purely selfish reasons, but " + c.mainName + " is always on the lookout for ways " + c.heShe() + " can help people.  When " + c.heShe() + " receives an invitation to be the guest of honor at an upcoming charity dinner in order to attract more donors, " + c.heShe() + "'s overnjoyed.\n\n");
                            this.append(t, "The first indication that not everything was as it seemed was the formal attire " + c.heShe() + " was sent, 'as a courtesy', after accepting the invitation.  It was a strapless, low-cut, practically transparent black dress which would normally be considered insufficient to protect the wearer's modesty without a bra, and yet was clearly intended to be worn without one.  ");
                            if (!this.getGenders()[c.number].equals("male")) {
                                if (c.getDignityBreakage() >= 2) {
                                    this.append(t, String.valueOf(c.HeShe()) + "'s become comfortable by now with showing off " + c.hisHer() + " body, but this doesn't seem like the time or place.");
                                }
                                else {
                                    this.append(t, "It seems completely unfitting for an event dedicated to such moral purposes.  But at the same time, " + c.heShe() + " wants to respect " + c.hisHer() + " hosts' wishes.");
                                }
                            }
                            else {
                                Label_0395: {
                                    if (c.getDignityBreakage() == 0) {
                                        if (c.vVirg) {
                                            this.append(t, String.valueOf(c.HeShe()) + " still isn't comfortable with dressing like a girl, and especially not with actively encouraging men to lust after " + c.himHer() + ".  But at the same time, " + c.heShe() + " wants to respect " + c.hisHer() + " hosts' wishes.");
                                            break Label_0395;
                                        }
                                    }
                                    this.append(t, String.valueOf(c.HeShe()) + "'s become comfortable by now with the notion that men lust after " + c.himHer() + ", but still, this doesn't seem like the time or place.");
                                }
                            }
                            this.append(t, "  Once " + c.mainName + " arrives at the event, " + c.heShe() + " can't help but notice the way that everyone stares at " + c.hisHer() + " chest.  " + c.HisHer() + " nipples feel like they're about to slip out into the open air at any moment, and even if they don't, the bumps they make in the fabric of " + c.hisHer() + " dress are so obvious that " + c.heShe() + " might as well be topless.  " + c.HeShe() + "'s annoyed by how no one seems to be paying attention to a word " + c.heShe() + " says, and " + c.heShe() + "'s grateful when the chairman of the organization beckons " + c.himHer() + " over and gives " + c.himHer() + " an excuse to leave the crowd behind.\n\n");
                            if (c.confidence <= 66) {
                                if (c.confidence <= 33) {
                                    c.say(t, "(I can't blame them for thinking I'm only good for my body.  But still...)");
                                }
                                else {
                                    c.say(t, "(If they'd listen, I think I could give them some useful advice about how to help the war effort.)");
                                }
                            }
                            else {
                                c.say(t, "(They're utterly shallow.  How disappointing.)");
                            }
                            this.append(t, "\n\nThe elderly chairman offers " + c.mainName + " a seat at a small, two-person table at the edge of the room, and a few of the guests look envious at the attention " + c.heShe() + "'s getting.  When the chairman speaks, he's full of praise and flattery, taking " + c.mainName + " by the hand as his voice grows passionate.\n\n");
                            this.append(t, "\"It's such a delight to finally meet a member of the Chosen who actually cares about the problems facing society.  Our organization may have plenty of wealthy contributors, but we lack the prestige to influence public policy and cut through the red tape to get our funds where they're needed most.  With your support, I'm sure we can do far more good than we could do alone.\"\n\n");
                            this.append(t, String.valueOf(c.mainName) + " is so pleased to finally be taken seriously that " + c.heShe() + " lets " + c.hisHer() + " guard down.  Still holding " + c.hisHer() + " hand, the chairman slowly guides it under the table until " + c.mainName + " abruptly feels a hard, warm shaft of flesh under " + c.hisHer() + " fingertips.  ");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    this.append(t, String.valueOf(c.HeShe()) + " instantly narrows " + c.hisHer() + " eyes, " + c.hisHer() + " expression growing cold.\n\n");
                                    c.say(t, "\"Mr. Chairman, do you take me for a prostitute?\"\n\n");
                                    this.append(t, "The chairman is briefly unsettled by " + c.hisHer() + " change in demeanor, but he quickly recovers and replies with a somewhat crooked smile.\n\n");
                                    this.append(t, "\"Of course not.  You have no interest in money.  But I've heard how you're willing to use your body in order to end each battle with as few casualties as possible.  I'm giving you a chance to save even more people.  I know you'll make the right choice.\"\n\n");
                                    this.append(t, String.valueOf(c.mainName) + " is annoyed at being manipulated, but " + c.heShe() + " knows that refusing at this point would be pure selfishness.  ");
                                }
                                else {
                                    this.append(t, String.valueOf(c.HeShe()) + " recoils, startled, and pulls " + c.hisHer() + " hand back slightly - although not completely out of the chairman's grip.\n\n");
                                    c.say(t, "\"I don't want to do this with you.\"\n\n");
                                    this.append(t, "The chairman sighs, shaking his head.\n\n");
                                    this.append(t, "\"Do you mean that you actually wanted to pleasure all of those Thralls?  " + c.mainName + ", I must confess that I'm disappointed.  I thought you were willing to make sacrifices for the greater good.  I can help you make the world a better place, but you have to make it worth my while first...\"\n\n");
                                    this.append(t, "In " + c.mainName + "'s moment of hesitation, " + c.hisHer() + " hand is lowered back onto the penis.  ");
                                }
                            }
                            else {
                                this.append(t, "It takes " + c.himHer() + " a moment to recognize what " + c.heShe() + "'s touching, but when " + c.heShe() + " does, " + c.heShe() + " blurts it out loud.\n\n");
                                c.say(t, "\"That's your penis!\"\n\n");
                                this.append(t, "Several heads turn toward their table, but the chairman just smiles indulgently.\n\n");
                                this.append(t, "\"Of course it is.  I've heard so much about how you use your skills to subdue the sinful.  Isn't it only fair for a good person like me to also get the chance to enjoy your body?\"\n\n");
                                this.append(t, String.valueOf(c.mainName) + " can't find any flaw in his logic.  ");
                            }
                            this.append(t, "The chairman guides " + c.mainName + "'s hand up and down the shaft in a stroking motion, and when the chairman takes his hand away, " + c.mainName + " continues stroking.  For a brief while, the table is silent except for the distant chatter of the other guests and the chairman's occasional sighs of pleasure as " + c.mainName + " works.  But the awkward angle of " + c.mainName + "'s arm restricts " + c.hisHer() + " movements, and " + c.heShe() + " knows from " + c.hisHer() + " experience with the Thralls that going at this pace won't actually be able to finish the chairman off - at least not before a waiter or another guest shows up and realizes what's happening.  As the next course of the dinner is brought out, " + c.mainName + " makes " + c.hisHer() + " move.\n\n");
                            this.append(t, "There's a gasp of surprise from the chairman as " + c.mainName + " ducks down under the table without even being asked.  Then, he moans softly in pleasure as " + c.mainName + " closes " + c.hisHer() + " other hand, lubricated with " + c.hisHer() + " own spit, around the base of the chairman's penis.  " + c.mainName + " pumps " + c.hisHer() + " wet fist up and down, making the chairman feel like he's fucking someone under the table, and it takes all his self-control not to cum immediately.\n\n");
                            this.append(t, "The tablecloth hanging down all around " + c.himHer() + " hides " + c.mainName + " from view.  In the darkness under the table, it feels like all " + c.hisHer() + " other senses are sharper.  The chairman's cock smells different from those of the Thralls, and " + c.mainName + " realizes that it must be because he had sex just before the dinner.\n\n");
                            c.say(t, "(");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    c.say(t, "I see.  If he's already sated, then I must use more effective techniques in order to bring him to climax again.");
                                }
                                else {
                                    c.say(t, "Ah, I spaced out and took too long.  Now I have to lubricate it again...");
                                }
                            }
                            else {
                                c.say(t, "I wonder if it tastes different, too...");
                            }
                            c.say(t, ")\n\n");
                            this.append(t, String.valueOf(c.mainName) + "'s lips touch the tip of the cock, and " + c.heShe() + " pokes " + c.hisHer() + " tongue out, then starts licking it outright.  " + c.HeShe() + " works " + c.hisHer() + " way from the root to tip and then back again, slathering it in " + c.hisHer() + " spit, then lowers " + c.himHer() + "self further and takes the testicles into " + c.hisHer() + " mouth, " + c.hisHer() + " hand making wet sounds as it slides up and down the shaft.  The longer " + c.heShe() + " continues, the more the world seems to shrink down to " + c.himHer() + "self and the penis " + c.heShe() + "'s servicing.  " + c.HeShe() + " stops dwelling on the fact that " + c.heShe() + " doesn't really want to be there, and instead takes satisfaction and pride in the chairman's inability to hide his pleasured reactions.\n\n");
                            this.append(t, "By the time " + c.mainName + " is done, " + c.heShe() + " isn't even trying to finish quickly.  Every time the chairman's member starts twitching and his hips start jerking forward, " + c.mainName + " slows down a bit, gently kissing the underside of the shaft and trailing " + c.hisHer() + " fingers across the scrotum.  When " + c.heShe() + " finally decides to take it into " + c.hisHer() + " mouth completely, the chairman loses control and grabs " + c.himHer() + " by the hair, ramming his cock all the way down " + c.mainName + "'s throat as he cums.  ");
                            if (c.timesStripped() <= 0) {
                                if (c.dignity <= 66) {
                                    if (c.dignity <= 33) {
                                        this.append(t, String.valueOf(c.mainName) + " barely even notices the pain.  When " + c.heShe() + " unsteadily climbs back into " + c.hisHer() + " chair, there's white fluid across " + c.hisHer() + " face and down " + c.hisHer() + " dress, and one of " + c.hisHer() + " nipples has slipped free, but " + c.heShe() + "'s too turned on to care.  " + c.HeShe() + " has the presence of mind to negotiate with the chairman about what his charity can do for the public, but even that much is a struggle.\n\n");
                                        c.say(t, "(That actually felt good...  I suppose this sort of thing doesn't bother me that much after all.)");
                                        Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
                                    }
                                    else {
                                        this.append(t, String.valueOf(c.mainName) + " coughs and chokes, and the last few spurts go onto " + c.hisHer() + " face and chest.  " + c.HeShe() + "'s horrified when " + c.heShe() + " realizes that it will be obvious to anyone who looks what " + c.heShe() + " was doing.  " + c.HeShe() + "'s able to wipe off most of the fluid with " + c.hisHer() + " fingers and dispose of it by licking them clean, but the wet spot on the front of " + c.hisHer() + " dress won't go away.  " + c.HeShe() + " tries to cover " + c.himHer() + "self as " + c.heShe() + " gets out from under the table and reclaims " + c.hisHer() + " seat, but the scattered chuckling from the surrounding tables makes it clear that " + c.heShe() + "'s failed.\n\n");
                                        c.say(t, "(They all know what the chairman was doing with me.  And yet... none of them seem to care...)");
                                        Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.SHAME, Project.Emotion.SHAME);
                                    }
                                }
                                else {
                                    this.append(t, "The shock of it reminds " + c.mainName + " of the situation, and " + c.heShe() + " desperately gulps down every spurt, knowing that even a few drops leaking from " + c.hisHer() + " lips would result in an incredibly obvious spatter on " + c.hisHer() + " black dress.  After the chairman finishes, " + c.mainName + " waits a full minute before attempting to stealthily reclaim " + c.hisHer() + " seat.  But when " + c.heShe() + " looks at the surrounding tables, " + c.heShe() + " can see several guests glancing in " + c.hisHer() + " direction, and they seem to be laughing at " + c.hisHer() + " expense.  " + c.HeShe() + " feels compelled to defend " + c.hisHer() + " honor to the chairman.\n\n");
                                    c.say(t, "\"Th-There!  I went out of my way to satisfy you.  I expect that you'll put a similar level of effort into helping the public.  I certainly didn't enjoy that one bit!\"");
                                    Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.mainName) + " keeps moving " + c.hisHer() + " head with every spurt it releases, encouraging the chairman to fuck " + c.hisHer() + " throat.  Once he's finished, " + c.mainName + " triumphantly stands up, wiping the white fluid off " + c.hisHer() + " smiling lips.  The chairman's grunts of pleasure mean that the guests at several other tables are already staring at " + c.mainName + ", but " + c.heShe() + "'s too turned on to care.  Even the chairman is taken aback by how brazen " + c.heShe() + " is.\n\n");
                                c.say(t, "\"Now that I think about it, I don't mind if you call me a slut.  I don't need your respect.  After all, I just want to make everybody happy.\"");
                                Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                            }
                            this.save.saveScene(33, c.mainName, "At a high-class charity dinner, " + c.mainName + " is given the chance to help even more people by using " + c.hisHer() + " sexual skills.");
                            break Label_47698;
                        }
                        if (this.getCast()[i].morality > 66) {
                            c = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id == 1) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] array2 = new String[5];
                            array2[0] = c.mainName;
                            final String[] nameDisplay = array2;
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    this.append(t, String.valueOf(c.givenName) + " has been getting addicted to the feeling of power " + c.heShe() + " gets when " + c.heShe() + " forces Thralls to cum before they're ready.  " + c.HeShe() + " loves the way that " + c.heShe() + " can make them moan and spasm with just the slightest movement of " + c.hisHer() + " hand.  On a whim, " + c.heShe() + " picks out one of " + c.hisHer() + " friends - a rare boy who hasn't shown any sexual interest in " + c.himHer() + " - and maneuvers him into " + c.hisHer() + " room alone.  He's reluctant, but his body can't help but respond to " + c.givenName + "'s touch.\n\n");
                                    c.say(t, "\"It's pretty small, even when it's hard.  Is that why you were afraid to show me?  Hah!\"");
                                }
                                else {
                                    this.append(t, "One of " + c.givenName + "'s fans meets with " + c.himHer() + " backstage at a public event and confesses his feelings for " + c.himHer() + ".  It isn't an uncommon occurrence, but this fan is more bold than most, as he goes so far as to beg for a handjob from " + c.himHer() + ".  At one point, " + c.givenName + " would have just laughed in his face.  But " + c.heShe() + "'s been becoming more and more willing to do sexual things lately, and " + c.heShe() + " has to admit to " + c.himHer() + "self that the guy is cute.\n\n");
                                    c.say(t, "\"I don't have anything better to do, so I suppose this is your lucky day.\"");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.givenName) + " wants to improve " + c.hisHer() + " ability to pacify Thralls using sexual methods, but " + c.heShe() + " knows that " + c.heShe() + " can't practice without a willing partner.  However, when " + c.heShe() + " notices one of " + c.hisHer() + " friends stealing lustful glances in " + c.hisHer() + " direction, " + c.heShe() + " decides that " + c.heShe() + " can't pass up this opportunity.\n\n");
                                c.say(t, "\"You're aroused, and I need experience.  We might as well solve both our problems at once.\"");
                            }
                            this.append(t, "\n\nBefore long, " + c.givenName + " has " + c.hisHer() + " partner on his back, erect cock pointing up at the ceiling.  " + c.givenName + " wraps " + c.hisHer() + " fingers around the shaft, sliding them up and down.  " + c.HeShe() + " smirks as it grows even harder under " + c.hisHer() + " touch, then starts to move " + c.hisHer() + " hand faster and faster.  But then " + c.heShe() + " slows down again.  " + c.HeShe() + " switches hands.  " + c.HeShe() + " squeezes the base hard enough to cause a wince of pain, then changes to using such a light touch that " + c.heShe() + "'s practically just trailing " + c.hisHer() + " fingers up and down the underside, practically tickling it.  Then it's back to stroking the shaft, except this time " + c.heShe() + "'s rubbing the palm of " + c.hisHer() + " other hand against the tip, staring into his eyes as " + c.heShe() + " gauges his reaction.\n\n");
                            this.append(t, "Some of the techniques are more effective than others, and the constantly-changing stimulation prevents " + c.givenName + "'s partner (or perhaps " + c.hisHer() + " victim?) from quite reaching orgasm.  As the sensations grow almost painful, he groans and tries to close his legs, but " + c.givenName + " won't let him, pushing his legs up over his head and kneeling on his thighs in order to keep them there.  ");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    this.append(t, "In order to finish him off, " + c.givenName + " decides to go all-out.  " + c.HeShe() + " starts to tease the guy's anus with one finger, pressing on it in time with every pump of his cock.  Then, abruptly, " + c.heShe() + " pushes it inside.\n\n");
                                    c.say(t, "\"My finger isn't long enough to reach your prostate, but it seems that even this much pressure is enough.\"");
                                }
                                else {
                                    this.append(t, "The vulnerable position gives " + c.givenName + " an opportunity to try another technique " + c.heShe() + "'s heard about.  " + c.HeShe() + " puts one finger into " + c.hisHer() + " mouth to wet it thoroughly.  Then, even as " + c.heShe() + " jerks off the guy's penis, " + c.heShe() + " pushes the finger into the anus underneath.  However, " + c.heShe() + "'s still surprised by the sudden cry of pleasure and the way that the penis starts suddenly bucking into " + c.hisHer() + " hand as if trying to fuck it.\n\n");
                                    c.say(t, "\"Is this really all it takes?\"");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.givenName) + " is amused by the humiliating position, and " + c.heShe() + " decides to pull a little prank by shoving a finger up the guy's ass.  However, " + c.heShe() + "'s surprised at the lewd moan " + c.heShe() + " gets in response.\n\n");
                                c.say(t, "\"Wait, you're enjoying this?  You're super perverted after all!\"");
                            }
                            Label_4576: {
                                if (c.timesFantasized() > 0) {
                                    if (!c.cVirg) {
                                        this.append(t, "\n\nWhen " + c.givenName + " sees the pre-cum dribbling from the cock's tip, " + c.hisHer() + " eyes glaze over and " + c.hisHer() + " lust begins to grow, soon overwhelming " + c.hisHer() + " ability to contain it.  " + c.HeShe() + " slides back down to the floor, guides the spasming cock into " + c.hisHer() + " mouth, then uses " + c.hisHer() + " newly-freed hand to ");
                                        if (!c.gender.equals("female")) {
                                            this.append(t, "start pumping " + c.hisHer() + " own cock - but with much more purposeful, steady motions than the one " + c.heShe() + " had been using on the one now in " + c.hisHer() + " mouth.  ");
                                        }
                                        else {
                                            this.append(t, "start hurriedly rubbing " + c.hisHer() + " clit.  ");
                                        }
                                        this.append(t, "The two of them cum together, " + c.givenName + "'s eyes rolling upward with ecstasy as " + c.heShe() + " swallows every last drop.\n\n");
                                        Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
                                        if (c.morality <= 66) {
                                            if (c.morality <= 33) {
                                                c.say(t, "(Amazing... I want to rape him even more...!)");
                                            }
                                            else {
                                                c.say(t, "(I should do this more often...)");
                                            }
                                        }
                                        else {
                                            c.say(t, "(I love... making people happy...)");
                                        }
                                        break Label_4576;
                                    }
                                }
                                this.append(t, "\n\nWhen " + c.givenName + " curls " + c.hisHer() + " finger, " + c.hisHer() + " partner gives one last helpless cry, then cums all over himself, gasping and shuddering in the afterglow.  " + c.givenName + " looks down at him with a faintly dissatisfied expression.\n\n");
                                c.say(t, "\"");
                                Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                if (c.morality <= 66) {
                                    if (c.morality <= 33) {
                                        c.say(t, "I didn't give you permission to finish.  Looks like I need to punish you.");
                                    }
                                    else {
                                        c.say(t, "That was too easy.");
                                    }
                                }
                                else {
                                    c.say(t, "Tell me the truth.  Is this what you wanted from me all along?");
                                }
                                c.say(t, "\"");
                            }
                            String description = "";
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    description = String.valueOf(c.mainName) + " pressures one of " + c.hisHer() + " friends into a sexual situation.";
                                }
                                else {
                                    description = "In order to satisfy " + c.hisHer() + " lewd curiosity, " + c.mainName + " services one of " + c.hisHer() + " friends.";
                                }
                            }
                            else {
                                description = String.valueOf(c.mainName) + " enlists a friend in order to practice " + c.hisHer() + " sexual techniques.";
                            }
                            this.save.saveScene(34, c.mainName, description);
                            break Label_47698;
                        }
                        if (this.getCast()[i].confidence > 66) {
                            c = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id == 2) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] array3 = new String[5];
                            array3[0] = c.mainName;
                            final String[] nameDisplay = array3;
                            this.append(t, "Backstage at a public event, " + c.mainName + " has been cornered alone in a room with an overly pushy fan.  Under normal circumstances, " + c.heShe() + " could have called for security, or simply used " + c.hisHer() + " Chosen powers to fend the regular human off.  However, the fan is brandishing his phone at " + c.himHer() + ", and the video being played on it gives " + c.mainName + " pause.\n\n");
                            this.append(t, "\"");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    this.append(t, "You're supposed to be pretty smart.  You should know what will happen to the size of your fanbase once people have seen you on your knees sucking and jerking off as many Thralls as you can.\"\n\n");
                                    this.append(t, "There's a long pause as " + c.mainName + " stares back at the him, lips pursed with annoyance.  Finally, " + c.heShe() + " finishes thinking it over and responds.\n\n");
                                    c.say(t, "\"It would remain at about the same size, I imagine.  Those who find such behavior distasteful would be replaced by those who find it enticing.  However... I would still prefer to avoid that.  I will do as you say, so long as your demands are not too... extreme.\"\n\n");
                                }
                                else {
                                    this.append(t, "And before you try to just smash my phone or arrest me or whatever, you'd better know that I've got a dead man's switch set up.  If you don't make me happy, then every fan site in Japan is going to be watching you suck Thrall cock.\"\n\n");
                                    this.append(t, "As angry as " + c.mainName + " is about being blackmailed, " + c.heShe() + " believes that there's no point in being one of the Chosen if " + c.heShe() + " can't inspire people's admiration and respect.  " + c.HeShe() + " sullenly tosses " + c.hisHer() + " head and looks away.\n\n");
                                    c.say(t, "\"Ugh...  Fine, do whatever you want...\"\n\n");
                                }
                            }
                            else {
                                this.append(t, "You always pretend to be so pure and innocent, but you're just another cocksucker.  What would your family say if they saw this?\"\n\n");
                                this.append(t, "The video is grainy and unsteady, and even someone who knew " + c.mainName + " well might not be able to tell that " + c.mainName + " is sexually servicing the Thralls rather than fighting them.  But " + c.mainName + " still feels uncomfortable with what " + c.heShe() + " was forced to do, and that insecurity makes " + c.himHer() + " overly eager to cover it all up.\n\n");
                                c.say(t, "\"P-Please, don't let anyone else see!  I'll do whatever you say!\"\n\n");
                            }
                            this.append(t, "At the fan's direction, " + c.mainName + " ");
                            Label_5417: {
                                if (!c.bottomAccess.equals("up")) {
                                    if (!c.bottomAccess.equals("down")) {
                                        this.append(t, "pulls off " + c.hisHer() + " " + c.bottomDesc() + " just enough to ");
                                        break Label_5417;
                                    }
                                }
                                this.append(t, "pulls " + c.hisHer() + " " + c.bottomDesc() + " " + c.bottomAccess + " and then proceeds to ");
                            }
                            if (!c.underType.equals("none")) {
                                this.append(t, "slide down " + c.hisHer() + " panties, showing off " + c.hisHer() + " bare ass.  ");
                            }
                            else {
                                this.append(t, "bend over and show off " + c.hisHer() + " bare ass.  The fan approves of " + c.hisHer() + " lack of panties.");
                            }
                            this.append(t, "It isn't a surprise when " + c.mainName + " hears the fan unzipping his own pants and starting to masturbate, but when " + c.heShe() + " hears the fan approaching from behind, " + c.mainName + " looks back in alarm.\n\n");
                            this.append(t, "\"Don't worry, I'm just going to rub it between your thighs.  I won't go all the way.\"\n\n");
                            String hole = "pussy";
                            if (c.gender.equals("male")) {
                                hole = "anus";
                            }
                            if (!c.vVirg) {
                                this.append(t, String.valueOf(c.mainName) + " is starting to have a hard time caring about getting raped anymore, but " + c.heShe() + " still doesn't want to let this loathsome blackmailer's cock inside " + c.himHer() + ".  In any case, ");
                            }
                            else {
                                if (!c.gender.equals("male")) {
                                    this.append(t, String.valueOf(c.mainName) + "'s blood runs cold at the thought of losing " + c.hisHer() + " virginity");
                                }
                                else {
                                    this.append(t, String.valueOf(c.mainName) + "'s blood runs cold at the thought of another guy's cock inside " + c.himHer());
                                }
                                this.append(t, ", but " + c.heShe() + " tells " + c.himHer() + "self that that won't happen.  After all, ");
                            }
                            this.append(t, String.valueOf(c.heShe()) + " knows that " + c.hisHer() + " Sexual Barrier will prevent penetration.  However, the feeling of the fan's warm, smooth cock thrusting between " + c.hisHer() + " tightly-clenched thighs still causes " + c.himHer() + " to jump in alarm, and then " + c.heShe() + " gasps in unwilling pleasure when it starts to rub " + c.hisHer() + " ");
                            if (!c.gender.equals("female")) {
                                this.append(t, "own penis");
                            }
                            else {
                                this.append(t, "clit");
                            }
                            this.append(t, ".  It makes it hard to focus.\n\n");
                            this.append(t, "The man behind " + c.mainName + " pushes his hips forward and back, just like he's actually fucking " + c.himHer() + ".  Just when " + c.mainName + " thinks " + c.heShe() + "'s gotten used to it, " + c.heShe() + " feels rough hands groping " + c.hisHer() + " chest");
                            if (!c.gender.equals("male")) {
                                this.append(t, ", squeezing " + c.hisHer() + " breasts under " + c.hisHer() + " " + c.topDesc() + " and then pinching " + c.hisHer() + " nipples between thumb and forefinger.\n\n");
                            }
                            else {
                                this.append(t, " as if fondling a woman's breasts, seeking out " + c.hisHer() + " nipples under " + c.hisHer() + " " + c.bottomDesc() + " and firmly pinching them.\n\n");
                            }
                            c.say(t, "\"");
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    c.say(t, "Gh...  You dirty... piece of... gaaah!");
                                }
                                else {
                                    c.say(t, "Not so... rough...!  Nnah!");
                                }
                            }
                            else {
                                c.say(t, "It hurts... please, sto-oooh!");
                            }
                            c.say(t, "\"\n\n");
                            this.append(t, "The fan shuts " + c.himHer() + " up with a sharp slap on " + c.hisHer() + " bottom.  The impact is painful, but more shamefully, it also feels somehow good.  Between the direct stimulation down below, the jolts that run through " + c.hisHer() + " whole body with every tug on " + c.hisHer() + " nipples, and the occasional shocking spank, " + c.heShe() + "'s getting more and more turned on.  " + c.HeShe() + " can't stop thinking about whether " + c.hisHer() + " resentment toward this man might cause " + c.hisHer() + " Sexual Barrier to fail - and a part of " + c.himHer() + " even wishes it would.\n\n");
                            this.append(t, "As the thrusts get harder and faster, the man's pelvis slamming against " + c.hisHer() + " butt again and again, " + c.mainName + " reaches back and ");
                            if (!c.gender.equals("male")) {
                                this.append(t, "covers " + c.hisHer() + " crotch with one hand.  The touch makes " + c.himHer() + " shiver with pleasure, and " + c.heShe() + " can feel " + c.hisHer() + " wetness dripping between " + c.hisHer() + " fingers");
                            }
                            else {
                                this.append(t, "covers " + c.hisHer() + " anus with " + c.hisHer() + " fingers.  The feeling of being touched back there causes " + c.himHer() + " to shiver and " + c.hisHer() + " penis to twitch");
                            }
                            this.append(t, ", but " + c.heShe() + " won't admit to him (or to " + c.himHer() + "self) that " + c.heShe() + "'s feeling good.  " + c.HeShe() + " glares back at him, clenching " + c.hisHer() + " teeth.\n\n");
                            c.say(t, "\"");
                            if (c.confidence <= 66) {
                                if (c.confidence <= 33) {
                                    c.say(t, "If you didn't have that video... I-I'd...!");
                                }
                                else {
                                    c.say(t, "Stop trying to make me... enjoy it...!  I-It isn't working...!");
                                }
                            }
                            else {
                                c.say(t, "If you put it inside... I swear I'll... kill...!");
                            }
                            c.say(t, "\"\n\n");
                            this.append(t, "One last spank causes " + c.mainName + " to whine and shudder, limbs seizing up.  ");
                            Label_7092: {
                                if (!c.vVirg) {
                                    if (!c.gender.equals("male")) {
                                        this.append(t, String.valueOf(c.HisHer()) + " hand slips away, and the man takes the opportunity to ram himself balls-deep inside " + c.himHer() + ".  With " + c.hisHer() + " folds squeezing down on it, the man's cock cums instantly, shooting spurt after spurt of hot cum directly into " + c.hisHer() + " womb.  ");
                                        break Label_7092;
                                    }
                                }
                                Label_7002: {
                                    if (c.vVirg) {
                                        if (!c.aVirg) {
                                            if (!c.gender.equals("male")) {
                                                break Label_7002;
                                            }
                                        }
                                        this.append(t, "The extra stimulation causes the man to climax.  He pulls back as his cock erupts, shooting spurts of white cum all over " + c.mainName + "'s ass.  ");
                                        break Label_7092;
                                    }
                                }
                                this.append(t, String.valueOf(c.HisHer()) + " hand slips away, and the man takes the opportunity to bury himself deep inside " + c.mainName + "'s loosened, experienced asshole.  He climaxes instantly, filling " + c.mainName + "'s belly with a torrent of pungent cum.  ");
                            }
                            this.append(t, "When " + c.mainName + " comes to " + c.hisHer() + " senses, " + c.hisHer() + " attacker is gone - having decided to make himself scarce before " + c.mainName + " could get angry.  " + c.mainName + " stands up shakily, wiping " + c.himHer() + "self clean and trying to get " + c.hisHer() + " clothes back in order.\n\n");
                            c.say(t, "\"");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.SHAME, Project.Emotion.SHAME);
                                    c.say(t, "I must... try to avoid remembering this incident...  Yes, act as though it never happened.");
                                }
                                else {
                                    Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                    c.say(t, "I wonder if he'll force me to do more with him...  Hmph, of course, it's not as if I hope he will!");
                                }
                            }
                            else {
                                Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
                                c.say(t, "I feel... really funny.  That jerk must've given me a drug or something when I was distracted...");
                            }
                            c.say(t, "\"");
                            String description2 = "";
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    description2 = "Now that " + c.mainName + " is more comfortable with sexual activities, a fan finds it easy to pressure " + c.himHer() + " into pleasuring him.";
                                }
                                else {
                                    description2 = "Preying on " + c.mainName + "'s hunger for fame, a malicious fan forces " + c.himHer() + " to service him in exchange for keeping a video private.";
                                }
                            }
                            else {
                                description2 = "The gullible " + c.mainName + " is tricked into doing sexual favors.";
                            }
                            this.save.saveScene(35, c.mainName, description2);
                            break Label_47698;
                        }
                        if (this.getCast()[i].dignity > 66) {
                            c = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id == 3) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] array4 = new String[5];
                            array4[0] = c.mainName;
                            final String[] nameDisplay = array4;
                            if (c.dignity <= 66) {
                                if (c.dignity <= 33) {
                                    if (!c.mStart) {
                                        this.append(t, String.valueOf(c.mainName) + " has never really minded the way that the public views " + c.himHer() + " as a sex object.  However, with " + c.hisHer() + " recent string of humiliating showings in battle, they've also been looking down on " + c.himHer() + " and even trying to sexually harass " + c.himHer() + " at public events.  It's become annoying enough to make " + c.himHer() + " try to figure out some way of stopping it.  On a whim, " + c.heShe() + " decides to try using paint to draw a swimsuit under " + c.hisHer() + " clothes so that it's not so obvious when " + c.heShe() + "'s been stripped, and " + c.heShe() + " likes the result.\n\n");
                                    }
                                    else {
                                        this.append(t, String.valueOf(c.mainName) + " has never paid much attention to " + c.hisHer() + " public image, but " + c.heShe() + " still noticed the change when photographs of " + c.hisHer() + " private places started getting spread around online.  The sudden increase in sexual harassment " + c.heShe() + " started receiving at public events was annoying enough to make " + c.himHer() + " try to figure out some way of stopping it.  On a whim, " + c.heShe() + " decides to try using paint to draw a swimsuit under " + c.hisHer() + " clothes, and " + c.heShe() + " likes the result.\n\n");
                                    }
                                    if (!c.underType.equals("none")) {
                                        c.say(t, "\"It feels so much less stuffy!  Maybe I'll just stop wearing panties at all.");
                                    }
                                    else {
                                        c.say(t, "\"Nice!  You can't even tell that I'm not wearing panties!");
                                    }
                                }
                                else {
                                    this.append(t, "After seeing so much public ridicule of " + c.himHer() + ", " + c.mainName + " knows that " + c.heShe() + " must have done a bad thing by letting " + c.himHer() + "self get stripped in battle.  However, " + c.heShe() + " doesn't really understand why.  " + c.HeShe() + " figures that " + c.heShe() + " can fix everything by wearing a swimsuit made of bodypaint under " + c.hisHer() + " Chosen garb, so that even when " + c.heShe() + " gets stripped, no one can really see anything.\n\n");
                                    c.say(t, "\"It covers more than some other swimsuits I've worn, so it should be totally fine!");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.mainName) + " has always been desperate for attention, praise, and approval from the public.  " + c.HeShe() + "'s still embarrassed about the photographs of " + c.hisHer() + " panties being stripped off in battle, and whenever " + c.heShe() + " checks " + c.hisHer() + " social media accounts, some perverted fan is always reminding " + c.himHer() + " of it.  Desperate for a way to avoid facing more humiliation, " + c.heShe() + " starts wearing a layer of bodypaint across " + c.hisHer() + " torso, as this is the only kind of covering that won't be destroyed by " + c.hisHer() + " transformation.\n\n");
                                c.say(t, "\"No one will be able to see anything... right...?");
                            }
                            c.say(t, "\"\n\n");
                            this.append(t, "That evening, after finishing " + c.hisHer() + " solo patrol for the day, " + c.mainName + " forgets where " + c.hisHer() + " closest stash of civilian clothes is.  However, " + c.heShe() + " realizes that because " + c.heShe() + "'s wearing the bodypaint, it doesn't matter that transforming back into " + c.hisHer() + " civilian form will cause " + c.hisHer() + " Chosen garb to vanish.  With a flash of light, " + c.heShe() + " returns to being");
                            if (!c.givenName.equals(c.mainName)) {
                                this.append(t, " an effectively-naked " + c.givenName + ".");
                            }
                            else {
                                this.append(t, " an effectively-naked regular person.");
                            }
                            this.append(t, "  Unbeknownst to " + c.himHer() + ", the paint has already begun to smear during the day's activities, and the pink of " + c.hisHer() + " skin is plainly visible around " + c.hisHer() + " chest and crotch.  Several times on " + c.hisHer() + " way home, policemen start to approach in order to bring " + c.himHer() + " in for public indecency, but when they recognize " + c.himHer() + " as one of the Chosen, they realize that they have no power to arrest " + c.himHer() + ", and so they just let " + c.himHer() + " walk by.\n\n");
                            if (c.confidence <= 66) {
                                if (c.confidence <= 33) {
                                    this.append(t, String.valueOf(c.givenName) + " is deeply uncomfortable with the way that everyone seems to be paying more attention to " + c.himHer() + ", and " + c.heShe() + " starts to suspect that the paint isn't working after all.  Several people seem to recognize " + c.himHer() + ", pointing and whispering to their friends, and taking photos and video.  " + c.HeShe() + " tries to walk more quickly, but it's hard to do that while also ");
                                    if (!c.gender.equals("female")) {
                                        this.append(t, "using both hands to cover " + c.hisHer() + " penis, which is rapidly starting to stiffen up for reasons " + c.heShe() + " can't understand.\n\n");
                                    }
                                    else {
                                        this.append(t, "clenching one hand tightly between " + c.hisHer() + " thighs and using the other to cover " + c.hisHer() + " chest.\n\n");
                                    }
                                    c.say(t, "\"They can tell...  They can totally all tell...!");
                                }
                                else {
                                    this.append(t, "At first, " + c.givenName + " is worried that people might be able to tell that " + c.heShe() + "'s not actually wearing anything.  But " + c.heShe() + "'s distracted by all the fans recognizing " + c.himHer() + " on the street smiling brightly as they ask " + c.himHer() + " to do simple tasks for them, encouraging " + c.himHer() + " with effusive praise as " + c.heShe() + " complies.  An old man drops his wallet at " + c.hisHer() + " feet, then leans around to look at " + c.himHer() + " from behind when " + c.heShe() + " bends to pick it up.  A crowd of fans closes in around " + c.himHer() + " with a flurry of questions, but they're too busy leering down at " + c.himHer() + " to hear the answers.  One fan asks " + c.himHer() + " to pose for some close-up pictures, zooming in on " + c.hisHer() + " body.\n\n");
                                    c.say(t, "\"Okay, I can do that pose!  Double peace!");
                                }
                            }
                            else {
                                this.append(t, "Of course, " + c.givenName + " is compeltely confident in " + c.hisHer() + " painting abilities, and so " + c.heShe() + " doesn't even entertain the thought that people might realize " + c.heShe() + "'s naked.  When a greater-than-usual number of people seem to recognize " + c.himHer() + " on the street, taking pictures and asking for autographs, " + c.heShe() + " just assumes that word of " + c.hisHer() + " power and awesomeness is finally spreading.  Even when one man compliments " + c.himHer() + " on " + c.hisHer() + " swimsuit and gets down on his knees to take a closer look, " + c.givenName + " doesn't question it.\n\n");
                                c.say(t, "\"Ah, your breath feels...  Y-You can take an even closer look, if you want...");
                            }
                            c.say(t, "\"\n\n");
                            this.append(t, String.valueOf(c.HeShe()) + " starts to sweat, and the paint runs down " + c.hisHer() + " body.  Finally, one pervert is so overwhelmed by the sight that he rushes forward, ");
                            if (!c.gender.equals("male")) {
                                this.append(t, "squeezing " + c.hisHer() + " breasts from behind");
                            }
                            else {
                                this.append(t, "pinching " + c.hisHer() + " ass");
                            }
                            this.append(t, " and then sprinting away.  " + c.givenName + " gives chase, ");
                            Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    this.append(t, "shoving the pervert to the ground.  The pervert's erect cock slips free of his open zipper, and " + c.givenName + " stomps on it, eager to punish him for attacking " + c.himHer() + ".\n\n");
                                    this.append(t, "However, " + c.givenName + " is used to having the strength of one of the Chosen, and without " + c.hisHer() + " transformation, " + c.heShe() + "'s a lot less strong.  " + c.HeShe() + " had intended to crush the offending member, but the feeling of " + c.hisHer() + " bare foot on the pervert's cock just makes him groan and buck his hips.  " + c.givenName + " frowns with consternation and leans further forward, squeezing the pervert's cock even more.  Finally, with his eyes fixed on ");
                                    if (!c.gender.equals("male")) {
                                        this.append(t, String.valueOf(c.givenName) + "'s damp slit, almost completely free of paint now");
                                    }
                                    else {
                                        this.append(t, "the way " + c.givenName + "'s toes are wrapped around his glans");
                                    }
                                    this.append(t, ", the pervert reaches orgasm, cumming all over himself and causing " + c.givenName + " to step back in startlement.\n\n");
                                    c.say(t, "\"Ugh, you got it all over my foot!  Whatever, I see that the cops are coming to get you.  I hope that was worth it, jerk!");
                                }
                                else {
                                    this.append(t, "tackling him to the ground and trying to wrestle him into submission.  However, in " + c.hisHer() + " civilian form, " + c.givenName + " isn't much stronger than a normal person.  " + c.HeShe() + " has to rely on " + c.hisHer() + " combat training to get the upper hand, and it becomes much harder to remember that when " + c.heShe() + " feels the pervert's cock slip out of his pants and against " + c.givenName + "'s ");
                                    if (!c.gender.equals("male")) {
                                        this.append(t, "bare slit.\n\n");
                                    }
                                    else {
                                        this.append(t, "own penis.\n\n");
                                    }
                                    this.append(t, "They wrestle like that for awhile, the pervert humping against " + c.givenName + " while " + c.givenName + " gasps and sweats, reflexively grinding against the pervert in turn.  The crowd of bystanders grows as people are drawn by the sight of the naked " + c.givenName + " squirming atop " + c.hisHer() + " opponent.  Finally, the pervert cums all over " + c.givenName + "'s belly and chest, and in his afterglow, he's easily subdued.  " + c.givenName + " forces him to his feet and starts marching him toward the nearest police officer.\n\n");
                                    c.say(t, "\"Ew, you smeared it all over me!  Now I look like some sort of weirdo who does perverted stuff in public!");
                                }
                            }
                            else {
                                this.append(t, "but when " + c.heShe() + " catches up, the pervert falls to his knees and apologizes profusely, claiming that seeing " + c.givenName + "'s body made him lose control.  " + c.givenName + " is caught off-guard, and " + c.heShe() + " feels guilty about tempting him.\n\n");
                                this.append(t, "In the end, the pervert talks " + c.givenName + " into accompanying him into a dark alleyway and striking various poses while the pervert masturbates to " + c.himHer() + ".  When " + c.givenName + " spreads " + c.hisHer() + " ");
                                if (!c.gender.equals("male")) {
                                    this.append(t, "pussy");
                                }
                                else {
                                    this.append(t, "anus");
                                }
                                this.append(t, " wide open, the pervert finally cums all over " + c.himHer() + ", his seed dribbling down the faded remnants of " + c.givenName + "'s painted-on swimsuit.\n\n");
                                c.say(t, "\"Your thing still looks really swollen and painful...  Um, I can keep sitting here if you wanna do that again...");
                                Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
                            }
                            c.say(t, "\"");
                            String description = "";
                            if (c.dignity <= 66) {
                                if (c.dignity <= 33) {
                                    description = "Rather than having to worry about keeping " + c.himHer() + "self covered in front of the cameras, " + c.mainName + " tries turning to bodypaint instead, with mixed results.";
                                }
                                else {
                                    description = "Bothered by the embarrassment of being exposed in public, " + c.mainName + " assuages " + c.hisHer() + " feelings with a thin layer of bodypaint.";
                                }
                            }
                            else {
                                description = String.valueOf(c.mainName) + " tries to use bodypaint to protect " + c.hisHer() + " modesty, only to end up putting on an even bigger show.";
                            }
                            this.save.saveScene(36, c.mainName, description);
                            break Label_47698;
                        }
                        if (this.getCast()[i].innocence > 66) {
                            c = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id == 4) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] array5 = new String[5];
                            array5[0] = c.mainName;
                            final String[] nameDisplay = array5;
                            if (!c.mStart) {
                                this.append(t, String.valueOf(c.mainName) + " has always embraced the way that the public views " + c.himHer() + " as a sex symbol, but until recently, " + c.heShe() + "'s always insisted on showing " + c.himHer() + "self off on " + c.hisHer() + " own terms.  It's only recently that the public's ridicule has started to have any effect at all on " + c.himHer() + ", prompting " + c.himHer() + " to consent to a professional photoshoot handled by a propaganda agency.  ");
                            }
                            else {
                                this.append(t, "Until recently, " + c.mainName + " didn't listen at all when " + c.hisHer() + " publicity team advised " + c.himHer() + " to win more fans by playing up " + c.hisHer() + " sex appeal.  However, now that the pictures of " + c.himHer() + " being stripped during battle are a common topic of conversation among " + c.hisHer() + " fans already, " + c.heShe() + " figures that " + c.heShe() + " has nothing more to lose by scheduling a risque photoshoot with a professional propaganda agency.  ");
                            }
                            if (c.dignity <= 66) {
                                if (c.dignity <= 33) {
                                    this.append(t, String.valueOf(c.HeShe()) + "'s never paid much attention to " + c.hisHer() + " wardrobe, wearing whatever clothes are comfortable for the weather regardless of how they look.  However, " + c.heShe() + "'s told that the agency will prepare suitable clothes for the shoot.\n\n");
                                    this.append(t, "When " + c.heShe() + " arrives, " + c.heShe() + "'s surprised at just how skimpy the first outfit is.  The white tanktop is sheer enough that " + c.hisHer() + " nipples are plainly visible, and the miniskirt is really more of a belt, barely wide enough to cover " + c.hisHer() + " privates.  " + c.HeShe() + " doesn't actually mind showing off " + c.hisHer() + " body, though, so " + c.heShe() + " wears it without complaint, not even realizing that the plan was for " + c.himHer() + " to put on some underwear first.  The photographers decide not to correct " + c.himHer() + ".\n\n");
                                    c.say(t, "\"Stop staring and start taking pictures.");
                                }
                                else {
                                    this.append(t, String.valueOf(c.HeShe()) + " offers to bring some of " + c.hisHer() + " fancier clothes, but the agency informs " + c.himHer() + " that they have the themes and outfits for the photoshoot planned out, so " + c.heShe() + " leaves them at home.\n\n");
                                    this.append(t, "The theme for the first part of the shoot is '" + c.mainName + " at home'.  At first, " + c.heShe() + "'s almost disappointed at the apparent modesty of the long t-shirt they give " + c.himHer() + " to wear, but after " + c.heShe() + " puts it on, " + c.heShe() + " notices the way it billows and flips up around " + c.hisHer() + " thighs, and how its neck is so loose that it always slips down off one shoulder.  It seems practically designed to show off more than it covers, especially since " + c.heShe() + "'s instructed not to wear anything underneath.\n\n");
                                    c.say(t, "\"So, I should pose like I'm just waking up?");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.HeShe()) + " shows up at the studio with dozens of changes of clothes - a small fraction of " + c.hisHer() + " total wardrobe, the grandest and most expensive of the lot.\n\n");
                                this.append(t, "The photoshoot starts with " + c.mainName + " in a long, slightly sheer dress woven through with genuine gold leaf.  A one-of-a-kind garment commissioned by " + c.mainName + " specifically for " + c.himHer() + "self, the low-cut bodice is sheer enough that the bumps of " + c.hisHer() + " nipples are plainly visible, and the slit up the side of the skirt goes all the way above " + c.hisHer() + " buttocks.\n\n");
                                c.say(t, "\"It cost more money than most people ever see in their lives, but everyone will be too busy looking at me to even notice.  Funny, isn't it?");
                            }
                            c.say(t, "\"\n\n");
                            this.append(t, "The photographers have " + c.mainName + " strike numerous poses.  They have " + c.himHer() + " lean forward while they take pictures from the front, ");
                            if (!c.gender.equals("male")) {
                                this.append(t, "emphasizing " + c.hisHer() + " cleavage.  ");
                            }
                            else {
                                this.append(t, "as strange as " + c.heShe() + " still finds it that so many men enjoy " + c.hisHer() + " flat chest.  ");
                            }
                            this.append(t, "They photograph " + c.himHer() + " from behind, sometimes having " + c.himHer() + " cover " + c.himHer() + "self with an expression of false modesty, sometimes having " + c.himHer() + " act as though " + c.heShe() + "'s unaware, as if the picture were captured candidly.  As " + c.heShe() + " starts to enjoy it, they grow more bold, having " + c.himHer() + " splay " + c.hisHer() + " legs out in increasingly immodest postures, and " + c.heShe() + "'s encouraged by the photographers' obvious expressions of desire.\n\n");
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    this.append(t, "The next outfit is a black leather leotard with long boots and gloves.  " + c.mainName + " is eager to play the role of the dominatrix, and " + c.heShe() + " takes charge, picking out a few of the photographers to abuse while the others take photos.  For their part, they enjoy being stepped on by " + c.mainName + ", ridiculed and beaten lightly, and " + c.heShe() + " notices that they're all starting to show bulges in the crotches of their pants.\n\n");
                                    c.say(t, "\"Disgusting pigs.  Are you really so perverted that you even enjoy this sort of thing?  Just how am I supposed to punish you?\"\n\n");
                                    this.append(t, String.valueOf(c.HeShe()) + " enjoys it as well, face flushing with arousal as " + c.heShe() + " hears their half-pained half-pleasured moans.  " + c.HeShe() + "'s only too eager to move on to the next step.  ");
                                }
                                else {
                                    this.append(t, "As " + c.hisHer() + " enthsiasm grows, " + c.mainName + " goes off-script, taking charge of the scene.  " + c.HeShe() + " summons " + c.hisHer() + " Chosen garb and strikes some powerful, authoritative poses.  The photographers adapt, improvising several shots where they bow worshipfully at " + c.hisHer() + " feet, praising " + c.himHer() + " as their savior.\n\n");
                                    c.say(t, "\"That's right, this is how things are meant to be.\"\n\n");
                                    this.append(t, "Their motives aren't entirely pure, as they know that flattering " + c.himHer() + " will make " + c.himHer() + " more likely to accept their next requests.  ");
                                }
                            }
                            else {
                                this.append(t, "The next stage of the photoshoot is a combat scene.  Several of the photographers take the role of Thralls, grasping at " + c.mainName + "'s body while " + c.heShe() + " heroically fights them off.  At first, they just position their hands on " + c.mainName + "'s body without actually groping " + c.himHer() + ", but as it becomes apparent that " + c.heShe() + "'ll let them do as they please, they begin to squeeze and stroke in ways that obviously don't serve the purposes of the photoshoot.  " + c.mainName + " doesn't mind letting them have their fun, especially since it's starting to turn " + c.himHer() + " on as well.\n\n");
                                c.say(t, "\"You're going to go that far?  Oh, don't worry, I don't mind.\"\n\n");
                                this.append(t, "Encouraged by how permissive " + c.heShe() + " is, they decide to take things even further.  ");
                            }
                            this.append(t, String.valueOf(c.mainName) + " is asked to strip completely naked.  The photoshoot won't include any explicit shots of " + c.hisHer() + " genitals - after all, it's supposed to be merely suggestive, not pornographic - but " + c.heShe() + "'s instructed to strike several poses where " + c.heShe() + "'s just barely covering " + c.himHer() + "self, and the photographers are obviously eager to see everything with their own eyes.\n\n");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    this.append(t, "When " + c.heShe() + " asks for some pasties to cover " + c.hisHer() + " private parts, the photographers answer that " + c.heShe() + " shouldn't use any, since they could show up in a shot and render it much less titillating.  " + c.mainName + " just quirks a skeptical eyebrow, then goes through the positions with measured precision, always moving " + c.hisHer() + " hands and legs in just the right way to avoid showing even a glimpse of " + c.hisHer() + " nipples or crotch.  It's not that " + c.heShe() + " cares about showing them, but " + c.heShe() + " wants to make sure that the photographers understand that " + c.heShe() + " can't be manipulated.\n\n");
                                    c.say(t, "\"If you want to see more, you'll have to ask politely.\"\n\n");
                                }
                                else {
                                    this.append(t, "With slow, sensual, teasing movements, " + c.heShe() + " switches from position to position, moving " + c.hisHer() + " hands just slowly enough that everyone watching can catch the briefest glimpse of " + c.hisHer() + " private parts, but only barely.  " + c.HeShe() + " knows exactly what " + c.heShe() + "'s doing, and " + c.heShe() + " revels in the obvious lust building up as the cameras flash.\n\n");
                                    c.say(t, "\"Oh?  Where are you looking?\"\n\n");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.HeShe()) + " tries to use " + c.hisHer() + " hands and legs to keep " + c.himHer() + "self covered, and from " + c.hisHer() + " smug smirk, it's clear that " + c.heShe() + " thinks it's working.  But whenever " + c.heShe() + " changes positions, " + c.heShe() + " gives everyone behind " + c.himHer() + " an eyeful, and they end up taking several pictures for their own personal collections.\n\n");
                                c.say(t, "\"I bet you wanna see everything, right?  Too bad, I'm not gonna let you!\"\n\n");
                            }
                            this.append(t, "At the end of the photoshoot, several of the photographers gather around " + c.mainName + ", asking if " + c.heShe() + "'d like to accompany them to a bar or a club or something to wind down.  They don't even hide the fact that they're hungry for some hands-on experience with the body they've been photographing.  ");
                            Label_12908: {
                                if (c.vVirg) {
                                    if (!c.lustful) {
                                        Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                                        this.append(t, String.valueOf(c.mainName) + " is delighted by the attention, but " + c.heShe() + " has no interest in letting things progress any further than that.  " + c.HeShe() + " smirk over " + c.hisHer() + " shoulder as " + c.heShe() + " walks past them and leaves.\n\n");
                                        c.say(t, "\"\"");
                                        if (c.innocence > 66) {
                                            c.say(t, "Sorry, but I'm totally out of your league!");
                                            break Label_12908;
                                        }
                                        if (c.innocence <= 33) {
                                            c.say(t, "You'll have to satisfy yourselves, I'm afraid.");
                                            break Label_12908;
                                        }
                                        c.say(t, "Hah, don't get greedy!  Maybe we can do this again sometime!");
                                        break Label_12908;
                                    }
                                }
                                Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                                this.append(t, String.valueOf(c.mainName) + " licks " + c.hisHer() + " lips.\n\n");
                                c.say(t, "\"");
                                if (c.innocence <= 66) {
                                    if (c.innocence <= 33) {
                                        c.say(t, "This experience was quite... stimulating, wasn't it?  Yes, let us continue elsewhere.");
                                    }
                                    else {
                                        c.say(t, "Of course I'm taking you all with me.  And I'm not letting you go home until I'm satisfied.");
                                    }
                                }
                                else {
                                    c.say(t, "That sounds... really fun.");
                                }
                            }
                            c.say(t, "\"");
                            String description = "";
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    description = String.valueOf(c.mainName) + " uses " + c.hisHer() + " sex appeal in an attempt to win over more horny fans.";
                                }
                                else {
                                    description = "Wanting to feel better about the humiliating pictures that have been taken of " + c.himHer() + ", " + c.mainName + " allows " + c.himHer() + "self to be photographed in the nude.";
                                }
                            }
                            else {
                                description = String.valueOf(c.mainName) + " consents to participating in a sexually-charged propaganda photoshoot.";
                            }
                            this.save.saveScene(37, c.mainName, description);
                            break Label_47698;
                        }
                        if (this.getCast()[i].confidence > 66) {
                            c = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id == 5) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] array6 = new String[5];
                            array6[0] = c.mainName;
                            final String[] nameDisplay = array6;
                            this.append(t, "That evening, " + c.mainName + " is scheduled to appear at a celebrity event in order to produce positive publicity for the Chosen and reassure the public that everything is under control.  ");
                            if (c.dignity <= 66) {
                                if (c.dignity <= 33) {
                                    this.append(t, "Normally, " + c.heShe() + " doesn't have the patience for this sort of thing, but " + c.heShe() + " recognizes that it serves an important function.  " + c.HeShe() + " overcomes " + c.hisHer() + " tiredness in order to attend, and even goes as far as to put on lipstick, makeup, and nice clothes.  With a pained smile on " + c.hisHer() + " face, " + c.heShe() + " puts up with all the social niceties that are expected of " + c.himHer() + ".\n\n");
                                    c.say(t, "\"Oh, has the weather really been good?  I haven't noticed.");
                                }
                                else {
                                    this.append(t, String.valueOf(c.HeShe()) + " had been looking forward to it, but with how tired the day's activities have left " + c.himHer() + ", " + c.heShe() + "'s tempted to call it off.  In the end, " + c.hisHer() + " sense of duty wins out, and " + c.heShe() + " cleans " + c.himHer() + "self up, gets dressed, and heads to the venue.\n\n");
                                    c.say(t, "\"I really am sorry that I'm late...  No, no, it's my fault for not planning better.");
                                }
                            }
                            else {
                                this.append(t, "Even as exhausted as " + c.heShe() + " is, " + c.mainName + " still wouldn't miss it for the world.  Rubbing elbows with high-class society and hearing them tell " + c.himHer() + " that they acknowledge and appreciate " + c.hisHer() + " sacrifices is a big part of what allows " + c.himHer() + " to overcome " + c.hisHer() + " worries and doubts.  " + c.HeShe() + " always bows " + c.hisHer() + " head and replies humbly, but in " + c.hisHer() + " heart, " + c.heShe() + " finds it deeply satisfying.\n\n");
                                c.say(t, "\"My autograph?  O-Of course, I'd be delighted!");
                            }
                            c.say(t, "\"\n\n");
                            this.append(t, "More and more, the attention lavished on " + c.mainName + " at events like this has become sexual in nature, with people leering at " + c.hisHer() + " body or making crude comments that normally wouldn't be voiced in such company.  It doesn't help that the dress " + c.heShe() + "'s wearing is barely decent to be worn in public.  It's parted up the front, revealing " + c.hisHer() + " inner thighs, and completely backless.  " + c.HisHer() + " nipples are only barely covered by a loop of cloth that comes from the front of the dress up over the back of " + c.hisHer() + " neck");
                            if (!c.gender.equals("male")) {
                                this.append(t, ", so that " + c.hisHer() + " breasts feel like they're about to slip out the sides at any moment.\n\n");
                            }
                            else {
                                this.append(t, ", hanging a bit loose due to " + c.hisHer() + " flat chest.\n\n");
                            }
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    this.append(t, String.valueOf(c.mainName) + " knows exactly what sort of attention " + c.heShe() + "'s inviting by dressing like this, but " + c.heShe() + "'s decided to stop hiding from what " + c.heShe() + "'s become.  " + c.HeShe() + " knows that everyone who looks at " + c.himHer() + " will be remembering seeing the videos of " + c.himHer() + " humiliated in battle, and " + c.heShe() + " hopes that it shames them into trying to make some sacrifices of their own.  " + c.HeShe() + " even deliberately lets one nipple slip out of " + c.hisHer() + " dress, and " + c.heShe() + "'s faintly disappointed at how few people feel the need to alert " + c.himHer() + " to it.\n\n");
                                    c.say(t, "\"It's nothing you all haven't seen before.");
                                }
                                else {
                                    this.append(t, String.valueOf(c.mainName) + " is getting used to playing the part of eyecandy for the perverted old men who frequent this sort of function.  " + c.HeShe() + " allows a nipple to slip out occasionally, or sits with " + c.hisHer() + " legs just a bit apart, or eats phallic food items like sausages and bananas in the most slow, sensual fashion " + c.heShe() + " can manage.  And whenever " + c.heShe() + " catches someone appreciating the show " + c.heShe() + "'s putting on, " + c.heShe() + " meets their eye and smiles at them.  " + c.HeShe() + " tells " + c.himHer() + "self that " + c.heShe() + "'s just building good relationships and enticing them to donate more of their personal wealth to the human cause, but the truth is that " + c.heShe() + " takes an exhibitionistic thrill from behaving in ways " + c.heShe() + " had always considered forbidden.\n\n");
                                    c.say(t, "\"Ah, it slipped out again.  Silly me!");
                                }
                            }
                            else {
                                this.append(t, "A few weeks earlier, " + c.mainName + " would have blushed bright red and flatly refused to wear something so naughty, but when a local politician purchased it for " + c.himHer() + " and suggested " + c.heShe() + " wear it to the event, " + c.heShe() + " accepted without question.  And now, with the elderly politician staring at " + c.hisHer() + " chest and copping a feel as they pose for a photograph together, " + c.heShe() + " doesn't feel any of the revulsion " + c.heShe() + " once would have.  " + c.HeShe() + "'s just happy to be praised and given attention.\n\n");
                                c.say(t, "\"You're so generous, Mister!  I-If there's anything I can do to pay you back, just let me know!");
                            }
                            c.say(t, "\"\n\n");
                            this.append(t, "However, " + c.mainName + "'s socializing is cut short when an angry man pushes his way through the crowd to meet " + c.himHer() + ".  The newcomer doesn't stand out among the guests, dressed finely and with a respectable air about him, but right now his face is red with rage, and his shout immediately cuts through the babble of surrounding conversation.\n\n");
                            this.append(t, "\"My daughters have always been your biggest fans - but now they're acting like sluts!  It's your fault!  Look at yourself!\"\n\n");
                            this.append(t, "The man had intended to stop there.  But now, with " + c.mainName + "'s ostentatiously sexy form right in front of him, he's taken by the sudden desire to go further.  His arm lashes out, grabbing the front of " + c.mainName + "'s dress and ripping it right down the middle.  The flimsy garment comes apart all at once, leaving " + c.himHer() + " practically naked in the middle of the crowd.  ");
                            if (!c.gender.equals("male")) {
                                this.append(t, String.valueOf(c.HisHer()) + " bared breasts heave with a gasp");
                            }
                            else {
                                this.append(t, String.valueOf(c.HisHer()) + " smooth chest heaves with a gasp");
                            }
                            this.append(t, ", and as " + c.heShe() + " stumbles backward, everyone gets a good look at " + c.hisHer() + " ");
                            if (!c.gender.equals("male")) {
                                if (!c.gender.equals("female")) {
                                    this.append(t, "hermaphroditic genitals.\n\n");
                                }
                                else {
                                    this.append(t, "naked slit.\n\n");
                                }
                            }
                            else {
                                this.append(t, "penis and bare ass.\n\n");
                            }
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.SHAME, Project.Emotion.SHAME);
                            if (c.confidence <= 66) {
                                if (c.confidence <= 33) {
                                    this.append(t, "The humiliation of the situation, the knowledge that " + c.heShe() + "'s hurt someone, and the fact that the man's ridicule rings horribly true all crash down on " + c.mainName + " together.  Security guards step forward to wrestle the man to the ground, but the damage has already been done.  " + c.mainName + " buries " + c.hisHer() + " face in " + c.hisHer() + " hands and starts sobbing.  And when other guests crowd toward " + c.himHer() + ", attempting to help by supporting " + c.himHer() + " upright or trying to use tablecloths to cover " + c.himHer() + ", it just gives " + c.himHer() + " flashbacks to being manhandled by Thralls.  The worst part is that several of the guests are clearly enjoying the excuse to touch " + c.hisHer() + " body.  " + c.HeShe() + "'s incoherent as " + c.heShe() + "'s guided out of the room.\n\n");
                                    c.say(t, "\"I-I'm sorry...  S-S-So sorry...");
                                }
                                else {
                                    this.append(t, String.valueOf(c.mainName) + " recoils as if shocked, standing frozen even as security guards rush forward to tackle " + c.hisHer() + " attacker to the ground.  Other guests crowd around, trying to reassure " + c.himHer() + ", offering coats or tableclothes so " + c.heShe() + " can cover " + c.himHer() + "self, or discreetly taking pictures with their phones.  But " + c.mainName + " ignores all of them.  " + c.HeShe() + " can't shake off the thought that the man was completely right to criticize " + c.himHer() + ".  By tomorrow, " + c.heShe() + "'ll have come up with some more justifications to soothe " + c.hisHer() + " conscience, but for now, " + c.heShe() + " can only numbly stagger out of the room, not even bothering to hide " + c.hisHer() + " body.\n\n");
                                    c.say(t, "\"What... What am I doing here...?");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.mainName) + " reacts reflexively, delivering a closed-fist punch directly to the man's jaw.  Even without " + c.hisHer() + " powers, it's enough to knock him out cold.  However, " + c.heShe() + " immediately regrets it.  " + c.HisHer() + " fist clenches even tighter, and " + c.heShe() + " grits " + c.hisHer() + " teeth as " + c.heShe() + " looks downward in shame.  Not at " + c.hisHer() + " exposure - for " + c.heShe() + "'s stopped caring about that entirely - but at how easily " + c.heShe() + "'s provoked by mere ridicule.\n\n");
                                c.say(t, "\"I'm... becoming less of a good person.  I don't deserve your praise anymore...");
                            }
                            c.say(t, "\"");
                            String description = "";
                            if (c.confidence <= 66) {
                                if (c.confidence <= 33) {
                                    description = "Confronted with " + c.hisHer() + " betrayal of " + c.hisHer() + " once-pure public image, " + c.mainName + " flees a public event in tears.";
                                }
                                else {
                                    description = "While behaving improperly at a public event, " + c.mainName + " is stripped in front of everyone.";
                                }
                            }
                            else {
                                description = String.valueOf(c.mainName) + " is provoked into a shameful display of emotion upon being criticized for " + c.hisHer() + " public sexual behavior.";
                            }
                            this.save.saveScene(38, c.mainName, description);
                            break Label_47698;
                        }
                        if (this.getCast()[i].morality > 66) {
                            c = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id == 6) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] nameDisplay = { c.mainName, d.mainName, null, null, null };
                            this.append(t, String.valueOf(c.mainName) + " and " + d.mainName + " spend the evening relaxing together in their civilian identities");
                            Label_15695: {
                                if (c.mainName.equals(c.givenName)) {
                                    if (d.mainName.equals(d.givenName)) {
                                        this.append(t, ".  ");
                                        break Label_15695;
                                    }
                                }
                                this.append(t, " as " + c.givenName + " and " + d.givenName + ".  ");
                            }
                            this.append(t, "They dress unassumingly and wear large sunglasses in order to avoid being identified by the public as they head to the movie theater.  ");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    this.append(t, String.valueOf(c.givenName) + " has decided to take " + d.givenName + " to see a historical drama by a critically-acclaimed director.  It's only after they're both seated that " + c.givenName + " realizes that " + c.hisHer() + " choice of movie might not suit " + d.givenName + ".\n\n");
                                    c.say(t, "\"Hm.  I hope this does not bore you.\"\n\n");
                                    d.say(t, "\"");
                                    if (d.morality <= 66) {
                                        if (d.morality <= 33) {
                                            d.say(t, "W-Well... if it does... you'll make it up to me, right...?");
                                        }
                                        else {
                                            d.say(t, "I'll still be happy, a-as long as you're here...");
                                        }
                                    }
                                    else {
                                        d.say(t, "It's fine, really!  I want to understand the stuff you're always talking about, so... I'm happy with this.");
                                    }
                                    d.say(t, "\"\n\n");
                                    this.append(t, String.valueOf(c.givenName) + ", pleased with " + d.givenName + "'s answer, smiles and throws an arm around " + d.hisHer() + " shoulders as the movie starts.  It's meant to be a purely platonic, friendly gesture, but it feels very different to " + d.givenName + ".  ");
                                }
                                else {
                                    this.append(t, String.valueOf(c.givenName) + " picked out the steamiest romance movie " + c.heShe() + " could find, purely to see the effect it would have on " + d.givenName + ".  " + c.HeShe() + " isn't disappointed, as " + d.givenName + " is soon blushing, fidgeting, and trying to hide sidelong glances in " + c.givenName + "'s direction.  " + c.givenName + " pulls " + d.givenName + " to " + c.himHer() + " with an arm around " + d.hisHer() + " shoulders, leaning in with a slightly mischievous smirk.\n\n");
                                    c.say(t, "\"What's wrong, " + d.givenName + "?  Do we need to leave early?\"\n\n");
                                    if (d.dignity <= 66) {
                                        if (d.dignity <= 33) {
                                            d.say(t, "Um, seeing this is just making me think about doing some really naughty things... with you...");
                                        }
                                        else {
                                            d.say(t, "Y-You're making fun of me, aren't you...?");
                                        }
                                    }
                                    else {
                                        d.say(t, "N-N-Nothing's wrong!  I-I'm perfectly fine!");
                                    }
                                    d.say(t, "\"");
                                    this.append(t, String.valueOf(c.givenName) + " laughs and hugs " + d.himHer() + " closer.  ");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.givenName) + " has picked out the most popular recent superhero flick for them to watch, and " + c.heShe() + " quickly gets caught up in it, frequently jumping out of " + c.hisHer() + " seat in enthusiasm, much to " + d.givenName + "'s amusement.\n\n");
                                c.say(t, "\"Yeah!  Pow!  Punch him right into the center of the Earth!\"\n\n");
                                d.say(t, "\"");
                                if (d.dignity <= 66) {
                                    if (d.dignity <= 33) {
                                        d.say(t, "Y-Yeah, get him!");
                                    }
                                    else {
                                        d.say(t, "I wish I could be as carefree as " + c.givenName + "...");
                                    }
                                }
                                else {
                                    d.say(t, "Um, " + c.givenName + ", you're bothering the other...  Ah, never mind, as long as you're happy...");
                                }
                                d.say(t, "\"\n\n");
                                this.append(t, "However, by the second half of the movie, the action has died down and there are several dialogue scenes in a row which make no sense to anyone who hasn't read the comic books.  " + c.givenName + " leans back, yawning with boredom, and carelessly throws an arm around " + d.givenName + "'s shoulders.  " + c.HeShe() + " doesn't put any thought into the gesture, and " + c.heShe() + " doesn't even notice the effect it has on " + d.givenName + ".  ");
                            }
                            this.append(t, "It's practically impossible for " + d.givenName + " to focus on the movie, and as they leave the theater together, " + d.heShe() + " clings to " + c.givenName + "'s side.\n\n");
                            this.append(t, "By the time they get to " + c.givenName + "'s room, " + d.givenName + " is practically trembling with desire.  ");
                            if (d.dignity <= 66) {
                                if (d.dignity <= 33) {
                                    this.append(t, "Before the door is even closed, " + d.heShe() + "'s grabbing " + c.givenName + "'s hand and guiding it under " + d.hisHer() + " skirt.  " + d.HeShe() + " didn't bother wearing panties, and " + c.givenName + " can directly feel " + d.hisHer() + " ");
                                    if (!d.gender.equals("male")) {
                                        if (!d.gender.equals("female")) {
                                            this.append(t, "erect cock and wet slit");
                                        }
                                        else {
                                            this.append(t, "dripping wet slit");
                                        }
                                    }
                                    else {
                                        this.append(t, "stiff penis");
                                    }
                                    this.append(t, " as " + d.heShe() + " stares up at " + c.himHer() + " with teary-eyed desire.\n\n");
                                    d.say(t, "\"I'm ready for you...\"\n\n");
                                    c.say(t, "\"");
                                    if (c.morality <= 66) {
                                        if (c.morality <= 33) {
                                            c.say(t, "You'd better be.");
                                        }
                                        else {
                                            c.say(t, "I'm ready, too.");
                                        }
                                    }
                                    else {
                                        c.say(t, "Oh, my.  I'm impressed that you were able to contain yourself.");
                                    }
                                    c.say(t, "\"\n\n");
                                }
                                else {
                                    this.append(t, "As soon as the door is latched shut, " + d.givenName + " starts hurriedly stripping " + d.hisHer() + " clothes off.  " + c.givenName + " turns around to see " + d.himHer() + " completely naked, shifting nervously from foot to foot.  ");
                                    if (!d.gender.equals("male")) {
                                        if (!d.gender.equals("female")) {
                                            this.append(t, String.valueOf(d.HisHer()) + " eager cock stands upright, and " + d.hisHer() + " thighs glisten with " + d.hisHer() + " arousal.\n\n");
                                        }
                                        else {
                                            this.append(t, String.valueOf(d.HisHer()) + " thighs glisten with obvious wetness.\n\n");
                                        }
                                    }
                                    else {
                                        this.append(t, String.valueOf(d.HisHer()) + " stiff penis points straight at the ceiling.\n\n");
                                    }
                                    d.say(t, "\"Please, " + c.givenName + ", I... I need you...\"\n\n");
                                    c.say(t, "\"");
                                    if (c.innocence <= 66) {
                                        if (c.innocence <= 33) {
                                            c.say(t, "Then let's not waste any time.");
                                        }
                                        else {
                                            c.say(t, "You're so cute, " + d.givenName + ".");
                                        }
                                    }
                                    else {
                                        c.say(t, "Wow, that was fast!  Let me get ready too!");
                                    }
                                    c.say(t, "\"\n\n");
                                }
                            }
                            else {
                                this.append(t, "However, " + d.heShe() + "'s too shy to give voice to " + d.hisHer() + " desires, and " + d.heShe() + " just stands in the corner, refusing to meet " + c.givenName + "'s gaze right up until " + c.givenName + " reaches up " + d.givenName + "'s skirt and starts rubbing " + d.himHer() + " over " + d.hisHer() + " panties, feeling ");
                                if (!d.gender.equals("male")) {
                                    if (!d.gender.equals("female")) {
                                        this.append(t, "their dampness and the stiff bulge within.\n\n");
                                    }
                                    else {
                                        this.append(t, "how damp they are.\n\n");
                                    }
                                }
                                else {
                                    this.append(t, "the helplessly twitching bulge within.\n\n");
                                }
                                c.say(t, "\"");
                                if (c.innocence <= 66) {
                                    if (c.innocence <= 33) {
                                        c.say(t, "If I'm to proceed further than this, I will need your consent.  Make sure to say it properly.");
                                    }
                                    else {
                                        c.say(t, "If you want something, you know you just have to ask for it~");
                                    }
                                }
                                else {
                                    c.say(t, "If you wanna do naughty stuff, you should just say so!  Come on, try it!");
                                }
                                c.say(t, "\"\n\n");
                                d.say(t, "\"I... I want to have s-sex with you... please...!\"\n\n");
                            }
                            Label_21921: {
                                Label_17831: {
                                    if (c.gender.equals("female")) {
                                        if (!d.gender.equals("female")) {
                                            if (!c.vVirg) {
                                                break Label_17831;
                                            }
                                            if (!c.aVirg) {
                                                break Label_17831;
                                            }
                                            if (c.pastTempted) {
                                                break Label_17831;
                                            }
                                        }
                                    }
                                    if (d.vVirg) {
                                        if (d.gender.equals("male")) {
                                            break Label_17831;
                                        }
                                        if (d.aVirg) {
                                            if (d.pastTempted) {
                                                break Label_17831;
                                            }
                                        }
                                    }
                                    if (!c.gender.equals("female")) {
                                        this.append(t, String.valueOf(c.givenName) + " doesn't bother getting undressed.  " + c.HeShe() + " just pulls out " + c.hisHer() + " cock, already erect, and gently pushes " + d.givenName + "'s back against the nearest wall.  ");
                                    }
                                    else {
                                        this.append(t, String.valueOf(c.givenName) + " doesn't bother getting undressed.  " + c.HeShe() + " just pulls down " + c.hisHer() + " panties and ");
                                        if (!c.vVirg) {
                                            this.append(t, "grabs a U-shaped double dildo from " + c.hisHer() + " nightstand.  " + c.HisHer() + " pussy already feels soaked and needy, and " + c.heShe() + " has no trouble inserting one end into " + c.himHer() + "self before gently ");
                                        }
                                        else {
                                            this.append(t, "grabs a strap-on dildo from " + c.hisHer() + " nightstand.  Motivated by " + c.hisHer() + " own lust, " + c.heShe() + " very quickly manages to buckle it on before ");
                                        }
                                        this.append(t, "pushing " + d.givenName + "'s back against the nearest wall.  ");
                                    }
                                    this.append(t, "Eyes fixated on the incoming shaft, " + d.givenName + " eagerly reaches down and spreads ");
                                    Label_20250: {
                                        if (!d.gender.equals("male")) {
                                            if (!d.vVirg) {
                                                this.append(t, String.valueOf(d.hisHer()) + " lower lips");
                                                break Label_20250;
                                            }
                                        }
                                        this.append(t, String.valueOf(d.hisHer()) + " well-loosened anus");
                                    }
                                    this.append(t, " so that " + c.givenName + " can put it inside.  But " + c.givenName + " still takes " + c.hisHer() + " time, touching the tip to " + d.himHer() + ", then slowly starting to ease it in.  Finally, after letting the anticipation build, " + c.heShe() + " abruptly grabs " + d.givenName + " by the thighs, lifting " + d.himHer() + " up off the floor with " + d.hisHer() + " feet above " + c.givenName + "'s shoulders, before lowering " + d.himHer() + " down so that " + d.givenName + "'s own weight drives " + d.himHer() + " onto ");
                                    if (!c.gender.equals("female")) {
                                        this.append(t, String.valueOf(c.givenName) + "'s cock.  ");
                                    }
                                    else {
                                        this.append(t, String.valueOf(d.hisHer()) + " end of the dildo.  ");
                                    }
                                    this.append(t, "The impact deep inside " + d.himHer() + " drives a sharp whimper from " + d.givenName + ".\n\n");
                                    if (c.morality <= 66) {
                                        if (c.morality <= 33) {
                                            d.say(t, "\"");
                                            if (d.dignity <= 66) {
                                                if (d.dignity <= 33) {
                                                    d.say(t, "Aaagh!  Y-You're gonna split me in haaalf!");
                                                }
                                                else {
                                                    d.say(t, "Y-You're being... a little rough...!");
                                                }
                                            }
                                            else {
                                                d.say(t, "Nn!  P-Please, a little slower...!");
                                            }
                                            d.say(t, "\"\n\n");
                                            c.say(t, "\"Don't try to pretend you don't love it!\"\n\n");
                                        }
                                        else {
                                            d.say(t, "\"");
                                            if (d.dignity <= 66) {
                                                if (d.dignity <= 33) {
                                                    d.say(t, "Aaah!  I'm already...!");
                                                }
                                                else {
                                                    d.say(t, "Oh!  Wow!");
                                                }
                                            }
                                            else {
                                                d.say(t, "Mmf!  Ah, haaah...");
                                            }
                                            d.say(t, "\"\n\n");
                                            c.say(t, "\"I'm going to start moving.\"\n\n");
                                        }
                                    }
                                    else {
                                        c.say(t, "\"Are you alright?\"\n\n");
                                        d.say(t, "\"");
                                        if (d.dignity <= 66) {
                                            if (d.dignity <= 33) {
                                                d.say(t, "Ooh...  Y-Yeah, this feels good...");
                                            }
                                            else {
                                                d.say(t, "Y-Yes!  Please, faster, harder...!");
                                            }
                                        }
                                        else {
                                            d.say(t, "I-I'm fine, just worry about making yourself feel good!");
                                        }
                                        d.say(t, "\"\n\n");
                                    }
                                    this.append(t, "With " + c.givenName + " holding " + d.himHer() + " off the floor, " + d.givenName + " is completely helpless to do anything but let " + d.himHer() + "self get fucked.  " + c.givenName + " hammers into " + d.himHer() + " over and over again, grunting with effort in the physically-demanding position, but not slowing down at all.  ");
                                    if (!c.gender.equals("female")) {
                                        this.append(t, "The pleasurable friction of thrusting in and out of " + d.givenName + "'s inner walls is enough to quickly push " + c.givenName + " over the edge into orgasm, but " + c.heShe() + " doesn't let " + c.himHer() + "self slow down, repeatedly ramming " + d.givenName + "'s deepest spot in time with the spurts of cum " + c.heShe() + "'s shooting into " + d.himHer() + ".  Even when " + d.givenName + " starts to cum as well, " + c.givenName + " only intensifies " + c.hisHer() + " movements, ");
                                    }
                                    else {
                                        this.append(t, "Driven by a dominant mood, " + c.givenName + " is less interested in " + c.hisHer() + " own pleasure than in forcing " + d.givenName + " to cum as hard as possible, and from experience, " + c.heShe() + " knows exactly how to thrust in order to rub the dildo against " + d.givenName + "'s most sensitive place.  Even after " + d.givenName + " starts cumming, " + c.givenName + " doesn't slow down, ");
                                    }
                                    this.append(t, "causing " + d.himHer() + " to cry out incoherently at the overwhelming stimulation.\n\n");
                                    d.say(t, "\"");
                                    if (d.innocence <= 66) {
                                        if (d.innocence <= 33) {
                                            d.say(t, "Nhaaah, t-too muuuch!  I'm going insaaane!");
                                        }
                                        else {
                                            d.say(t, String.valueOf(c.givenName) + ", ah, ah, aaahl, I love you, love you, love youuu!");
                                        }
                                    }
                                    else {
                                        d.say(t, "Ah!  Ah!  Aghaghah, nhoooh!");
                                    }
                                    d.say(t, "\"\n\n");
                                    Label_21719: {
                                        if (c.gender.equals("female")) {
                                            if (d.gender.equals("female")) {
                                                this.append(t, "With their clits rubbing together, it's not too long before " + c.givenName + " cums as well.  " + c.HisHer() + " legs start to wobble and spasm, and " + c.heShe() + " has no choice but to show mercy on " + d.givenName + ".  They slump to the floor together.  ");
                                                break Label_21719;
                                            }
                                        }
                                        if (!d.gender.equals("female")) {
                                            this.append(t, "It's only after they're both completely spent, " + d.givenName + "'s penis flopping limply after shooting its entire load all over " + d.himHer() + ", that " + c.givenName + " finally allows " + c.himHer() + "self to slump to the floor, carrying " + d.givenName + " with " + c.himHer() + ".  ");
                                        }
                                        else {
                                            this.append(t, "It's only once " + d.givenName + " has stopped spasming, arms hanging limp around " + c.givenName + "'s shoulders, that " + c.givenName + " finally allows " + c.himHer() + "self to slump to the floor with " + d.himHer() + ".  ");
                                        }
                                    }
                                    this.append(t, "Without pulling out, " + c.givenName + " rolls so that the two of them are side-by-side facing each other.  " + d.givenName + "'s eyes are still fluttering, body trembling with the aftershocks of " + d.hisHer() + " intense orgasm.  " + c.givenName + " kisses " + d.himHer() + " deeply, running a hand through " + d.hisHer() + " hair.\n\n");
                                    c.say(t, "\"");
                                    if (c.innocence <= 66) {
                                        if (c.innocence <= 33) {
                                            c.say(t, "I've been looking forward to showing you that technique.  It seems it was more than satisfactory.");
                                        }
                                        else {
                                            c.say(t, "Was it too much for you?  Well, I suppose we can take a little break.");
                                        }
                                    }
                                    else {
                                        c.say(t, "Ah, " + d.givenName + "...!  I'm gonna love you lots and lots more!");
                                    }
                                    c.say(t, "\"");
                                    break Label_21921;
                                }
                                if (!c.underType.equals("none")) {
                                    this.append(t, String.valueOf(c.givenName) + " slides " + c.hisHer() + " panties down " + c.hisHer() + " thighs and kicks them off.  They have a damp spot in the middle, as " + c.heShe() + "'s already wet enough that foreplay won't be necessary.  ");
                                }
                                else {
                                    this.append(t, String.valueOf(c.givenName) + " isn't wearing any panties under " + c.hisHer() + " skirt, and " + c.heShe() + "'s wet enough that foreplay won't be necessary.  ");
                                }
                                this.append(t, String.valueOf(c.HeShe()) + " gently pushes " + d.givenName + " down onto " + d.hisHer() + " back, then ");
                                if (!d.gender.equals("female")) {
                                    this.append(t, "uses one hand to guide " + d.givenName + "'s penis");
                                }
                                else {
                                    this.append(t, "buckles a strap-on dildo onto " + d.givenName + "'s hips");
                                }
                                this.append(t, " as " + c.heShe() + " straddles " + d.himHer() + " and lifts up " + c.hisHer() + " own skirt");
                                Label_18241: {
                                    if (!c.gender.equals("male")) {
                                        if (!c.vVirg) {
                                            break Label_18241;
                                        }
                                    }
                                    this.append(t, " in order to position the tip against " + c.hisHer() + " anus");
                                }
                                this.append(t, ".  " + d.givenName + " gasps ");
                                if (!d.gender.equals("female")) {
                                    this.append(t, "out loud as " + d.heShe() + " slides into " + c.givenName + ", ");
                                }
                                else {
                                    this.append(t, "at the way the harness rubs against " + d.hisHer() + " clit as " + c.givenName + " settles " + c.himHer() + "self onto the shaft, ");
                                }
                                if (d.morality <= 66) {
                                    if (d.morality <= 33) {
                                        this.append(t, "but there's a sudden expression of worry on " + d.hisHer() + " face.\n\n");
                                        d.say(t, "\"" + c.givenName + ", I-I'm already gonna...!\"\n\n");
                                        c.say(t, "\"It's alright, you can let it out anytime.\"\n\n");
                                        this.append(t, "Despite " + c.givenName + "'s reassurance, " + d.givenName + " doesn't want this moment to end too quickly.  ");
                                    }
                                    else {
                                        this.append(t, "squeezing " + c.hisHer() + " eyes shut.\n\n");
                                        d.say(t, "\"Oooh...!  " + c.givenName + "...!\"\n\n");
                                        c.say(t, "\"Aah...  You're reaching... all the way inside me...\"\n\n");
                                        this.append(t, String.valueOf(d.givenName) + " struggles not to cum immediately.  ");
                                    }
                                }
                                else {
                                    this.append(t, "but " + d.mainName + " is hesitant to move " + d.hisHer() + " own hips.\n\n");
                                    d.say(t, "\"Are you sure you're alright, " + c.givenName + "?  D-Does it hurt going so quickly...?\"\n\n");
                                    if (d.gender.equals("female")) {
                                        c.say(t, "\"I've been thinking about this all day.  I'm not waiting a moment longer than i have to.\"\n\n");
                                    }
                                    else {
                                        c.say(t, "\"I've been thinking about your cock all day.  I'm not waiting a moment longer than I have to.\"\n\n");
                                    }
                                    this.append(t, String.valueOf(d.givenName) + " relaxes, but only a bit.  " + d.HeShe() + " wants to make sure that this lasts long enough for " + c.givenName + " to enjoy " + c.himHer() + "self, but " + d.heShe() + "'s already having trouble keeping " + d.himHer() + "self from cumming inside " + c.himHer() + ".  ");
                                }
                                Label_18979: {
                                    if (!c.gender.equals("male")) {
                                        if (!c.vVirg) {
                                            this.append(t, String.valueOf(c.givenName) + "'s folds squeeze ");
                                            break Label_18979;
                                        }
                                    }
                                    this.append(t, String.valueOf(c.givenName) + "'s asshole squeezes ");
                                }
                                this.append(t, "around the base of " + d.hisHer() + " shaft, and when " + c.heShe() + " moves " + c.hisHer() + " hips back upwards, it ");
                                if (!d.gender.equals("female")) {
                                    this.append(t, "feels like " + c.heShe() + "'s trying to milk " + d.givenName + "'s cock.  ");
                                }
                                else {
                                    this.append(t, "sends warm feelings shooting into " + d.givenName + "'s groin.  ");
                                }
                                this.append(t, String.valueOf(c.givenName) + " slides " + c.himHer() + "self up and down slowly, searching for the angle that will press the tip against " + c.hisHer() + " ");
                                if (!c.gender.equals("male")) {
                                    this.append(t, "g-spot");
                                }
                                else {
                                    this.append(t, "prostate");
                                }
                                this.append(t, ".  Then, with an abrupt moan of pleasure, " + c.heShe() + " picks up the pace, reaching down to rub " + c.hisHer() + " ");
                                if (!c.gender.equals("female")) {
                                    this.append(t, "own penis");
                                }
                                else {
                                    this.append(t, "clit");
                                }
                                this.append(t, " in order to stimulate " + c.himHer() + "self from the inside and the outside at once.\n\n");
                                if (c.innocence <= 66) {
                                    if (c.innocence <= 33) {
                                        c.say(t, "\"Let us climax... together...!\"\n\n");
                                    }
                                    else {
                                        c.say(t, "\"Nng!  There...!\"\n\n");
                                    }
                                }
                                else {
                                    c.say(t, "\"" + d.givenName + "!  " + d.givenName + "!  " + d.givenName + "~!\"\n\n");
                                }
                                this.append(t, String.valueOf(c.HeShe()) + " tightens further, gripping " + d.givenName + " as " + c.heShe() + " pumps up and down.  " + d.givenName + " throws " + d.hisHer() + " head back as " + d.heShe() + " feels " + d.hisHer() + " pleasure pass the point of no return, and then, in a rare show of lust-induced assertiveness, wraps " + d.hisHer() + " arms around " + c.givenName + ", pulling " + c.himHer() + " into a deep embrace.  They kiss as they both cum, " + c.givenName + "'s inner walls spasming and ");
                                if (!d.gender.equals("female")) {
                                    this.append(t, "ushering each spurt of " + d.givenName + "'s cum deep into " + c.hisHer() + " womb.\n\n");
                                }
                                else {
                                    this.append(t, "transmitting the feeling through the belt to " + d.givenName + "'s most sensitive place as well.\n\n");
                                }
                                if (d.innocence <= 66) {
                                    if (d.innocence <= 33) {
                                        d.say(t, "\"D-Did you enjoy that as well...?  I'm glad...\"");
                                    }
                                    else {
                                        d.say(t, "\"I love you... I love you so much...\"");
                                    }
                                }
                                else {
                                    d.say(t, "\"Ah... wow...\"");
                                }
                            }
                            Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                            Project.changePortrait(d.convertGender(), d.type, true, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                            String description = "";
                            if (c.morality <= 66) {
                                if (d.morality <= 66) {
                                    description = String.valueOf(c.givenName) + " and " + d.givenName + " soothe their loneliness by going on a romantic date together and then enjoying each other's bodies at home afterward.";
                                }
                                else {
                                    description = "After watching a movie together, " + c.givenName + " takes " + d.givenName + " home in order to satisfy " + c.hisHer() + " lust, and " + d.givenName + " enjoys " + d.himHer() + "self as well.";
                                }
                            }
                            else {
                                description = String.valueOf(c.givenName) + " treats the needy " + d.givenName + " to a movie date and a night of generous lovemaking.";
                            }
                            this.save.saveScene(39, String.valueOf(c.mainName) + "/" + d.mainName, description);
                            break Label_47698;
                        }
                        if (this.getCast()[i].confidence >= 34) {
                            if (this.getCast()[i].confidence < 67) {
                                c = this.getCast()[i];
                            }
                        }
                        else {
                            d = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id == 7) {
                while (true) {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] == null) {
                            final String[] nameDisplay = { c.mainName, d.mainName, null, null, null };
                            this.append(t, "After another hard-fought battle against the Demons, " + d.mainName + " is left feeling exhausted and discouraged, but " + d.hisHer() + " spirits brighten when " + c.mainName + " tells " + d.himHer() + " that " + c.heShe() + " has a gift at home to give to " + d.himHer() + ".  They fly back to " + c.mainName + "'s place, transform back into their civilian identities");
                            if (!c.mainName.equals(c.givenName)) {
                                if (!d.mainName.equals(d.givenName)) {
                                    this.append(t, " as " + c.givenName + " and " + d.givenName);
                                }
                            }
                            this.append(t, ", and head inside.  ");
                            if (c.dignity <= 66) {
                                if (c.dignity <= 33) {
                                    this.append(t, String.valueOf(c.givenName) + " grabs some items off " + c.hisHer() + " nightstand and shoves them into " + d.givenName + "'s arms, grinning at " + d.hisHer() + " startled reaction.\n\n");
                                    c.say(t, "\"We're going to be trying these out tonight!\"\n\n");
                                    d.say(t, "\"");
                                    if (d.innocence <= 66) {
                                        if (d.innocence <= 33) {
                                            d.say(t, "Ah, y-yes.  Please give me a moment to, um... get undressed...");
                                        }
                                        else {
                                            d.say(t, "This is...  Oh!  Um, really, t-tonight...?");
                                        }
                                    }
                                    else {
                                        d.say(t, "Huh?  Oh, wow, these are super cute!  But wait, where does this part go?");
                                    }
                                    d.say(t, "\"\n\n");
                                    this.append(t, String.valueOf(d.mainName) + " turns the items over in " + d.hisHer() + " hands.  ");
                                }
                                else {
                                    this.append(t, String.valueOf(c.givenName) + " takes a newly-arrived package from next to the door.  " + c.HeShe() + " hands it to " + d.givenName + ", then chuckles at the way " + d.hisHer() + " eyebrows raise when " + d.heShe() + " reads the label.\n\n");
                                    d.say(t, "\"");
                                    if (d.innocence <= 66) {
                                        if (d.innocence <= 33) {
                                            d.say(t, "Oh!  I recognize this vendor!  Ah, n-not from personal use or anything...!");
                                        }
                                        else {
                                            d.say(t, "S-Sex toys?  You got me sex toys?");
                                        }
                                    }
                                    else {
                                        d.say(t, "Adult... Implements...  Oh!  Th-This is something naughty, isn't it...?");
                                    }
                                    d.say(t, "\"\n\n");
                                    c.say(t, "\"Go on, open it already!\"\n\n");
                                    this.append(t, "At " + c.givenName + "'s instruction, " + d.givenName + " opens the box, and the contents spill onto " + d.hisHer() + " lap.  ");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(c.givenName) + " hands " + d.givenName + " a finely-wrapped giftbox, then takes a seat and watches with a small smirk as " + d.heShe() + " opens it.\n\n");
                                c.say(t, "\"Go on.  I believe you'll find that they all suit you perfectly.\"\n\n");
                                d.say(t, "\"");
                                if (d.innocence <= 66) {
                                    if (d.innocence <= 33) {
                                        d.say(t, "Y-You didn't need to give me anything, I don't really deserve-  W-Wait, what is this!?");
                                    }
                                    else {
                                        d.say(t, "You're so generous, " + c.givenName + "!  Let me just open it and take a-  Ah?  Um...  Wow.");
                                    }
                                }
                                else {
                                    d.say(t, "Th-This is really fancy...  Um, could you help me with the ribbon...?");
                                }
                                d.say(t, "\"\n\n");
                                this.append(t, "Inside the box are some very expensive-looking, very adult toys.  ");
                            }
                            this.append(t, "There's a leash connected to a collar with " + d.givenName + "'s name on it, a headband with animal ears sprouting off the top, and a tail to go with it.  Most concerningly, the tail ");
                            Label_23334: {
                                if (!d.gender.equals("male")) {
                                    if (d.aVirg) {
                                        this.append(t, "is connected to a tiny buttplug with a powerful vibrator inside.  ");
                                        break Label_23334;
                                    }
                                }
                                this.append(t, "is connected to a large vibrating buttplug, big enough to fill even " + d.givenName + "'s rather stretched orifice.  ");
                            }
                            this.append(t, "Within a matter of minutes, " + d.givenName + " has become the very image of " + c.givenName + "'s pet, start naked except for " + d.hisHer() + " collar, ears, and tail.  " + d.HisHer() + " bare thighs tremble with the strength of the vibrations inside " + d.himHer() + ".\n\n");
                            this.append(t, "Then, " + c.givenName + " announces that they're going on a walk.  " + d.givenName + " is forced to crawl on all fours out ahead of " + c.givenName + ", and when " + d.heShe() + " tries to straighten up and look around, " + c.givenName + " tells " + d.himHer() + " to just focus on where " + d.heShe() + "'s going.\n\n");
                            if (d.dignity <= 66) {
                                if (d.dignity <= 33) {
                                    d.say(t, "\"I feel like I'm gonna get raped...!\"\n\n");
                                    c.say(t, "\"");
                                    if (c.morality <= 66) {
                                        if (c.morality <= 33) {
                                            c.say(t, "I might rape you right here.");
                                        }
                                        else {
                                            c.say(t, "That's turning you on, isn't it?");
                                        }
                                    }
                                    else {
                                        c.say(t, "I'll protect you.");
                                    }
                                    c.say(t, "\"\n\n");
                                }
                                else {
                                    c.say(t, "\"");
                                    if (c.morality <= 66) {
                                        if (c.morality <= 33) {
                                            c.say(t, "Let's see how loud you can squeal.  I'm turning the vibration up to max.");
                                        }
                                        else {
                                            c.say(t, "The longer you take, the more I'm going to turn the vibration up.");
                                        }
                                    }
                                    else {
                                        c.say(t, "If you can think clearly enough to worry, then I suppose I need to turn the vibration up.");
                                    }
                                    c.say(t, "\"\n\n");
                                    d.say(t, "\"Ah!  Nnnaaah!\"\n\n");
                                }
                            }
                            else {
                                d.say(t, "\"Everyone... can see...!  Nnn!\"\n\n");
                                c.say(t, "\"");
                                if (c.morality <= 66) {
                                    if (c.morality <= 33) {
                                        c.say(t, "Not from this far away.  Let's get closer.");
                                    }
                                    else {
                                        c.say(t, "Then you'd better hurry.");
                                    }
                                }
                                else {
                                    c.say(t, "A housepet like you doesn't need to worry about being seen naked.");
                                }
                                c.say(t, "\"\n\n");
                            }
                            this.append(t, "It's past curfew, so they don't end up encountering anyone on the street, but the late afternoon light still makes " + d.givenName + " feel incredibly exposed.  ");
                            if (d.timesStripped() <= 0) {
                                this.append(t, "However, as the world around " + d.givenName + " seems to shrink to the pavement in front of " + d.hisHer() + " face and the vibration in " + d.hisHer() + " butt, " + d.heShe() + " starts to feel more and more calm and happy.  ");
                                if (!d.modest) {
                                    this.append(t, String.valueOf(d.HeShe()) + " realizes that " + d.heShe() + " doesn't need to worry about being photographed like this anymore, so " + d.heShe() + " might as well just do whatever makes " + d.hisHer() + " master happy.  ");
                                }
                                else {
                                    this.append(t, String.valueOf(d.HeShe()) + " should be afraid of being discovered and photographed like this, but " + c.hisHer() + "master's presence right behind " + c.himHer() + " makes " + c.himHer() + " feel completely safe.  ");
                                }
                            }
                            else {
                                this.append(t, "This is far more embarrassing than simply being naked, and the new heights of humiliation turn " + d.himHer() + " on even more than usual.  ");
                            }
                            if (!d.gender.equals("male")) {
                                this.append(t, String.valueOf(d.HisHer()) + " juices drip down " + d.hisHer() + " thighs and leave a wet trail behind " + d.himHer() + ".\n\n");
                            }
                            else {
                                this.append(t, String.valueOf(d.HisHer()) + " stiff penis bobs with every sway of " + d.hisHer() + " hips, a dribble of pre-cum forming at the tip due to the continued prostate stimulation.\n\n");
                            }
                            this.append(t, "When they get back inside " + c.givenName + "'s place, " + d.givenName + " immediately slumps down onto " + d.hisHer() + " chest in exhaustion, " + d.hisHer() + " butt high in the air.  ");
                            if (!c.gender.equals("female")) {
                                this.append(t, String.valueOf(c.givenName) + " wastes no time at all in pulling out " + c.hisHer() + " erect cock.  " + c.HeShe() + " steps forward");
                            }
                            else {
                                if (!c.vVirg) {
                                    this.append(t, "The break lasts only long enough for " + c.givenName + " to get undressed and slip one end of a double dildo into " + c.hisHer() + " wet slit.  ");
                                }
                                else {
                                    this.append(t, "The break lasts only long enough for " + c.givenName + " to get undressed and wear a strap-on dildo.  ");
                                }
                                this.append(t, "Then " + c.heShe() + " steps forward");
                            }
                            Label_24710: {
                                if (!d.gender.equals("male")) {
                                    if (!d.vVirg) {
                                        this.append(t, " to line " + c.himHer() + "self up with " + d.givenName + "'s soaked pussy and ram inside, so that " + d.givenName + "'s having both " + d.hisHer() + " holes filled at once.\n\n");
                                        break Label_24710;
                                    }
                                }
                                this.append(t, ", pulls the tail out of " + d.givenName + "'s ass in one swift motion, and then immediately thrusts " + d.himHer() + "self into the vacant hole.\n\n");
                            }
                            this.append(t, String.valueOf(d.givenName) + " was already almost ready to cum, and the sudden penetration pushes " + d.himHer() + " over the edge, ");
                            if (!d.gender.equals("female")) {
                                this.append(t, "and " + d.heShe() + " screams out loud as " + d.heShe() + " shoots " + d.hisHer() + " load all over " + c.givenName + "'s carpet.  ");
                            }
                            else if (!d.vVirg) {
                                this.append(t, "causing " + d.himHer() + " to scream out loud as " + d.hisHer() + " pussy squeezes down tight on the invader.  ");
                            }
                            else {
                                this.append(t, "causing " + d.himHer() + " to scream out loud as " + d.hisHer() + " ass squeezes tightly on the invader and " + d.hisHer() + " virgin pussy trickles a rush of wetness onto " + c.givenName + "'s carpet.  ");
                            }
                            this.append(t, "But " + c.givenName + " is determined to give " + d.himHer() + " a good fucking, and " + c.heShe() + " savagely thrusts into " + d.hisHer() + " deepest places over and over again, one hand holding " + d.givenName + "'s ass while the other ");
                            Label_25180: {
                                if (!d.gender.equals("male")) {
                                    if (!d.vVirg) {
                                        this.append(t, "tugs on " + d.hisHer() + " tail.  ");
                                        break Label_25180;
                                    }
                                }
                                this.append(t, "spanks " + d.himHer() + " in time with their lovemaking.  ");
                            }
                            this.append(t, String.valueOf(d.givenName) + " whimpers and whines like an animal, tongue lolling out of " + d.hisHer() + " mouth.\n\n");
                            this.append(t, "Finally, when " + d.givenName + " cums again, " + c.givenName + " cums with " + d.himHer() + ", ");
                            if (!c.gender.equals("female")) {
                                this.append(t, "shooting spurt after spurt of seed all the way inside " + d.himHer() + ".  ");
                            }
                            else if (!c.vVirg) {
                                this.append(t, "squeezing down on " + c.hisHer() + " own end of the dildo while " + c.heShe() + " clutches " + d.givenName + " from behind and pushes it as deep inside " + d.himHer() + " as " + c.heShe() + " can.  ");
                            }
                            else {
                                this.append(t, "the erratic movements of " + c.hisHer() + " hips causing the dildo to fuck " + d.givenName + " even more roughly.  ");
                            }
                            this.append(t, "Then, spent and satisfied for the moment, " + c.givenName + " rolls onto " + c.hisHer() + " back, carrying " + d.givenName + " with " + c.himHer() + " so that they're laying together in the afterglow.\n\n");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    c.say(t, "\"You seemed as though you needed to release some pressure.\"\n\n");
                                    d.say(t, "\"");
                                    if (d.morality <= 66) {
                                        if (d.morality <= 33) {
                                            d.say(t, String.valueOf(c.givenName) + "...  You really do just want to make me happy...  I don't get it...");
                                        }
                                        else {
                                            d.say(t, "Yeah...  Thanks...");
                                        }
                                    }
                                    else {
                                        d.say(t, "You always know what I need, " + c.givenName + "...  I really don't deserve you...");
                                    }
                                }
                                else {
                                    c.say(t, "\"You're all mine...  My wonderful little pet...\"\n\n");
                                    d.say(t, "\"");
                                    if (d.morality <= 66) {
                                        if (d.morality <= 33) {
                                            d.say(t, "A-And you're mine, too, right?  I want to be all you need...");
                                        }
                                        else {
                                            d.say(t, "Mm...");
                                        }
                                    }
                                    else {
                                        d.say(t, "Yes...  I belong to you...");
                                    }
                                }
                            }
                            else {
                                c.say(t, "\"You were so, so super cute!  I wanna do this every day!\"\n\n");
                                d.say(t, "\"");
                                if (d.morality <= 66) {
                                    if (d.morality <= 33) {
                                        d.say(t, "The world is so much brighter when you're here, " + c.givenName + "...");
                                    }
                                    else {
                                        d.say(t, "Yes...  I'd, um... like that too...");
                                    }
                                }
                                else {
                                    d.say(t, "You... enjoyed it too...?  Ah... I'm glad...");
                                }
                            }
                            Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                            Project.changePortrait(d.convertGender(), d.type, true, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                            d.say(t, "\"");
                            String description = "";
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    description = String.valueOf(c.mainName) + " assets " + c.hisHer() + " ownership over " + d.mainName + " with some sexual roleplay.";
                                }
                                else {
                                    description = String.valueOf(c.mainName) + " and " + d.mainName + " enjoy some new fetish toys together.";
                                }
                            }
                            else {
                                description = String.valueOf(c.mainName) + " helps " + d.mainName + " relax and take " + d.hisHer() + " mind off the war by putting " + d.himHer() + " in the role of a beloved pet.";
                            }
                            this.save.saveScene(40, String.valueOf(c.mainName) + "/" + d.mainName, description);
                            break Label_47698;
                        }
                        if (this.getCast()[i].confidence <= 66) {
                            if (this.getCast()[i].confidence < 34) {
                                d = this.getCast()[i];
                            }
                        }
                        else {
                            c = this.getCast()[i];
                        }
                    }
                    continue;
                }
            }
            if (id != 8) {
                if (id != 9) {
                    if (id == 10) {
                        while (true) {
                            for (int i = 0; i < 3; ++i) {
                                if (this.getCast()[i] == null) {
                                    final String[] array7 = new String[5];
                                    array7[0] = c.mainName;
                                    final String[] nameDisplay = array7;
                                    this.append(t, "The government provides the Chosen with servants to fulfill their every need, from chauffers to chefs, but " + c.givenName + " has always felt that " + c.heShe() + " should handle " + c.hisHer() + " own chores and live humbly.  ");
                                    if (!c.debased) {
                                        this.append(t, "Before heading out to the grocery store, " + c.heShe() + " wears a bulky coat and a long ");
                                        if (!c.gender.equals("male")) {
                                            this.append(t, "skirt which reaches to " + c.hisHer() + " ankles");
                                        }
                                        else {
                                            this.append(t, "pair of slacks");
                                        }
                                        this.append(t, ", hoping that " + c.heShe() + " can at least avoid lustful glances while " + c.heShe() + "'s off-duty.  " + c.HisHer() + " hopes are quickly dashed.\n\n");
                                    }
                                    else {
                                        this.append(t, "On top of that, going grocery shopping gives " + c.himHer() + " an excuse to dress up in a skimpy outfit.  " + c.HeShe() + "'s been taking greater and greater enjoyment from the lustful stares which follow " + c.himHer() + " around.  This time, " + c.heShe() + " picks out a tanktop and a pair of tiny short shorts which leave " + c.hisHer() + " ass cheeks bare.\n\n");
                                    }
                                    this.append(t, "One of the Thralls " + c.heShe() + " had helped purify earlier that day recognizes " + c.himHer() + " on the crowded streets.  But rather than approaching directly, the man follows right behind " + c.himHer() + ", discreetly reaching into his own pants and stroking himself as he remembers how good " + c.mainName + "'s lips felt on his cock.  Finally, when " + c.givenName + " bends over to fix " + c.hisHer() + " shoe, the former Thrall can't resist the temptation any longer.  His hand sweeps forward, palm slapping firmly against " + c.givenName + "'s ");
                                    if (!c.debased) {
                                        this.append(t, "bottom through " + c.hisHer() + " ");
                                        if (!c.gender.equals("male")) {
                                            this.append(t, "skirt, strong enough that the garment provides little protection.  ");
                                        }
                                        else {
                                            this.append(t, "pants, strong enough that they provide little protection.  ");
                                        }
                                    }
                                    else {
                                        this.append(t, "bare ass cheek.\n\n");
                                    }
                                    if (c.dignity <= 66) {
                                        if (c.dignity <= 33) {
                                            this.append(t, String.valueOf(c.givenName) + "'s sharp cry seems to carry at least as much pleasure as pain, but " + c.heShe() + " recovers quickly, snatching " + c.hisHer() + " assailant's wrist before he can get away.\n\n");
                                            c.say(t, "\"Ah... hah...  got you...");
                                        }
                                        else {
                                            this.append(t, String.valueOf(c.givenName) + " squeaks in surprise, then spins to face " + c.hisHer() + " attacker and takes a couple of steps back with both hands clutching the spot where " + c.heShe() + " was spanked.  " + c.HisHer() + " face is bright red, not only with anger for being assaulted, but also with shame for crying out so pitifully.\n\n");
                                            c.say(t, "\"What do you think you're doing!?");
                                        }
                                    }
                                    else {
                                        this.append(t, String.valueOf(c.givenName) + " bites " + c.hisHer() + " lip to avoid crying out, turning to face " + c.hisHer() + " attacker with an accusing stare in " + c.hisHer() + " tearful eyes.\n\n");
                                        c.say(t, "\"H-How dare you!?");
                                    }
                                    c.say(t, "\"\n\n");
                                    this.append(t, "The former Thrall acted without thinking, but only now does he realize how much trouble he's in.  With a nervous glance at the passers-by who are looking in his direction, he babbles out a story about how he's been unable to stop thinking about the time " + c.mainName + " spent sexually servicing him.  He claims that he must still be feeling some after-effects from being Enthralled, perhaps because of the extreme pleasure he was subjected to.  ");
                                    if (c.innocence <= 66) {
                                        if (c.innocence <= 33) {
                                            this.append(t, "Of course, " + c.givenName + " is aware that that's completely impossible, but " + c.heShe() + " still sympathizes with the moral confusion the former Thrall must be feeling after growing accustomed to being able to act without any inhibitions.\n\n");
                                            c.say(t, "\"That's enough, you do not have to say anymore.  I understand what you're really going through.");
                                        }
                                        else {
                                            this.append(t, String.valueOf(c.givenName) + " is pretty sure that the former Thrall is lying, but " + c.heShe() + " can't say for sure.  In the end, " + c.heShe() + " decides that it's better to err on the side of being compassionate.\n\n");
                                            c.say(t, "\"Okay, okay, I understand.  I'm not going to report you to the police.");
                                        }
                                    }
                                    else {
                                        this.append(t, "Against " + c.givenName + ", who still feels somewhat guilty and uncomfortable about using sexual methods to subdue the Thralls, it's a very effective strategy.  The hostility in " + c.hisHer() + " expression is quickly replaced with pure sympathy.\n\n");
                                        c.say(t, "\"Oh...  S-Sorry, I guess it was completely my fault after all...");
                                    }
                                    c.say(t, "\"\n\n");
                                    this.append(t, String.valueOf(c.givenName) + " allows " + c.himHer() + "self to be talked into accompanying the former Thrall into a back alley, away from the eyes of the public, to help \"finish his purification.\"  " + c.HeShe() + "'s prepared to be asked to fellate the former Thrall again, but surprisingly, he bends " + c.givenName + " over his knee instead.  Apparently spanking is his true fetish.\n\n");
                                    this.append(t, "After several slaps to " + c.hisHer() + " upturned bottom, the former Thrall insists on pulling " + c.givenName + "'s ");
                                    if (!c.debased) {
                                        if (!c.gender.equals("male")) {
                                            this.append(t, "skirt up around " + c.hisHer() + " hips.  " + c.givenName + " blushes with shame at how " + c.hisHer() + " effort to dress modestly and avoid provoking lust came to nothing in the end.  Then, to make matters worse, the former Thrall pulls " + c.givenName + "'s panties down around " + c.hisHer() + " thighs ");
                                        }
                                        else {
                                            this.append(t, "slacks down around " + c.hisHer() + " thighs.  " + c.givenName + " blushes with shame at how " + c.hisHer() + " effort to dress modestly and avoid provoking lust came to nothing in the end.  Then, to make matters worse, the former Thrall pulls " + c.givenName + "'s underwear down as well ");
                                        }
                                        this.append(t, "without even asking first.\n\n");
                                    }
                                    else {
                                        this.append(t, "shorts down around " + c.hisHer() + " thighs.  " + c.givenName + " wants to protest that they're too short to give " + c.himHer() + " any protection, but " + c.hisHer() + " guilt over wearing such provocative clothing in the first place prevents " + c.himHer() + " from speaking up.  The former Thrall is pleased to see that " + c.givenName + " isn't wearing anything underneath.\n\n");
                                    }
                                    this.append(t, "The repeated spanking causes " + c.givenName + "'s ass cheeks to begin to turn red.  And as the former Thrall shows no sign of tiring, " + c.givenName + "'s own endurance is put to the test.  " + c.HeShe() + "'s unable to stop " + c.hisHer() + " soft cries from joining the slap of flesh on flesh, " + c.hisHer() + " whole body jerking with every hit.  In this position, the former Thrall's knee digs into " + c.givenName + "'s crotch, and " + c.givenName + "'s movements amount to unwillingly humping " + c.himHer() + "self against it.  " + c.HeShe() + "'s soon moaning out loud even in between spanks.  Meanwhile, the former Thrall's pants are still undone from his prior masturbation, and his cock slips out and starts grinding against " + c.givenName + "'s bare thigh.\n\n");
                                    this.append(t, "It's not much stimulation, but as he enjoys " + c.givenName + "'s cries and the way their bodies squirm against each other, the former Thrall's ecstatic expression goes slack, and his cock starts spurting its load against " + c.givenName + "'s unprotected groin.  He doesn't stop spanking, even as he cums, and ");
                                    if (!c.cVirg) {
                                        this.append(t, "the combined pain and pleasure force a high-pitched squeal out of " + c.givenName + " as " + c.heShe() + " climaxes as well");
                                        if (!c.gender.equals("female")) {
                                            this.append(t, ", leaving white stains in the former Thrall's lap.  ");
                                        }
                                        else {
                                            this.append(t, ", fluids streaming down " + c.hisHer() + " tightly-clenched thighs and soaking the former Thrall's pants.  ");
                                        }
                                        this.append(t, "They both go limp, catching their breath");
                                    }
                                    else {
                                        this.append(t, String.valueOf(c.givenName) + " is almost at the point of climax " + c.himHer() + "self before the former Thrall loses his grip and " + c.heShe() + " tumbles onto the ground in front of him.  They both take several moments to recover, gasping for breath");
                                    }
                                    Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
                                    if (c.confidence <= 66) {
                                        if (c.confidence <= 33) {
                                            this.append(t, ", a dreamy smile on " + c.givenName + "'s face.  " + c.HeShe() + " feels like " + c.heShe() + " was the one purified, now that " + c.heShe() + "'s been properly punished for the sin of tempting so many men.\n\n");
                                            c.say(t, "\"Are you alright now?  If you aren't... w-we could always do this again...");
                                        }
                                        else {
                                            this.append(t, ".  It takes some time before " + c.givenName + " can set " + c.hisHer() + " clothes right and stand up.  " + c.HeShe() + " stumbles away, not trusting " + c.himHer() + "self to withstand the temptation of letting the former Thrall continue.\n\n");
                                            c.say(t, "\"That... was intense...");
                                        }
                                    }
                                    else {
                                        Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                        this.append(t, ", before " + c.givenName + " finally forces " + c.himHer() + "self to " + c.hisHer() + " feet, glaring down at the former Thrall.\n\n");
                                        c.say(t, "\"Hmph.  You took advantage of my kindness.  You're lucky that I didn't... entirely hate it...");
                                    }
                                    c.say(t, "\"");
                                    String description = "";
                                    if (c.innocence <= 66) {
                                        if (c.innocence <= 33) {
                                            description = "Even though " + c.heShe() + " knows it's nonsense, " + c.mainName + " goes along with a former Thrall claiming that " + c.heShe() + " needs to 'purify' his lust.";
                                        }
                                        else {
                                            description = "Too kind to refuse a person in need, " + c.mainName + " chooses to believe the dubious claims of a former Thrall who wants " + c.himHer() + " to sexually 'purify' him.";
                                        }
                                    }
                                    else {
                                        description = String.valueOf(c.mainName) + " lets " + c.himHer() + "self get tricked into 'purifying' a lustful former Thrall.";
                                    }
                                    this.save.saveScene(43, c.mainName, description);
                                    break Label_47698;
                                }
                                if (this.getCast()[i].morality > 66) {
                                    c = this.getCast()[i];
                                }
                            }
                            continue;
                        }
                    }
                    if (id != 11) {
                        if (id != 12) {
                            if (id != 13) {
                                if (id == 14) {
                                    for (int i = 0; i < 3; ++i) {
                                        if (this.getCast()[i].morality < 34) {
                                            c = this.getCast()[i];
                                        }
                                    }
                                    final String[] array8 = new String[5];
                                    array8[0] = c.mainName;
                                    final String[] nameDisplay = array8;
                                    this.append(t, String.valueOf(c.givenName) + ", with " + c.hisHer() + " twisted personality, has attracted a group of 'friends' that are more like a gang of thugs and hooligans.  Today, they're gathered in their hideout, formed in a circle around one unlucky fanboy who's already bruised and bleeding.  ");
                                    if (c.confidence <= 66) {
                                        if (c.confidence <= 33) {
                                            this.append(t, String.valueOf(c.givenName) + " is supposed to be the leader of their group, and in truth, " + c.heShe() + " has some slight romantic feelings for this fan.  However, " + c.heShe() + "'s terrified of displeasing " + c.hisHer() + " other friends, and they've convinced " + c.himHer() + " that " + c.heShe() + " should ostracize him.\n\n");
                                            c.say(t, "\"W-Wait, we're stripping him?  Um, alright, that's fine, I guess...\"\n\n");
                                            this.append(t, "Grinning at " + c.givenName + ", the ringleaders step forward tear the fan's clothes off and roughly shove him to the ground.  Then, they look at " + c.givenName + " expectantly, pressuring " + c.himHer() + " to go farther on " + c.hisHer() + " own.  ");
                                        }
                                        else {
                                            this.append(t, "The fan only mentioned that " + c.givenName + " was looking particularly good today, but after being taunted and molested by the Thralls so much, that was enough to put " + c.givenName + " in a bad mood.\n\n");
                                            c.say(t, "\"That's what you get for looking at me without permission.  Let's strip you and see how much you like it!\"\n\n");
                                            this.append(t, String.valueOf(c.givenName) + " steps forward, and with superhuman strength, starts tearing the fan's clothes to pieces.  He flinches away and refuses to defend himself, even when " + c.givenName + " shoves him to the floor.  ");
                                        }
                                    }
                                    else {
                                        this.append(t, "Today's battle was particularly stressful, so " + c.givenName + " picked out one of them at random to vent " + c.hisHer() + " frustrations upon.\n\n");
                                        c.say(t, "\"Let's have some more fun.  Strip him!\"\n\n");
                                        this.append(t, "At " + c.givenName + "'s command, several of the men in the circle step forward to rip the fan's clothes off and then push him to the floor, where he trembles and tries to cover himself.  ");
                                    }
                                    if (c.innocence <= 66) {
                                        if (c.innocence <= 33) {
                                            this.append(t, String.valueOf(c.givenName) + " sways seductively as " + c.heShe() + " walks up to " + c.hisHer() + " victim, then " + c.heShe() + " presents " + c.hisHer() + " shoe to him and demands that he lick it all over, including the underside.  It's a calculated move to get " + c.hisHer() + " friends to lust after " + c.himHer() + " even more, and as the humiliation continues, " + c.heShe() + " lifts up " + c.hisHer() + " skirt and demands that " + c.hisHer() + " victim lick " + c.hisHer() + " leg too.  Then, when he starts to reach " + c.hisHer() + " thigh, " + c.givenName + " abruptly brings " + c.hisHer() + " foot up in a sharp kick to his testicles.\n\n");
                                            c.say(t, "\"I didn't give you permission to enjoy it so much.  How pathetic you are.\"\n\n");
                                            this.append(t, "The fan groans, clutching himself and starting to collapse, but " + c.givenName + " keeps him upright with a hand in his hair, long enough to taunt him some more.  ");
                                        }
                                        else {
                                            this.append(t, String.valueOf(c.givenName) + " pulls out a knife and squats down in front of " + c.hisHer() + " victim, then begins slowly trailing the edge around his pubic region, then down to the base of his penis, firmly enough that " + c.heShe() + "'s almost drawing blood.\n\n");
                                            c.say(t, "\"What sort of punishment would be most fitting?  If you answer wrong...  I'll just chop off this worthless little thing.\"\n\n");
                                            this.append(t, "The fan sobs and babbles incoherently, but " + c.givenName + " isn't really listening.  ");
                                        }
                                    }
                                    else {
                                        this.append(t, String.valueOf(c.givenName) + " advances, standing over " + c.hisHer() + " victim in what " + c.heShe() + " hopes comes across as a menacing manner.  " + c.HeShe() + " starts to berate him, but as it happens, the position allows the fan to see up " + c.hisHer() + " skirt.  And despite the dire situation, the fan finds that his penis is starting to visibly grow hard.\n\n");
                                        c.say(t, "\"Ew!  Are you getting turned on right now!?  Gross, gross, cut it out!\"\n\n");
                                        this.append(t, "To punctuate " + c.hisHer() + " words, " + c.givenName + " stomps on his crotch with merciless force, but the stimulation only makes the problem even worse.  " + c.givenName + " stomps on it again and again, growing annoyed with the way that it springs back up each time.  ");
                                    }
                                    this.append(t, "The torture is far from done.\n\n");
                                    if (c.dignity <= 66) {
                                        if (c.dignity <= 33) {
                                            this.append(t, "After several hours, the fan is covered in bruises, blood and tears streaking down his face, and his mind is in even worse shape than his body.  The gang starts to leave as a group to head to a wild party being held on the other side of town, but " + c.givenName + " seems surprised when " + c.hisHer() + " victim just lays on the floor.  " + c.HeShe() + " goes back and picks him up by the arm, putting him on his feet and letting out a good-natured laugh.\n\n");
                                            c.say(t, "\"Why aren't you coming with?  We were just having some fun with you, it's no big deal!  We'll be friends forever!\"");
                                        }
                                        else {
                                            this.append(t, "Finally, everyone starts to get bored.  A few of " + c.givenName + "'s friends seem to want to continue, but after gauging everyone's mood, " + c.givenName + " just shrugs.\n\n");
                                            c.say(t, "\"You can kill him, rape him, sell his organs, whatever.  But there's a big party starting up on the other side of town.  Who wants to head there with me?\"");
                                        }
                                    }
                                    else {
                                        this.append(t, "In the end, the fan is forced to endure more psychological torment, more physical abuse from " + c.givenName + "'s friends, and more threats and manipulation.  " + c.HeShe() + " has to empty " + c.hisHer() + " wallet for the rest of the gang and repeatedly debase and insult " + c.himHer() + "self, and video footage is taken of the whole incident so that " + c.heShe() + " can be blackmailed later.  Only then does " + c.givenName + " let him back into " + c.hisHer() + " good graces.\n\n");
                                        c.say(t, "\"That wasn't so hard, was it?  I just have to be sure that you're willing to give up everything for me.\"");
                                    }
                                    Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                                    String description = "";
                                    if (c.confidence <= 66) {
                                        if (c.confidence <= 33) {
                                            description = String.valueOf(c.mainName) + " allows " + c.himHer() + "self to be manipulated into tormenting a less popular member of " + c.hisHer() + " friend group.";
                                        }
                                        else {
                                            description = "When one of " + c.mainName + "'s friends inadvertently reminds " + c.himHer() + " of " + c.hisHer() + " past abuses, " + c.heShe() + " takes it out on " + c.himHer() + ".";
                                        }
                                    }
                                    else {
                                        description = String.valueOf(c.mainName) + " abuses one of " + c.hisHer() + " friends in order to make " + c.himHer() + "self feel better.";
                                    }
                                    this.save.saveScene(47, c.mainName, description);
                                }
                            }
                            else {
                                for (int i = 0; i < 3; ++i) {
                                    if (this.getCast()[i].morality <= 66) {
                                        if (this.getCast()[i].morality > 33) {
                                            d = this.getCast()[i];
                                        }
                                    }
                                    else {
                                        c = this.getCast()[i];
                                    }
                                }
                                final String[] nameDisplay = { c.mainName, d.mainName, null, null, null };
                                this.append(t, String.valueOf(c.givenName) + " and " + d.givenName + " each want to outdo the other in fulfilling their Chosen duties.  Because both of them have come to believe that sexual skills are a valuable tool when fighting the Demons, they also each insist that the other's techniques for giving pleasure to the Thralls aren't as good.  In order to settle their dispute, they enlist a mutual friend, a boy who's known " + c.givenName + " for longer but who also has a lot of respect for " + d.givenName + ".  Even after being brought to a hotel room, he's still not entirely sure what the two Chosen want him for, so he gasps in shock when they pull his pants down and shove him down onto the bed.  ");
                                if (d.confidence <= 66) {
                                    if (d.confidence <= 33) {
                                        this.append(t, String.valueOf(d.givenName) + ", who lacks confidence in " + d.hisHer() + " chances of winning fairly, lunges forward to swallow up his cock first, wrapping " + d.hisHer() + " lips around it and sliding them all the way to the base.\n\n");
                                        c.say(t, "\"");
                                        if (c.dignity <= 66) {
                                            if (c.dignity <= 33) {
                                                c.say(t, "This is actually nice to watch...");
                                            }
                                            else {
                                                c.say(t, "That's not fair!");
                                            }
                                        }
                                        else {
                                            c.say(t, "Hmph.  Do you think that will be enough to beat me?");
                                        }
                                        c.say(t, "\"\n\n");
                                        d.say(t, "\"Mmf!\"\n\n");
                                        this.append(t, "Face blushing bright red, " + d.givenName + " hurriedly bobs " + d.hisHer() + " head up and down in order to drive " + d.hisHer() + " partner over the edge as soon as possible.  ");
                                    }
                                    else {
                                        this.append(t, String.valueOf(c.givenName) + " offers to let " + d.givenName + " go first, and " + d.givenName + " doesn't let the chance go to waste.  " + d.HeShe() + " immediately takes their friend's tip into " + d.hisHer() + " mouth, drooling all over it and using the saliva as lubricant for " + d.hisHer() + " hand.\n\n");
                                        d.say(t, "(I'll make you regret going easy on me...)\n\n");
                                        c.say(t, "\"");
                                        if (c.dignity <= 66) {
                                            if (c.dignity <= 33) {
                                                c.say(t, "Stop looking at me like that and just focus on sucking it.");
                                            }
                                            else {
                                                c.say(t, "I know I can do even better...");
                                            }
                                        }
                                        else {
                                            c.say(t, "Why do you look so angry?  I was even being nice...");
                                        }
                                        c.say(t, "\"\n\n");
                                        this.append(t, "With every stroke, " + d.givenName + " slides " + d.hisHer() + " lips further and further down the cock, and when there's no more room for " + d.hisHer() + " fingers to stroke the shaft, " + d.heShe() + " moves on to fondling the balls, gazing up at " + d.hisHer() + " partner.  ");
                                    }
                                }
                                else {
                                    this.append(t, String.valueOf(d.givenName) + " immediately shoves " + c.givenName + " aside and grabs the friend's cock, eager to prove " + d.hisHer() + " superiority.\n\n");
                                    c.say(t, "\"");
                                    if (c.dignity <= 66) {
                                        if (c.dignity <= 33) {
                                            c.say(t, "Hey!  You said I could go first!");
                                        }
                                        else {
                                            c.say(t, "Ugh, you bully.");
                                        }
                                    }
                                    else {
                                        c.say(t, "I think that going first will provide you an unfair advantage...");
                                    }
                                    c.say(t, "\"\n\n");
                                    d.say(t, "\"It's your fault for being too slow!\"\n\n");
                                    this.append(t, String.valueOf(d.givenName) + " jerks the cock with powerful strokes, manipulating the testicles between " + d.hisHer() + " fingers as " + d.heShe() + " smirks down at " + d.hisHer() + " partner, who quickly starts gasping and bucking his hips at the almost uncomfortably intense stimulation.  Then, " + d.givenName + " bends over, abruptly swallowing the cock down " + d.hisHer() + " throat all the way to the base.  ");
                                }
                                this.append(t, "The cock begins twitching in " + d.hisHer() + " throat, and a moment later, " + d.heShe() + "'s hurriedly swallowing down several spurts of cum.  When " + d.heShe() + " straightens up, there's a smug expression on " + d.hisHer() + " face, even as a dribble of white trails from the corner of " + d.hisHer() + " mouth.\n\n");
                                if (c.innocence <= 66) {
                                    if (c.innocence <= 33) {
                                        this.append(t, String.valueOf(c.givenName) + " knows that it's difficult to make a man cum twice in a row, so " + c.heShe() + " tries a completely different approach.  " + c.HeShe() + " handles the softening cock with care, gently trailing " + c.hisHer() + " fingers up and down its length, kissing " + c.hisHer() + " way from the base to the tip and back again, stimulating it gently with " + c.hisHer() + " breath in the process of asking " + c.hisHer() + " partner how it all feels.  Then, as it stiffens again, " + c.heShe() + " escalates the stimulation slowly, using " + c.hisHer() + " saliva as lubricant to stroke it while " + c.heShe() + " firmly massages the root under the balls with " + c.hisHer() + " tongue.  If " + c.heShe() + " can't get the quickest orgasm out of " + c.himHer() + ", " + c.heShe() + "'s determined to get the strongest one.\n\n");
                                        c.say(t, "\"Does it feel good?  Are you prepared for it to feel even better?\"\n\n");
                                        d.say(t, "\"");
                                        if (d.confidence <= 66) {
                                            if (d.confidence <= 33) {
                                                d.say(t, "I... I can't let " + c.himHer() + " continue...!");
                                            }
                                            else {
                                                d.say(t, "No fair!  You're taking way longer than I did!");
                                            }
                                        }
                                        else {
                                            d.say(t, "Time's up!  It's my turn again!");
                                        }
                                        d.say(t, "\"\n\n");
                                        this.append(t, "Right before he cums, " + d.givenName + " pushes " + d.hisHer() + " face in, trying to take control back from " + c.givenName + ".  " + d.givenName + " tries to copy " + c.givenName + "'s movements, placing " + d.hisHer() + " fingers opposite " + c.givenName + "'s and licking along the same path " + c.givenName + " does as if trying to erase the trail of " + c.givenName + "'s saliva.  " + c.givenName + " tries to push " + d.givenName + " back, and at first, the interference decreases the stimulation their friend feels.  But then, as they both get serious, ");
                                    }
                                    else {
                                        this.append(t, "The cock starts to go soft, but " + c.givenName + " begins servicing it with determination, furiously swirling " + c.hisHer() + " tongue around the tip while " + c.heShe() + " pumps " + c.hisHer() + " hand up and down the base and stares into its owner's eyes.  With a shudder and a groan, he bucks his hips into " + c.givenName + "'s face, trembling with the almost painful pleasure of cumming again in so short a timespan.\n\n");
                                        d.say(t, "\"");
                                        if (d.confidence <= 66) {
                                            if (d.confidence <= 33) {
                                                d.say(t, "I-I'll show you I can do even better than that!");
                                            }
                                            else {
                                                d.say(t, "If you're done already, then that means it's my turn!");
                                            }
                                        }
                                        else {
                                            d.say(t, "That was barely an orgasm!  Let me show you how it's done!");
                                        }
                                        d.say(t, "\"\n\n");
                                        c.say(t, "\"You took way longer than that, which means it's still my turn!\"\n\n");
                                        this.append(t, "When " + c.givenName + " pulls back for a moment, " + d.givenName + " tries to take the cock into " + d.hisHer() + " mouth again, but " + c.givenName + " grabs it in " + c.hisHer() + " fist, pulling it away.  " + d.givenName + " grabs it in " + d.hisHer() + " hand as well, fingers overlapping " + c.givenName + "'s, and lowers " + c.hisHer() + " head to start licking and sucking the testicles.  The two Chosen struggle over their friend's cock, each taking a testicle into their mouth, and ");
                                    }
                                }
                                else {
                                    this.append(t, String.valueOf(c.givenName) + " takes " + c.hisHer() + " place nervously, doubting " + c.hisHer() + " ability to match that performance.  " + c.HisHer() + " partner's cock is flaccid now, and while " + c.mainName + " has no trouble taking it into " + c.hisHer() + " mouth, it doesn't seem to respond.  Even when " + c.heShe() + " licks it all over, sucking the last drops of cum out of the tip, it's still too exhausted from the last orgasm to respond.\n\n");
                                    c.say(t, "\"Um, it doesn't want to get hard again...\"\n\n");
                                    d.say(t, "\"");
                                    if (d.confidence <= 66) {
                                        if (d.confidence <= 33) {
                                            d.say(t, "Heheh, looks like you need my help after all...");
                                        }
                                        else {
                                            d.say(t, "You're pathetic as always.");
                                        }
                                    }
                                    else {
                                        d.say(t, "Idiot, step aside!");
                                    }
                                    d.say(t, "\"\n\n");
                                    this.append(t, "When " + c.givenName + " pulls back for a moment, " + d.givenName + " steals " + c.hisHer() + " spot, taking the cock back into " + d.hisHer() + " mouth.  " + c.givenName + " has to settle for the testicles, sullenly licking and sucking them while " + c.heShe() + " glares at " + c.hisHer() + " rival.  The sight of the two Chosen servicing him together causes their friend's cock to begin growing hard again, and ");
                                }
                                this.append(t, "he starts approaching orgasm once again.\n\n");
                                if (d.innocence <= 66) {
                                    if (d.innocence <= 33) {
                                        this.append(t, "Just then, " + d.givenName + " elbows " + c.givenName + " in the ribs, and while " + c.givenName + " recoils, " + d.givenName + " starts deepthroating their friend's cock.  He cums inside " + d.hisHer() + " mouth, then immediately goes limp, clearly incapable of cumming again anytime soon.  " + c.givenName + " sighs and inclines " + c.hisHer() + " head, acknowledging that " + c.heShe() + " lost their bet, and that " + c.heShe() + "'ll have to do whatever " + d.givenName + " says.\n\n");
                                        this.append(t, "One hour later, the friend has been chased out and " + c.givenName + " is on " + c.hisHer() + " knees, arms bound behind " + c.hisHer() + " back");
                                        Label_45435: {
                                            if (!c.vVirg) {
                                                if (!c.aVirg) {
                                                    if (!c.gender.equals("male")) {
                                                        this.append(t, ", pussy and asshole both stuffed with vibrating dildoes with an extra vibrating egg taped against " + c.hisHer() + " ");
                                                        if (!c.gender.equals("female")) {
                                                            this.append(t, "straining penis.  ");
                                                        }
                                                        else {
                                                            this.append(t, "clit.  ");
                                                        }
                                                    }
                                                    else {
                                                        this.append(t, ", penis locked in a painfully tight chastity cage as a large vibrating dildo hums from deep inside " + c.hisHer() + " ass.  ");
                                                    }
                                                    break Label_45435;
                                                }
                                            }
                                            if (c.vVirg) {
                                                if (c.aVirg) {
                                                    this.append(t, ", a powerful vibrating wand held against " + c.hisHer() + " ");
                                                    if (!c.gender.equals("female")) {
                                                        this.append(t, "straining penis.  ");
                                                    }
                                                    else {
                                                        this.append(t, "clit.  ");
                                                    }
                                                }
                                                else if (!c.gender.equals("male")) {
                                                    this.append(t, ", a large vibrating dildo humming inside " + c.hisHer() + " ass.  ");
                                                }
                                                else {
                                                    this.append(t, ", " + c.hisHer() + " penis locked in a painfully tight chastity cage.  ");
                                                }
                                            }
                                            else if (!c.gender.equals("male")) {
                                                this.append(t, ", a large vibrating dildo humming inside " + c.hisHer() + " pussy.  ");
                                            }
                                            else {
                                                this.append(t, ", " + c.hisHer() + " asshole stuffed with a large vibrating dildo.  ");
                                            }
                                        }
                                        this.append(t, String.valueOf(d.givenName) + " sits with " + d.hisHer() + " legs around " + c.givenName + ", grabbing " + c.himHer() + " by the hair and forcing ");
                                        if (!d.gender.equals("female")) {
                                            this.append(t, String.valueOf(d.hisHer()) + " cock down " + c.givenName + "'s throat with only a few brief breaks for breath.\n\n");
                                        }
                                        else {
                                            this.append(t, String.valueOf(c.himHer()) + " to lick " + d.givenName + "'s crotch.\n\n");
                                        }
                                        d.say(t, "\"Aren't you pleased?  This is your chance to learn to do better so that you won't lose again.\"\n\n");
                                        c.say(t, "\"");
                                        Label_45820: {
                                            if (c.innocence > 66) {
                                                if (c.cVirg) {
                                                    c.say(t, "F-F-Feels weeeird!");
                                                    break Label_45820;
                                                }
                                            }
                                            if (c.gender.equals("male")) {
                                                if (!c.aVirg) {
                                                    c.say(t, "Pleeease, let me cuuum!");
                                                    break Label_45820;
                                                }
                                            }
                                            if (c.dignity <= 66) {
                                                if (d.dignity <= 33) {
                                                    c.say(t, "C-C-Cummiiing!");
                                                }
                                                else {
                                                    c.say(t, "Ah!  Ah!  Nnnaaah!");
                                                }
                                            }
                                            else {
                                                c.say(t, "Th-Th-Thank you ");
                                                if (!d.gender.equals("male")) {
                                                    c.say(t, "Mistress!");
                                                }
                                                else {
                                                    c.say(t, "Maaasteeer!");
                                                }
                                            }
                                        }
                                        c.say(t, "\"");
                                        Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
                                        Project.changePortrait(d.convertGender(), d.type, true, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                                    }
                                    else {
                                        this.append(t, "When the first spurt of cum starts to come out, " + c.givenName + " and " + d.givenName + " both swiftly move up and start sucking on the tip of his cock, practically kissing as they fight to steal every drop from their opponent.  They aren't happy about it, but neither wants to give the other a chance to claim to have been the one responsible for the orgasm.\n\nIn the end, there's no clear victor, and they keep going for round after round after round.  Finally, their friend lays exhausted, his aching cock hanging limp no matter how the two Chosen kiss and lick every inch of it, fondling his nipples and whispering sweet promises if he can get it up again.  When he begs them to stop, they glare at him as if it's his fault.");
                                        d.say(t, "\"You're useless!  Don't you have any pride as a man!?\"\n\n");
                                        c.say(t, "\"");
                                        if (c.dignity <= 66) {
                                            if (c.dignity <= 33) {
                                                c.say(t, "It's because you were too rough with him, " + d.givenName + "!");
                                            }
                                            else {
                                                c.say(t, "We'll have to use a vibrator on him.  It'll feel good, so he can't complain.");
                                            }
                                        }
                                        else {
                                            c.say(t, "You must take responsibility!");
                                        }
                                        c.say(t, "\"");
                                        Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                        Project.changePortrait(d.convertGender(), d.type, true, false, this, nameDisplay, 1, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                    }
                                }
                                else {
                                    this.append(t, "By that point, " + d.givenName + " has started to get very turned on " + d.himHer() + "self.  It's becoming harder and harder to remember that this is supposed to be a competition, especially since their jostling has ended up putting " + c.givenName + "'s thigh between " + d.givenName + "'s legs.  " + d.HeShe() + " starts to surreptitiously grind " + d.himHer() + "self against it, and just as their friend cums inside " + c.givenName + "'s mouth, " + d.givenName + " completely loses control and pushes " + c.givenName + " to the ground.\n\n");
                                    if (!c.gender.equals("female")) {
                                        if (!d.gender.equals("female")) {
                                            this.append(t, "Their penises rub against each other, ");
                                        }
                                        else {
                                            this.append(t, String.valueOf(d.givenName) + "'s wet lower lips rub up and down the underside of " + c.givenName + "'s penis, almost on the point of enveloping it, ");
                                        }
                                    }
                                    else if (!d.gender.equals("female")) {
                                        this.append(t, String.valueOf(d.givenName) + "'s penis grinds against " + c.givenName + "'s clit, ");
                                    }
                                    else {
                                        this.append(t, "Their clits bump into each other, ");
                                    }
                                    this.append(t, "and a shocked " + c.givenName + " chokes on the load shot down " + c.hisHer() + " throat, helplessly coughing and sputtering while " + d.givenName + " furiously humps " + c.himHer() + ".\n\n");
                                    this.append(t, "It's several minutes before " + c.givenName + " is able to push " + d.givenName + " away.  And while " + c.givenName + " was clearly the victor, " + d.givenName + " looks far happier, a dreamy smile on " + d.hisHer() + " face.\n\n");
                                    c.say(t, "\"");
                                    Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.SHAME, Project.Emotion.SHAME);
                                    if (c.dignity <= 66) {
                                        if (c.dignity <= 33) {
                                            Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                            c.say(t, "You have to acknowledge it!  Admit that I won!");
                                        }
                                        else {
                                            c.say(t, "At least I won...");
                                        }
                                    }
                                    else {
                                        c.say(t, "Doesn't really feel like I won...");
                                    }
                                    c.say(t, "\"\n\n");
                                    d.say(t, "\"Huh?  Won what?\"");
                                    Project.changePortrait(d.convertGender(), d.type, true, false, this, nameDisplay, 1, Project.Emotion.LEWD, Project.Emotion.LEWD);
                                }
                                String description = "";
                                if (d.innocence <= 66) {
                                    if (d.innocence <= 33) {
                                        description = String.valueOf(d.mainName) + " beats " + c.mainName + " in a game to make their friend cum, and subjects " + c.himHer() + " to a humiliating punishment game.";
                                    }
                                    else {
                                        description = String.valueOf(c.mainName) + " and " + d.mainName + " try to resolve which of them has better sexual skills, but their partner lacks the stamina to keep up.";
                                    }
                                }
                                else {
                                    description = String.valueOf(c.mainName) + " and " + d.mainName + " compete to see who can make their friend cum the most, but " + d.mainName + " forgets all about it and ends up molesting " + c.mainName + ".";
                                }
                                this.save.saveScene(46, String.valueOf(c.mainName) + "/" + d.mainName, description);
                            }
                        }
                        else {
                            for (int i = 0; i < 3; ++i) {
                                if (this.getCast()[i].morality <= 66) {
                                    if (this.getCast()[i].morality < 34) {
                                        d = this.getCast()[i];
                                    }
                                }
                                else {
                                    c = this.getCast()[i];
                                }
                            }
                            final String[] nameDisplay = { c.mainName, d.mainName, null, null, null };
                            this.append(t, "Tonight, both " + c.mainName + " and " + d.mainName + " have been assigned an evening patrol.  They split up and search separately, planning to rendezvous later on.  " + c.mainName + " is delayed by the appearance of a large Demon on " + c.hisHer() + " patrol, and " + c.heShe() + " ends up running late.  But when " + c.heShe() + " finally arrives, " + c.heShe() + " sees that the rendezvous area is already swarming with Thralls, and " + c.heShe() + " realizes that something must be wrong.\n\n");
                            this.append(t, "The Thralls seem to be expecting " + c.himHer() + ", and they don't appear to be afraid in the slightest.  Laughing and jeering at " + c.himHer() + ", the crowd parts to give " + c.himHer() + " a view of what's at the center.  ");
                            if (d.innocence <= 66) {
                                if (d.innocence <= 33) {
                                    this.append(t, String.valueOf(d.mainName) + " struggles weakly against the Thralls stripping " + d.himHer() + " and pawing at " + d.hisHer() + " body.  " + d.HeShe() + "'s bleeding from a head wound, and when one of the Thralls puts a knife to " + d.hisHer() + " throat, " + d.heShe() + " turns in wide-eyed desperation toward " + c.mainName + ".\n\n");
                                    d.say(t, "\"H-Help!  There's something wrong with my regeneration!\"\n\n");
                                    c.say(t, "\"");
                                    if (c.innocence <= 66) {
                                        c.say(t, "Is that even possible?  No, regardless, saving " + d.mainName + " comes first!");
                                    }
                                    else {
                                        c.say(t, "This is my chance to show " + d.mainName + " how nice heroes are, and turn " + d.himHer() + " into a good person!");
                                    }
                                    c.say(t, "\"\n\n");
                                }
                                else {
                                    this.append(t, String.valueOf(d.mainName) + " sways unsteadily, only held upright by the Thralls groping " + d.hisHer() + " chest and between " + d.hisHer() + " legs.  " + d.HisHer() + " head lolls to the side, but " + d.hisHer() + " bleary eyes start to focus and squint when " + d.heShe() + " sees " + c.mainName + ".\n\n");
                                    d.say(t, "\"" + c.mainName + "...?  Where... am I...?\"\n\n");
                                    c.say(t, "\"");
                                    if (c.innocence <= 66) {
                                        c.say(t, "Hmph.  Even if " + c.heShe() + "'s the type to neglect " + c.hisHer() + " duties for the sake of " + c.hisHer() + " own pleasure, " + c.heShe() + "'s clearly not in " + c.hisHer() + " right mind.  I must put a stop to this!");
                                    }
                                    else {
                                        c.say(t, "They're doing something weird to " + d.mainName + "!  Even if it's " + d.mainName + "... I can't just stand here!");
                                    }
                                    c.say(t, "\"\n\n");
                                }
                            }
                            else {
                                this.append(t, String.valueOf(d.mainName) + " hangs limp, apparently unconscious, in the arms of several Thralls who are happily groping " + d.hisHer() + " body and look intent on going even further.\n\n");
                                c.say(t, "\"");
                                if (c.innocence <= 33) {
                                    c.say(t, String.valueOf(d.HeShe()) + "... was knocked unconscious by mere Thralls?  How is this possible?  No, it doesn't matter!");
                                }
                                else {
                                    c.say(t, String.valueOf(d.mainName) + "!?  " + d.mainName + "!  Answer me, damn it!");
                                }
                                c.say(t, "\"\n\n");
                                d.say(t, "\"...\"\n\n");
                            }
                            this.append(t, "Despite how much they hate each other, " + c.mainName + " feels like " + c.heShe() + " has a duty to protect " + c.hisHer() + " teammate, and " + c.heShe() + "'s worried about what will happen if " + d.mainName + " is brought back to the Demonic hive in that state.  But there are too many Thralls between the two of them for " + c.mainName + " to fight " + c.hisHer() + " way through, so " + c.heShe() + " realizes that " + c.heShe() + " has no choice but to play nice with the Thralls until a chance to escape together appears.  When the Thralls' hands surge toward " + c.himHer() + ", " + c.heShe() + " doesn't resist.\n\n");
                            this.append(t, "One Thrall grabs " + c.mainName + " by the wrist and pulls " + c.himHer() + " forward at the same time as another kicks " + c.hisHer() + " leg out from under " + c.himHer() + ".  " + c.HeShe() + " falls to " + c.hisHer() + " knees, " + c.hisHer() + " head at waist level, and suddenly three different cocks are thrust against " + c.hisHer() + " face.  " + c.HeShe() + " turns away and reflexively closes " + c.hisHer() + " eyes in order to avoid having them poked out, but a rough hand in " + c.hisHer() + " hair jerks " + c.himHer() + " back into position, and one of the Thralls pinches " + c.hisHer() + " nose shut.  " + c.HisHer() + " lungs soon start burning for air, and when " + c.heShe() + " gasps for breath, a Thrall's thick shaft is rammed down " + c.hisHer() + " throat.\n\n");
                            this.append(t, String.valueOf(c.mainName) + "'s efforts to pull away from the cock in " + c.hisHer() + " mouth just cause " + c.hisHer() + " lips to slide back and forth along its length.  " + c.HeShe() + " can't resist too firmly for fear of what will happen to " + d.mainName + ".  " + c.HisHer() + " hands, clenched into fists, are pulled out to either side, and " + c.hisHer() + " soft fingers are pried apart so that another penis can be rubbed against each of " + c.hisHer() + " palms.  Even though " + c.heShe() + " refuses to actively stroke them, the Thralls seem plenty happy to just thrust against " + c.hisHer() + " skin.  " + c.HisHer() + " attempts to pull " + c.hisHer() + " hands away are interrupted when " + c.heShe() + " starts choking on the cum abruptly spurted down " + c.hisHer() + " throat, but before " + c.heShe() + " can catch " + c.hisHer() + " breath, the Thrall pulls out and is replaced by another cock big enough to make " + c.hisHer() + " jaw ache.\n\n");
                            this.append(t, String.valueOf(c.HisHer()) + " resistance grows weaker and weaker as the other Thralls cum on " + c.hisHer() + " hands and more approach to use " + c.hisHer() + " body, thrusting against " + c.hisHer() + " hair, against " + c.hisHer() + " clothes, and starting to undress " + c.himHer() + " in order to prepare " + c.himHer() + " for further violation.  " + c.HisHer() + " eyes start to glaze over, and only " + c.hisHer() + " determination to rescue " + c.hisHer() + " teammate keeps " + c.himHer() + " lucid.  ");
                            Label_39795: {
                                if (!c.vVirg) {
                                    if (!c.gender.equals("male")) {
                                        this.append(t, "It's not long before they start using " + c.hisHer() + " pussy as well, ramming themselves inside and cumming quickly between " + c.hisHer() + " squeezing folds until rivulets of semen are constantly streaming down " + c.hisHer() + " thighs.  " + c.HeShe() + " barely notices when ");
                                        if (!d.gender.equals("female")) {
                                            this.append(t, "a particularly strong Thrall starts raping " + c.himHer() + " with deep, cruel, merciless thrusts");
                                        }
                                        else {
                                            this.append(t, "one of " + c.hisHer() + " attackers starts fucking " + c.himHer() + " with a huge plastic strap-on dildo instead");
                                        }
                                        this.append(t, ".  However, when " + c.heShe() + " opens " + c.hisHer() + " eyes, " + c.heShe() + " sees ");
                                        break Label_39795;
                                    }
                                }
                                Label_39287: {
                                    if (c.gender.equals("male")) {
                                        if (!c.vVirg) {
                                            break Label_39287;
                                        }
                                    }
                                    if (!c.gender.equals("male")) {
                                        if (!c.aVirg) {
                                            break Label_39287;
                                        }
                                        if (c.pastTempted) {
                                            break Label_39287;
                                        }
                                    }
                                    this.append(t, String.valueOf(c.HeShe()) + "'s managed to protect " + c.hisHer() + " ");
                                    if (c.gender.equals("male")) {
                                        this.append(t, "anal ");
                                    }
                                    this.append(t, "virginity so far, but then a particularly strong Thrall holds " + c.himHer() + " down, and " + c.heShe() + " feels ");
                                    if (!d.gender.equals("female")) {
                                        this.append(t, "a penis ");
                                    }
                                    else {
                                        this.append(t, "a strap-on dildo ");
                                    }
                                    if (!c.gender.equals("male")) {
                                        this.append(t, "firmly forcing apart " + c.hisHer() + " lower lips.  ");
                                    }
                                    else {
                                        this.append(t, "starting to force its way into " + c.hisHer() + " asshole.  ");
                                    }
                                    this.append(t, String.valueOf(c.HeShe()) + " opens " + c.hisHer() + " eyes and sees ");
                                    break Label_39795;
                                }
                                this.append(t, "It's not long before they start using " + c.hisHer() + " asshole as well, ramming themselves inside and cumming quickly in " + c.hisHer() + " bowels until rivulets of semen are constantly streaming down " + c.hisHer() + " thighs.  " + c.HeShe() + " barely notices when ");
                                if (!d.gender.equals("female")) {
                                    this.append(t, "a particularly strong Thrall starts raping " + c.himHer() + " with deep, cruel, merciless thrusts");
                                }
                                else {
                                    this.append(t, "one of " + c.hisHer() + " attackers starts fucking " + c.himHer() + " with a huge plastic strap-on dildo instead");
                                }
                                this.append(t, ".  However, when " + c.heShe() + " opens " + c.hisHer() + " eyes, " + c.heShe() + " sees ");
                            }
                            this.append(t, "that it's " + d.mainName + ", grinning down at " + c.himHer() + " and looking perfectly fine.\n\n");
                            if (c.confidence <= 66) {
                                if (c.confidence <= 33) {
                                    this.append(t, String.valueOf(c.mainName) + " squeaks and tries to squirm away, but " + d.mainName + " just pushes " + c.himHer() + " down harder, ");
                                    Label_40634: {
                                        Label_40592: {
                                            if (c.vVirg) {
                                                Label_40529: {
                                                    if (c.aVirg) {
                                                        if (!c.pastTempted) {
                                                            break Label_40529;
                                                        }
                                                    }
                                                    if (!c.gender.equals("male")) {
                                                        break Label_40592;
                                                    }
                                                }
                                                this.append(t, "and " + c.mainName + " whimpers under the feeling of " + d.mainName + "'s shaft almost penetrating " + c.himHer() + ".\n\n");
                                                break Label_40634;
                                            }
                                        }
                                        this.append(t, String.valueOf(d.hisHer()) + " shaft bottoming out inside " + c.mainName + ".\n\n");
                                    }
                                    c.say(t, "\"P-Please... I just wanted to help you...!\"\n\n");
                                    d.say(t, "\"");
                                    if (d.innocence <= 66) {
                                        if (d.innocence <= 33) {
                                            d.say(t, "Such a gullible fool.  People like you exist to be prey for people like m-myaaah!?");
                                        }
                                        else {
                                            d.say(t, "What's the problem?  You were willing to get raped for my sake, so you might as well-  Gaaah!?");
                                        }
                                    }
                                    else {
                                        d.say(t, "The Thralls said this would put you right where I want you.  And now I'm gonna rape you all n-nnnaaah!?");
                                    }
                                    d.say(t, "\"\n\n");
                                    this.append(t, String.valueOf(d.mainName) + " is cut off by a Thrall rushing forward to pinch " + d.hisHer() + " butt.  Now that the Chosen are occupied with each other, the Thralls feel like they have a chance to take them both.  ");
                                }
                                else {
                                    this.append(t, String.valueOf(c.mainName) + " cries out in frustrated anger, pushing " + d.mainName + " away.  " + d.mainName + ", for " + d.hisHer() + " part, breaks out in laughter, almost doubling over as " + d.heShe() + " taunts " + c.mainName + ".\n\n");
                                    d.say(t, "\"");
                                    if (d.innocence <= 66) {
                                        if (d.innocence <= 33) {
                                            d.say(t, "A sudden failure of my regenerative powers?  Heh.  Who would believe something so ridiculous?");
                                        }
                                        else {
                                            d.say(t, "Even if they did drug me, why would I want your help?  Hah, get over yourself!");
                                        }
                                    }
                                    else {
                                        d.say(t, "You really are such a dummy!  Stupid, stupid, hahahah!");
                                    }
                                    d.say(t, "\"\n\n");
                                    c.say(t, "\"That's- Wait, look out behind you!\"\n\n");
                                    this.append(t, "A Thrall tackles " + d.mainName + " from behind, and two more do the same to " + c.mainName + ".  During their moment of distraction, the Thralls have decided that this is their chance to enjoy them both.  ");
                                }
                            }
                            else {
                                this.append(t, "A flash of true anger sparks in " + c.mainName + "'s eyes, more anger than " + c.heShe() + " once would have thought " + c.heShe() + " could ever feel.  A wave of pressure erupts outward as " + c.heShe() + " stands up, knocking the Thralls back, and " + c.heShe() + " lifts " + d.mainName + " up by the throat.\n\n");
                                c.say(t, "\"Why, " + d.mainName + "!?  Why would you punish me for wanting to help you!?\"\n\n");
                                d.say(t, "\"");
                                if (d.innocence <= 66) {
                                    if (d.innocence <= 33) {
                                        d.say(t, "Because... that's the part of you... which I hate the most!");
                                    }
                                    else {
                                        d.say(t, "Because I... fucking hate you...!  Don't you get it, dumbass!?");
                                    }
                                }
                                else {
                                    d.say(t, "Ack!  It was... gh... the Thralls'... idea...!");
                                }
                                d.say(t, "\"\n\n");
                                this.append(t, "Just then, while " + c.mainName + " is distracted, a Thrall runs up behind " + c.himHer() + " and whacks " + c.himHer() + " in the head with a metal pipe.  " + c.HeShe() + " falters, dropping " + d.mainName + ", who collapses to the ground as well, clearly weakened and vulnerable.  ");
                            }
                            this.append(t, "The crowd surges forward, and both " + c.mainName + " and " + d.mainName + " vanish in the press of bodies.\n\n");
                            this.append(t, "Some time later, " + c.mainName + " and " + d.mainName + " stumble down the street side-by-side, both caked in layers of sticky white cum and exhausted from the long fight.  " + c.mainName + " glares over at " + d.mainName + ".\n\n");
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                            Project.changePortrait(d.convertGender(), d.type, false, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    c.say(t, "\"This is foolish.  You're ensuring that I will be skeptical and hesitant even when you do actually need help.\"\n\n");
                                    d.say(t, "\"");
                                    if (d.dignity <= 66) {
                                        if (d.dignity <= 33) {
                                            Project.changePortrait(d.convertGender(), d.type, false, false, this, nameDisplay, 1, Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                                            d.say(t, "Meh.  I got along fine before you showed up.");
                                        }
                                        else {
                                            d.say(t, "That's a problem for future me.");
                                        }
                                    }
                                    else {
                                        Project.changePortrait(d.convertGender(), d.type, false, false, this, nameDisplay, 1, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                        d.say(t, "Don't call me a fool!  You're the fool for falling into such an obvious trap!");
                                    }
                                    d.say(t, "\"");
                                }
                                else {
                                    c.say(t, "\"That's it.  Next time, I'm really not helping you.\"\n\n");
                                    d.say(t, "\"");
                                    if (d.dignity <= 66) {
                                        if (d.dignity <= 33) {
                                            Project.changePortrait(d.convertGender(), d.type, false, false, this, nameDisplay, 1, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                            d.say(t, "Idiot.  I keep telling you I don't need your help.");
                                        }
                                        else {
                                            d.say(t, "Oh, come on.  You enjoyed it too.");
                                        }
                                    }
                                    else {
                                        Project.changePortrait(d.convertGender(), d.type, false, false, this, nameDisplay, 1, Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                                        d.say(t, "Whatever.");
                                    }
                                    d.say(t, "\"");
                                }
                            }
                            else {
                                d.say(t, "\"");
                                if (d.dignity <= 66) {
                                    if (d.dignity <= 33) {
                                        d.say(t, "It must be hard to be so weak and stupid.  You should thank me for teaching you a lesson.");
                                    }
                                    else {
                                        d.say(t, "Oh, stop glaring at me like that.  It's not cute at all.");
                                    }
                                }
                                else {
                                    d.say(t, "Oh, " + c.mainName + ", I'm so sorry for taking advantage of your stupidly kindhearted nature.  I won't do it again, I promise!  So make sure to 'rescue' me again next time!  Hahahah!");
                                }
                                d.say(t, "\"\n\n");
                                c.say(t, "\"Ugh, you're... you're really, really, really, really.... really mean!  Really!\"");
                            }
                            String description = "";
                            if (d.innocence <= 66) {
                                if (d.innocence <= 33) {
                                    description = String.valueOf(c.mainName) + " tries to save the seemingly helpless " + d.mainName + ", but it turns out to be a plot by " + d.mainName + " to rape " + c.himHer() + ".";
                                }
                                else {
                                    description = String.valueOf(d.mainName) + " plays a nasty prank on " + c.mainName + ", tricking " + c.himHer() + " into surrendering to a group of Thralls.";
                                }
                            }
                            else {
                                description = "Acting on a suggestion from the Thralls " + d.heShe() + " uses to satisfy " + d.hisHer() + " sexual needs, " + d.mainName + " feigns unconsciousness in order to fool " + c.mainName + " into trying to rescue " + c.himHer() + ".";
                            }
                            this.save.saveScene(45, String.valueOf(c.mainName) + "/" + d.mainName, description);
                        }
                    }
                    else {
                        for (int i = 0; i < 3; ++i) {
                            if (this.getCast()[i].morality > 33) {
                                if (this.getCast()[i].morality < 67) {
                                    c = this.getCast()[i];
                                }
                            }
                        }
                        final String[] array9 = new String[5];
                        array9[0] = c.mainName;
                        final String[] nameDisplay = array9;
                        this.append(t, "As the Demons have grown stronger, the stress of battle has become harder and harder for " + c.mainName + " to bear.  " + c.HeShe() + "'s already exhausted by the time " + c.heShe() + " comes home from each fight, and on top of that, " + c.hisHer() + " schedule is packed with training sessions and public appearances.  The burden is too much for " + c.hisHer() + " body and mind to bear, and eventually, after an event spent mingling and signing autographs for " + c.hisHer() + " fans, " + c.heShe() + " returns to " + c.hisHer() + " dressing room and falls asleep in " + c.hisHer() + " chair.\n\n");
                        this.append(t, "For superhumans like the Chosen, there's no need for private security details, and the only thing protecting " + c.mainName + "'s rest is the dressing room door " + c.heShe() + " forgot to lock.  A male fan trespassing backstage pushes open the door and is shocked by what he sees inside.  ");
                        if (c.dignity <= 66) {
                            if (c.dignity <= 33) {
                                this.append(t, String.valueOf(c.mainName) + " is leaning back in the chair, eyes closed, mouth wide open as " + c.heShe() + " snores loudly.  The man stares for several moments, eyes traveling up the lines of " + c.hisHer() + " defenseless body before settling on " + c.hisHer() + " lips and the glistening drool running down one cheek.  With a start, the man realizes that his cock is growing hard.\n\n");
                                this.append(t, "\"It's already wide open... like " + c.heShe() + "'s asking for it...\"\n\n");
                                this.append(t, "On impulse, the man hurriedly unzips his pants and starts to masturbate.  With " + c.mainName + "'s snoring, he doesn't feel like he needs to worry about being too noisy.  " + c.HisHer() + " open mouth invites him, and he steps closer, looking down " + c.hisHer() + " throat and dreaming of filling it with his cum.  But then he realizes that he doesn't need to dream.  He stands on a nearby chair and starts to masturbate at " + c.mainName + "'s mouth, leaning closer and closer until " + c.hisHer() + " snores are muffled, " + c.hisHer() + " lips encircling his cock.\n\n");
                            }
                            else {
                                this.append(t, String.valueOf(c.mainName) + " is sleeping with " + c.hisHer() + " upper half on the table, " + c.hisHer() + " face turned to one side, breathing the deep, steady breaths of sleep.  The fan sneaks over, bending down to take a closer look.  At first, he plans on sneaking out before he's caught, but standing so close to the object of his obsession has an effect on him, and he realizes that his cock is standing almost painfully erect in his pants.\n\n");
                                this.append(t, "\"This...  This is a once in a lifetime chance...!\"\n\n");
                                this.append(t, "He carefully, slowly unzips his pants, then starts to quietly masturbate.  His hips jerk when he feels " + c.mainName + "'s breath on his penis, and he moves it closer and closer to " + c.himHer() + ".  When he feels " + c.hisHer() + " lips against his tip, he has to stifle a groan of pleasure.  But he wants to go even further.  He pushes forward until " + c.mainName + "'s lips part, taking the man's tip into " + c.hisHer() + " mouth.\n\n");
                            }
                        }
                        else {
                            this.append(t, "At first, " + c.mainName + " looks like " + c.heShe() + "'s awake and just resting " + c.hisHer() + " eyes, but " + c.heShe() + " doesn't react to the noise of the door opening, and in " + c.hisHer() + " current state of undress, that can only mean that " + c.heShe() + "'s asleep.  " + c.HeShe() + " isn't wearing " + c.hisHer() + " " + c.topDesc() + ", and the fan feels his cock growing stiff at the sight of " + c.hisHer() + " nipples.\n\n");
                            this.append(t, "\"I only came here for an autograph... but it's like you're telling me I can have something even better...\"\n\n");
                            this.append(t, "The man quickly snaps some pictures for his own personal use, but when " + c.mainName + " shows no signs of waking anytime soon, he grows bolder and unzips his pants.  As he starts to masturbate, the allure of " + c.mainName + "'s sleeping face becomes too much to bear.  When he stands on his tiptoes and braces himself on the table, he finds that he can make his cock reach " + c.mainName + "'s lips.  Then, ever so slowly, he pushes his hips forward until those lips are wrapped around his shaft.\n\n");
                        }
                        if (c.confidence <= 66) {
                            if (c.confidence <= 33) {
                                this.append(t, "\"Acting all shy and helpless all the time...!  I bet you were secretly hoping someone would come along and... ngh!  Rape your mouth...!\"\n\n");
                                this.append(t, String.valueOf(c.mainName) + " whimpers softly as it hits the back of " + c.hisHer() + " throat, but " + c.heShe() + " truly has driven " + c.himHer() + "self to the point of exhaustion, and " + c.heShe() + " remains asleep.  ");
                            }
                            else {
                                this.append(t, "\"Aah... is that your tongue...?  You were a slut all along.  My own dirty little slut...!\"\n\n");
                                this.append(t, "The feeling of a warm rod invading " + c.hisHer() + " mouth has invaded " + c.mainName + "'s dream.  But it's not an unpleasant dream, and " + c.heShe() + " moans softly as " + c.hisHer() + " tongue caresses the shaft, dreaming of pleasuring a lover.  ");
                            }
                        }
                        else {
                            this.append(t, "\"Take this... you bitch... ngh...!  You're just a wet hole for my cock...!\"\n\n");
                            this.append(t, String.valueOf(c.mainName) + " has some fans who genuinely admire " + c.himHer() + ", but " + c.hisHer() + " headstrong nature has attracted many more who watch " + c.himHer() + " with twisted desires, hoping to see " + c.himHer() + " humbled and broken.  This fan is one of the latter.  He exults in the feeling of debasing such an arrogant heroine.  ");
                        }
                        this.append(t, "It's impossible to truly thrust in and out without risking waking " + c.himHer() + ", but the man still holds the tip inside " + c.mainName + "'s mouth as he furiously pumps his hand up and down the base of his shaft.\n\nIt's an awkward position, but the situation is incredibly arousing, and the warm wetness of " + c.mainName + "'s mouth around his tip is overwhelming.  His orgasm hits him abruptly.  He loses his balance, and only the first spurt goes onto " + c.mainName + "'s tongue and down " + c.hisHer() + " throat.  The rest ends up on " + c.hisHer() + " face and hair.  ");
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                        if (c.innocence <= 66) {
                            if (c.innocence <= 33) {
                                this.append(t, "The warmth in " + c.hisHer() + " mouth causes " + c.mainName + " to start to stir, but by the time " + c.heShe() + " opens " + c.hisHer() + " eyes, the fan has fled down the hallway.  " + c.mainName + " instantly realizes what happened");
                                if (c.timesFantasized() <= 0) {
                                    Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.ANGER, Project.Emotion.ANGER);
                                    this.append(t, ", and " + c.hisHer() + " mouth twists in disgust and anger, both at " + c.hisHer() + " attacker and at " + c.himHer() + "self.\n\n");
                                    c.say(t, "\"Foolish of me to let my guard down.  I must always remain vigilant...  Always, without exception...\"");
                                }
                                else {
                                    this.append(t, ", and " + c.heShe() + " smirks as " + c.heShe() + " collects the remaining cum on " + c.hisHer() + " fingers and licks them off.\n\n");
                                    c.say(t, "\"He must have fled.  What a shame.  I might have enjoyed playing around a bit more...\"");
                                }
                            }
                            else {
                                this.append(t, "Only then does he realize how lucky he is that " + c.mainName + " is sleeping so deeply.  He hurries from the room.  A few minutes later, one of " + c.mainName + "'s assistants arrives and gasps upon seeing the cum spattered across " + c.himHer() + ".  The assistant frets for awhile before deciding that it'd be better if " + c.mainName + " doesn't know that anything is amiss.  By the time " + c.mainName + " wakes, " + c.heShe() + "'s already been cleaned up, and " + c.heShe() + " continues about " + c.hisHer() + " day without a care in the world.\n\n");
                                c.say(t, "\"Mm...!  Ah!  What a refreshing nap!  I should do this more often.\"");
                            }
                        }
                        else {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                            this.append(t, String.valueOf(c.mainName) + " chokes and coughs, stumbling backward to stare bleary-eyed at the fan, who stares back at " + c.himHer() + " like a deer caught in the headlights.  Thinking quickly, he manages to convince " + c.himHer() + " that " + c.heShe() + " was already that way when he walked in, and then the fan quickly makes his escape before anyone else can show up to question him.\n\n");
                            c.say(t, "\"Weird...  I must've just drooled a whole, whole bunch.\"");
                        }
                        String description = "";
                        if (c.innocence <= 66) {
                            if (c.innocence <= 33) {
                                description = "A passing fan molests " + c.mainName + " in " + c.hisHer() + " sleep, but " + c.heShe() + " wakes too slowly to do anything about it.";
                            }
                            else {
                                description = "After falling asleep from exhaustion, " + c.mainName + " is molested in " + c.hisHer() + " sleep and wakes none the wiser.";
                            }
                        }
                        else {
                            description = String.valueOf(c.mainName) + " wakes from " + c.hisHer() + " nap bewildered to find " + c.himHer() + "self covered in a horny fan's cum.";
                        }
                        this.save.saveScene(44, c.mainName, description);
                    }
                }
                else {
                    for (int i = 0; i < 3; ++i) {
                        if (this.getCast()[i] != null) {
                            if (this.getCast()[i].confidence <= 66) {
                                if (this.getCast()[i].confidence > 33) {
                                    d = this.getCast()[i];
                                }
                            }
                            else {
                                c = this.getCast()[i];
                            }
                        }
                    }
                    final String[] nameDisplay = { c.mainName, d.mainName, null, null, null };
                    this.append(t, "Neither " + c.mainName + " nor " + d.mainName + " have anything scheduled for after the battle, ");
                    if (c.innocence <= 66) {
                        if (c.innocence <= 33) {
                            this.append(t, "but " + c.mainName + " hates wasting time that could be spent productively, so " + c.heShe() + " challenges " + d.mainName + " to a sparring match.\n\n");
                            c.say(t, "\"We must become stronger if we are to prevail.\"\n\n");
                            d.say(t, "\"");
                            if (d.dignity <= 66) {
                                if (d.dignity <= 33) {
                                    d.say(t, "Ah, crap.  This is gonna hurt, isn't it?");
                                }
                                else {
                                    d.say(t, "Uh, I guess so...  W-Wait, are you saying we should fight!?");
                                }
                            }
                            else {
                                d.say(t, "Hmph, I'm strong enough.  But if you're going to get even stronger, I won't let you leave me behind!");
                            }
                        }
                        else {
                            this.append(t, "so " + c.mainName + " tells " + d.mainName + " that they'll pass the time with some friendly combat practice.\n\n");
                            c.say(t, "\"It's better than just sitting around and being bored, right?\"\n\n");
                            d.say(t, "\"");
                            if (d.dignity <= 66) {
                                if (d.dignity <= 33) {
                                    d.say(t, "You're right!  Let's do it!");
                                }
                                else {
                                    d.say(t, "If practicing is what you want to do, then we'll practice!");
                                }
                            }
                            else {
                                d.say(t, "I'm not sure about that...");
                            }
                        }
                    }
                    else {
                        this.append(t, "but " + c.mainName + " has a lot of aggression and frustration " + c.heShe() + " wants to work off, so " + c.heShe() + " challenges " + d.mainName + " to a practice match.\n\n");
                        c.say(t, "\"Fight me, " + d.mainName + "!\"\n\n");
                        d.say(t, "\"");
                        if (d.dignity <= 66) {
                            if (d.dignity <= 33) {
                                d.say(t, "I know I'm no match for you, " + c.mainName + ".  But it's true that I could use the practice...");
                            }
                            else {
                                d.say(t, "I understand.  I'll give you a chance to reclaim your pride and honor.");
                            }
                        }
                        else {
                            d.say(t, "This might not go well for me... but I will not back down!");
                        }
                    }
                    d.say(t, "\"\n\n");
                    this.append(t, "They decide to practice their unarmed combat techniques, hand-to-hand wrestling with the intent to subdue and avoid being pinned, each treating the other the way they'd treat a hostile Thrall.  After flying together to an abandoned lot near the city limits, where no one will see or disturb them, they rush directly at each other, and their mock-battle is joined.  ");
                    Label_30680: {
                        if (d.morality <= 66) {
                            if (d.morality <= 33) {
                                this.append(t, String.valueOf(d.mainName) + " knows " + d.heShe() + "'s outmatched, and so despite their friendship, " + d.heShe() + " fights dirty, spitting in " + c.mainName + "'s eye, delivering painful jabs to " + c.hisHer() + " vitals, and kneeing " + c.himHer() + " in the crotch.  ");
                                if (!c.gender.equals("female")) {
                                    this.append(t, String.valueOf(d.HeShe()) + " even tears " + c.mainName + "'s " + c.bottomDesc() + " partway off, only to be startled at how " + c.mainName + "'s erect cock springs out.  With a very slightly mischievous smile, " + c.mainName + " advances on " + d.himHer() + ".  ");
                                }
                                else {
                                    this.append(t, "Something strikes " + d.mainName + " as odd, and " + d.hisHer() + " suspicions are confirmed when " + c.mainName + " adjusts " + c.hisHer() + " " + c.bottomDesc() + " with a very slightly mischievous smile to reveal the strap-on dildo worn underneath.  ");
                                }
                                this.append(t, String.valueOf(d.mainName) + " backs away slowly, a nervous grin on " + d.hisHer() + " face.\n\n");
                                d.say(t, "\"" + c.mainName + "...?  Y-You aren't a rapist, right...?\"\n\n");
                                c.say(t, "\"");
                                if (c.innocence <= 66) {
                                    if (c.innocence <= 33) {
                                        if (c.morality > 66) {
                                            if (c.timesSlaughtered() > 0) {
                                                c.say(t, "You know that I am.  And soon to become a repeat offender, I think.");
                                                break Label_30680;
                                            }
                                        }
                                        c.say(t, "Not yet.  Though if you win, I suppose I'll only be an attempted rapist.");
                                    }
                                    else {
                                        c.say(t, "This isn't rape, it's training!  Now, fight me off if you can!");
                                    }
                                }
                                else {
                                    c.say(t, "I'm not " + c.mainName + " right now, I'm a super horny Thrall!  Which means I'm totally gonna rape ya!");
                                }
                            }
                            else {
                                this.append(t, "They clash and separate from each other several times, " + c.mainName + " testing " + d.mainName + "'s strength, and " + d.mainName + " fighting hard to avoid giving ground.  Finally, with a smirk of satisfaction, " + c.mainName + " adjusts " + c.hisHer() + " " + c.bottomDesc() + ", then stands proud with ");
                                if (!c.gender.equals("female")) {
                                    this.append(t, String.valueOf(c.hisHer()) + " erect cock out in the open.  ");
                                }
                                else {
                                    this.append(t, String.valueOf(c.hisHer()) + " strap-on dildo poking out.  ");
                                }
                                this.append(t, String.valueOf(d.mainName) + "'s eyes widen.\n\n");
                                d.say(t, "\"How exactly are you going to fight me with... that...?\"\n\n");
                                c.say(t, "\"");
                                if (c.innocence <= 66) {
                                    if (c.innocence <= 33) {
                                        c.say(t, "It isn't a matter of fighting you.  I'm simply making the scenario - Chosen versus Thrall - more realistic for you.  You should thank me.");
                                    }
                                    else {
                                        c.say(t, "The same way Thralls do, of course!  Don't tell me you've already forgotten the rules for this match.");
                                    }
                                }
                                else {
                                    c.say(t, "Um, I haven't really thought that far ahead, but...  I wanna try anyway!");
                                }
                            }
                        }
                        else {
                            this.append(t, String.valueOf(d.mainName) + " doesn't have much hope of winning, but " + d.heShe() + "'s still determined to help " + c.mainName + " hone " + c.hisHer() + " skills, so " + d.heShe() + " fights hard.  However, in the midst of struggling while being pinned from behind, " + d.heShe() + " falters when " + d.heShe() + " hears the rustle of clothing and feels the firm shaft of ");
                            if (!c.gender.equals("female")) {
                                this.append(t, String.valueOf(c.mainName) + "'s cock ");
                            }
                            else {
                                this.append(t, "what must be a strap-on dildo worn by " + c.mainName + " ");
                            }
                            this.append(t, "against " + d.hisHer() + " thigh.\n\n");
                            d.say(t, "\"" + c.mainName + "!?  S-Slow down, we didn't talk about doing this!\"");
                            c.say(t, "\"");
                            if (c.innocence <= 66) {
                                if (c.innocence <= 33) {
                                    c.say(t, "Didn't we?  Right now, I'm playing the part of a Thrall for you.  And I have been looking forward to doing what Thralls do when they win...");
                                }
                                else {
                                    c.say(t, "Sure we did.  What did you expect to happen when you lost against a 'Thrall'?");
                                }
                            }
                            else {
                                c.say(t, "Don't wanna slow down!  Being this close has got me super turned on!");
                            }
                        }
                    }
                    c.say(t, "\"\n\n");
                    this.append(t, "The battle is resumed, and " + d.mainName + " fights even harder as " + c.mainName + " wrestles " + d.himHer() + " on the ground.  " + d.mainName + "'s knees and elbows leave deep bruises in " + c.mainName + "'s torso, and " + c.mainName + " retaliates by headbutting " + d.mainName + " in the forehead so hard that " + d.heShe() + " sees stars.  As " + c.mainName + " uses " + c.hisHer() + " weight to pin " + d.mainName + " down, " + d.mainName + "'s fingernails leave deep scratches in " + c.mainName + "'s back.  " + c.mainName + " forces a kiss on " + d.mainName + ", and " + d.mainName + " bites " + c.mainName + "'s lip hard enough to draw blood.  When " + c.mainName + " tears off " + d.mainName + "'s " + d.bottomDesc() + ", " + d.mainName + " tries to cross " + d.hisHer() + " thighs, but " + c.mainName + " forces them apart with " + c.hisHer() + " own knees, fighting to inch " + c.hisHer() + " ");
                    if (!c.gender.equals("female")) {
                        this.append(t, "cock");
                    }
                    else {
                        this.append(t, "dildo");
                    }
                    this.append(t, " closer to " + d.mainName + "'s ");
                    Label_31171: {
                        if (!d.gender.equals("male")) {
                            if (!d.vVirg) {
                                this.append(t, "pussy.\n\n");
                                break Label_31171;
                            }
                        }
                        this.append(t, "anus.\n\n");
                    }
                    this.append(t, "Finally, " + c.mainName + " rams " + c.himHer() + "self inside, all the way to the base, in one savage thrust.  " + d.mainName + " screams into " + c.mainName + "'s mouth, both with pleasure and with pain at the rough insertion, but " + d.heShe() + " doesn't stop fighting.  Every buck of " + d.hisHer() + " hips, every squirm and kick, makes " + d.himHer() + " even more aware of the thick rod invading " + d.hisHer() + " body.  But " + c.mainName + " can feel " + d.mainName + " squeezing down as well");
                    if (c.gender.equals("female")) {
                        this.append(t, ", every jostle of the dildo being transmitted through the harness to " + c.mainName + "'s clit.  ");
                    }
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.JOY, Project.Emotion.JOY);
                    Project.changePortrait(d.convertGender(), d.type, false, false, this, nameDisplay, 1, Project.Emotion.JOY, Project.Emotion.JOY);
                    if (d.dignity <= 66) {
                        if (d.dignity <= 33) {
                            this.append(t, String.valueOf(d.mainName) + " cums first.  As " + d.heShe() + " arches " + d.hisHer() + " back and screams out loud, " + c.mainName + " keeps thrusting, staring into " + d.hisHer() + " eyes until " + c.heShe() + "'s certain that " + d.mainName + " knows that " + c.mainName + " was able to outlast " + d.himHer() + ".\n\n");
                            d.say(t, "\"Nnnaaah!  C-Cummiiing!  Ah, ah, aaah!\"\n\n");
                            this.append(t, "Only then does " + c.mainName + " permit " + c.himHer() + "self to cum as well");
                            if (!c.gender.equals("female")) {
                                this.append(t, ", filling " + d.mainName + "'s desperately spasming depths with " + c.hisHer() + " cum");
                            }
                            this.append(t, ".\n\n");
                            c.say(t, "\"");
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    c.say(t, "I'll always be stronger, " + d.mainName + ".  I can do this to you whenever I want.  But that just turns you on even more, doesn't it?");
                                }
                                else {
                                    c.say(t, "I win, " + d.mainName + ".  But I'll always be up for a rematch.");
                                }
                            }
                            else {
                                c.say(t, "I could watch you climax all day, " + d.mainName + ".  Hm...  In fact, maybe I should make you climax all day...");
                            }
                            c.say(t, "\"");
                        }
                        else {
                            this.append(t, "They cum at the same time, briefly forgetting their fight as they embrace and moan into each other's mouth");
                            if (!c.gender.equals("female")) {
                                this.append(t, ", " + d.mainName + " squeezing down hard as " + c.mainName + " shoots " + c.hisHer() + " load deep inside " + d.himHer());
                            }
                            this.append(t, ".  Then, they lay side-by-side, smiling at each other despite the cuts and bruises that cover them both.\n\n");
                            c.say(t, "\"");
                            if (c.morality <= 66) {
                                if (c.morality <= 33) {
                                    c.say(t, "You like it rough, don't you?  Good thing I do, too.");
                                }
                                else {
                                    c.say(t, "You really enjoyed that, didn't you?  I hope you weren't holding back.");
                                }
                            }
                            else {
                                Project.changePortrait(c.convertGender(), c.type, false, false, this, nameDisplay, 0, Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                                c.say(t, "I hope I wasn't too rough with you, " + d.mainName + "...  Sometimes I don't know my own strength.");
                            }
                            c.say(t, "\"\n\n");
                            d.say(t, "\"Ah...  " + c.mainName + "...  That was... amazing...\"");
                        }
                    }
                    else {
                        this.append(t, String.valueOf(d.mainName) + " is just barely able to withstand the pleasure until " + c.mainName + " climaxes.  Only then does " + d.mainName + " allow " + d.himHer() + "self to orgasm as well");
                        if (!c.gender.equals("female")) {
                            this.append(t, ", " + d.hisHer() + " spasms squeezing out the last few drops of cum from " + c.mainName + "'s cock");
                        }
                        this.append(t, ".  As " + c.mainName + " finally goes limp atop " + d.himHer() + ", " + d.mainName + "'s bleary eyes carry a hint of smugness despite " + d.hisHer() + " cuts and bruises.\n\n");
                        d.say(t, "\"Heh.  I made you cum first.\"\n\n");
                        c.say(t, "\"");
                        if (c.morality <= 66) {
                            if (c.morality <= 33) {
                                c.say(t, "You're still acting like there's anything shameful about cumming?  I swear I'll make a proper slut out of you one of these days...");
                            }
                            else {
                                c.say(t, "I guess... we can call this... a draw.  Phew...");
                            }
                        }
                        else {
                            c.say(t, "You did.  I'm really impressed.  You're strong too, in your own way.");
                        }
                        c.say(t, "\"");
                    }
                    String description = "";
                    if (c.morality <= 66) {
                        if (c.morality <= 33) {
                            description = String.valueOf(c.mainName) + " vents " + c.hisHer() + " sadistic urges by sexually assaulting " + d.mainName + " during a training match, but " + d.mainName + " doesn't mind in the slightest.";
                        }
                        else {
                            description = "Using a training match as an excuse, " + c.mainName + " pins down and 'rapes' " + d.mainName + ", much to the latter's delight.";
                        }
                    }
                    else {
                        description = String.valueOf(c.mainName) + " allows one of " + c.hisHer() + " training sessions with " + d.mainName + " to take a very sexual turn.";
                    }
                    this.save.saveScene(42, String.valueOf(c.mainName) + "/" + d.mainName, description);
                }
            }
            else {
                for (int i = 0; i < 3; ++i) {
                    if (this.getCast()[i] != null) {
                        if (this.getCast()[i].morality > 66) {
                            c = this.getCast()[i];
                        }
                    }
                }
                final String[] array10 = new String[5];
                array10[0] = c.mainName;
                final String[] nameDisplay = array10;
                this.append(t, String.valueOf(c.mainName) + " had scheduled an appearance today at one of the city's children's hospitals, and although a part of " + c.himHer() + " wants to cancel it and just go home to rest, " + c.heShe() + " feels like " + c.heShe() + "'s obligated to keep " + c.hisHer() + " word and show up.  In order to avoid any chance that the paparazzi might follow " + c.himHer() + " and disrupt the event, " + c.heShe() + " heads there in " + c.hisHer() + " civilian form");
                if (!c.mainName.equals(c.givenName)) {
                    this.append(t, " as " + c.givenName);
                }
                this.append(t, " and travels by public train, wearing a pair of thick sunglasses so that " + c.heShe() + "'s not recognized.\n\n");
                this.append(t, "The train car is packed with people, and at first, " + c.givenName + " doesn't think twice about feeling something rubbing against " + c.hisHer() + " butt when a bump in the tracks jostles the crowd.  However, when the hand returns and starts running up and down " + c.hisHer() + " hip and outer thigh ");
                if (!c.gender.equals("male")) {
                    this.append(t, "through " + c.hisHer() + " thin yoga pants, " + c.heShe() + " realizes that it must be a molester.\n\n");
                }
                else {
                    this.append(t, "through " + c.hisHer() + " tight jeans, " + c.heShe() + " has to consider that it might be intentional.  It's surprising, since " + c.heShe() + " isn't even dressed as a girl right now, but the glasses can't hide " + c.hisHer() + " pretty features.\n\n");
                }
                if (c.innocence <= 66) {
                    if (c.innocence <= 33) {
                        this.append(t, "Under any other circumstances, " + c.givenName + " would consider " + c.himHer() + "self required to apprehend him on the spot so that he wouldn't have a chance to victimize anyone else.  But " + c.hisHer() + " schedule is completely booked with important tasks, and the time required to sort this out with police would require cancelling either the hospital visit or one of " + c.hisHer() + " later appointments.\n\n");
                        c.say(t, "(I will try to memorize his face and make a report later tonight.");
                    }
                    else {
                        this.append(t, String.valueOf(c.givenName) + " wants to turn around and confront him, but " + c.heShe() + " also wants to be extra certain that " + c.heShe() + "'ll arrive at the hospital in time for the event.  When " + c.heShe() + " thinks of needing to get off the train, talk to the police, and potentially even help subdue the molester if he resists, " + c.heShe() + " decides that " + c.heShe() + " can endure this for the sake of the children.\n\n");
                        c.say(t, "(I put up with worse practically every day.");
                    }
                }
                else {
                    this.append(t, "Normally, the unwanted touch of a stranger would have caused " + c.givenName + " to squeal and push him away by reflex.  But now that " + c.heShe() + "'s gotten used to getting groped by the Thralls, " + c.heShe() + " no longer has that instinctive reaction, and " + c.hisHer() + " hesitation causes " + c.himHer() + " to start doubting " + c.himHer() + "self.  Even in a situation like this, " + c.heShe() + " worries about the person molesting " + c.himHer() + ", and " + c.heShe() + " wonders whether it might be better to just endure it for a few minutes so that the police don't have to get involved and no one needs to be punished.\n\n");
                    c.say(t, "(Maybe I accidentally did something to tempt him...");
                }
                c.say(t, ")\n\n");
                this.append(t, "But the main factor that holds " + c.himHer() + " back is " + c.hisHer() + " exhaustion.  The stress of fighting the Demons has been taking its toll on " + c.himHer() + ", and " + c.heShe() + "'s simply tired of conflict.  In truth, " + c.heShe() + "'d latch on to any excuse at all in order to avoid yet another confrontation.\n\n");
                this.append(t, "Something in " + c.hisHer() + " tired posture tells the molester that he can afford to get more bold.  The hand wanders up " + c.hisHer() + " side, briefly trailing across " + c.hisHer() + " chest, then dips down low, back to " + c.hisHer() + " bottom.  The molester even goes as far as pinching " + c.hisHer() + " ass, almost as if daring " + c.himHer() + " to make a noise and clue in the other passengers.  ");
                if (c.confidence <= 66) {
                    if (c.confidence <= 33) {
                        this.append(t, String.valueOf(c.HisHer()) + " composure is cracking apart, and the realization of " + c.hisHer() + " own powerlessness only makes it worse.  It's a struggle to hold back " + c.hisHer() + " whimpers, but when " + c.heShe() + " clasps a hand over " + c.hisHer() + " own mouth, the molester knows that " + c.heShe() + "'s committed to not resisting at all.\n\n");
                        c.say(t, "(I... I can't...!");
                    }
                    else {
                        this.append(t, String.valueOf(c.HeShe()) + " clenches " + c.hisHer() + " fists and bites " + c.hisHer() + " lip in order to stop " + c.himHer() + "self from showing any reaction, but as the minutes pass without any sign of overt resistance, the molester decides to go even further.\n\n");
                        c.say(t, "(He... He has to get bored eventually...!");
                    }
                }
                else {
                    this.append(t, "The fact that " + c.heShe() + "'s having to let this be done to " + c.himHer() + " by someone " + c.heShe() + " could crush without even trying is infuriating to " + c.givenName + ".  " + c.HeShe() + " grits " + c.hisHer() + " teeth and huffs with irritation, but the molester takes it for a gasp of passion.\n\n");
                    c.say(t, "(How dare you!?");
                }
                c.say(t, ")\n\n");
                this.append(t, "The molester abruptly pushes his hand down the front of " + c.givenName + "'s pants, sliding it into " + c.hisHer() + " underwear.  ");
                if (!c.gender.equals("futanari")) {
                    if (c.gender.equals("male")) {
                        this.append(t, "The hand gives " + c.hisHer() + " penis a quick squeeze, then starts rubbing up and down ");
                    }
                }
                else {
                    this.append(t, "It pauses for a moment upon finding " + c.hisHer() + " penis, and " + c.givenName + " briefly thinks that the molester is going to pull back.  But then his fingers start to rub " + c.givenName + "'s flaccid member ");
                }
                if (!c.gender.equals("female")) {
                    this.append(t, "until it begins to get hard.  As soon as it's firm enough, the molester's fingers wrap around " + c.givenName + "'s shaft and begin to squeeze and pump at irregular intervals, stimulating " + c.himHer() + " with expert skill.  Against " + c.hisHer() + " will, " + c.givenName + " finds " + c.himHer() + "self beginning to buck " + c.hisHer() + " hips with every pump, bracing " + c.himHer() + " self on the train's window in order to avoid collapsing.  The molester begins to find a rhythm, steadily forcing " + c.givenName + " toward orgasm.\n\n");
                }
                else {
                    this.append(t, "It cups " + c.hisHer() + " pussy, and " + c.givenName + " can feel " + c.hisHer() + " own slick wetness against the palm.  Then, one finger begins trailing its way up and down " + c.hisHer() + " slit, steadily and repeatedly.  " + c.givenName + "'s breath catches every time the finger nears the top, then " + c.heShe() + " exhales again as it lowers, running slightly deeper between " + c.hisHer() + " folds every time.  After several repetitions, the finger goes up further, beginning to circle " + c.hisHer() + " clitoris.  It circles again and again and again, gradually pressing more and more firmly, sending warm waves of pleasure through " + c.givenName + "'s lower belly.  Before " + c.heShe() + "'s realized it, " + c.heShe() + "'s hunching over, " + c.hisHer() + " breath coming in weak moans.\n\n");
                }
                if (!c.gender.equals("male")) {
                    this.append(t, "The molester's other hand goes up the front of " + c.givenName + "'s shirt, giving one of " + c.hisHer() + " breasts a firm squeeze.  The fingers find " + c.hisHer() + " nipple, and as they begin to pinch it in time with the movements below, ");
                }
                else {
                    this.append(t, "The molester's other hand goes down the back of " + c.givenName + "'s pants, his middle finger unerringly seeking out " + c.givenName + "'s asshole.  As it begins to tease the entrance, ");
                }
                Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
                if (c.dignity <= 66) {
                    if (c.dignity <= 33) {
                        this.append(t, String.valueOf(c.givenName) + " can't contain a loud moan of pleasure, drawing the eyes of several other passengers and scaring the molester into pulling his hands out of " + c.hisHer() + " clothes and immediately leaving " + c.himHer() + " alone.\n\n");
                        c.say(t, "\"Wow...  That was... starting to feel good...\"");
                    }
                    else {
                        this.append(t, String.valueOf(c.givenName) + " finally loses " + c.hisHer() + " balance, collapsing to the floor.  It takes " + c.himHer() + " a moment to regain " + c.hisHer() + " senses, and by the time, " + c.heShe() + " does, " + c.heShe() + " has no idea where the molester has gone.  " + c.HeShe() + "'s surrounded by passengers looking at " + c.himHer() + " with either concern or annoyance.\n\n");
                        c.say(t, "\"Ah...  Hah...  Sorry, I just... slipped...  Phew...\"");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, true, false, this, nameDisplay, 0, Project.Emotion.FEAR, Project.Emotion.FEAR);
                    this.append(t, String.valueOf(c.givenName) + " is too turned on to pay any mind to the shaft being pressed against " + c.hisHer() + " butt, too warm and too distinctly hard to be sheathed within the molester's own pants.  It's been humping against " + c.himHer() + " rapidly during the later stages of the molestation, and after one final passionate thrust, it suddenly pulls away from " + c.himHer() + ", bringing the groping hands with it.  When " + c.givenName + " looks down in confusion at the resulting white smear left on " + c.hisHer() + " butt, " + c.heShe() + " wails in horror and hurriedly pulls out a tissue to wipe up the mess, feeling the other passengers' eyes on " + c.himHer() + " all the while.\n\n");
                    c.say(t, "(No, no, no!  I look like a shameless pervert!)");
                }
                String description = "";
                if (c.confidence <= 66) {
                    if (c.confidence <= 33) {
                        description = String.valueOf(c.mainName) + " is too timid and too tired of conflict to object as " + c.heShe() + "'s molested on a train.";
                    }
                    else {
                        description = "Upon encountering a train molestor, " + c.mainName + " finds that " + c.heShe() + "'s too mentally exhausted by " + c.hisHer() + " constant battles with the Demons to resist.";
                    }
                }
                else {
                    description = "In order to avoid needing to involve the police and change " + c.hisHer() + " schedule, " + c.mainName + " chooses not to apprehend or even resist when " + c.heShe() + "'s targeted by a train molestor.";
                }
                this.save.saveScene(41, c.mainName, description);
            }
        }
        this.vignetteSeen[id] = true;
    }
    
    public int chooseVignette() {
        int choice = -1;
        final Boolean[] valid = new Boolean[this.vignetteSeen.length];
        for (int i = 0; i < valid.length; ++i) {
            valid[i] = false;
        }
        int options = 0;
        for (int j = 0; j < 3; ++j) {
            if (this.getCast()[j] != null) {
                for (int k = 0; k < this.vignetteSeen.length; ++k) {
                    final Chosen c = this.getCast()[j];
                    if (k == 0) {
                        if (c.morality > 66 && c.lustful && c.totalDISG >= 100000L) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 1) {
                        if (c.confidence > 66 && c.lustful && c.totalDISG >= 100000L) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 2) {
                        if (c.dignity > 66 && c.lustful && c.totalDISG >= 100000L && c.modest) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 3) {
                        if (c.innocence > 66 && !c.modest && c.totalSHAM >= 10000000L && c.timesStripped() == 0) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 4) {
                        if (c.confidence > 66 && !c.modest && c.totalSHAM >= 10000000L) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 5) {
                        if (c.morality > 66 && !c.modest && c.totalSHAM >= 10000000L) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 6) {
                        if (!c.cVirg && c.confidence < 34 && c.totalDISG >= 5000000L) {
                            Chosen d = null;
                            for (int l = 0; l < 3; ++l) {
                                if (l != j && this.getCast()[l] != null) {
                                    d = this.getCast()[l];
                                    if (!d.cVirg && d.confidence < 67 && d.totalDISG >= 5000000L && this.getRelationship(j, l) > 0 && (!c.vVirg || (!c.gender.equals("male") && (!c.aVirg || c.pastTempted)) || !d.vVirg || (!d.gender.equals("male") && (!d.aVirg || d.pastTempted)))) {
                                        valid[k] = true;
                                    }
                                }
                            }
                        }
                    }
                    else if (k == 7) {
                        if ((!c.vVirg || (!c.gender.equals("male") && (!c.aVirg || c.pastTempted))) && !c.cVirg && c.confidence < 34 && c.totalDISG >= 5000000L) {
                            Chosen d = null;
                            for (int l = 0; l < 3; ++l) {
                                if (l != j && this.getCast()[l] != null) {
                                    d = this.getCast()[l];
                                    if (!d.cVirg && d.confidence > 66 && d.totalDISG >= 5000000L && this.getRelationship(j, l) > 0) {
                                        valid[k] = true;
                                    }
                                }
                            }
                        }
                    }
                    else if (k == 8) {
                        if (c.morality > 66 && c.totalFEAR + c.totalDISG + c.totalPAIN + c.totalSHAM > 100000L && c.timesFantasized() == 0) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 9) {
                        if ((!c.vVirg || (!c.gender.equals("male") && (!c.aVirg || c.pastTempted))) && !c.cVirg && c.confidence < 67 && c.confidence > 33 && c.totalDISG >= 5000000L) {
                            Chosen d = null;
                            for (int l = 0; l < 3; ++l) {
                                if (l != j && this.getCast()[l] != null) {
                                    d = this.getCast()[l];
                                    if (!d.cVirg && d.confidence > 66 && d.totalDISG >= 5000000L && this.getRelationship(j, l) > 0) {
                                        valid[k] = true;
                                    }
                                }
                            }
                        }
                    }
                    else if (k == 10) {
                        if (c.morality > 66 && c.lustful && c.meek && c.totalSHAM >= 100000L) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 11) {
                        if (c.morality < 67 && c.morality > 33 && c.totalFEAR + c.totalDISG + c.totalPAIN + c.totalSHAM > 100000L) {
                            valid[k] = true;
                        }
                    }
                    else if (k == 12) {
                        if (c.morality > 66 && c.lustful && c.totalDISG > 5000000000L) {
                            Chosen d = null;
                            for (int l = 0; l < 3; ++l) {
                                if (l != j && this.getCast()[l] != null) {
                                    d = this.getCast()[l];
                                    if (d.timesFantasized() > 0 && d.morality < 34 && d.totalDISG >= 5000000000L && this.getRelationship(j, l) < 0) {
                                        valid[k] = true;
                                    }
                                }
                            }
                        }
                    }
                    else if (k == 13) {
                        if (c.morality > 66 && c.lustful && c.totalDISG > 50000L) {
                            Chosen d = null;
                            for (int l = 0; l < 3; ++l) {
                                if (l != j && this.getCast()[l] != null) {
                                    d = this.getCast()[l];
                                    if (d.morality > 33 && d.lustful && d.totalDISG > 50000L && this.getRelationship(j, l) < 0) {
                                        valid[k] = true;
                                    }
                                }
                            }
                        }
                    }
                    else if (k == 14 && c.morality < 34 && c.totalFEAR + c.totalDISG + c.totalPAIN + c.totalSHAM >= 100000L) {
                        valid[k] = true;
                    }
                    if (this.vignetteSeen[k]) {
                        valid[k] = false;
                    }
                }
            }
        }
        for (int j = 0; j < valid.length; ++j) {
            if (valid[j]) {
                ++options;
            }
        }
        if (options > 0) {
            options *= (int)Math.random();
            int found = 0;
            for (int m = 0; m < valid.length; ++m) {
                if (valid[m]) {
                    if (found == options) {
                        choice = m;
                        m = valid.length;
                    }
                    else {
                        ++found;
                    }
                }
            }
        }
        return choice;
    }
    
    public void forsakenDamage(final JTextPane t, final WorldState w, final Chosen c, final Forsaken x, final int previousHATE, final int previousPLEA, final int previousINJU, final int previousEXPO, final String topDesc, final String bottomDesc) {
        if (c.getHATELevel() > previousHATE) {
            w.purpleAppend(t, "HATE up!  ");
        }
        if (c.getPLEALevel() > previousPLEA) {
            w.purpleAppend(t, "PLEA up!  ");
        }
        if (c.getINJULevel() > previousINJU) {
            if (w.tickle()) {
                w.purpleAppend(t, "ANTI up!  ");
            }
            else {
                w.purpleAppend(t, "INJU up!  ");
            }
        }
        if (c.getEXPOLevel() > previousEXPO) {
            w.purpleAppend(t, "EXPO up!  ");
        }
        final String bottomCover = c.bottomCover;
        final String topCover = c.bottomCover;
        final String feetType = c.feetType;
        final String mainName = c.mainName;
        final int morality = c.morality;
        final int innocence = c.innocence;
        final int confidence = c.confidence;
        final int dignity = c.dignity;
        if (c.getEXPOLevel() > previousEXPO) {
            if (c.getEXPOLevel() == 1) {
                if (c.getHATELevel() < 1) {
                    w.append(t, "Despite " + c.mainName + "'s best efforts to keep " + c.himHer() + "self covered, ");
                }
                else if (c.getHATELevel() > 1) {
                    w.append(t, "With " + c.mainName + "'s magical defenses decreased by " + c.hisHer() + " impure emotions, ");
                }
                else {
                    w.append(t, "With " + c.mainName + "'s annoyance causing " + c.himHer() + " to become impatient and vulnerable, ");
                }
                w.append(t, x.mainName);
                if (bottomCover.equals("skirt")) {
                    w.append(t, " tears away a large section of " + c.hisHer() + " skirt, rendering it much shorter than before.  ");
                }
                else if (bottomCover.equals("miniskirt")) {
                    w.append(t, " rips open " + c.hisHer() + " miniskirt so that " + c.hisHer() + " hip and part of " + c.hisHer() + " ass are completely exposed.  ");
                }
                else if (bottomCover.equals("robe")) {
                    w.append(t, " manages to tear away the bottom portion of " + c.hisHer() + " robe so that " + c.hisHer() + " legs are exposed.  ");
                }
                else if (bottomCover.equals("cloak")) {
                    w.append(t, " rips " + c.hisHer() + " cloak almost in half, so that it barely remains in one piece.  ");
                }
                else if (bottomCover.equals("trousers")) {
                    w.append(t, " tears a large hole in " + c.hisHer() + " trousers, partially exposing " + c.hisHer() + " ass.  ");
                }
                else if (bottomCover.equals("leotard")) {
                    w.append(t, " rips open the side of " + c.hisHer() + " leotard, from " + c.hisHer() + " hip up to " + c.hisHer() + " ribcage.  ");
                }
                else if (bottomCover.equals("bodysuit")) {
                    w.append(t, " tears a large hole in " + c.hisHer() + " bodysuit, partially exposing " + c.hisHer() + " ass.  ");
                }
                else if (bottomCover.equals("armor")) {
                    w.append(t, " pulls away one of " + c.hisHer() + " armor plates, exposing the side of " + c.hisHer() + " ass.  ");
                }
                else if (bottomCover.equals("strips")) {
                    w.append(t, " pulls apart enough of the strips of cloth covering " + c.hisHer() + " lower body that part of " + c.hisHer() + " ass can be seen in the gaps between those that remain.  ");
                }
                else if (bottomCover.equals("belts")) {
                    w.append(t, " snaps enough of the belts around " + c.hisHer() + " lower body that part of " + c.hisHer() + " ass can be seen in the gaps between those that remain.  ");
                }
                else if (bottomCover.equals("shorts")) {
                    w.append(t, " rips " + c.hisHer() + " shorts right down the middle, turning them into more of a skirt.  ");
                }
                else {
                    w.append(t, " rips " + c.hisHer() + " " + bottomDesc + " all the way up to " + c.hisHer() + " hip.  ");
                }
                if (feetType.equals("none")) {
                    if (c.getINJULevel() < 1) {
                        w.append(t, String.valueOf(c.HeShe()) + " does " + c.hisHer() + " best to squirm away and reduce the damage, but ");
                    }
                    else if (c.getINJULevel() > 1) {
                        if (w.tickle()) {
                            w.append(t, "Flustered and demoralized, there's nothing " + c.heShe() + " can do to resist the stripping, and ");
                        }
                        else {
                            w.append(t, String.valueOf(c.HisHer()) + " bloodied body is in no state to resist the stripping, and ");
                        }
                    }
                    else if (w.tickle()) {
                        w.append(t, "The effects of exhaustion are starting to set in, slowing " + c.hisHer() + " efforts to resist the stripping, and ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " bruised body is in no state to resist the stripping, and ");
                    }
                    if (c.getPLEALevel() < 1) {
                        w.append(t, String.valueOf(c.hisHer()) + " clothes are much less durable than " + c.hisHer() + " flesh.");
                    }
                    else if (c.getPLEALevel() > 1) {
                        w.append(t, String.valueOf(c.heShe()) + " can't help but become even more turned on by the fact that " + c.heShe() + "'s being stripped.");
                    }
                    else {
                        w.append(t, "the realization that " + c.heShe() + "'s showing off so much more skin than " + c.heShe() + "'s comfortable with makes " + c.himHer() + " blush even more deeply.");
                    }
                }
                else {
                    if (c.getINJULevel() < 1) {
                        w.append(t, "Then, " + c.reference(x) + " pulls off " + c.hisHer() + " " + feetType);
                    }
                    else if (c.getINJULevel() > 1) {
                        if (w.tickle()) {
                            w.append(t, "Then, while " + c.heShe() + "'s surprised and flustered, " + c.reference(x) + " pulls off " + c.hisHer() + " " + feetType + " too");
                        }
                        else {
                            w.append(t, "Bruised and bloodied as " + c.heShe() + " is, " + c.reference(x) + " has no trouble pulling off " + c.hisHer() + " " + feetType + " too");
                        }
                    }
                    else if (w.tickle()) {
                        w.append(t, "With the effects of exhaustion starting to set in, " + c.heShe() + "'s too slow to stop " + c.reference(x) + " from pulling off " + c.hisHer() + " " + feetType + " as well");
                    }
                    else {
                        w.append(t, "With bruises accumulating on " + c.hisHer() + " body, " + c.heShe() + "'s too slow to stop " + c.reference(x) + " from pulling off " + c.hisHer() + " " + feetType + " as well");
                    }
                    if (c.getPLEALevel() < 1) {
                        w.append(t, ", leaving " + c.hisHer() + " feet bare.");
                    }
                    else if (c.getPLEALevel() > 1) {
                        w.append(t, ", taking advantage of how turned on and distracted " + c.heShe() + " is.");
                    }
                    else {
                        w.append(t, ", and when " + c.heShe() + " realizes that " + c.hisHer() + " legs are completely exposed now, " + c.heShe() + " can't help but be a little turned on by the thought of what could happen next.");
                    }
                }
            }
            else if (c.getEXPOLevel() == 2) {
                w.append(t, x.mainName);
                if (topCover.equals("blouse")) {
                    w.append(t, " tears " + mainName + "'s blouse open down the front");
                }
                else if (topCover.equals("bodice")) {
                    w.append(t, " tears apart " + mainName + "'s bodice");
                }
                else if (topCover.equals("cloak")) {
                    w.append(t, " tears " + mainName + "'s cloak in half");
                }
                else if (topCover.equals("robe")) {
                    w.append(t, " rips open " + mainName + "'s robe");
                }
                else if (topCover.equals("jacket")) {
                    w.append(t, " rips away the front of " + mainName + "'s jacket");
                }
                else if (topCover.equals("shirt")) {
                    w.append(t, " tears " + mainName + "'s shirt down off " + c.hisHer() + " shoulder");
                }
                else if (topCover.equals("strips")) {
                    w.append(t, " tears apart the strips of cloth covering " + mainName + "'s chest");
                }
                else if (topCover.equals("crop")) {
                    w.append(t, " tears " + mainName + "'s crop top in half");
                }
                else if (topCover.equals("bindings")) {
                    w.append(t, " rips " + mainName + "'s chest bindings");
                }
                else if (topCover.equals("belts")) {
                    w.append(t, " snaps the belts covering " + mainName + "'s chest");
                }
                else if (topCover.equals("leotard")) {
                    w.append(t, " rips away the front of " + mainName + "'s leotard");
                }
                else if (topCover.equals("armor")) {
                    w.append(t, " breaks the clasps holding " + mainName + "'s armor closed");
                }
                else if (topCover.equals("bodysuit")) {
                    w.append(t, " tears open the front of " + mainName + "'s bodysuit");
                }
                else if (topCover.equals(bottomCover)) {
                    w.append(t, " tears apart the top of " + mainName + "'s " + topDesc);
                }
                else {
                    w.append(t, " tears apart " + mainName + "'s " + topDesc);
                }
                if (c.getINJULevel() < 2) {
                    if (c.gender.equals("male")) {
                        w.append(t, " so that " + c.hisHer() + " smooth chest is exposed.  ");
                    }
                    else {
                        w.append(t, " so that " + c.heShe() + " needs to devote one hand to keeping everything covered.  ");
                    }
                }
                else if (c.getINJULevel() > 2) {
                    if (w.tickle()) {
                        w.append(t, ", and " + c.heShe() + "'s exhausted enough that " + c.heShe() + " can't even spare the effort to keep " + c.hisHer() + " chest covered.  ");
                    }
                    else if (c.gender.equals("male")) {
                        w.append(t, ", and with one of " + c.hisHer() + " arms broken, " + c.heShe() + " can't even spare a thought to keeping " + c.hisHer() + " chest covered.  ");
                    }
                    else {
                        w.append(t, ", and with one of " + c.hisHer() + " arms broken, " + c.heShe() + " has a hard time keeping everything covered.  ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, ", but " + c.heShe() + "'s too flustered and occupied trying to fend you off to have any hope of keeping " + c.himHer() + "self covered.  ");
                }
                else if (c.gender.equals("male")) {
                    w.append(t, ", and in " + c.hisHer() + " injured state, " + c.heShe() + " doesn't care at all about having " + c.hisHer() + " smooth chest exposed.  ");
                }
                else {
                    w.append(t, ", and " + c.heShe() + " has to use one bloodied arm to keep everything covered.  ");
                }
                if (c.getPLEALevel() < 2) {
                    w.append(t, String.valueOf(c.HeShe()) + " frowns with exertion");
                }
                else if (c.getPLEALevel() > 2) {
                    if (c.gender.equals("male")) {
                        w.append(t, String.valueOf(c.HisHer()) + " legs wobble as " + c.heShe() + " suppresses the urge to cum");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " breasts heave as " + c.heShe() + " grunts and moans with arousal");
                    }
                }
                else if (c.gender.equals("male")) {
                    w.append(t, String.valueOf(c.HisHer()) + " erection remains hidden as " + c.heShe() + " struggles with " + c.hisHer() + " arousal");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " breasts heave as " + c.heShe() + " gasps with arousal");
                }
                if (c.getHATELevel() < 2) {
                    w.append(t, " and tries to focus.");
                }
                else if (c.getHATELevel() > 2) {
                    w.append(t, ", internally raging at the indignity of the situation.");
                }
                else {
                    w.append(t, " and anger.");
                }
            }
            else if (c.getEXPOLevel() == 3) {
                w.append(t, x.mainName);
                if (c.underType.equals("none")) {
                    w.append(t, " tears away the front of " + mainName + "'s " + bottomDesc + " so that " + c.hisHer() + " bare pussy is blatantly exposed.  " + c.mainName + " tries to cover " + c.himHer() + "self, but " + c.reference(x) + " pulls apart " + c.hisHer() + " ");
                }
                else {
                    if (c.underType.equals("panties") || c.underType.equals("wrap")) {
                        w.append(t, " pulls " + mainName + "'s panties ");
                    }
                    else if (c.underType.equals("g-string")) {
                        w.append(t, " pulls the remains of " + mainName + "'s g-string ");
                    }
                    else if (c.underType.equals("shorts")) {
                        w.append(t, " shreds " + mainName + "'s shorts and pulls them ");
                    }
                    else if (c.underType.equals("straps")) {
                        w.append(t, " snaps " + mainName + "'s underharness and pulls the straps ");
                    }
                    if (c.bottomAccess.equals("front") || c.bottomAccess.equals("cutout") || c.bottomAccess.equals("into") || c.bottomAccess.equals("around")) {
                        w.append(t, "apart, removing them from under " + c.hisHer() + " torn " + bottomDesc + ", then forcibly spreads " + c.hisHer() + " ");
                    }
                    else if (c.bottomAccess.equals("top")) {
                        w.append(t, "apart, stripping " + c.himHer() + " through " + c.hisHer() + " torn " + bottomDesc + ", then forcibly spreads " + c.hisHer() + " ");
                    }
                    else {
                        w.append(t, "down " + c.hisHer() + " ");
                    }
                }
                if (c.getPLEALevel() < 3) {
                    w.append(t, "thighs.  ");
                }
                else if (c.getPLEALevel() > 3) {
                    w.append(t, "thighs as they uncontrollably spasm with pleasure.  ");
                }
                else if (c.gender.equals("male")) {
                    w.append(t, "thighs as they tremble with " + c.hisHer() + " effort to suppress " + c.hisHer() + " building orgasm.  ");
                }
                else {
                    w.append(t, "thighs, which are already soaked with " + c.hisHer() + " fluids.  ");
                }
                if (c.getINJULevel() < 3) {
                    w.append(t, String.valueOf(c.HeShe()) + " struggles against it, ");
                }
                else if (c.getINJULevel() > 3) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HeShe()) + " spasms wildly, wasting the last of " + c.hisHer() + " energy, ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " shrieks in pain as " + c.hisHer() + " shattered limbs are manhandled, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + " moans in desperation, ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " cries out in pain at the pressure put on " + c.hisHer() + " fractured leg, ");
                }
                if (c.getHATELevel() < 3) {
                    w.append(t, "squeezing " + c.hisHer() + " eyes shut and trying to remain calm.");
                }
                else if (c.getHATELevel() > 3) {
                    w.append(t, "cursing and sobbing with rage.");
                }
                else {
                    w.append(t, "glaring back at " + x.mainName + " with unbridled hatred.");
                }
            }
            else if (c.getEXPOLevel() == 4) {
                if (c.getPLEALevel() < 4) {
                    if (c.gender.equals("male")) {
                        w.append(t, String.valueOf(mainName) + "'s chest is completely exposed, ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s breasts are completely exposed, ");
                    }
                }
                else if (c.getPLEALevel() > 4) {
                    if (c.gender.equals("male")) {
                        w.append(t, String.valueOf(mainName) + "'s bare chest heaves with " + c.hisHer() + " uncontrollable screams of pleasure, ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s bare breasts heave with " + c.hisHer() + " uncontrollable screams of pleasure, ");
                    }
                }
                else if (c.gender.equals("male")) {
                    w.append(t, String.valueOf(mainName) + "'s orgasmic spasms emphasize " + c.hisHer() + " bare chest and fully erect nipples, ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s orgasmic spasms emphasize " + c.hisHer() + " bare breasts and fully erect nipples, ");
                }
                if (bottomCover.equals("skirt")) {
                    if (c.gender.equals("female")) {
                        w.append(t, "while the remains of the skirt flapping around " + c.hisHer() + " hips are too short to conceal " + c.hisHer() + " pussy.  ");
                    }
                    else if (c.gender.equals("male")) {
                        w.append(t, "while the remains of the skirt flapping around " + c.hisHer() + " hips are too short to conceal " + c.hisHer() + " penis.  ");
                    }
                    else {
                        w.append(t, "while the remains of the skirt flapping around " + c.hisHer() + " hips are too short to conceal " + c.hisHer() + " penis and pussy.  ");
                    }
                }
                else if (bottomCover.equals("miniskirt")) {
                    w.append(t, "while " + c.hisHer() + " miniskirt has been reduced to nothing more than a belt of material around " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("robe")) {
                    w.append(t, "while " + c.hisHer() + " robe has been torn to the point that it doesn't even reach past " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("cloak")) {
                    w.append(t, "while " + c.hisHer() + " cloak has been torn to the point that it doesn't even reach past " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("trousers")) {
                    w.append(t, "while " + c.hisHer() + " trousers have been shredded to the point that only a few scraps around " + c.hisHer() + " legs remain.  ");
                }
                else if (bottomCover.equals("leotard")) {
                    if (c.gender.equals("female")) {
                        w.append(t, "while the remaining scraps of " + c.hisHer() + " leotard clinging to " + c.hisHer() + " body provide no coverage whatsoever for " + c.hisHer() + " hips and pussy.  ");
                    }
                    else if (c.gender.equals("male")) {
                        w.append(t, "while the remaining scraps of " + c.hisHer() + " leotard clinging to " + c.hisHer() + " body provide no coverage whatsoever for " + c.hisHer() + " hips and penis.  ");
                    }
                    else {
                        w.append(t, "while the remaining scraps of " + c.hisHer() + " leotard clinging to " + c.hisHer() + " body provide no coverage whatsoever for " + c.hisHer() + " penis and pussy.  ");
                    }
                }
                else if (bottomCover.equals("bodysuit")) {
                    w.append(t, "while the torso and crotch of " + c.hisHer() + " bodysuit have been completely torn away.  ");
                }
                else if (bottomCover.equals("armor")) {
                    w.append(t, "while the armor plates that would normally cover " + c.hisHer() + " hips and crotch have been lost.  ");
                }
                else if (bottomCover.equals("strips")) {
                    w.append(t, "while the strips of cloth that had been covering " + c.hisHer() + " body have been completely removed save for a few dangling ends around " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("belts")) {
                    w.append(t, "while the belts that had been covering " + c.hisHer() + " lower half have also been snapped and pulled away.  ");
                }
                else if (bottomCover.equals("shorts")) {
                    if (c.gender.equals("female")) {
                        w.append(t, "while " + c.hisHer() + " shorts have been torn open over " + c.hisHer() + " pussy and ass.  ");
                    }
                    else if (c.gender.equals("male")) {
                        w.append(t, "while " + c.hisHer() + " shorts have been torn open over " + c.hisHer() + " penis and ass.  ");
                    }
                    else {
                        w.append(t, "while " + c.hisHer() + " shorts have been torn open over " + c.hisHer() + " pussy and penis.  ");
                    }
                }
                else {
                    w.append(t, "while only a few useless scraps remain of " + c.hisHer() + " " + bottomDesc + ".  ");
                }
                if (c.getINJULevel() < 4) {
                    w.append(t, "With " + c.hisHer() + " limbs splayed out, there's nothing " + c.heShe() + " can do to cover " + c.himHer() + "self, ");
                }
                else if (c.getINJULevel() > 4) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HisHer()) + " splayed-out form, gasping for breath, makes for a pathetic sight, ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " mortally-wounded body makes for a pathetic sight, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s too worn out to even have the coordination to cover " + c.himHer() + "self, ");
                }
                else {
                    w.append(t, "With " + c.hisHer() + " body shattered, " + c.heShe() + " has no strength to cover " + c.himHer() + " self, ");
                }
                if (c.getHATELevel() < 4) {
                    w.append(t, "and " + c.heShe() + " can only wait for the humiliation to end.");
                }
                else if (c.getHATELevel() > 4) {
                    w.append(t, "and the Demonic energy erupting from " + c.hisHer() + " body isn't opaque enough to provide any modesty.");
                }
                else {
                    w.append(t, "and " + c.hisHer() + " impotent screams of rage only make " + c.himHer() + " look even weaker.");
                }
            }
            else {
                w.append(t, "Removing the remaining scraps of " + mainName + "'s " + bottomDesc + " is only a formality, and " + c.reference(x) + " focuses more on making " + c.himHer() + " look weak and foolish in front of the spectators.");
            }
            w.append(t, "\n\n");
        }
        else if (c.getPLEALevel() > previousPLEA) {
            if (c.getPLEALevel() == 1) {
                if (c.getHATELevel() < 1) {
                    w.append(t, "Despite the dire situation, ");
                }
                else if (c.getHATELevel() > 1) {
                    w.append(t, "Despite " + c.hisHer() + " growing fury, ");
                }
                else {
                    w.append(t, "Despite " + c.hisHer() + " growing annoyance, ");
                }
                if (innocence > 66) {
                    w.append(t, "the things " + c.reference(x) + " is doing to " + mainName + " make " + c.himHer() + " feel nice enough to start blushing and squirming.  ");
                }
                else if (innocence > 33) {
                    w.append(t, String.valueOf(mainName) + " feels " + c.hisHer() + " face grow warm as " + c.reference(x) + "'s stimulation starts to have an effect.  ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " can't deny that " + c.reference(x) + "'s sexual stimulation is starting to have an effect on " + c.himHer() + ".  ");
                }
                if (c.getEXPOLevel() < 1) {
                    w.append(t, String.valueOf(x.mainName) + "'s fingers are able to easily work their way in under " + c.hisHer() + " clothes, and ");
                }
                else if (c.getEXPOLevel() > 1) {
                    w.append(t, String.valueOf(c.HisHer()) + " need to cover " + c.himHer() + "self means " + c.heShe() + " can't ignore how exposed " + c.heShe() + " is, and ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " can feel the way the bystanders are staring at " + c.hisHer() + " legs exposed by " + c.hisHer() + " torn " + bottomDesc + ", and ");
                }
                if (c.getINJULevel() < 1) {
                    w.append(t, "no matter how hard " + c.heShe() + " fights, it's impossible to completely fend off the pleasure.");
                }
                else if (c.getINJULevel() > 1) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.heShe()) + "'s far too exhausted to fend off the assault.");
                    }
                    else {
                        w.append(t, String.valueOf(c.heShe()) + "'s far too badly hurt to fend off the assault.");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.hisHer()) + " growing tiredness and distraction prevent " + c.himHer() + " from fending off the assault.");
                }
                else {
                    w.append(t, String.valueOf(c.hisHer()) + " bruised limbs lack the strength to completely fend off the assault.");
                }
            }
            else if (c.getPLEALevel() == 2) {
                if (c.getINJULevel() < 2) {
                    w.append(t, String.valueOf(mainName) + "'s gasps of exertion grow thick with pleasure ");
                }
                else if (c.getINJULevel() > 2) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(mainName) + " moans helplessly ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " cries out in pain as " + c.hisHer() + " fractured limbs are jostled, but there's pleasure in " + c.hisHer() + " voice too ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(mainName) + " is barely able to suppress " + c.hisHer() + " moans of pleasure ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s grunts of pain turn into moans of pleasure ");
                }
                if (innocence > 66) {
                    w.append(t, "as " + c.heShe() + " struggles to understand what's happening to " + c.himHer() + ".  ");
                }
                else if (innocence > 33) {
                    w.append(t, "as " + c.heShe() + " starts to give in to the good feelings.  ");
                }
                else {
                    w.append(t, "as " + c.heShe() + " begins to eagerly anticipate " + c.reference(x) + "'s fingers despite " + c.himHer() + "self.  ");
                }
                if (c.getEXPOLevel() < 2) {
                    w.append(t, String.valueOf(c.HeShe()) + " can only defend " + c.himHer() + "self as best " + c.heShe() + " can");
                }
                else if (c.getEXPOLevel() > 2) {
                    w.append(t, String.valueOf(c.HeShe()) + " can only desperately try to cover " + c.hisHer() + " exposed body");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " can only tightly clutch " + c.hisHer() + " torn " + topDesc + " to " + c.hisHer() + " chest");
                }
                if (c.getHATELevel() < 2) {
                    w.append(t, " and try to stay calm.");
                }
                else if (c.getHATELevel() > 2) {
                    w.append(t, " and lash out at " + x.mainName + " and at anyone else who comes too close.");
                }
                else {
                    w.append(t, " and glare back at " + x.mainName + " with seething hatred.");
                }
            }
            else if (c.getPLEALevel() == 3) {
                if (c.getEXPOLevel() < 3) {
                    w.append(t, "As the battle rages around " + mainName);
                }
                else if (c.getEXPOLevel() > 3) {
                    w.append(t, "With " + mainName + "'s clothes essentially stripped from " + c.hisHer() + " body");
                }
                else {
                    w.append(t, "With " + mainName + "'s shredded " + bottomDesc + " and lack of panties");
                }
                if (innocence > 66) {
                    w.append(t, ", everyone else can see ");
                    if (!c.gender.equals("female")) {
                        w.append(t, "that " + c.heShe() + " has an erection, even if " + mainName + " " + c.himHer() + "self doesn't realize it.  ");
                    }
                    else {
                        w.append(t, "the love juices dripping down " + c.hisHer() + " thighs, even if " + mainName + " " + c.himHer() + "self doesn't realize it.  ");
                    }
                }
                else if (innocence > 33) {
                    if (!c.gender.equals("female")) {
                        w.append(t, ", it's obvious that " + c.heShe() + " has an erection.  ");
                    }
                    else {
                        w.append(t, ", it's obvious that " + c.hisHer() + " thighs are slick with " + c.hisHer() + " fluids.  ");
                    }
                }
                else if (!c.gender.equals("female")) {
                    w.append(t, ", " + c.heShe() + " is fully aware that " + c.hisHer() + " shameful erection is visible.  ");
                }
                else {
                    w.append(t, ", " + c.heShe() + " is fully aware that shameful secretions are dripping down " + c.hisHer() + " thighs.  ");
                }
                if (c.getHATELevel() < 3) {
                    w.append(t, String.valueOf(c.HisHer()) + " effort to stay focused ");
                }
                else if (c.getHATELevel() > 3) {
                    w.append(t, String.valueOf(c.HisHer()) + " shrieking rage ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " violent anger ");
                }
                if (c.getINJULevel() < 3) {
                    w.append(t, "isn't enough to stop the pleasure from approaching the point of orgasm.");
                }
                else if (c.getINJULevel() > 3) {
                    if (w.tickle()) {
                        w.append(t, "is completely irrelevant in the face of " + c.hisHer() + " extreme exhaustion.");
                    }
                    else {
                        w.append(t, "and broken bones aren't enough to drown out the pleasure as " + c.heShe() + " approaches orgasm.");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, "isn't enough to stop " + c.hisHer() + " breathless moans from coming out.");
                }
                else {
                    w.append(t, "isn't enough to stop the pain of " + c.hisHer() + " injuries from being overwhelmed by surging, borderline-orgasmic pleasure.");
                }
            }
            else if (c.getPLEALevel() == 4) {
                if (innocence > 66) {
                    if (c.gender.equals("female")) {
                        w.append(t, String.valueOf(mainName) + " is feeling so good that it's starting to scare " + c.himHer() + ", " + c.hisHer() + " body spasming against " + c.hisHer() + " will");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " is feeling so good that it's starting to scare " + c.himHer() + ", " + c.hisHer() + " penis dribbling a constant stream of cum");
                    }
                }
                else if (innocence > 33) {
                    if (c.gender.equals("female")) {
                        w.append(t, String.valueOf(mainName) + "'s body spasms at the overwhelming pleasure");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s penis releases a constant dribble of cum as " + c.heShe() + " spasms in overwhelming pleasure");
                    }
                }
                else if (c.gender.equals("female")) {
                    w.append(t, String.valueOf(mainName) + " squeezes " + c.hisHer() + " eyes shut, but " + c.heShe() + " can't ignore the way that " + c.hisHer() + " body is spasming against " + c.hisHer() + " will");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " squeezes " + c.hisHer() + " eyes shut, but " + c.heShe() + " can't ignore the way that " + c.hisHer() + " twitching penis is dribbling cum in a constant debilitating climax");
                }
                if (c.getINJULevel() < 4) {
                    w.append(t, ", interfering with " + c.hisHer() + " attempts to escape.  ");
                }
                else if (c.getINJULevel() > 4) {
                    if (w.tickle()) {
                        w.append(t, ", even as " + c.heShe() + " almost blacks out from exhaustion.  ");
                    }
                    else {
                        w.append(t, ", the sensations somehow bypassing the missing nerves from " + c.hisHer() + " mortal wounds.  ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, ", " + c.hisHer() + " movements weak and uncoordinated with exhaustion.  ");
                }
                else {
                    w.append(t, ", each buck of " + c.hisHer() + " hips causing a spike of pain to shoot through " + c.hisHer() + " shattered limbs.  ");
                }
                if (c.getHATELevel() < 4) {
                    w.append(t, String.valueOf(c.HeShe()) + " can't think about anything except orgasm");
                }
                else if (c.getHATELevel() > 4) {
                    w.append(t, "Demonic energy erupts from " + c.himHer() + " with every movement");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " shrieks of rage contrast sharply with " + c.hisHer() + " erotic movements");
                }
                if (c.getEXPOLevel() < 4) {
                    w.append(t, ", " + c.hisHer() + " body gyrating on instinct.");
                }
                else if (c.getEXPOLevel() > 4) {
                    w.append(t, ", " + c.hisHer() + " naked body gyrating on instinct.");
                }
                else {
                    w.append(t, ", the scraps of " + c.hisHer() + " " + bottomDesc + " framing " + c.hisHer() + " shape as " + c.heShe() + " gyrates on pure instinct.");
                }
            }
            else {
                w.append(t, String.valueOf(mainName) + " screams as " + c.hisHer() + " pleasure reaches a new peak.  " + c.HisHer() + " whole body feels like one erogenous zone, and " + c.reference(x) + " is");
                w.append(t, " stimulating it all at once.");
            }
            w.append(t, "\n\n");
        }
        else if (c.getINJULevel() > previousINJU) {
            if (c.getINJULevel() == 1) {
                if (c.getEXPOLevel() < 1) {
                    w.append(t, String.valueOf(mainName) + " is still trying to put on a brave face, but ");
                }
                else if (c.getEXPOLevel() > 1) {
                    w.append(t, String.valueOf(mainName) + "'s clothes are badly torn and ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " has had " + c.hisHer() + " " + bottomDesc + " torn off " + c.hisHer() + " legs and ");
                }
                if (w.tickle()) {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.heShe()) + "'s forced to acknowledge that the fight is taking its toll on " + c.himHer() + ".  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.hisHer()) + " face wears a strained expression from the rigors of battle.  ");
                    }
                    else {
                        w.append(t, String.valueOf(c.heShe()) + "'s starting to get too tired to fight.  ");
                    }
                }
                else if (confidence > 66) {
                    w.append(t, "the bruises covering " + c.hisHer() + " body force " + c.himHer() + " to acknowledge that " + c.heShe() + "'s getting hurt.  ");
                }
                else if (confidence > 33) {
                    w.append(t, String.valueOf(c.hisHer()) + " confidence has been shaken by the bruises covering " + c.hisHer() + " body.  ");
                }
                else {
                    w.append(t, String.valueOf(c.heShe()) + " can't stifle " + c.hisHer() + " whimpers of pain nor cover the bruises across " + c.hisHer() + " body.  ");
                }
                if (c.getHATELevel() < 1) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s trying to remain calm and focused, but ");
                }
                else if (c.getHATELevel() > 1) {
                    w.append(t, String.valueOf(c.HisHer()) + " sense of hatred, unsuitable for one of the Chosen, has weakened " + c.hisHer() + " magical defenses, and ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " growing annoyance has disturbed " + c.hisHer() + " mental state and weakened " + c.hisHer() + " magical defenses, and ");
                }
                if (c.getPLEALevel() < 1) {
                    w.append(t, String.valueOf(c.heShe()) + " can't hold up against this kind of abuse forever.");
                }
                else if (c.getPLEALevel() > 1) {
                    w.append(t, "the pleasure inflicted on " + c.himHer() + " has rendered " + c.hisHer() + " nerves oversensitive and vulnerable.");
                }
                else {
                    w.append(t, String.valueOf(c.hisHer()) + " skin, flush with pleasure, feels especially sensitive.");
                }
            }
            else if (c.getINJULevel() == 2) {
                if (w.tickle()) {
                    if (c.getPLEALevel() < 2) {
                        w.append(t, String.valueOf(mainName) + " reels");
                    }
                    else if (c.getPLEALevel() > 2) {
                        w.append(t, String.valueOf(mainName) + "'s near-orgasmic pleasure is interrupted by a sudden impact");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s gasping breaths of pleasure turn into a stifled squeak");
                    }
                    if (confidence > 66) {
                        w.append(t, " as " + c.hisHer() + " overconfidence is punished by an opportunistic counterattack from " + x.mainName + ".  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, " as a blast of energy from " + x.mainName + " startles " + c.himHer() + " and causes " + c.himHer() + " to flinch away.  ");
                    }
                    else {
                        w.append(t, " as " + c.hisHer() + " confidence in " + c.hisHer() + " ability to win begins to fade, and " + c.heShe() + " starts flinching away from every attack.  ");
                    }
                    if (c.getEXPOLevel() < 2) {
                        w.append(t, String.valueOf(c.HisHer()) + " clothes are beginning to grow disheveled in the process");
                    }
                    else if (c.getEXPOLevel() > 2) {
                        w.append(t, "The damage to " + c.hisHer() + " clothes means that " + c.hisHer() + " reflexive movements threaten to expose everything");
                    }
                    else {
                        w.append(t, "The damage to " + c.hisHer() + " " + topDesc + " has turned " + c.hisHer() + " chest into a target");
                    }
                }
                else {
                    if (c.getPLEALevel() < 2) {
                        w.append(t, String.valueOf(mainName) + " reels");
                    }
                    else if (c.getPLEALevel() > 2) {
                        w.append(t, String.valueOf(mainName) + "'s oversensitive nerves erupt with pain");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s gasping breaths of pleasure turn into cries of pain");
                    }
                    if (confidence > 66) {
                        w.append(t, " as " + c.hisHer() + " previous overconfidence is punished with attacks that start to draw blood.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, " as " + x.mainName + "'s attacks start to draw blood.  ");
                    }
                    else {
                        w.append(t, " as " + c.hisHer() + " lack of self-confidence means that " + x.mainName + "'s attacks are already starting to draw blood.  ");
                    }
                    if (c.getEXPOLevel() < 2) {
                        w.append(t, "Patches of red are beginning to spread across " + c.hisHer() + " clothes");
                    }
                    else if (c.getEXPOLevel() > 2) {
                        w.append(t, String.valueOf(c.HisHer()) + " clothes are too damaged to hide the wounds");
                    }
                    else {
                        w.append(t, "The ragged edges of " + c.hisHer() + " " + topDesc + " are stained in red");
                    }
                }
                if (c.getHATELevel() < 2) {
                    w.append(t, ", and " + c.heShe() + "'ll only have a harder time defending " + c.himHer() + "self from here.");
                }
                else if (c.getHATELevel() > 2) {
                    w.append(t, ", and " + c.hisHer() + " enraged struggling grows weaker by the moment.");
                }
                else {
                    w.append(t, ", and a desire for vengeance smolders in " + c.hisHer() + " eyes.");
                }
            }
            else if (c.getINJULevel() == 3) {
                if (w.tickle()) {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(mainName) + " has been stubbornly concealing just how much all the fighting has been affecting " + c.himHer() + ", but it's obvious that " + c.heShe() + "'s having trouble completely suppressing " + c.hisHer() + " gasps of exhaustion");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(mainName) + "'s self-confidence has been completely destroyed by the way " + c.reference(x) + " has been toying with " + c.himHer());
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s voice comes out in small whimpers every time " + c.reference(x) + " clashes with " + c.himHer() + ".  " + c.HeShe() + " knows deep down inside that " + c.heShe() + " isn't strong enough to resist whatever " + x.heShe() + " wants to make " + c.himHer() + " do");
                    }
                }
                else if (confidence > 66) {
                    w.append(t, String.valueOf(mainName) + " has been stubbornly concealing just how hurt " + c.heShe() + " is, but " + c.heShe() + " can't hide the sound of " + c.hisHer() + " bones cracking under the assault");
                }
                else if (confidence > 33) {
                    w.append(t, "A loud crack signals one of " + mainName + "'s bones being broken");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " has been desperately trying to protect " + c.himHer() + "self from your assault, but the sound of bone breaking indicates that " + c.heShe() + "'s being overwhelmed");
                }
                if (c.getEXPOLevel() < 3) {
                    if (w.tickle()) {
                        w.append(t, ", and even though " + c.hisHer() + " body isn't actually sustaining any lasting damage, ");
                    }
                    else {
                        w.append(t, ", and even though " + c.hisHer() + " body is quickly regenerating the damage, ");
                    }
                }
                else if (c.getEXPOLevel() > 3) {
                    if (w.tickle()) {
                        w.append(t, ", and even though " + c.hisHer() + " body remains unhurt beneath " + c.hisHer() + " shredded clothes, ");
                    }
                    else {
                        w.append(t, ", and even though " + c.hisHer() + " shredded clothes expose the way that " + c.hisHer() + " body is repairing itself by the second, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, ", and for just a moment, the arm " + c.heShe() + " was using to cover the gap in " + c.hisHer() + " " + bottomDesc + " that showed " + c.hisHer() + " lack of panties falls limp from exhaustion.  " + c.HeShe() + " quickly moves it back into position, but ");
                }
                else {
                    w.append(t, ", and for just a moment, the arm " + c.heShe() + " was using to cover the gap in " + c.hisHer() + " " + bottomDesc + " that showed " + c.hisHer() + " lack of panties falls limp at " + c.hisHer() + " side.  " + c.HeShe() + " quickly starts to regenerate, but ");
                }
                if (c.getHATELevel() < 3) {
                    if (w.tickle()) {
                        w.append(t, "it's unpleasant enough that " + c.heShe() + " desperately wants to escape.  ");
                    }
                    else {
                        w.append(t, "it's painful enough that " + c.heShe() + " obviously wants to stop it from happening again.  ");
                    }
                }
                else if (c.getHATELevel() > 3) {
                    w.append(t, String.valueOf(c.heShe()) + " shrieks promises of vengeance at the top of " + c.hisHer() + " lungs.  ");
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.heShe()) + "'s still in a blind rage as " + c.heShe() + " attempts to retaliate.  ");
                }
                else {
                    w.append(t, "even before the limb is repaired, " + c.heShe() + "'s trying to retaliate in a blind rage.  ");
                }
                if (c.getPLEALevel() < 3) {
                    if (w.tickle()) {
                        w.append(t, "The accumulating exhaustion will make it hard for " + c.himHer() + " to do anything, though.");
                    }
                    else {
                        w.append(t, "The accumulating damage will make it hard for " + c.himHer() + " to do anything, though.");
                    }
                }
                else if (c.getPLEALevel() > 3) {
                    w.append(t, "However, despite " + c.hisHer() + " attempted defiance, " + c.hisHer() + " eyes are still unfocused and " + c.hisHer() + " body continues to shake with orgasmic spasms.");
                }
                else if (c.gender.equals("female")) {
                    w.append(t, "However, the love juices running down " + c.hisHer() + " thighs makes it hard to believe " + c.heShe() + "'s really capable of focusing on the battle right now.");
                }
                else if (c.gender.equals("male")) {
                    w.append(t, "However, " + c.hisHer() + " obvious erection makes it hard to believe " + c.heShe() + "'s really capable of focusing on the battle right now.");
                }
                else {
                    w.append(t, "However, " + c.hisHer() + " obvious erection and the love juices running down " + c.hisHer() + " thighs make it hard to believe " + c.heShe() + "'s really capable of focusing on the battle right now.");
                }
            }
            else if (c.getINJULevel() == 4) {
                if (c.getHATELevel() < 4) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(mainName) + " cries out helplessly");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " cries out in pain");
                    }
                }
                else if (c.getHATELevel() > 4) {
                    w.append(t, String.valueOf(mainName) + " erupts with tendrils of Demonic energy");
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(mainName) + " shrieks in helpless rage");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " shrieks in rage and pain");
                }
                if (w.tickle()) {
                    if (confidence > 66) {
                        w.append(t, ", still thrashing wildly as " + c.heShe() + " tries to fight, but too exhausted for it to do " + c.himHer() + " any good.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, ", completely fed up with the fighting but too exhausted to have any chance of finishing " + x.mainName + " off.  ");
                    }
                    else {
                        w.append(t, ", flinching weakly as " + c.heShe() + "'s hit by blasts of energy, but too exhausted and demoralized to put any strength in " + c.hisHer() + " limbs.  ");
                    }
                    if (c.getPLEALevel() < 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " attempts to curl up and protect " + c.himHer() + "self are completely useless");
                    }
                    else if (c.getPLEALevel() > 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " nerves have been corrupted to the point that even the lightest touches make " + c.himHer() + " move erratically");
                    }
                    else {
                        w.append(t, "Combined with " + c.hisHer() + " sexual overstimulation, the attacks make " + c.hisHer() + " movements become completely uncontrolled");
                    }
                }
                else {
                    if (confidence > 66) {
                        w.append(t, ", struggling as much as " + c.heShe() + " can as " + x.mainName + " keeps landing direct hits.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, " as " + x.mainName + " beats " + c.himHer() + " down.  ");
                    }
                    else {
                        w.append(t, ", trying and failing to curl up and protect " + c.himHer() + "self as " + x.mainName + " shatters " + c.hisHer() + " body.  ");
                    }
                    if (c.getPLEALevel() < 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " attempts to move only hurt " + c.himHer() + " more");
                    }
                    else if (c.getPLEALevel() > 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " nerves have been corrupted to the point that the damage inflicts as much pleasure as pain, and the resulting orgasmic spasms only hurt " + c.himHer() + " more");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " body continues to spasm with the aftershocks of the pleasure already inflicted on " + c.himHer() + ", and the movements only hurt " + c.himHer() + " more");
                    }
                }
                if (c.getEXPOLevel() < 4) {
                    w.append(t, ".");
                }
                else if (c.getEXPOLevel() > 4) {
                    w.append(t, " and showcase " + c.hisHer() + " exposed body for the onlookers.");
                }
                else {
                    w.append(t, " and cause the remaining scraps of " + c.hisHer() + " " + bottomDesc + " to shift so that they don't cover anything at all.");
                }
            }
            else if (w.tickle()) {
                w.append(t, String.valueOf(mainName) + " is completely out of breath from fighting so much, and a regular person would have passed out already.  However, " + c.hisHer() + " Chosen powers force " + c.himHer() + " to remain awake and alert, no matter how heavy " + c.hisHer() + " limbs feel or how much " + c.heShe() + " just wants to give up.");
            }
            else {
                w.append(t, String.valueOf(mainName) + " is being continually dealt wounds that ought to be fatal, but " + c.hisHer() + " Chosen powers don't permit " + c.himHer() + " to die or even pass out.  However, they do make it harder and harder for " + c.himHer() + " to defend " + c.himHer() + "self.");
            }
            w.append(t, "\n\n");
        }
        else if (c.getHATELevel() > previousHATE) {
            if (c.getHATELevel() == 1) {
                if (c.getPLEALevel() < 1) {
                    w.append(t, "Responding to " + x.mainName + "'s cruelty, ");
                }
                else if (c.getPLEALevel() > 1) {
                    w.append(t, "Despite (or perhaps because of) the intense pleasure that's been inflicted on " + c.himHer() + ", ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " face turning red with combined arousal and anger, ");
                }
                if (morality > 66) {
                    w.append(t, "some serious annoyance is hidden behind " + mainName + "'s outwardly heroic demeanor.  ");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " is already getting annoyed at the situation. ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s short temper means that " + c.heShe() + "'s quickly getting annoyed at being toyed with.  ");
                }
                if (c.getINJULevel() < 1) {
                    w.append(t, String.valueOf(c.HeShe()) + " realizes that " + c.reference(x) + " is deliberately provoking " + c.himHer() + ", but " + c.heShe() + "'s still ");
                }
                else if (c.getINJULevel() > 1) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HeShe()) + " subconsciously compensates for " + c.hisHer() + " feelings of helplessness by blaming others, and " + c.heShe() + "'s ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + "'s bleding from various wounds, putting " + c.himHer() + " in a desperate state of mind, and " + c.heShe() + "'s ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s starting to get worried about how easy it seems to be for " + c.reference(x) + " to toy with " + c.himHer() + ", and " + c.heShe() + "'s ");
                }
                else {
                    w.append(t, "The pain of " + c.hisHer() + " bruises fuels " + c.hisHer() + " anger, and " + c.heShe() + "'s ");
                }
                if (c.getEXPOLevel() < 1) {
                    w.append(t, "losing " + c.hisHer() + " cool.");
                }
                else if (c.getEXPOLevel() > 1) {
                    w.append(t, "flustered at being so exposed.");
                }
                else {
                    w.append(t, "distracted enough to forget the need to hold " + c.hisHer() + " torn " + bottomDesc + " closed.");
                }
            }
            else if (c.getHATELevel() == 2) {
                if (c.getEXPOLevel() < 2) {
                    w.append(t, "As " + x.mainName + " continues to provoke " + mainName + ", ");
                }
                else if (c.getEXPOLevel() > 2) {
                    w.append(t, "As " + mainName + " tries to cover " + c.hisHer() + " stripped body, ");
                }
                else {
                    w.append(t, "As " + mainName + " struggles to hold " + c.hisHer() + " " + topDesc + " closed, ");
                }
                if (morality > 66) {
                    w.append(t, String.valueOf(c.heShe()) + " wears an angry expression, unsuitable for " + c.hisHer() + " normally kind face.  ");
                }
                else if (morality > 33) {
                    w.append(t, "resentment burns in " + c.hisHer() + " eyes.  ");
                }
                else {
                    w.append(t, String.valueOf(c.hisHer()) + " teeth are clenched in rage.  ");
                }
                if (c.getINJULevel() < 2) {
                    w.append(t, String.valueOf(c.HisHer()) + " composure completely lost, ");
                }
                else if (c.getINJULevel() > 2) {
                    if (w.tickle()) {
                        w.append(t, "Showing obvious signs of exhaustion, ");
                    }
                    else {
                        w.append(t, "With the pain of " + c.hisHer() + " severe injuries, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, "Reflexively flinching away from every touch, ");
                }
                else {
                    w.append(t, "With " + c.hisHer() + " fight-or-flight response stimulated by the cuts covering " + c.hisHer() + " body, ");
                }
                if (c.getPLEALevel() < 2) {
                    w.append(t, String.valueOf(c.heShe()) + "'s too caught up in the moment to calm down.");
                }
                else if (c.getPLEALevel() > 2) {
                    w.append(t, "the way " + c.hisHer() + " nerves have been overstimulated by pleasure makes it impossible for " + c.himHer() + " to shut everything out and calm down.");
                }
                else {
                    w.append(t, String.valueOf(c.heShe()) + " would have a hard enough time focusing even if " + c.heShe() + " weren't also gasping for breath in the wake of the sexual stimulation.");
                }
            }
            else if (c.getHATELevel() == 3) {
                if (c.getINJULevel() < 3) {
                    w.append(t, "Unable to contain " + c.hisHer() + " emotions anymore, ");
                }
                else if (c.getINJULevel() > 3) {
                    if (w.tickle()) {
                        w.append(t, "Desperately struggling against " + c.hisHer() + " overwhelming exhaustion, ");
                    }
                    else {
                        w.append(t, "Desperately struggling despite " + c.hisHer() + " shattered body, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, "Gasping and moaning with exhaustion, ");
                }
                else {
                    w.append(t, "Made desperate by " + c.hisHer() + " serious wounds, ");
                }
                if (morality > 66) {
                    w.append(t, String.valueOf(mainName) + " lashes out, paying less mind than " + c.heShe() + " should to any innocents who might be close enough to get hurt.  ");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " lashes out indiscrimiately in " + c.hisHer() + " attempts to escape.  ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " gives in to " + c.hisHer() + " rage and starts trying to lash out.  ");
                }
                if (c.getPLEALevel() < 3) {
                    w.append(t, String.valueOf(c.HeShe()) + " just wants this all to be over");
                }
                else if (c.getPLEALevel() > 3) {
                    w.append(t, String.valueOf(c.HisHer()) + " body is uncontrollably writhing in pleasure, and " + c.hisHer() + " mind has been affected too");
                }
                else {
                    w.append(t, "The pleasure has left " + c.himHer() + " incapable of thinking straight");
                }
                if (c.getEXPOLevel() < 3) {
                    w.append(t, ".");
                }
                else if (c.getEXPOLevel() > 3) {
                    w.append(t, ", " + c.heShe() + " has practically forgotten just how exposed " + c.hisHer() + " body is.");
                }
                else {
                    w.append(t, ", " + c.heShe() + " can't even muster the composure to cover " + c.hisHer() + " torn " + bottomDesc + " and maintain some level of modesty.");
                }
            }
            else if (c.getHATELevel() == 4) {
                if (morality > 66) {
                    w.append(t, String.valueOf(mainName) + " is torn between laughing and sobbing as " + c.hisHer() + " sanity cracks");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " giggles madly as " + c.hisHer() + " sanity cracks");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " laughs with despairing abandon as " + c.hisHer() + " sanity cracks");
                }
                if (c.getINJULevel() < 4) {
                    w.append(t, ".  ");
                }
                else if (c.getINJULevel() > 4) {
                    if (w.tickle()) {
                        w.append(t, ", struggling for breath.  ");
                    }
                    else {
                        w.append(t, ", barely even acknowledging the mortal wounds covering " + c.hisHer() + " body.  ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, ", twitching wildly at the slightest touch.  ");
                }
                else {
                    w.append(t, ", barely even acknowledging " + c.hisHer() + " shattered body.  ");
                }
                if (c.getPLEALevel() < 4) {
                    w.append(t, String.valueOf(c.HisHer()) + " emotions have spiraled far beyond " + c.hisHer() + " control");
                }
                else if (c.getPLEALevel() > 4) {
                    w.append(t, "The waves of pleasure rolling through " + c.hisHer() + " overstimulated nerves burn the scene into " + c.hisHer() + " memory");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " constant spasms of pleasure make " + c.himHer() + " look completely unhinged");
                }
                if (c.getEXPOLevel() < 4) {
                    w.append(t, ".");
                }
                else if (c.getEXPOLevel() > 4) {
                    w.append(t, ", " + c.hisHer() + " mind and body both stripped of all defenses.");
                }
                else {
                    w.append(t, ", " + c.hisHer() + " shredded " + bottomDesc + " enhancing " + c.hisHer() + " savage appearance.");
                }
            }
            else {
                w.append(t, String.valueOf(x.mainName) + "'s provocations reach into the depths of " + mainName + "'s soul, drawing tendrils of Demonic energy out of " + c.hisHer() + " body.  " + c.HisHer() + " Chosen powers grow weaker and weaker as " + c.heShe() + " is further alienated from the virtues of humanity.");
            }
            w.append(t, "\n\n");
        }
    }
    
    public void hesitate(final JTextPane t, final WorldState w, final Chosen killer, final Chosen victim1, final Chosen victim2) {
        Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
        killer.lastAction = 0;
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        if (victim1.getConfidence() > 66) {
            if (killer.getConfidence() > 33) {
                w.append(t, String.valueOf(killer.getMainName()) + " shakes " + killer.hisHer() + " head in disbelief, unwilling to accept that ");
            }
            else {
                w.append(t, String.valueOf(killer.getMainName()) + " falls to " + killer.hisHer() + " knees, tears in " + killer.hisHer() + " eyes, as " + killer.heShe() + " realizes that the only way to end the battle is to throw ");
            }
            if (victim2 == null) {
                if (killer.getConfidence() > 33) {
                    w.append(t, String.valueOf(victim1.getMainName()) + " would end up getting caught, jeopardizing " + victim1.hisHer() + " own life with victory so close.");
                }
                else {
                    w.append(t, String.valueOf(victim1.getMainName()) + "'s life away.");
                }
                killer.say(t, "\n\n\"");
                if (killer.getInnocence() > 66) {
                    killer.say(t, "Um, " + victim1.getMainName() + " is really strong, so maybe " + victim1.heShe() + " will survive...  Y-Yeah, I need to have faith in " + victim1.himHer() + " and just go all-out!");
                }
                else if (killer.getInnocence() > 33) {
                    killer.say(t, "I didn't think I'd have to worry about " + victim1.getMainName() + "...");
                }
                else {
                    killer.say(t, "This is my fault... but " + victim1.heShe() + "'s the one who's going to pay for it...");
                }
            }
            else {
                if (killer.getConfidence() > 33) {
                    w.append(t, String.valueOf(victim1.getMainName()) + " and " + victim2.getMainName() + " would both end up getting caught, jeopardizing their own lives with victory so close.");
                }
                else {
                    w.append(t, String.valueOf(victim1.getMainName()) + "'s and " + victim2.getMainName() + "'s lives away.");
                }
                killer.say(t, "\n\n\"");
                if (killer.getInnocence() > 66) {
                    killer.say(t, "Um, " + victim1.getMainName() + " is really strong, so maybe " + victim1.heShe() + "'ll be able to protect " + victim1.himHer() + "self safe, and " + victim2.getMainName() + " too...  Y-Yeah, I need to have faith in " + victim1.himHer() + " and just go all-out!");
                }
                else if (killer.getInnocence() > 33) {
                    killer.say(t, "I was worried about " + victim2.getMainName() + ", but " + victim1.getMainName() + " got caught too...!?");
                }
                else {
                    killer.say(t, "This is my fault... but they're the ones who are going to pay for it...");
                }
            }
        }
        else if (victim1.getConfidence() > 33) {
            if (killer.getConfidence() > 66) {
                w.append(t, String.valueOf(killer.getMainName()) + " tries to steel " + killer.himHer() + "self as " + killer.heShe() + " prepares to wipe out the last remaining cluster of Demons, even though ");
            }
            else {
                w.append(t, String.valueOf(killer.getMainName()) + "'s lip trembles as " + killer.heShe() + " struggles with the emotions welling up inside.  " + killer.HeShe() + " knows that " + killer.heShe() + " can't wait for ");
            }
            if (victim2 == null) {
                if (killer.getConfidence() > 66) {
                    w.append(t, String.valueOf(victim1.getMainName()) + " won't have time to get out of the way.");
                }
                else {
                    w.append(t, String.valueOf(victim1.getMainName()) + " to escape before " + killer.heShe() + " launches " + killer.hisHer() + " final attack.");
                }
            }
            else if (killer.getConfidence() > 66) {
                w.append(t, String.valueOf(victim1.getMainName()) + " and " + victim2.getMainName() + " won't have time to get out of the way.");
            }
            else {
                w.append(t, String.valueOf(victim1.getMainName()) + " and " + victim2.getMainName() + " to escape before " + killer.heShe() + " launches " + killer.hisHer() + " final attack.");
            }
            killer.say(t, "\n\n\"");
            if (killer.getInnocence() > 66) {
                killer.say(t, "This... This has to be a nightmare...  I wanna wake up!");
            }
            else if (killer.getInnocence() > 33) {
                killer.say(t, "I don't have any choice...");
            }
            else {
                killer.say(t, "Do it quickly, before I lose my nerve...!");
            }
        }
        else {
            if (killer.getConfidence() > 66) {
                w.append(t, String.valueOf(killer.getMainName()) + " gathers a ball of white-hot destructive energy in " + killer.hisHer() + " hand, more than powerful enough to level a skyscraper, but " + killer.heShe() + " hesitates before launching it.  " + killer.HisHer() + " teeth are clenched as " + killer.heShe() + " looks across the battlefield at where ");
            }
            else {
                w.append(t, String.valueOf(killer.getMainName()) + " is wide-eyed with shock as " + killer.heShe() + " realizes that ");
            }
            if (victim2 == null) {
                if (killer.getConfidence() > 66) {
                    w.append(t, String.valueOf(victim1.getMainName()) + " is ");
                    if (victim1.isSurrounded()) {
                        w.append(t, "surrounded by enemies, disarmed and unable to get out of the way.");
                    }
                    else {
                        w.append(t, "caught by your Commander body, unable to get out of the way.");
                    }
                }
                else {
                    w.append(t, "by the time " + victim1.getMainName() + " manages to escape, it might be too late to stop the Demons' victory.");
                }
                killer.say(t, "\n\n\"");
                if (killer.getMorality() > 66) {
                    killer.say(t, "I was prepare to make sacrifices, but...  To lose " + victim1.getMainName() + "...  Still, I can't back down now!");
                }
                else if (killer.getMorality() > 33) {
                    killer.say(t, "Being forced to kill the one I care about most...  Hmph!  Fine!  I'll make it quick!");
                }
                else {
                    killer.say(t, "Ugh.  I really don't want to kill " + victim1.himHer() + ".  But " + victim1.heShe() + " told me that if it came to this, I shouldn't hold back...");
                }
            }
            else {
                if (killer.getConfidence() > 66) {
                    w.append(t, String.valueOf(victim1.getMainName()) + " and " + victim2.getMainName() + " are trapped and unable to get out of the way.");
                }
                else {
                    w.append(t, "by the time " + victim1.getMainName() + " and " + victim2.getMainName() + " manage to escape, it might be too late to stop the Demons' victory.");
                }
                killer.say(t, "\n\n\"");
                if (killer.getMorality() > 66) {
                    killer.say(t, "I was prepare to make sacrifices, but...  To lose both of them...  Still, I can't back down now!");
                }
                else if (killer.getMorality() > 33) {
                    killer.say(t, "Being forced to kill those I care about most...  Hmph!  Fine!  I'll make it quick!");
                }
                else {
                    killer.say(t, "Ugh.  I really don't want to kill them.  But they both told me that if it came to this, I shouldn't hold back...");
                }
            }
        }
        killer.say(t, "\"");
        killer.hesitated = true;
    }
    
    public void murder(final JTextPane t, final WorldState w, final Chosen killer, final Chosen victim) {
        Project.changePortrait(victim.convertGender(), victim.type, false, false, this, this.nameCombatants(), victim.combatantNumber(this), Project.Emotion.SWOON, Project.Emotion.SWOON);
        killer.lastAction = 0;
        w.append(t, "\n\n" + this.getSeparator() + "\n\n");
        killer.hesitated = false;
        Boolean thirdAlive = true;
        Boolean thirdSane = true;
        for (int i = 0; i < 3; ++i) {
            if (i != killer.getNumber() && i != victim.getNumber()) {
                if (!w.getCast()[i].alive) {
                    thirdAlive = false;
                }
                else if (w.getCast()[i].resolve <= 0) {
                    thirdSane = false;
                }
            }
        }
        if (w.getRelationship(killer.getNumber(), victim.getNumber()) >= 0) {
            if (killer.getInnocence() > 66) {
                if (victim.getConfidence() > 66) {
                    w.append(t, String.valueOf(killer.getMainName()) + " closes " + killer.hisHer() + " eyes and swings " + killer.hisHer() + " arm, sweeping a wave of destructive energy across the battlefield.  When " + killer.heShe() + " opens " + killer.hisHer() + " eyes, " + killer.heShe() + "'s shocked and horrified to see that " + victim.getMainName() + " lies on the ground, " + victim.hisHer() + " life quickly fading away ");
                    if (victim.isSurrounded()) {
                        w.append(t, "among the bodies of the Thralls who had been tormenting " + victim.himHer() + ".");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "as " + this.usedForsaken.mainName + " flees the scene.");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "as your nearby Commander body begins to piece itself back together.");
                    }
                    else {
                        w.append(t, "near the smoldering remains of your Commander body.");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                    killer.say(t, "\n\n\"No!  Th-This can't be happening!  ");
                    if (thirdAlive) {
                        killer.say(t, String.valueOf(victim.getMainName()) + ", you were supposed to be the one who would definitely survive the longest!  Get up, get up!");
                    }
                    else {
                        killer.say(t, "I can't do this alone, " + victim.getMainName() + "!  Come on, get up, get up!");
                    }
                }
                else if (victim.getConfidence() > 33) {
                    w.append(t, String.valueOf(killer.getMainName()) + " launches countless desperate blasts of energy onto the battlefield, trying to avoid " + victim.getMainName() + "'s position, but failing to account for the large blast radius.  When the dust clears, " + killer.heShe() + " gasps and covers " + killer.hisHer() + " mouth.  ");
                    if (victim.isSurrounded()) {
                        w.append(t, "In the midst of the scorched remains of a crowd of Thralls, ");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "Abandoned by the fleeing " + this.usedForsaken.mainName + ", ");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "Near your regenerating Commander body, ");
                    }
                    else {
                        w.append(t, "Near what's left of your Commander body, ");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                    w.append(t, String.valueOf(victim.getMainName()) + "'s form lies motionless.\n\n");
                    killer.say(t, "\"" + victim.getMainName() + "...  I...  I didn't mean to...");
                }
                else {
                    w.append(t, "Caught up in " + killer.hisHer() + " eagerness to defeat the Demon Lord once and for all, " + killer.getMainName() + " lashes out wildly with tremendously destructive bursts of energy.  ");
                    if (victim.isSurrounded()) {
                        w.append(t, "However, as " + killer.heShe() + " steps over a Thrall's body, " + killer.hisHer() + " eyes widen in shock when " + killer.heShe() + " realizes that it's actually " + victim.getMainName() + ".");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "However, as " + killer.heShe() + " tries to chase " + this.usedForsaken.mainName + ", " + killer.heShe() + " notices " + victim.mainName + "'s body lying motionless on the ground behind " + this.usedForsaken.himHer() + ".");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, String.valueOf(killer.HeShe()) + " blasts a hole in your body and then starts to make chase as you flee, but " + killer.heShe() + " comes up short when " + killer.heShe() + " realizes that the charred shape which fell out is actually " + victim.getMainName() + "'s remains.");
                    }
                    else {
                        w.append(t, String.valueOf(killer.HeShe()) + " smiles with satisfaction as " + killer.heShe() + " destroys your Commander body, but " + killer.hisHer() + " expression turns to horror when " + killer.heShe() + " sees that " + victim.getMainName() + " was caught in the blast.");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                    killer.say(t, "\n\n\"Did... Did I do this...?");
                }
                killer.say(t, "\"\n\n");
                victim.say(t, "\"");
                if (victim.isDrained()) {
                    if (victim.getMorality() > 66) {
                        victim.say(t, "It may be... cowardly... but I'm happy... that you freed me... from all this...");
                    }
                    else if (victim.getMorality() > 33) {
                        victim.say(t, String.valueOf(killer.getMainName()) + "...  This is... what I wanted... after all...");
                    }
                    else {
                        victim.say(t, "Heh... I got you... to kill me... after all...");
                    }
                }
                else if (victim.getMorality() > 66) {
                    victim.say(t, String.valueOf(killer.getMainName()) + "... I'm entrusting... my mission... to you...");
                }
                else if (victim.getMorality() > 33) {
                    victim.say(t, "It's okay... " + killer.getMainName() + "... you did good...");
                }
                else {
                    victim.say(t, "Guess this is goodbye...  If there's a life after this one... then I think you'll end up... in a better place than the one I'm heading for...");
                }
            }
            else if (killer.getInnocence() > 33) {
                if (victim.getConfidence() > 66) {
                    w.append(t, "After launching " + killer.hisHer() + " all-out attack, " + killer.getMainName() + " blinks away " + killer.hisHer() + " tears, rushing forward and hoping against hope that " + killer.heShe() + " won't find " + killer.hisHer() + " friend's body.  But it's not long until " + killer.heShe() + " spots " + victim.getMainName());
                    if (victim.isSurrounded()) {
                        w.append(t, " lying among the remains of the Thralls who had been attacking " + victim.himHer() + ".");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, " lying on the ground, left behind by the fleeing " + this.usedForsaken.mainName + ".");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, " lying on the ground, discarded by your badly damaged Commander.");
                    }
                    else {
                        w.append(t, " lying on the ground among the remains of your Commander.");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    killer.say(t, "\n\n\"" + victim.getMainName() + "...  I-I hoped...  I thought you might be strong enough to...");
                }
                else if (victim.getConfidence() > 33) {
                    w.append(t, String.valueOf(killer.getMainName()) + " fires blasts of energy into the enemy formation, being as careful as " + killer.heShe() + " can to avoid " + victim.getMainName() + "'s position, but it's a futile effort.  After it's over, " + killer.heShe() + " ");
                    if (victim.isSurrounded()) {
                        w.append(t, "reluctantly approaches the bodies of the dead Thralls, knowing who " + killer.heShe() + "'ll find among them.");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "only reluctantly gives chase to " + this.usedForsaken.mainName + ", knowing whose body " + killer.heShe() + "'ll find discarded behind " + this.usedForsaken.himHer() + ".");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "only reluctantly gives chase to your Commander, knowing whose body " + killer.heShe() + "'ll find discarded behind it.");
                    }
                    else {
                        w.append(t, "reluctantly approaches what's left of your Commander, knowing whose body " + killer.heShe() + "'ll find in the midst of the remains.");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    killer.say(t, "\n\n\"" + victim.getMainName() + "...  I'm sorry.");
                }
                else {
                    w.append(t, String.valueOf(killer.getMainName()) + " sobs in helpless rage as " + killer.heShe() + " lashes out at your forces, blasting them apart with pure energy, knowing that " + victim.getMainName() + " is among them but also that " + killer.heShe() + " has no choice but to use " + killer.hisHer() + " full power.  Once all the Demons in the area are dead, " + killer.getMainName() + " rushes over to " + victim.getMainName() + "'s side, ");
                    if (victim.isSurrounded()) {
                        w.append(t, "stepping over the dead Thralls all around " + victim.himHer() + " and picking ");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "ignoring the fleeing " + this.usedForsaken.mainName + " as " + killer.heShe() + " picks ");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "ignoring your fleeing Commander as " + killer.heShe() + " picks ");
                    }
                    else {
                        w.append(t, "stepping through the remains of your Commander as " + killer.heShe() + " picks ");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    w.append(t, String.valueOf(victim.himHer()) + " up in time to hear " + victim.hisHer() + " last words.");
                    killer.say(t, "\n\n\"" + victim.getMainName() + ", I'm... I'm here.");
                }
                killer.say(t, "\"\n\n");
                victim.say(t, "\"");
                if (victim.isDrained()) {
                    if (victim.getMorality() > 66) {
                        victim.say(t, String.valueOf(killer.getMainName()) + "...  Thank... you...");
                    }
                    else if (victim.getMorality() > 33) {
                        victim.say(t, "I'm glad... you're with me... " + killer.getMainName() + "...");
                    }
                    else {
                        victim.say(t, "Finally... I can die...");
                    }
                }
                else if (victim.getMorality() > 66) {
                    victim.say(t, "I did everything I could, but... I still... ended up...");
                }
                else if (victim.getMorality() > 33) {
                    victim.say(t, "Did... Did I really do anything that mattered...?");
                }
                else {
                    victim.say(t, "I was... such an idiot...");
                }
            }
            else {
                if (victim.getConfidence() > 66) {
                    w.append(t, "After launching powerful flurry of attacks to wipe out one of the last remaining groups of Demons, " + killer.getMainName() + " knows that " + victim.getMainName() + " couldn't have possibly survived.  However, " + killer.hisHer() + " heart still jumps when " + killer.heShe() + " hears a gasp from ");
                    if (victim.isSurrounded()) {
                        w.append(t, "a pile of Thralls' bodies");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "the direction of the fleeing " + this.usedForsaken.mainName);
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "the direction of your fleeing Commander body");
                    }
                    else {
                        w.append(t, "the gory remains of your Commander body");
                    }
                    w.append(t, ", and " + killer.heShe() + " rushes over to investigate.  " + killer.HisHer() + " heart sinks again when " + killer.heShe() + " sees that " + victim.getMainName() + " clearly isn't long for this world.");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    killer.say(t, "\n\n\"I'm... s-sorry I couldn't make it quick...");
                }
                else if (victim.getConfidence() > 33) {
                    w.append(t, "Having reached " + killer.hisHer() + " decision, " + killer.getMainName() + " attacks the Demonic formation with cold ruthlessness, perfectly aware that each of " + killer.hisHer() + " blasts could be the one that ends the trapped " + victim.getMainName() + "'s life.  Only the tears staining " + killer.hisHer() + " cheeks are a sign " + killer.heShe() + "'s feeling anything at all.  " + killer.HeShe() + " prepares to go after the next group of Demons, but " + killer.heShe() + " can't help hesitating when " + killer.heShe() + " spots " + victim.getMainName());
                    if (victim.isSurrounded()) {
                        w.append(t, " taking " + victim.hisHer() + " last breaths among the remains of the Thralls who had been surrounding " + victim.himHer() + ".");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "'s discarded form, left behind by the fleeing " + this.usedForsaken.mainName + ".");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "'s discarded form, left behind by your damaged Commander.");
                    }
                    else {
                        w.append(t, "'s crumpled form among the remains of your Commander body.");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                    killer.say(t, "\n\n\"No... I do not want to see this...!");
                }
                else {
                    w.append(t, String.valueOf(killer.getMainName()) + " knows that it's no longer possible to save " + victim.getMainName() + ", so " + killer.heShe() + " tries to at least give " + victim.getMainName() + " a quick death.  Blasts of overwhelmingly powerful energy rip through the Demonic formation, ");
                    if (victim.isSurrounded()) {
                        w.append(t, "including the group of Thralls holding " + victim.getMainName() + " captive.");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "dealing a grievous wound to " + this.usedForsaken.mainName + ", but also piercing " + victim.mainName + "'s captive form.");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "cutting through your body and piercing " + victim.getMainName() + "'s captive form.");
                    }
                    else {
                        w.append(t, "cutting your body apart and piercing the captive " + victim.getMainName() + " as well.");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                    w.append(t, "  " + killer.getMainName() + " turns away from the scene of destruction and doesn't look back.");
                    killer.say(t, "\n\n\"Damn the Demon Lord for forcing me to do this.");
                }
                killer.say(t, "\"\n\n");
                victim.say(t, "\"");
                if (victim.isDrained()) {
                    if (victim.getMorality() > 66) {
                        victim.say(t, "Ah... I thought dying... would hurt more...");
                    }
                    else if (victim.getMorality() > 33) {
                        victim.say(t, "Heheh...  Thanks... " + killer.getMainName() + "...");
                    }
                    else {
                        victim.say(t, String.valueOf(killer.getMainName()) + "...  You'd better make it out okay... or I'm gonna beat you up in the afterlife...");
                    }
                }
                else if (victim.getMorality() > 66) {
                    victim.say(t, "Did I do good...?  Please, " + killer.getMainName() + ", tell me I did good...");
                }
                else if (victim.getMorality() > 33) {
                    victim.say(t, "Huh?  What happened...?  I'm... getting really sleepy...  ...");
                }
                else {
                    victim.say(t, "What's going to happen now?  I'm scared...!  I'm...  ...");
                }
            }
        }
        else {
            if (w.getRelationship(killer.getNumber(), victim.getNumber()) > -4) {
                if (killer.getMorality() > 66) {
                    if (victim.getConfidence() > 66) {
                        w.append(t, String.valueOf(killer.getMainName()) + " is trembling with apprehension at what " + killer.heShe() + " has to do, but " + killer.heShe() + " still doesn't hesitate.  Blasts of destructive energy fly from " + killer.hisHer() + " hands, ");
                        if (victim.isSurrounded()) {
                            w.append(t, "tearing through one of the last Demonic formations, the nearby Thralls, and " + victim.getMainName() + ", who they hold captive.");
                        }
                        else if (this.usedForsaken != null) {
                            w.append(t, "tearing through one of the last Demonic formations, " + this.usedForsaken.mainName + " included, as well as the captive " + victim.mainName + ".");
                        }
                        else if (this.capturesPossible > 0) {
                            w.append(t, "tearing through one of the last Demonic formations, your Commander body included, as well as the captive " + victim.getMainName() + ".");
                        }
                        else {
                            w.append(t, "tearing through one of the last Demonic formations, blasting apart your Commander body, and fatally wounding the captive " + victim.getMainName() + ".");
                        }
                        Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                        killer.say(t, "\n\n\"I'm sorry, " + victim.getMainName() + "...  But I couldn't afford to give you a chance to turn to the Demons' side.");
                    }
                    else if (victim.getConfidence() > 33) {
                        w.append(t, String.valueOf(killer.getMainName()) + " levels " + killer.hisHer() + " hand at the mass of Demons ");
                        if (victim.isSurrounded()) {
                            w.append(t, "and Thralls where " + victim.getMainName() + " is held captive");
                        }
                        else if (this.usedForsaken != null) {
                            w.append(t, "clustered around " + this.usedForsaken.mainName + " and the captive " + victim.mainName);
                        }
                        else {
                            w.append(t, "clustered around your Commander and the captive " + victim.getMainName());
                        }
                        w.append(t, ".  " + killer.HeShe() + " struggles with " + killer.hisHer() + " conscience for only a moment before unleashing a blast of destructive energy at " + killer.hisHer() + " target.");
                        Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                        killer.say(t, "\n\n\"I'm not doing this because I hate you.  I'm doing it because it's the only way to save everyone else.");
                    }
                    else {
                        w.append(t, String.valueOf(killer.getMainName()) + " fights " + killer.hisHer() + " way into the heart of the Demonic formation, launching blasts of destructive energy in all directions.  " + killer.HeShe() + " knows that ");
                        if (victim.isSurrounded()) {
                            w.append(t, String.valueOf(victim.getMainName()) + " is being held by the Thralls there");
                        }
                        else if (this.usedForsaken != null) {
                            w.append(t, String.valueOf(victim.mainName) + " is fighting " + this.usedForsaken.mainName + " there");
                        }
                        else {
                            w.append(t, String.valueOf(victim.getMainName()) + " is being held by your Commander there");
                        }
                        w.append(t, ", but " + killer.heShe() + " still doesn't hold back, and it isn't long before one of the blasts deals " + victim.himHer() + " a fatal wound.");
                        Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                        killer.say(t, "\n\n\"There are too many other people counting on me.  I can't hold back just for " + victim.getMainName() + "'s sake.");
                    }
                }
                else if (killer.getMorality() > 33) {
                    if (victim.getConfidence() > 66) {
                        w.append(t, String.valueOf(killer.getMainName()) + " is surrounded by Demons, and " + killer.heShe() + " flings blasts of energy in all directions to defend " + killer.himHer() + "self.  Through a gap in the crowd, " + killer.heShe() + " ");
                        if (victim.isSurrounded()) {
                            w.append(t, "sees " + victim.getMainName() + " being mobbed by the Thralls.  The two Chosen lock eyes for a moment, and then ");
                        }
                        else if (this.usedForsaken != null) {
                            w.append(t, "catches a glimpse of where " + victim.mainName + " and " + this.usedForsaken.mainName + " are fighting.  The two Chosen lock eyes for a moment, and then ");
                        }
                        else {
                            w.append(t, "catches a glimpse of your Commander body and senses that " + victim.getMainName() + " is still being held.  A moment later, ");
                        }
                        w.append(t, String.valueOf(killer.getMainName()) + " continues " + killer.hisHer() + " attack, incinerating " + victim.getMainName() + ".");
                        Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                        killer.say(t, "\n\n\"I didn't really have a choice...");
                    }
                    else if (victim.getConfidence() > 33) {
                        w.append(t, String.valueOf(killer.getMainName()) + " fights desperately, backed into a corner by the last remaining swarm of Demons.  " + killer.HisHer() + " only way out is through the ");
                        if (victim.isSurrounded()) {
                            w.append(t, "crowd of Thralls abusing " + victim.getMainName());
                        }
                        else if (this.usedForsaken != null) {
                            w.append(t, "core of the Demonic formation, where " + victim.mainName + " and " + this.usedForsaken.mainName + " are fighting");
                        }
                        else {
                            w.append(t, "core of the Demonic formation, where your Commander torments the captured " + victim.getMainName());
                        }
                        w.append(t, ".  " + killer.getMainName() + " cuts a path for " + killer.himHer() + "self without hesitation, not even looking back at " + victim.getMainName() + "'s charred remains.");
                        Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                        killer.say(t, "\n\n\"I won't let you take me down with you.");
                    }
                    else {
                        w.append(t, String.valueOf(killer.getMainName()) + " hunts down the last few groups of Demons with ruthless efficiency.  ");
                        if (victim.isSurrounded()) {
                            w.append(t, "Some of those Demons are intermingled with Thralls, and some of those Thralls are holding " + victim.getMainName() + " captive, but " + killer.getMainName() + " refuses to hold back.  ");
                        }
                        else if (this.usedForsaken != null) {
                            w.append(t, String.valueOf(this.usedForsaken.mainName) + " is " + killer.hisHer() + " main target, and " + killer.heShe() + " blasts " + this.usedForsaken.himHer() + " with all " + killer.hisHer() + " power even though " + victim.mainName + " is right next to " + this.usedForsaken.himHer() + ".  " + this.usedForsaken.mainName + " is forced to flee, and " + killer.mainName + " gives chase.  ");
                        }
                        else if (this.capturesPossible > 0) {
                            w.append(t, "Your Commander body is " + killer.hisHer() + " main target, and " + killer.heShe() + " blasts it with all " + killer.hisHer() + " power even though you're holding " + victim.getMainName() + " captive.  You're forced to flee, and " + killer.getMainName() + " gives chase.  ");
                        }
                        else {
                            w.append(t, "Your Commander body is " + killer.hisHer() + " main target, and " + killer.heShe() + " blasts it with all " + killer.hisHer() + " power even though you're holding " + victim.getMainName() + " captive.  Your body is blasted apart, and " + killer.getMainName() + " moves on to cleaning up the lesser Demons.  ");
                        }
                        w.append(t, "The mortally wounded " + victim.getMainName() + " is left behind to die alone.");
                        Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                        killer.say(t, "\n\n\"I can finish this without you.");
                    }
                }
                else if (victim.getConfidence() > 66) {
                    w.append(t, String.valueOf(victim.getMainName()) + " grits " + victim.hisHer() + " teeth, ");
                    if (victim.isSurrounded()) {
                        w.append(t, "struggling against the Thralls holding " + victim.himHer() + " down, ");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "struggling against " + this.usedForsaken.mainName + ", ");
                    }
                    else {
                        w.append(t, "struggling to control " + victim.himHer() + "self in the grasp of your Commander, ");
                    }
                    w.append(t, "but then everything is consumed by an indiscriminate blast of energy launched by " + killer.getMainName() + ".");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                    killer.say(t, "\n\n\"Heh.  Looks like you weren't so strong after all.");
                }
                else if (victim.getConfidence() > 33) {
                    w.append(t, String.valueOf(killer.getMainName()) + " climbs to the rooftop of a tall office building, intending to use it to rain destructive energy on enemies who can't fight back.  " + killer.HeShe() + " carelessly shoots glowing arcs down at the city below, ");
                    if (victim.isSurrounded()) {
                        w.append(t, "not caring if " + killer.heShe() + " hits any Thralls, or even if " + killer.heShe() + " hits " + victim.getMainName() + ", who they hold captive.  ");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "aiming to take out " + this.usedForsaken.mainName + " even though " + victim.mainName + " is right next to " + this.usedForsaken.himHer() + ".  ");
                    }
                    else {
                        w.append(t, "aiming to take out your Commander body even though you're currently holding " + victim.getMainName() + " captive.  ");
                    }
                    w.append(t, "The last thing " + victim.getMainName() + " sees is " + killer.getMainName() + " smirking down at " + victim.himHer() + ".");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                    killer.say(t, "\n\n\"Is that...?  Aha, " + victim.heShe() + " looks so pathetic from up here!");
                }
                else {
                    w.append(t, "When " + killer.getMainName() + " approaches, ");
                    if (victim.isSurrounded()) {
                        w.append(t, "the Thralls surrounding " + victim.getMainName() + " leave " + victim.himHer() + " behind and try to escape.  ");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, String.valueOf(this.usedForsaken.mainName) + " abandons the fight with " + victim.mainName + " and flees for " + this.usedForsaken.hisHer() + " life.  ");
                    }
                    else {
                        w.append(t, "you cast aside " + victim.getMainName() + " and attempt to retreat your Commander body so it can be used again.  ");
                    }
                    w.append(t, "But " + killer.getMainName() + " blasts the entire area with ");
                    if (victim.isSurrounded() || this.capturesPossible == 0) {
                        w.append(t, "an overwhelmingly excessive barrage of destructive energy, mostly centered around " + victim.getMainName() + ".");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "such an overwhelmingly destructive barrage of energy that " + this.usedForsaken.mainName + " almost doesn't make it.  Fortunately, it's mostly focused on " + victim.getMainName() + "'s position.");
                    }
                    else {
                        w.append(t, "such an overwhelmingly destructive barrage of energy that you almost don't make it.  Fortunately, it's mostly focused on " + victim.getMainName() + "'s position.");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                    killer.say(t, "\n\n\"There, target destroyed.  Looks like I accidentally ended up killing some Demons, too.");
                }
            }
            else if (killer.getMorality() > 66) {
                if (victim.getConfidence() > 66) {
                    w.append(t, String.valueOf(killer.getMainName()) + " is trembling with apprehension at what " + killer.heShe() + " has to do, but when " + killer.heShe() + " sees " + victim.getMainName() + ", " + killer.hisHer() + " expression hardens.  Blasts of destructive energy fly from " + killer.hisHer() + " hands, ");
                    if (victim.isSurrounded()) {
                        w.append(t, "tearing through one of the last Demonic formations, the nearby Thralls, and " + victim.getMainName() + ", who they hold captive.");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "tearing through one of the last Demonic formations, injuring " + this.usedForsaken.mainName + ", and fatally wounding the nearby " + victim.mainName + ".");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "tearing through one of the last Demonic formations, your Commander body included, as well as the captive " + victim.getMainName() + ".");
                    }
                    else {
                        w.append(t, "tearing through one of the last Demonic formations, blasting apart your Commander body, and fatally wounding the captive " + victim.getMainName() + ".");
                    }
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                    killer.say(t, "\n\n\"I'm sorry...  No.  I'm not sorry.  You're an evil person, " + victim.getMainName() + ", and this is what you deserve.");
                }
                else if (victim.getConfidence() > 33) {
                    w.append(t, String.valueOf(killer.getMainName()) + " levels " + killer.hisHer() + " hand at the mass of Demons ");
                    if (victim.isSurrounded()) {
                        w.append(t, "and Thralls where " + victim.getMainName() + " is held captive");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "clustered around " + this.usedForsaken.mainName + " and " + victim.mainName);
                    }
                    else {
                        w.append(t, "clustered around your Commander and the captive " + victim.getMainName());
                    }
                    w.append(t, ".  " + killer.HeShe() + " doesn't even hesitate before unleashing a blast of destructive energy at " + killer.hisHer() + " target.");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                    killer.say(t, "\n\n\"Maybe I could have saved you...  But after seeing what kind of person you are, I think you need to die here, for the sake of everyone you'd hurt in the future.");
                }
                else {
                    w.append(t, String.valueOf(killer.getMainName()) + " fights " + killer.hisHer() + " way into the heart of the Demonic formation, launching blasts of destructive energy in all directions.  " + killer.HeShe() + " knows that ");
                    if (victim.isSurrounded()) {
                        w.append(t, String.valueOf(victim.getMainName()) + " is being held by the Thralls there");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, String.valueOf(victim.mainName) + " is still fighting " + this.usedForsaken.mainName + " there");
                    }
                    else {
                        w.append(t, String.valueOf(victim.getMainName()) + " is being held by your Commander there");
                    }
                    w.append(t, ", but that's half the reason " + killer.heShe() + " chose to attack from this angle, and it isn't long before one of the blasts deals " + victim.mainName + " a fatal wound.");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                    killer.say(t, "\n\n\"Good.  The Demon Lord isn't the only monster I came here to slay.");
                }
            }
            else if (killer.getMorality() > 33) {
                if (victim.getConfidence() > 66) {
                    w.append(t, String.valueOf(killer.getMainName()) + " is surrounded by Demons, and " + killer.heShe() + " flings blasts of energy in all directions to defend " + killer.himHer() + "self.  Through a gap in the crowd, " + killer.heShe() + " ");
                    if (victim.isSurrounded()) {
                        w.append(t, "sees " + victim.getMainName() + " being mobbed by the Thralls.  The two Chosen lock eyes for a moment, and then ");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "sees " + victim.mainName + " fighting " + this.usedForsaken.mainName + ".  The two Chosen lock eyes for a moment, and then ");
                    }
                    else {
                        w.append(t, "catches a glimpse of your Commander body and senses that " + victim.getMainName() + " is still being held.  A moment later, ");
                    }
                    w.append(t, String.valueOf(killer.getMainName()) + "'s face twists with hatred. " + killer.HeShe() + " intensifies, " + killer.hisHer() + " attack, incinerating " + victim.getMainName() + ".");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                    killer.say(t, "\n\n\"Good riddance.");
                }
                else if (victim.getConfidence() > 33) {
                    w.append(t, String.valueOf(killer.getMainName()) + " fights desperately, backed into a corner by the last remaining swarm of Demons.  " + killer.HisHer() + " only way out is through the ");
                    if (victim.isSurrounded()) {
                        w.append(t, "crowd of Thralls abusing " + victim.getMainName());
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, "core of the Demonic formation, where " + this.usedForsaken.mainName + " fights " + victim.mainName);
                    }
                    else {
                        w.append(t, "core of the Demonic formation, where your Commander torments the captured " + victim.getMainName());
                    }
                    w.append(t, ".  " + killer.getMainName() + " cuts a path for " + killer.himHer() + "self without hesitation, actually going out of " + killer.hisHer() + " way to launch a lethal blast of energy directly at " + victim.getMainName() + ".");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                    killer.say(t, "\n\n\"You've had this coming for a long time.");
                }
                else {
                    w.append(t, String.valueOf(killer.getMainName()) + " hunts down the last few groups of Demons with ruthless efficiency.  ");
                    if (victim.isSurrounded()) {
                        w.append(t, "Some of those Demons are intermingled with Thralls, and some of those Thralls are holding " + victim.getMainName() + " captive, but " + killer.getMainName() + " refuses to hold back.  ");
                    }
                    else if (this.usedForsaken != null) {
                        w.append(t, String.valueOf(this.usedForsaken.mainName) + " is " + killer.hisHer() + " main target, and " + killer.heShe() + " blasts " + this.usedForsaken.himHer() + " with all " + killer.hisHer() + " power even though " + victim.mainName + " is so close.  " + this.usedForsaken.mainName + " is forced to flee.  ");
                    }
                    else if (this.capturesPossible > 0) {
                        w.append(t, "Your Commander body is " + killer.hisHer() + " main target, and " + killer.heShe() + " blasts it with all " + killer.hisHer() + " power even though you're holding " + victim.getMainName() + " captive.  You're forced to flee.  ");
                    }
                    else {
                        w.append(t, "Your Commander body is " + killer.hisHer() + " main target, and " + killer.heShe() + " blasts it with all " + killer.hisHer() + " power even though you're holding " + victim.getMainName() + " captive.  Your body is blasted apart.  ");
                    }
                    w.append(t, String.valueOf(killer.getMainName()) + " stops by " + victim.getMainName() + "'s side, almost as if to help " + victim.himHer() + " up... then finishes " + victim.himHer() + " off with a point-blank lethal blast of destructive energy.");
                    Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                    killer.say(t, "\n\n\"I'm not giving you a chance to screw this up.");
                }
            }
            else if (victim.getConfidence() > 66) {
                w.append(t, String.valueOf(victim.getMainName()) + " grits " + victim.hisHer() + " teeth, ");
                if (victim.isSurrounded()) {
                    w.append(t, "struggling against the Thralls holding " + victim.himHer() + " down, ");
                }
                else if (this.usedForsaken != null) {
                    w.append(t, "fighting against " + this.usedForsaken.mainName + ", ");
                }
                else {
                    w.append(t, "struggling to control " + victim.himHer() + "self in the grasp of your Commander, ");
                }
                w.append(t, "but then a beam of lethal energy pierces " + victim.hisHer() + " chest from afar.  " + killer.getMainName() + " stands nearby, grinning madly with " + killer.hisHer() + " hand outstretched.");
                Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                killer.say(t, "\n\n\"Yes!  Now, if anyone asks, I'll just need to tell them you were dead when I found you.");
            }
            else if (victim.getConfidence() > 33) {
                w.append(t, String.valueOf(killer.getMainName()) + " climbs to the rooftop of a tall office building, using it as a vantage point to locate " + victim.getMainName() + ".  " + killer.HeShe() + " finds " + killer.hisHer() + " target and immediately begins launching glowing arcs of destructive energy at the city below, ");
                if (victim.isSurrounded()) {
                    w.append(t, "aiming at the group of Thralls holding " + victim.getMainName() + " captive.  ");
                }
                else if (this.usedForsaken != null) {
                    w.append(t, "aiming at where " + this.usedForsaken.mainName + " is fighting - or more precisely, at " + this.usedForsaken.mainName + "'s opponent.  ");
                }
                else {
                    w.append(t, "aiming for your Commander body - or more precisely, the one you're holding captive.  ");
                }
                w.append(t, "The last thing " + victim.getMainName() + " sees is " + killer.getMainName() + " smirking down at " + victim.himHer() + ".");
                Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                killer.say(t, "\n\n\"Hahah!  What a way to die!");
            }
            else {
                w.append(t, "When " + killer.getMainName() + " approaches, ");
                if (victim.isSurrounded()) {
                    w.append(t, "the Thralls surrounding " + victim.getMainName() + " leave " + victim.himHer() + " behind and try to escape.  ");
                }
                else if (this.usedForsaken != null) {
                    w.append(t, String.valueOf(this.usedForsaken.mainName) + " abandons the weakened " + victim.mainName + " and flees.  ");
                }
                else {
                    w.append(t, "you cast aside " + victim.getMainName() + " and attempt to retreat your Commander body so it can be used again.  ");
                }
                if (!victim.isSurrounded() && this.capturesPossible == 0 && this.usedForsaken == null) {
                    w.append(t, "But " + killer.getMainName() + " casually blasts your body apart, then grabs the wounded " + victim.getMainName() + " by the throat and lifts " + victim.himHer() + " up.  ");
                }
                else {
                    w.append(t, String.valueOf(killer.getMainName()) + " doesn't bother to interfere, walking over to " + victim.getMainName() + " and picking " + victim.himHer() + " up by the throat.  ");
                }
                w.append(t, String.valueOf(killer.HeShe()) + " strangles the life from " + victim.getMainName() + " snarling with satisfaction.");
                Project.changePortrait(killer.convertGender(), killer.type, false, false, this, this.nameCombatants(), killer.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                killer.say(t, "\n\n\"To be able to kill you with my own bare hands...  Maybe all this was worth it in the end.");
            }
            killer.say(t, "\"\n\n");
            victim.say(t, "\"");
            if (victim.isDrained()) {
                if (killer.getMorality() > 66) {
                    if (victim.getInnocence() > 66) {
                        victim.say(t, "Heheh...  I actually wanted to die... so I guess... I win...");
                    }
                    else if (victim.getInnocence() > 33) {
                        victim.say(t, "Go on...  Keep suffering for people who will never appreciate you...  Idiot...");
                    }
                    else {
                        victim.say(t, "You... sanctimonious...  Ugh, but this is what I wanted... so I guess... it's fine...");
                    }
                }
                else if (killer.getMorality() > 33) {
                    if (victim.getInnocence() > 66) {
                        victim.say(t, "You're... as mean as you always are... but I guess this is okay too...");
                    }
                    else if (victim.getInnocence() > 33) {
                        victim.say(t, "You could at least... finish me off... more quickly...");
                    }
                    else {
                        victim.say(t, "Good...  The pain... is already... fading... away...");
                    }
                }
                else if (victim.getInnocence() > 66) {
                    victim.say(t, "You're actually helping me die, so... I think I don't hate you... after all...");
                }
                else if (victim.getInnocence() > 33) {
                    victim.say(t, "I always figured... you'd be the one to kill me...");
                }
                else {
                    victim.say(t, "My suffering... is at an end...  But yours...");
                }
            }
            else if (killer.getMorality() > 66) {
                if (victim.getInnocence() > 66) {
                    victim.say(t, "I'll kill you, " + killer.getMainName() + "...!  Somehow... I'll... ...");
                }
                else if (victim.getInnocence() > 33) {
                    if (killer.getGender().equals("male")) {
                        victim.say(t, String.valueOf(killer.getMainName()) + "...!  You bastard...");
                    }
                    else {
                        victim.say(t, String.valueOf(killer.getMainName()) + "...!  You bitch...");
                    }
                }
                else {
                    victim.say(t, "I wish... I had gotten the chance... to kill you first...");
                }
            }
            else if (killer.getMorality() > 33) {
                if (victim.getInnocence() > 66) {
                    victim.say(t, "No... save me... someone...");
                }
                else if (victim.getInnocence() > 33) {
                    victim.say(t, "Ugh...  Damn you...");
                }
                else {
                    victim.say(t, "I suppose... I couldn't beat you... after all...");
                }
            }
            else if (victim.getInnocence() > 66) {
                victim.say(t, "I failed...  I'm sorry... everyone...");
            }
            else if (victim.getInnocence() > 33) {
                victim.say(t, "Why...?");
            }
            else {
                victim.say(t, "I did... everything... I could...");
            }
        }
        victim.say(t, "\"");
        victim.endSurround();
        victim.alive = false;
        victim.surrounded = false;
        victim.captured = false;
        this.readyToEnd = false;
        final Chosen[] newKills = new Chosen[killer.kills.length + 1];
        final int[] newRelations = new int[killer.killRelationships.length + 1];
        for (int j = 0; j < killer.kills.length; ++j) {
            newKills[j] = killer.kills[j];
            newRelations[j] = killer.killRelationships[j];
        }
        newKills[killer.kills.length] = victim;
        newRelations[killer.killRelationships.length] = this.getRelationship(killer.getNumber(), victim.getNumber());
    }
    
    public void toggleAdaptations() {
        this.disableAdaptations = !this.disableAdaptations;
    }
    
    public Boolean adaptationsDisabled() {
        return this.disableAdaptations;
    }
    
    public void punisherFlavor(final JTextPane t, final WorldState w, final int thisAttack, final Chosen c) {
        final int captureProgression = c.captureProgression;
        final int morality = c.getMorality();
        final int innocence = c.getInnocence();
        final int confidence = c.getConfidence();
        final int dignity = c.getDignity();
        final String mainName = c.getMainName();
        final Boolean vVirg = c.isVVirg();
        final Boolean cVirg = c.isCVirg();
        final Boolean aVirg = c.isAVirg();
        final Boolean modest = c.isModest();
        final String gender = c.getGender();
        final Boolean impregnated = c.isImpregnated();
        final Boolean hypnotized = c.isHypnotized();
        final Boolean drained = c.isDrained();
        final Boolean parasitized = c.isParasitized();
        final String feetType = c.feetType;
        String topDesc = c.topCover;
        if (topDesc.equals("crop")) {
            topDesc = "crop top";
        }
        else if (topDesc.equals("strips")) {
            topDesc = "strips of cloth";
        }
        else if (topDesc.equals("bindings")) {
            topDesc = "chest bindings";
        }
        String bottomDesc = c.bottomCover;
        if (bottomDesc.equals("strips")) {
            bottomDesc = "strips of cloth";
        }
        if (w.getBodyStatus()[19] && !w.getBodyStatus()[26]) {
            if (captureProgression % 3 == 1) {
                if (dignity > 66) {
                    w.append(t, "Unable to completely hide " + c.hisHer() + " disgust, " + mainName + " shudders");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(mainName) + " squirms in obvious disgust");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " visibly recoils and cries out in disgust");
                }
                if (c.getImpregnationEffectiveness() >= c.impregnationReq() || (c.getHATELevel() >= 3 && !vVirg)) {
                    if (morality > 66) {
                        w.append(t, ", despairing over the fact that " + c.hisHer() + " body is being defiled by the Demon Lord's seed");
                    }
                    else if (morality > 33) {
                        w.append(t, " as " + c.heShe() + " feels your warm seed filling " + c.himHer() + " up");
                    }
                    else {
                        w.append(t, ", feeling the Demonic seed in " + c.hisHer() + " belly resonate with " + c.hisHer() + " sinful thoughts");
                    }
                    if (confidence > 66) {
                        w.append(t, ", teeth clenched and eyes smoldering with rage.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, ", gasping with exertion and building anger in " + c.hisHer() + " attempts to escape.  ");
                    }
                    else {
                        w.append(t, ", tearful eyes glaring up at you.  ");
                    }
                }
                else {
                    if (morality > 66) {
                        w.append(t, ", losing " + c.hisHer() + " composure ");
                    }
                    else if (morality > 33) {
                        w.append(t, ", caught off guard ");
                    }
                    else {
                        w.append(t, ", " + c.hisHer() + " anger spiking ");
                    }
                    if (confidence > 66) {
                        w.append(t, "as " + c.hisHer() + " determined struggles cause " + c.hisHer() + " legs and tummy to grind against your enormous cock, unwittingly milking the organ until it cums all over " + c.himHer() + ".  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, "as you thrust your gigantic cock between " + c.hisHer() + " tightly-clenched thighs, the pleasant pressure causing you to ejaculate all over " + c.himHer() + ".  ");
                    }
                    else {
                        w.append(t, "as your huge cock humping against " + c.hisHer() + " belly finally starts spurting copious amounts of seed onto " + c.hisHer() + " chest and face.  ");
                    }
                }
                if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                    if (innocence > 66) {
                        w.append(t, String.valueOf(c.HeShe()) + " may already be carrying your progeny inside " + c.himHer() + ", but the substance also has all the regular effects of Demonic slime, causing " + c.himHer() + " to feel detached and lightheaded.");
                    }
                    else if (innocence > 33) {
                        w.append(t, "The fact that it's pointless to make " + c.himHer() + " continue to go through this since " + c.heShe() + "'s already pregnant just makes it worse.");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " tries to convince " + c.himHer() + "self that it's too early to say for sure whether " + c.heShe() + "'s been impregnated, but it doesn't work.");
                    }
                }
                else if (c.getImpregnationEffectiveness() > 100) {
                    if (innocence > 66) {
                        w.append(t, String.valueOf(c.HeShe()) + " feels an instinctive fear as " + c.heShe() + " senses that " + c.heShe() + "'s closer than ever to actually getting pregnant.");
                    }
                    else if (innocence > 33) {
                        w.append(t, String.valueOf(c.HisHer()) + " Chosen powers are supposed to protect " + c.himHer() + " from actually being forced to carry a Demonic child, but doubts creep into the back of " + c.hisHer() + " mind as " + c.heShe() + " questions how strong those powers really are.");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " knows that " + c.hisHer() + " sinful behavior has likely decreased " + c.hisHer() + " supernatural resistance to impregnation, and that makes this all the more terrifying.");
                    }
                }
                else if (innocence > 66) {
                    w.append(t, String.valueOf(c.HisHer()) + " instincts warn " + c.himHer() + " that you're trying to put a baby in " + c.himHer() + " for real, but " + c.heShe() + " has faith in " + c.hisHer() + " Chosen powers to prevent that.");
                }
                else if (innocence > 33) {
                    w.append(t, "It's incredibly unpleasant, even though " + c.hisHer() + " Chosen powers mean that " + c.heShe() + "'s not worried about getting pregnant.");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + "'s quite certain that " + c.hisHer() + " Chosen powers protect " + c.himHer() + " from impregnation, but that just makes " + c.himHer() + " even more annoyed that you're putting " + c.himHer() + " through this for your own pleasure.");
                }
            }
            else if (captureProgression % 3 == 2) {
                if (innocence > 66) {
                    w.append(t, String.valueOf(mainName) + " is caught by surprise when you start ");
                }
                else if (innocence > 33) {
                    w.append(t, String.valueOf(mainName) + " is completely helpless to stop you when you begin ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " takes a deep breath to brace " + c.himHer() + "self before you start ");
                }
                if (c.getImpregnationEffectiveness() >= c.impregnationReq() || (c.getHATELevel() >= 3 && !vVirg)) {
                    if (gender.equals("male")) {
                        w.append(t, "thrusting so deep into " + c.hisHer() + " ass that it makes a visible bulge in " + c.hisHer() + " lower abdomen");
                    }
                    else {
                        w.append(t, "pushing open " + c.hisHer() + " cervix with the tip of your shaft");
                    }
                    if (dignity > 66) {
                        w.append(t, ", making " + c.hisHer() + " teeth clench and " + c.hisHer() + " eyes roll upward as " + c.heShe() + " tries in vain to hide " + c.hisHer() + " body's reaction.  ");
                    }
                    else if (dignity > 33) {
                        w.append(t, ", each spurt into " + c.hisHer() + " deepest place causing " + c.himHer() + " to gasp and shudder.  ");
                    }
                    else {
                        w.append(t, ", each impact deep inside causing " + c.himHer() + " to cry out in pain.  ");
                    }
                }
                else {
                    w.append(t, "pulling " + c.himHer() + " even closer with crushing strength, ");
                    if (gender.equals("male")) {
                        w.append(t, "your gigantic cock twitching against " + c.hisHer() + " chest and belly.  ");
                    }
                    else {
                        w.append(t, "your gigantic cock twitching between " + c.hisHer() + " breasts.  ");
                    }
                    if (dignity > 66) {
                        w.append(t, "You're practically masturbating with " + c.hisHer() + " body, which " + c.heShe() + " finds almost as degrading as it is painful.  ");
                    }
                    else if (dignity > 33) {
                        w.append(t, String.valueOf(c.HeShe()) + " tries to protest, but the painful pressure squeezes the breath out of " + c.hisHer() + " lungs.  ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " cries of pain and reflexive squirming accomplish nothing beyond getting you off.  ");
                    }
                }
                if (morality > 66) {
                    w.append(t, "The brutal punishment doesn't give " + c.himHer() + " any pleasure, ");
                }
                else if (morality > 33) {
                    w.append(t, "It doesn't feel good at all, ");
                }
                else {
                    w.append(t, "Your rough handling combined with " + c.hisHer() + " bitter fury at being treated this way mean that " + c.heShe() + " doesn't feel any pleasure from this, ");
                }
                if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                    if (confidence > 66) {
                        w.append(t, "and the fact that you've made " + c.hisHer() + " body into your tool is making it harder and harder for " + c.himHer() + " to maintain " + c.hisHer() + " defiance.");
                    }
                    else if (confidence > 33) {
                        w.append(t, "and " + c.heShe() + " can't help but wonder whether there's any point to resisting anymore.");
                    }
                    else {
                        w.append(t, "and " + c.heShe() + " feels more and more like " + c.heShe() + "'s already been defeated.");
                    }
                }
                else if (c.getImpregnationEffectiveness() > 100) {
                    if (confidence > 66) {
                        w.append(t, "and that just drives " + c.himHer() + " to struggle even harder against your attempt at impregnating " + c.himHer() + ".");
                    }
                    else if (confidence > 33) {
                        w.append(t, "but the prospect of forced pregnancy has got so much adrenaline coursing through " + c.hisHer() + " body that it doesn't even register yet how much it hurts.");
                    }
                    else {
                        w.append(t, "and " + c.hisHer() + " terror at the prospect of being forced to carry a Demon's child means that " + c.heShe() + "'s in no mental state to enjoy it anyway.");
                    }
                }
                else if (confidence > 66) {
                    w.append(t, "motivating " + c.himHer() + " to fight back with all " + c.hisHer() + " strength.");
                }
                else if (confidence > 33) {
                    w.append(t, "but " + c.heShe() + " reminds " + c.himHer() + "self that " + c.heShe() + " isn't defeated yet.");
                }
                else {
                    w.append(t, "and " + c.heShe() + " just tries to fold " + c.hisHer() + " limbs inward and endure it.");
                }
            }
            else if (captureProgression % 3 == 0) {
                if (morality > 66) {
                    w.append(t, "Psychically taunting " + mainName + " about being a useful seedbed, ");
                }
                else if (morality > 33) {
                    w.append(t, "Telepathically telling " + mainName + " that " + c.heShe() + "'ll never be able to go back to normal after this, ");
                }
                else {
                    w.append(t, "Aiming to further provoke " + mainName + "'s anger, ");
                }
                if (c.getImpregnationEffectiveness() >= c.impregnationReq() || (c.getHATELevel() >= 3 && !vVirg)) {
                    w.append(t, "you briefly withdraw your shaft from " + c.hisHer() + " ");
                    if (gender.equals("male")) {
                        w.append(t, "ass");
                    }
                    else {
                        w.append(t, "pussy");
                    }
                    w.append(t, " and encourage " + c.himHer() + " to look down at the white liquid overflowing from the ruined hole.  ");
                }
                else {
                    w.append(t, "you position the tip of your shaft against " + c.hisHer() + " ");
                    if (gender.equals("male")) {
                        w.append(t, "anus.  ");
                    }
                    else {
                        w.append(t, "labia.  ");
                    }
                }
                if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.HeShe()) + " sobs bitterly through tightly-clenched teeth");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.HeShe()) + " tries to hold back " + c.hisHer() + " tears");
                    }
                    else {
                        w.append(t, "Despair overwhelms " + c.himHer() + ", tears streaming down " + c.hisHer() + " cheeks");
                    }
                    if (innocence > 66) {
                        w.append(t, ", eyes glazed over as you ");
                    }
                    else if (innocence > 33) {
                        w.append(t, ", unable to focus as you ");
                    }
                    else {
                        w.append(t, ", too caught up in dwelling on " + c.hisHer() + " grim future to even resist as you ");
                    }
                }
                else if (c.getImpregnationEffectiveness() > 100) {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.HeShe()) + " maintains " + c.hisHer() + " defiant attitude, but there's a glimmer of uncertainty in " + c.hisHer() + " eyes");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.HeShe()) + " feels a flutter of uncertainty");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " trembles with fear");
                    }
                    if (innocence > 66) {
                        w.append(t, ", distracting " + c.himHer() + " enough that you can easily ");
                    }
                    else if (innocence > 33) {
                        w.append(t, ", giving you a chance to ");
                    }
                    else {
                        w.append(t, ", breaking " + c.hisHer() + " concentration and leaving " + c.himHer() + " completely open as you ");
                    }
                }
                else {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(mainName) + " just bares " + c.hisHer() + " teeth at you, angry but unworried about " + c.hisHer() + " magical defenses allowing a Demonic impregnation through.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, "However, " + c.heShe() + " still holds " + c.hisHer() + " head high, confident that " + c.hisHer() + " powers will protect " + c.himHer() + ".  ");
                    }
                    else {
                        w.append(t, "But as intimidated as " + c.heShe() + " is, there's still a spark of defiance in " + c.hisHer() + " eyes, a product of " + c.hisHer() + " certainty that one of the Chosen can't be impregnated so easily.  ");
                    }
                    if (innocence > 66) {
                        w.append(t, "You allow " + c.himHer() + " to feel some hope before you ");
                    }
                    else if (innocence > 33) {
                        w.append(t, "Before " + c.heShe() + " can try again to escape, you ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " retains the presence of mind to brace " + c.himHer() + "self before you ");
                    }
                }
                if (c.getImpregnationEffectiveness() >= c.impregnationReq() || (c.getHATELevel() >= 3 && !vVirg)) {
                    w.append(t, "slam " + c.himHer() + " down onto the pavement, forcing yourself back inside " + c.himHer() + " all at once, enveloping " + c.hisHer() + " body with your own.  ");
                    if (dignity > 66) {
                        w.append(t, "It hurts, but " + c.heShe() + "'s grateful that at least your bulk shields the spot where " + c.heShe() + "'s being penetrated from view.");
                    }
                    else if (dignity > 33) {
                        w.append(t, String.valueOf(c.HeShe()) + " goes limp, stunned by the hit.");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " groans at the pain of the impact combined with the pain of the huge insertion.");
                    }
                }
                else {
                    w.append(t, "tighten your grip, crushing " + c.himHer() + " against you with overwhelming strength as you resume trying to force your way into " + c.hisHer() + " ");
                    if (gender.equals("male")) {
                        w.append(t, "ass.  ");
                    }
                    else {
                        w.append(t, "slit.  ");
                    }
                    if (dignity > 66) {
                        w.append(t, String.valueOf(c.HisHer()) + " arms pinned, " + c.heShe() + " settles for crossing " + c.hisHer() + " legs, less to keep you out and more to retain some shred of dignity.");
                    }
                    else if (dignity > 33) {
                        w.append(t, String.valueOf(c.HeShe()) + " struggles for breath, trying to gather " + c.hisHer() + " strength.");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " squirms and tries to free " + c.hisHer() + " arms, unable to stop you from lowering " + c.himHer() + " down against your cock.");
                    }
                }
            }
        }
        else if (w.getBodyStatus()[20] && !w.getBodyStatus()[26]) {
            if (captureProgression % 3 == 1) {
                if (innocence > 66) {
                    w.append(t, String.valueOf(mainName) + " is completely stupefied by your Commander's power, ");
                }
                else if (innocence > 33) {
                    w.append(t, "With " + c.hisHer() + " senses overwhelmed by the lights and sounds produced by your Commander, " + mainName + " is helpless to escape, ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s intelligence is utterly useless in the face of the sensory overload your Commander is giving " + c.himHer() + ", ");
                }
                if (c.getHypnosisEffectiveness() >= c.hypnosisReq()) {
                    if (confidence > 66) {
                        w.append(t, "and " + c.heShe() + " continues to masturbate with singleminded determination even as " + c.hisHer() + " hands cramp up and " + c.hisHer() + " thighs ache.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, "and " + c.hisHer() + " hips jerk uncontrollably as " + c.heShe() + " compulsively pleasures " + c.himHer() + "self.  ");
                    }
                    else {
                        w.append(t, "and " + c.heShe() + " whimpers with pleasure as " + c.hisHer() + " hands continue to move between " + c.hisHer() + " legs as if possessed.  ");
                    }
                    if (morality > 66) {
                        w.append(t, String.valueOf(c.HisHer()) + " sense of wrongness almost breaks the illusion, but you continue to adjust what " + c.heShe() + " perceives, distracting " + c.himHer() + " with the sight and feeling of " + c.hisHer() + " friends holding " + c.himHer() + " close, encouraging " + c.himHer() + " to feel good.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, "Whenever it seems like " + c.heShe() + "'s about to realize " + c.heShe() + "'s being manipulated, a new illusionary scene forms around " + c.himHer() + ", often involving eager partners whose hands recreate the actions actually performed by " + c.hisHer() + " own.  ");
                    }
                    else {
                        w.append(t, "In order to keep " + c.himHer() + " entertained and fully enraptured, " + c.hisHer() + " perception of " + c.hisHer() + " surroundings is soon changed to portray bound slaves forced to service " + c.himHer() + ", their hands and tongues travelling all over " + c.hisHer() + " body.  ");
                    }
                    if (dignity > 66) {
                        w.append(t, "Even though " + c.heShe() + "'d normally be embarrassed to be seen like this, " + c.heShe() + "'s far too turned on right now to care.");
                    }
                    else if (dignity > 33) {
                        w.append(t, "It works perfectly.");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " enjoys their embrace without holding back at all.");
                    }
                }
                else {
                    if (confidence > 66) {
                        w.append(t, "but " + c.heShe() + " harshly pinches " + c.himHer() + "self in order to keep " + c.hisHer() + " mind from wandering.  " + c.HeShe());
                    }
                    else if (confidence > 33) {
                        w.append(t, "but " + c.heShe() + "'s still looking for a way out.  " + c.HeShe());
                    }
                    else {
                        w.append(t, "and " + c.heShe() + " wishes " + c.heShe() + " could just give up and let " + c.hisHer() + " consciousness be washed away.  However, " + c.heShe());
                    }
                    if (c.getHypnosisEffectiveness() > 100) {
                        if (morality > 66) {
                            w.append(t, " still cares less about feeling good than " + c.heShe() + " does about protecting those " + c.heShe() + " cares for");
                        }
                        else if (morality > 33) {
                            w.append(t, " hasn't yet felt enough pleasure to make " + c.himHer() + " completely lose " + c.hisHer() + " mind");
                        }
                        else {
                            w.append(t, " hasn't quite become depraved enough to surrender to the pleasure");
                        }
                        if (dignity > 66) {
                            w.append(t, ", and " + c.heShe() + "'s embarrassed by the fact that this is giving " + c.himHer() + " so much trouble.");
                        }
                        else if (dignity > 33) {
                            w.append(t, ".");
                        }
                        else {
                            w.append(t, ", even if " + c.heShe() + " can't stop " + c.hisHer() + " lewd moans.");
                        }
                    }
                    else {
                        if (morality > 66) {
                            w.append(t, "'s determined not to let evil take over " + c.hisHer() + " mind");
                        }
                        else if (morality > 33) {
                            w.append(t, "'s determined to escape");
                        }
                        else {
                            w.append(t, "'s determined to kill you for toying with " + c.himHer() + " like this");
                        }
                        if (dignity > 66) {
                            w.append(t, ", though " + c.heShe() + " is glad that being enclosed by your body prevents anyone from seeing the way " + c.heShe() + "'s blushing and trembling with pleasure.");
                        }
                        else if (dignity > 33) {
                            w.append(t, ", trying to endure the illusionary pleasure you're forcing into " + c.hisHer() + " brain.");
                        }
                        else {
                            w.append(t, ", even as " + c.heShe() + " gasps and moans with the surges of pleasure running through " + c.hisHer() + " head.");
                        }
                    }
                }
            }
            else if (captureProgression % 3 == 2) {
                if (dignity > 66) {
                    w.append(t, String.valueOf(mainName) + " gasps and reflexively covers " + c.himHer() + "self");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(mainName) + "'s eyes go wide and " + c.heShe() + " turns " + c.hisHer() + " head left and right");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " jumps in surprise");
                }
                if (c.getHypnosisEffectiveness() >= c.hypnosisReq()) {
                    if (innocence > 66) {
                        w.append(t, ", shocked to find " + c.himHer() + "self naked on the stage of " + c.hisHer() + " old school's auditorium while the students point and laugh.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, " at the cheering crowd around " + c.himHer() + ", as " + c.heShe() + "'s suddenly onstage at a strip club, one of " + c.hisHer() + " wrists handcuffed to the dancing pole.  ");
                    }
                    else {
                        w.append(t, " as " + c.hisHer() + " surroundings flicker and transform into some sort of slave auction, but then the chains tied to " + c.hisHer() + " limbs are pulled taut and " + c.hisHer() + " limbs are forced apart.  ");
                    }
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.HeShe()) + " tries to use " + c.hisHer() + " Chosen powers to take control of the situation, but nothing happens, leaving " + c.himHer() + " more powerless than " + c.heShe() + "'s felt in a long time");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.HeShe()) + " tries to tell the spectator that they can't touch " + c.himHer() + ", that " + c.heShe() + "'s one of the Chosen, but " + c.hisHer() + " voice won't come out");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " panics, unable to remember that " + c.heShe() + "'s one of the Chosen");
                    }
                    if (morality > 66) {
                        w.append(t, ", but as the illusionary spectators' hands surge forward, " + c.hisHer() + " fear is replaced by a delirious happiness that they're going to enjoy " + c.hisHer() + " body.");
                    }
                    else if (morality > 33) {
                        w.append(t, ", but once the illusionary spectators begin having their way with " + c.hisHer() + " body, " + c.heShe() + " can't even imagine resisting anymore.");
                    }
                    else {
                        w.append(t, ", but when the illusionary spectators advance and begin groping " + c.hisHer() + " body, all " + c.heShe() + " can think about is how good it feels.");
                    }
                }
                else {
                    if (innocence > 66) {
                        w.append(t, ", confused by the way that the blaring tones you're sending into " + c.hisHer() + " ears are starting to resolve into cruel voices.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, " as the chaotic sounds inside your Commander body start to resemble voices making lewd comments.  ");
                    }
                    else {
                        w.append(t, " when " + c.heShe() + " hears jeers and laughter around " + c.himHer() + ", but " + c.heShe() + " quickly realizes that you're trying to show " + c.himHer() + " an illusion.  ");
                    }
                    if (c.getHypnosisEffectiveness() > 100) {
                        if (confidence > 66) {
                            w.append(t, String.valueOf(c.HeShe()) + " bites " + c.hisHer() + " lip and tries to shut it all out with willpower alone");
                        }
                        else if (confidence > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " shakes " + c.hisHer() + " head and attempts to ignore it");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " desperately squeezes " + c.hisHer() + " eyes shut and covers " + c.hisHer() + " ears");
                        }
                        if (morality > 66) {
                            w.append(t, ", but " + c.heShe() + "'s disturbed by how persuasive their demands that " + c.heShe() + " give in and start touching " + c.himHer() + "self are.");
                        }
                        else if (morality > 33) {
                            w.append(t, ", but " + c.heShe() + " still finds it difficult to stop " + c.hisHer() + " hands from wandering between " + c.hisHer() + " legs.");
                        }
                        else {
                            w.append(t, ", even though their suggestion that " + c.heShe() + " give up on the fight and just play with " + c.himHer() + "self right here sounds very appealing.");
                        }
                    }
                    else {
                        if (confidence > 66) {
                            w.append(t, String.valueOf(c.HeShe()) + "'s angry with " + c.himHer() + "self for reacting to such an obvious illusion, but ");
                        }
                        else if (confidence > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " can ignore it on a conscious level, but ");
                        }
                        else {
                            w.append(t, "Even if it's an illusion, it still makes " + mainName + "'s heart race, and ");
                        }
                        if (morality > 66) {
                            w.append(t, "no matter how much " + c.heShe() + " tries to deny it, the subliminal effects are turning " + c.himHer() + " on more and more.");
                        }
                        else if (morality > 33) {
                            w.append(t, String.valueOf(c.hisHer()) + " nerves are still reacting like all " + c.hisHer() + " erogenous zones are being stroked at once.");
                        }
                        else {
                            w.append(t, "the undertones beneath " + c.hisHer() + " hearing are awakening " + c.hisHer() + " desire to feel good no matter the consequences.");
                        }
                    }
                }
            }
            else if (captureProgression % 3 == 0) {
                if (morality > 66) {
                    w.append(t, String.valueOf(mainName) + " hears " + c.hisHer() + " friends' voices begging " + c.himHer() + " to let them in on just what preparations are going on behind the scenes in the war against the Demons");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " sees " + c.himHer() + "self in a conference room with several of humanity's military leaders.  They ask " + c.himHer() + " to tell them what " + c.heShe() + " thinks about the logistical situation and recent troop movements");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " is abruptly surrounded by shady figures willing to pay absurd amounts of money for humanity's military secrets");
                }
                if (c.getHypnosisEffectiveness() >= c.hypnosisReq()) {
                    if (dignity > 66) {
                        w.append(t, ", and " + c.heShe() + " eagerly tries to shock and awe them with " + c.hisHer() + " response, " + c.hisHer() + " voice high and breathy as " + c.heShe() + " masturbates at the same time.  ");
                    }
                    else if (dignity > 33) {
                        w.append(t, ", and " + c.heShe() + " is happy to reply, face bright red as " + c.hisHer() + " masturbation increases in intensity.  ");
                    }
                    else {
                        w.append(t, ", and " + c.heShe() + " goes along with it, casually masturbating at the same time.  ");
                    }
                    if (innocence > 66) {
                        w.append(t, String.valueOf(c.HisHer()) + " understanding of the situation, while blatantly incorrect, is amusing nonetheless, and ");
                    }
                    else if (innocence > 33) {
                        w.append(t, "It's nothing you don't know already, but ");
                    }
                    else {
                        w.append(t, "The information itself isn't new to you, but " + c.hisHer() + " analysis is thought-provoking, and ");
                    }
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.heShe()) + " greatly enjoys impressing the halluciantions.");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.heShe()) + " doesn't realize that " + c.heShe() + "'s hallucinating.");
                    }
                    else {
                        w.append(t, String.valueOf(c.heShe()) + " seems very happy when you have the hallucinations express their gratitude.");
                    }
                }
                else {
                    if (dignity > 66) {
                        w.append(t, ", but as much as " + c.heShe() + " enjoys being praised, ");
                    }
                    else if (dignity > 33) {
                        w.append(t, ", but ");
                    }
                    else {
                        w.append(t, ", but " + c.heShe() + " has no trouble turning them down, as ");
                    }
                    if (c.getHypnosisEffectiveness() > 100) {
                        if (innocence > 66) {
                            w.append(t, String.valueOf(c.heShe()) + " is still barely resisting your hypnosis attempts enough to recognize that the situation is impossible.  ");
                        }
                        else if (innocence > 33) {
                            w.append(t, "the hypnosis isn't strong enough yet to make " + c.himHer() + " forget that " + c.heShe() + "'s fighting right now.  ");
                        }
                        else {
                            w.append(t, String.valueOf(c.heShe()) + " recognizes that the hallucinations' apparent reality is just a byproduct of your strengthening hypnotic effect on " + c.himHer() + ".  ");
                        }
                        if (confidence > 66) {
                            w.append(t, String.valueOf(c.HisHer()) + " satisfaction at overcoming your trap sours somewhat when " + c.heShe() + " realizes that " + c.heShe() + " let " + c.hisHer() + " guard down and " + c.hisHer() + " hands started to inch between " + c.hisHer() + " legs.");
                        }
                        else if (confidence > 33) {
                            w.append(t, "Similarly, " + c.heShe() + "'s still holding out against the subliminally-implanted urge to masturbate.");
                        }
                        else {
                            w.append(t, "Even so, the stress of turning them down is almost enough to make " + c.himHer() + " forget to resist the growing urge to masturbate.");
                        }
                    }
                    else {
                        if (innocence > 66) {
                            w.append(t, String.valueOf(c.heShe()) + " thinks it's super suspicious that they'd appear out of nowhere in the middle of a battle.  ");
                        }
                        else if (innocence > 33) {
                            w.append(t, String.valueOf(c.hisHer()) + " ability to distinguish hallucination from reality is still fully intact.  ");
                        }
                        else {
                            w.append(t, String.valueOf(c.hisHer()) + " mind is as sharp as ever and " + c.heShe() + " sees them for the hallucinations they are.  ");
                        }
                        if (confidence > 66) {
                            w.append(t, String.valueOf(c.HeShe()) + " angrily refuses, venting a bit of the frustration " + c.heShe() + " feels at the incessantly increasing pleasure " + c.hisHer() + " body is being violated with.");
                        }
                        else if (confidence > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " flatly refuses, doing " + c.hisHer() + " best to ignore the surge of pleasure you send to try to break " + c.hisHer() + " resolve.");
                        }
                        else {
                            w.append(t, "Even so, turning them down is difficult - more difficult in fact than resisting the pleasure pulsing through " + c.hisHer() + " nerves.");
                        }
                    }
                }
            }
        }
        else if (w.getBodyStatus()[21]) {
            if (captureProgression % 3 == 1) {
                if (innocence > 66) {
                    w.append(t, "The fatigue of having " + c.hisHer() + " energy drained makes " + mainName + " feel drowsy");
                }
                else if (innocence > 33) {
                    if (w.getBodyStatus()[26]) {
                        w.append(t, "With " + c.hisHer() + " vital energy being drained away, " + mainName + " is having trouble forming coherent thoughts");
                    }
                    else {
                        w.append(t, "The pulses of light running through the tentacles wrapped around " + mainName + "'s head are leaving " + c.himHer() + " unable to form coherent thoughts");
                    }
                }
                else {
                    w.append(t, String.valueOf(mainName) + " is only barely aware that " + c.hisHer() + " consciousness is slipping away");
                }
                if (c.getDrainEffectiveness() >= c.drainReq()) {
                    if (dignity > 66) {
                        w.append(t, ".  There's one last flicker of embarrassment as " + c.heShe() + " realizes just how pathetic " + c.heShe() + " must look, and then even that is gone.  ");
                    }
                    else if (dignity > 33) {
                        w.append(t, ".  Even " + c.hisHer() + " shame at being seen so utterly defeated is gone - at least for now.  ");
                    }
                    else {
                        w.append(t, ", and " + c.heShe() + " happily gives " + c.himHer() + "self over to oblivion.  ");
                    }
                    if (morality > 66) {
                        w.append(t, "In contrast to how " + c.heShe() + " tosses and turns all night, kept up by worries of " + c.hisHer() + " own inadequacy, ");
                    }
                    else if (morality > 33) {
                        w.append(t, "Finally able to rest without the horrifying night terrors that have been plaguing " + c.himHer() + " recently, ");
                    }
                    else {
                        w.append(t, "Free of the nightmares that cause " + c.himHer() + " to act even more abusive during the day, ");
                    }
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.hisHer()) + " usual severe expression is gone in favor of a peaceful sleeping face.");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.heShe()) + " slumbers deeply.");
                    }
                    else {
                        w.append(t, String.valueOf(c.heShe()) + " sleeps without even a trace of fear.");
                    }
                    if (w.getBodyStatus()[26]) {
                        if (c.getEXPOLevel() >= 3 && !modest && (w.getBodyStatus()[13] || w.getBodyStatus()[14] || w.getBodyStatus()[6])) {
                            w.append(t, "  The filming spectators can capture footage of how ");
                        }
                        else {
                            w.append(t, "  " + c.HeShe() + " isn't consciously aware of how ");
                        }
                        if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                            w.append(t, "you're fucking " + c.hisHer() + " ");
                            if (gender.equals("male")) {
                                w.append(t, "ass");
                            }
                            else {
                                w.append(t, "pussy");
                            }
                            w.append(t, ",  making use of the fact that ");
                        }
                        if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[12] || w.getBodyStatus()[4])) {
                            w.append(t, String.valueOf(c.hisHer()) + " hips are instinctively bucking in orgasm at your stimulation.");
                        }
                        else {
                            w.append(t, String.valueOf(c.hisHer()) + " own desire to be defeated is making you stronger.");
                        }
                    }
                }
                else {
                    if (dignity > 66) {
                        w.append(t, ", but " + c.heShe() + " tries to pretend that " + c.heShe() + "'s as alert as ever.  ");
                    }
                    else if (dignity > 33) {
                        w.append(t, ", but " + c.heShe() + " refuses to give in.  ");
                    }
                    else {
                        w.append(t, ", and " + c.heShe() + " fights it by constantly squirming and raising " + c.hisHer() + " voice as high as " + c.heShe() + " can.  ");
                    }
                    if (c.getDrainEffectiveness() > 100) {
                        if (morality > 66) {
                            w.append(t, String.valueOf(c.HeShe()) + " wants to die doing something useful to humanity, not by giving " + c.hisHer() + " life force to the Demons");
                        }
                        else if (morality > 33) {
                            w.append(t, "As much as " + c.heShe() + " yearns for death, " + c.heShe() + " doesn't trust you to give it to " + c.himHer());
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + "'d happily kill a thousand innocents for a chance at dying, but " + c.heShe() + " still spitefully wants to deny you the satisfaction of defeating " + c.himHer());
                        }
                        if (confidence > 66) {
                            w.append(t, ", causing " + c.himHer() + " to pridefully cling on.");
                        }
                        else if (confidence > 33) {
                            w.append(t, ".");
                        }
                        else {
                            w.append(t, ".  Combined with the fear of the unknown that suddenly rises to the surface, " + c.heShe() + "'s too panicked to let " + c.hisHer() + " mental defenses down.");
                        }
                    }
                    else {
                        if (morality > 66) {
                            w.append(t, String.valueOf(c.HeShe()) + "'s determined to overcome this for everyone's sake");
                        }
                        else if (morality > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " has no intention of dying here");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " relies on " + c.hisHer() + " anger to keep " + c.himHer() + " awake");
                        }
                        if (confidence > 66) {
                            w.append(t, ", overpowering determination in " + c.hisHer() + " gaze.");
                        }
                        else if (confidence > 33) {
                            w.append(t, ".");
                        }
                        else {
                            w.append(t, ", tears of defiance coming to " + c.hisHer() + " eyes.");
                        }
                    }
                    if (w.getBodyStatus()[26]) {
                        if (c.getEXPOLevel() >= 3 && !modest && (w.getBodyStatus()[14] || w.getBodyStatus()[13] || w.getBodyStatus()[6])) {
                            w.append(t, "  To the spectators, it still looks like " + c.heShe() + "'s begin defeated, ");
                        }
                        else {
                            w.append(t, "  " + c.HeShe() + "'s still having trouble fighting back, ");
                        }
                        if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                            w.append(t, "as you're still fucking " + c.himHer() + " hard at the same time");
                        }
                        else {
                            w.append(t, "as this body's drain abilities still make it highly effective against the Chosen");
                        }
                        if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[12] || w.getBodyStatus()[11] || w.getBodyStatus()[4])) {
                            w.append(t, ", not to mention that " + c.heShe() + " can't stop bucking " + c.hisHer() + " hips in orgasm.");
                        }
                        else {
                            w.append(t, ".");
                        }
                    }
                }
            }
            else if (captureProgression % 3 == 2) {
                if (confidence > 66) {
                    w.append(t, "The mighty " + mainName + " is as close to death as " + c.heShe() + "'s ever been");
                }
                else if (confidence > 33) {
                    w.append(t, String.valueOf(mainName) + "'s life force is growing dimmer and dimmer as you drain it out of " + c.himHer());
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s timid soul is failing before the might of your draining feelers");
                }
                if (c.getDrainEffectiveness() >= c.drainReq()) {
                    if (w.tickle()) {
                        if (innocence > 66) {
                            w.append(t, ", but in " + c.hisHer() + " eagerness to have you kill " + c.himHer() + ", " + c.heShe() + " neglected to consider that you'd be able to tickle all " + c.hisHer() + " most sensitive spots while " + c.heShe() + "'s unable to squirm away.  ");
                        }
                        else if (innocence > 33) {
                            w.append(t, ", but instead of finishing " + c.himHer() + " off, you're using your countless tentacles to savagely tickle " + c.himHer() + ".  ");
                        }
                        else {
                            w.append(t, ", but rather than killing " + c.himHer() + " as " + c.heShe() + " had hoped, you're taking the opportunity to tickle " + c.hisHer() + " defenseless body all over.  ");
                        }
                        if (dignity > 66) {
                            w.append(t, "Once " + c.heShe() + " wakes up, the accumulated sensations should easily overcome " + c.hisHer() + " composure");
                        }
                        else if (dignity > 33) {
                            w.append(t, "The sensations will hit " + c.himHer() + " all at once after " + c.heShe() + " wakes up");
                        }
                        else {
                            w.append(t, "Feeling it all at once upon waking up should make for an especially strong reaction");
                        }
                    }
                    else {
                        if (innocence > 66) {
                            w.append(t, ", but in " + c.hisHer() + " eagerness to have you kill " + c.himHer() + ", " + c.heShe() + " neglected to consider how weak and defenseless a partial energy drain would leave " + c.himHer() + ".  ");
                        }
                        else if (innocence > 33) {
                            w.append(t, ", but instead of finishing " + c.himHer() + " off, you're using the opportunity to severely weaken " + c.himHer() + ".  ");
                        }
                        else {
                            w.append(t, ", but rather than killing " + c.himHer() + " as " + c.heShe() + " had hoped, you're taking just enough energy to weaken " + c.hisHer() + " body and dull " + c.hisHer() + " consciousness.  ");
                        }
                        if (dignity > 66) {
                            w.append(t, String.valueOf(c.HisHer()) + " humiliation is just beginning");
                        }
                        else if (dignity > 33) {
                            w.append(t, String.valueOf(c.HisHer()) + " torment will only continue");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " won't even be able to kick or scream");
                        }
                    }
                    if (morality > 66) {
                        w.append(t, ", and " + c.heShe() + "'ll receive the punishment " + c.heShe() + " knows " + c.heShe() + " deserves.");
                    }
                    else if (morality > 33) {
                        w.append(t, ", and " + c.hisHer() + " moment of weakness will make things even worse for " + c.himHer() + ".");
                    }
                    else {
                        w.append(t, ", and " + c.heShe() + "'ll be reminded that the Demons have " + c.himHer() + " outmatched in cunning and cruelty as well.");
                    }
                    if (w.getBodyStatus()[26]) {
                        if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[12] || w.getBodyStatus()[11] || w.getBodyStatus()[4])) {
                            w.append(t, "Combined with the humiliation of realizing " + c.heShe() + "'s been cumming from what you've been doing to " + c.himHer());
                        }
                        else {
                            w.append(t, "Combined with the realization that " + c.heShe() + "'s gained nothing from surrendering to you");
                        }
                        if (c.getEXPOLevel() >= 3 && !modest && (w.getBodyStatus()[14] || w.getBodyStatus()[13] || w.getBodyStatus()[6])) {
                            w.append(t, " on camera, ");
                        }
                        else {
                            w.append(t, ", ");
                        }
                        if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                            w.append(t, String.valueOf(c.hisHer()) + " sense of violation from being raped like this should grow even greater.");
                        }
                        else {
                            w.append(t, String.valueOf(c.hisHer()) + " self-esteem will grow even weaker.");
                        }
                    }
                }
                else {
                    if (w.tickle()) {
                        if (innocence > 66) {
                            w.append(t, ", and while " + c.heShe() + "'s relieved at the numbness giving " + c.himHer() + " a break from the tickling, that'll only make " + c.himHer() + " feel it even stronger when it wears off.  ");
                        }
                        else if (innocence > 33) {
                            w.append(t, ", and even though " + c.heShe() + " can't be tickled while " + c.hisHer() + " body is numbed like this, the respite is only building " + c.hisHer() + " anticipation for what will happen after " + c.hisHer() + " escape.  ");
                        }
                        else {
                            w.append(t, ", and " + c.heShe() + "'s already horrified by the knowledge that the numbness now will only make " + c.hisHer() + " body even more vulnerable to the subsequent tickling.  ");
                        }
                    }
                    else if (innocence > 66) {
                        w.append(t, ", and while " + c.heShe() + "'s relieved that it doesn't hurt right now, " + c.hisHer() + " body is actually in a terrible state.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, ", and the numbness conceals just how much the drained life force is damaging " + c.hisHer() + " body.  ");
                    }
                    else {
                        w.append(t, ", and despite the pleasant numbness filling " + c.himHer() + " now, " + c.heShe() + " knows on a rational level that the lost energy will greatly slow " + c.hisHer() + " body's regeneration.  ");
                    }
                    if (c.getDrainEffectiveness() > 100) {
                        if (dignity > 66) {
                            w.append(t, String.valueOf(c.HeShe()) + " tries to put on a brave face");
                        }
                        else if (dignity > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " puts a token effort into escaping");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " moans that " + c.heShe() + " just wants to die");
                        }
                        if (morality > 66) {
                            w.append(t, ", but " + c.heShe() + " knows " + c.heShe() + " deserves this.");
                        }
                        else if (morality > 33) {
                            w.append(t, ", " + c.hisHer() + " heart conflicted.");
                        }
                        else {
                            w.append(t, ", lacking the power to do anything but glare sullenly at you.");
                        }
                    }
                    else {
                        if (dignity > 66) {
                            w.append(t, String.valueOf(c.HeShe()) + " struggles to hold " + c.hisHer() + " head high");
                        }
                        else if (dignity > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " squeezes " + c.hisHer() + " eyes shut and tries to focus");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " gasps for breath");
                        }
                        if (morality > 66) {
                            w.append(t, ", thinking of the people who would be sad if " + c.heShe() + " died.");
                        }
                        else if (morality > 33) {
                            w.append(t, ", clinging to life with every scrap of " + c.hisHer() + " willpower.");
                        }
                        else {
                            w.append(t, ", reminding " + c.himHer() + "self that " + c.heShe() + " can't get revenge on you if " + c.heShe() + " dies here.");
                        }
                    }
                    if (w.getBodyStatus()[26]) {
                        if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[12] || w.getBodyStatus()[11] || w.getBodyStatus()[4])) {
                            w.append(t, "  " + c.HeShe() + " still can't stop " + c.himHer() + "self from cumming again, ");
                        }
                        else {
                            w.append(t, "  " + c.HeShe() + " renews " + c.hisHer() + " attempts to escape, ");
                        }
                        if (c.getEXPOLevel() >= 3 && !modest && (w.getBodyStatus()[14] || w.getBodyStatus()[13] || w.getBodyStatus()[6])) {
                            w.append(t, "giving quite a show to the cameras trained on " + c.hisHer() + " bare lower half but not ");
                        }
                        else {
                            w.append(t, "kicking desperately without ");
                        }
                        if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                            w.append(t, "making much progress sliding " + c.himHer() + "self off the ");
                            if (w.getBodyStatus()[11] || w.getBodyStatus()[13]) {
                                w.append(t, "monstrous cock");
                            }
                            else {
                                w.append(t, "tentacles");
                            }
                            w.append(t, " penetrating " + c.himHer() + ".");
                        }
                        else {
                            w.append(t, "doing much to extricate " + c.himHer() + "self from your grasp.");
                        }
                    }
                }
            }
            else if (captureProgression % 3 == 0) {
                if (dignity > 66) {
                    w.append(t, String.valueOf(mainName) + "'s eyes go wide with shock");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(mainName) + " clutches " + c.hisHer() + " head");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " screams out loud");
                }
                if (c.getDrainEffectiveness() >= c.drainReq()) {
                    if (morality > 66) {
                        w.append(t, " as you allow " + c.himHer() + " to return to consciousness long enough to telepathically taunt " + c.himHer() + " with the thought of all the responsibilities " + c.heShe() + "'s abandoning by allowing you to kill " + c.himHer() + ".  ");
                    }
                    else if (morality > 33) {
                        w.append(t, " as you force " + c.himHer() + " back to consciousness, your mental voice invading " + c.hisHer() + " head and asking " + c.himHer() + " whether " + c.heShe() + "'s truly ready to die.  ");
                    }
                    else {
                        w.append(t, " as you provoke " + c.himHer() + " by slowing the energy drain, teasing " + c.himHer() + " with the prospect of unconsciousness before backing off again, keeping " + c.himHer() + " in mortal limbo.  ");
                    }
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.HeShe()) + " tries to demand that you kill " + c.himHer() + ", but " + c.heShe() + "'s disgusted by how weak and frail " + c.hisHer() + " voice sounds");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.HeShe()) + "'s forced to acknowledge " + c.hisHer() + " own helplessness");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " sobs openly at how pathetic " + c.heShe() + " is");
                    }
                    if (innocence > 66) {
                        w.append(t, ", completely falling into your trap.");
                    }
                    else if (innocence > 33) {
                        w.append(t, ".");
                    }
                    else {
                        w.append(t, ", unable to stop the unpleasant thoughts even though " + c.heShe() + " knows that you're manipulating " + c.himHer() + ".");
                    }
                }
                else {
                    if (morality > 66) {
                        w.append(t, " as you telepathically taunt " + c.himHer() + ", offering " + c.himHer() + " the prospect of a properly heroic death if " + c.heShe() + " just allows you to steal " + c.hisHer() + " life force.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, " as your mental voice invades " + c.hisHer() + " mind, asking " + c.himHer() + " why " + c.heShe() + " doesn't just give up and die.  ");
                    }
                    else {
                        w.append(t, " as you form a psychic link with " + c.himHer() + " and tempt " + c.himHer() + " with the knowledge that all " + c.hisHer() + " suffering can be over if " + c.heShe() + " simply allows you to kill " + c.himHer() + ".  ");
                    }
                    if (c.getDrainEffectiveness() > 100) {
                        if (confidence > 66) {
                            w.append(t, "There's no sign of " + c.hisHer() + " usual bravado in " + c.hisHer() + " eyes");
                        }
                        else if (confidence > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + "'s unable to outright deny you");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " whimpers at the words tearing at " + c.hisHer() + " psychological weakness");
                        }
                        if (innocence > 66) {
                            w.append(t, ", and only " + c.hisHer() + " blind instinctive fear of death keeps " + c.himHer() + " from yielding right then and there.");
                        }
                        else if (innocence > 33) {
                            w.append(t, ", and you can tell that " + c.heShe() + "'ll be agonizing over this all night.");
                        }
                        else {
                            w.append(t, ", and " + c.heShe() + " knows on a rational level that " + c.heShe() + " has no reason to refuse.");
                        }
                    }
                    else {
                        if (confidence > 66) {
                            w.append(t, "However, " + c.heShe() + " denies you with the strongest voice " + c.heShe() + " can muster");
                        }
                        else if (confidence > 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " gasps out a refusal");
                        }
                        else {
                            w.append(t, "As afraid as " + c.heShe() + " is, " + c.heShe() + " still vigorously shakes " + c.hisHer() + " head");
                        }
                        if (innocence > 66) {
                            w.append(t, ", not even hesitating for a moment.");
                        }
                        else if (innocence > 33) {
                            w.append(t, ", bolstering " + c.hisHer() + " mental strength.");
                        }
                        else {
                            w.append(t, ", reminding " + c.himHer() + "self that there's no danger as long as " + c.heShe() + " remains resolute.");
                        }
                    }
                }
                if (w.getBodyStatus()[26]) {
                    if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                        w.append(t, "  You continue to punish " + c.himHer() + " by sliding your ");
                        if (w.getBodyStatus()[11] || w.getBodyStatus()[13]) {
                            w.append(t, "member");
                        }
                        else {
                            w.append(t, "tentacles");
                        }
                        w.append(t, " in and out, ");
                    }
                    else {
                        w.append(t, "  You continue to torment " + c.hisHer() + " body, ");
                    }
                    if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[12] || w.getBodyStatus()[11] || w.getBodyStatus()[4])) {
                        w.append(t, "making " + c.himHer() + " cum over and over again");
                    }
                    else {
                        w.append(t, "taking advantage of how weakened " + c.heShe() + " is");
                    }
                    if (c.getEXPOLevel() >= 3 && !modest && (w.getBodyStatus()[14] || w.getBodyStatus()[13] || w.getBodyStatus()[6])) {
                        w.append(t, ", and " + c.heShe() + " can see the flash of the cameras capturing " + c.hisHer() + " defeat.");
                    }
                    else {
                        w.append(t, ".");
                    }
                }
            }
        }
        else if (w.getBodyStatus()[22]) {
            if (captureProgression % 3 == 1) {
                if (confidence > 66) {
                    w.append(t, String.valueOf(mainName) + "'s first instinct is to pummel and tear at the tentacles erupting from " + c.hisHer() + " clothes like " + c.heShe() + " would any other Demon, but " + c.hisHer() + " efforts just end up stripping " + c.himHer() + "self");
                }
                else if (confidence > 33) {
                    w.append(t, String.valueOf(mainName) + " attempts to fight on regardless of the tentacles within " + c.hisHer() + " clothes tearing them open");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " cowers from the tentacles emerging from " + c.hisHer() + " clothes and stripping " + c.himHer());
                }
                if (dignity > 66) {
                    w.append(t, " and preventing " + c.himHer() + " from covering the parts exposed.  ");
                }
                else if (dignity > 33) {
                    w.append(t, ", and more and more continue to come out.  ");
                }
                else {
                    w.append(t, ".  ");
                }
                if (morality > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " tells " + c.himHer() + "self that something so trivial shouldn't be able to stop " + c.himHer() + " from fighting the Demons");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(c.HeShe()) + " tells " + c.himHer() + "self that this really isn't such a big deal");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " tells " + c.himHer() + "self that seeing " + c.himHer() + " struggle like this shouldn't make people any less afraid of " + c.hisHer() + " power");
                }
                if (innocence > 66) {
                    w.append(t, ", but for some reason, it still feels really awful.");
                }
                else if (innocence > 33) {
                    w.append(t, ", doing " + c.hisHer() + " best to stay motivated.");
                }
                else {
                    w.append(t, ", but " + c.heShe() + " knows it's not true.");
                }
                if (w.getBodyStatus()[26]) {
                    if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                        w.append(t, "  Even aside from the humiliation of being raped in public");
                    }
                    else {
                        w.append(t, "  Even aside from the fact that this is happening in public");
                    }
                    if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[12] || w.getBodyStatus()[11] || w.getBodyStatus()[4])) {
                        w.append(t, ", the fact that " + c.heShe() + "'s actually cumming from the molestation");
                    }
                    else {
                        w.append(t, ", the fact that there's so little " + c.heShe() + " can do");
                    }
                    if (c.getINJULevel() >= 3 && !aVirg && (w.getBodyStatus()[13] || w.getBodyStatus()[12] || w.getBodyStatus()[5])) {
                        if (w.tickle()) {
                            w.append(t, ", along with how pathetic it seems to give in to the tentacles' tickling, ");
                        }
                        else if (gender.equals("male")) {
                            w.append(t, ", along with how easily " + c.heShe() + "'s subdued by the tentacle coiling around and crushing " + c.hisHer() + " testicles, ");
                        }
                        else {
                            w.append(t, ", along with how helpless " + c.heShe() + " is against the tentacle up " + c.hisHer() + " ass, ");
                        }
                    }
                    w.append(t, " makes " + c.himHer() + " doubt " + c.himHer() + "self.");
                }
            }
            else if (captureProgression % 3 == 2) {
                if (morality > 66) {
                    w.append(t, String.valueOf(mainName) + " doesn't look like much of a hero as " + c.hisHer() + " own outfit strips " + c.himHer() + " and pins " + c.himHer() + " down");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " is obviously helpless to stop " + c.hisHer() + " clothes from tangling " + c.hisHer() + " limbs and tearing themselves apart");
                }
                else {
                    w.append(t, "Angrily struggling with " + c.hisHer() + " own clothes, " + mainName + "'s intimidating demeanor has completely collapsed");
                }
                if (innocence > 66) {
                    w.append(t, ", and " + c.heShe() + " doesn't even realize what a show " + c.heShe() + "'s putting on.  ");
                }
                else if (innocence > 33) {
                    w.append(t, ".  ");
                }
                else {
                    w.append(t, ", and " + c.heShe() + "'s all too aware of it.  ");
                }
                if (confidence > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " never imagined that " + c.heShe() + " could be reduced to such a pathetic state");
                }
                else if (confidence > 33) {
                    w.append(t, String.valueOf(c.HeShe()) + " knows " + c.heShe() + " could have avoided being humiliated like this if " + c.heShe() + " were just a little more careful");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " feels like everyone is finally seeing just how helpless " + c.heShe() + "'s always actually been");
                }
                if (dignity > 66) {
                    w.append(t, ", and thinking of how far " + c.heShe() + "'s fallen makes " + c.himHer() + " unexpectedly tear up.");
                }
                else if (dignity > 33) {
                    w.append(t, ".");
                }
                else {
                    w.append(t, ", and while " + c.heShe() + " has never paid much mind to what others think of " + c.himHer() + ", it still hurts.");
                }
                if (w.getBodyStatus()[26]) {
                    if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[12] || w.getBodyStatus()[11] || w.getBodyStatus()[4])) {
                        w.append(t, "  No matter how much " + c.hisHer() + " body enjoys the orgasms inflicted on " + c.himHer() + ", ");
                    }
                    else {
                        w.append(t, "  No matter how much " + c.heShe() + " tries to ignore it, ");
                    }
                    if (c.getINJULevel() >= 3 && !aVirg && (w.getBodyStatus()[13] || w.getBodyStatus()[12] || w.getBodyStatus()[5])) {
                        if (w.tickle()) {
                            w.append(t, "the tickle torture is even worse");
                        }
                        else if (gender.equals("male")) {
                            w.append(t, "the abuse to " + c.hisHer() + " bruised testicles is even worse");
                        }
                        else {
                            w.append(t, "the tentacle stretching " + c.hisHer() + " anus is even worse");
                        }
                    }
                    else {
                        w.append(t, ", the way the spectators are looking at " + c.himHer() + " is awful");
                    }
                    if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                        w.append(t, ", and the sensation of the feelers probing inside " + c.hisHer() + " ");
                        if (gender.equals("male")) {
                            w.append(t, "bowels");
                        }
                        else {
                            w.append(t, "womb");
                        }
                        w.append(t, " is worst of all.");
                    }
                    else {
                        w.append(t, ".");
                    }
                }
            }
            else if (captureProgression % 3 == 0) {
                if (dignity > 66) {
                    w.append(t, String.valueOf(mainName) + "'s face goes a deeper shade of red when " + c.heShe() + " spots several distant spectators laughing as they film " + c.himHer() + ", but " + c.heShe() + " tries to keep up appearances by ");
                }
                else if (dignity > 33) {
                    w.append(t, "A crowd of civilians films " + mainName + "'s predicament from a nearby rooftop, clearly enjoying the spectacle.  Upon hearing their laughter, " + mainName + " starts ");
                }
                else {
                    w.append(t, "When " + mainName + " hears a chorus of laughter from the spectators watching and filming from a rooftop just outside the battlefield, " + c.heShe() + " only reacts by ");
                }
                if (morality > 66) {
                    w.append(t, "shakily shouting that they're still in danger and should find shelter further away.  ");
                }
                else if (innocence > 33) {
                    w.append(t, "trying to act like " + c.heShe() + " has everything under control.  ");
                }
                else {
                    w.append(t, "shouting ineffectual threats at them, promising retribution if they don't stop.  ");
                }
                if (innocence > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " doesn't have a good grasp on way that being seen as weak will decrease the psychic energy received by the Chosen, and ");
                }
                else if (innocence > 33) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s vaguely aware that the public's perceptions fuel the power of the Chosen, but ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " knows that the flow of psychic energy to the Chosen depends on them being seen as powerful, but ");
                }
                if (confidence > 66) {
                    w.append(t, "even if " + c.heShe() + " struggles with all " + c.hisHer() + " strength and determination, the fact that " + c.heShe() + "'s engaged in a fight with " + c.hisHer() + " clothing unavoidably makes " + c.himHer() + " look ridiculous.");
                }
                else if (confidence > 33) {
                    w.append(t, "it's impossible to look dignified when fighting against one's own clothing.");
                }
                else {
                    w.append(t, "resistance seems so hopeless that " + c.heShe() + " finds " + c.himHer() + "self surrendering to the tentacles pouring out of the remaining scraps of " + c.hisHer() + " clothing.");
                }
                if (w.getBodyStatus()[26]) {
                    if (c.getINJULevel() >= 3 && !aVirg && (w.getBodyStatus()[13] || w.getBodyStatus()[12] || w.getBodyStatus()[5])) {
                        if (w.tickle()) {
                            w.append(t, "  " + c.HisHer() + " words can barely be understood through the unwilling laughter inflicted by your tickling tendrils");
                        }
                        else if (gender.equals("male")) {
                            w.append(t, "  " + c.HisHer() + " voice rises in pitch as the tendrils twist " + c.hisHer() + " testicles");
                        }
                        else {
                            w.append(t, "  " + c.HisHer() + " voice rises to a squeal as the tendrils up " + c.hisHer() + " ass thrust even deeper");
                        }
                    }
                    else {
                        w.append(t, "  " + c.HeShe() + " struggles to concentrate on " + c.hisHer() + " words in the midst of struggling against your tentacles");
                    }
                    if (c.getHATELevel() >= 3 && !vVirg && (w.getBodyStatus()[11] || w.getBodyStatus()[14] || w.getBodyStatus()[3])) {
                        w.append(t, ", losing " + c.hisHer() + " ability to speak completely when " + c.heShe() + " feels the one in " + c.hisHer() + " ");
                        if (gender.equals("male")) {
                            w.append(t, "ass");
                        }
                        else {
                            w.append(t, "pussy");
                        }
                        w.append(t, " begin shooting out thick spurts of liquid.");
                    }
                    else {
                        w.append(t, ".");
                    }
                    if (c.getPLEALevel() >= 3 && !cVirg && (w.getBodyStatus()[12] || w.getBodyStatus()[11] || w.getBodyStatus()[4])) {
                        w.append(t, "  Then, " + c.heShe() + " cries out openly in orgasm as another ");
                        if (gender.equals("female")) {
                            w.append(t, "tweaks " + c.hisHer() + " clit.");
                        }
                        else {
                            w.append(t, "abruptly starts wraps around and starts stroking " + c.hisHer() + " penis.");
                        }
                    }
                }
            }
        }
    }
    
    public void defilerFlavor(final JTextPane t, final WorldState w, final int thisAttack, final Chosen c) {
        final int captureProgression = c.captureProgression;
        final int morality = c.getMorality();
        final int innocence = c.getInnocence();
        final int confidence = c.getConfidence();
        final int dignity = c.getDignity();
        final String mainName = c.getMainName();
        final Boolean vVirg = c.isVVirg();
        final Boolean cVirg = c.isCVirg();
        final Boolean aVirg = c.isAVirg();
        final Boolean modest = c.isModest();
        final String gender = c.getGender();
        final Boolean impregnated = c.isImpregnated();
        final Boolean hypnotized = c.isHypnotized();
        final Boolean drained = c.isDrained();
        final Boolean parasitized = c.isParasitized();
        final String feetType = c.feetType;
        String topDesc = c.topCover;
        if (!topDesc.equals("crop")) {
            if (!topDesc.equals("strips")) {
                if (topDesc.equals("bindings")) {
                    topDesc = "chest bindings";
                }
            }
            else {
                topDesc = "strips of cloth";
            }
        }
        else {
            topDesc = "crop top";
        }
        String bottomDesc = c.bottomCover;
        if (bottomDesc.equals("strips")) {
            bottomDesc = "strips of cloth";
        }
        if (!w.getBodyStatus()[11]) {
            if (!w.getBodyStatus()[12]) {
                if (!w.getBodyStatus()[13]) {
                    if (w.getBodyStatus()[14]) {
                        boolean b = false;
                        Label_35010: {
                            Label_35009: {
                                if (c.getHATELevel() >= 3) {
                                    if (!vVirg) {
                                        break Label_35009;
                                    }
                                }
                                if (w.getBodyStatus()[19]) {
                                    if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                                        break Label_35009;
                                    }
                                }
                                b = false;
                                break Label_35010;
                            }
                            b = true;
                        }
                        final Boolean penetrated = b;
                        if (captureProgression % 3 != 1) {
                            if (captureProgression % 3 != 2) {
                                if (captureProgression % 3 == 0) {
                                    if (morality <= 66) {
                                        if (morality <= 33) {
                                            w.append(t, String.valueOf(mainName) + " glares at the people viewing " + c.himHer() + " through your screens as you display a message telling them ");
                                        }
                                        else {
                                            w.append(t, "You display a message to " + mainName + " and the viewers of " + c.hisHer() + " predicament showing ");
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(mainName) + " looks horrified as a message appears on the screens surrounding " + c.himHer() + " indicating ");
                                    }
                                    Label_42674: {
                                        if (c.getHATELevel() < 3) {
                                            if (!penetrated) {
                                                if (!w.getBodyStatus()[3]) {
                                                    w.append(t, "the number of orgasms experienced by the people watching since the start of the broadcast.  ");
                                                }
                                                else {
                                                    w.append(t, "the number of orgasms experienced by the people controlling your cables since the start of the broadcast.  ");
                                                }
                                                if (dignity <= 66) {
                                                    if (dignity <= 33) {
                                                        w.append(t, String.valueOf(c.HeShe()) + " doesn't normally care about what people think of " + c.himHer() + ", but " + c.heShe() + "'s still stunned to see ");
                                                    }
                                                    else {
                                                        w.append(t, String.valueOf(c.HeShe()) + " can't help but gape at ");
                                                    }
                                                }
                                                else {
                                                    w.append(t, String.valueOf(c.HisHer()) + " face goes red with anger and embarrassment at ");
                                                }
                                                break Label_42674;
                                            }
                                        }
                                        if (vVirg) {
                                            if (!penetrated) {
                                                if (!w.getBodyStatus()[3]) {
                                                    w.append(t, "that in a few moments, your magic will cause their screens to become permeable to their semen, allowing them to ejaculate directly onto " + c.hisHer() + " body.  ");
                                                }
                                                else {
                                                    w.append(t, "that in a few moments, you'll be conjuring spacial portals that they can stick their cocks through in order to ejaculate directly onto " + c.hisHer() + " body.  ");
                                                }
                                                if (dignity <= 66) {
                                                    if (dignity <= 33) {
                                                        w.append(t, String.valueOf(c.HeShe()) + " shouts in disgust, squirming and struggling up to the very last moment.  ");
                                                    }
                                                    else {
                                                        w.append(t, String.valueOf(c.HeShe()) + " closes " + c.hisHer() + " eyes, turning " + c.hisHer() + " face away in preparation for the coming deluge.  ");
                                                    }
                                                }
                                                else {
                                                    w.append(t, String.valueOf(c.HeShe()) + " tries not to show a reaction, but the countdown makes " + c.himHer() + " tremble with anticipation, and when it hits zero, " + c.hisHer() + " composure breaks.  ");
                                                }
                                                break Label_42674;
                                            }
                                        }
                                        if (!w.getBodyStatus()[3]) {
                                            w.append(t, "that in a few moments, your magic will collect any semen shot onto their screens and pump it through a tube you've inserted into ");
                                        }
                                        else {
                                            w.append(t, "that in a few moments, you'll be conjuring spacial portals that they'll be able to stick their cocks into in order to directly fuck " + c.hisHer() + " ");
                                        }
                                        if (!gender.equals("male")) {
                                            w.append(t, "pussy.  ");
                                        }
                                        else {
                                            w.append(t, "anus.  ");
                                        }
                                        if (!w.getBodyStatus()[3]) {
                                            if (dignity <= 66) {
                                                if (dignity <= 33) {
                                                    w.append(t, String.valueOf(c.HeShe()) + " shouts in protest, squirming and struggling to dislodge the mechanical tentacle, but it's too late.  ");
                                                }
                                                else {
                                                    w.append(t, String.valueOf(c.HeShe()) + " struggles to remove the mechanical tentacle before the timer counts to zero, but it's futile.  ");
                                                }
                                            }
                                            else {
                                                w.append(t, String.valueOf(c.HeShe()) + " tries to put on a calm face as " + c.heShe() + " struggles to remove the mechanical tentacle, but as the timer counts down, " + c.hisHer() + " demeanor becomes increasingly frantic.  ");
                                            }
                                        }
                                        else if (dignity <= 66) {
                                            if (dignity <= 33) {
                                                w.append(t, String.valueOf(c.HeShe()) + " shouts in disgust, squirming and struggling up to the very last moment.  ");
                                            }
                                            else {
                                                w.append(t, String.valueOf(c.HeShe()) + " closes " + c.hisHer() + " eyes, mentally preparing " + c.himHer() + "self for the coming violation.  ");
                                            }
                                        }
                                        else {
                                            w.append(t, String.valueOf(c.HeShe()) + " tries not to show a reaction, but the countdown makes " + c.himHer() + " tremble with anticipation, and when it hits zero, " + c.hisHer() + " composure breaks.  ");
                                        }
                                    }
                                    if (c.getEXPOLevel() >= 3) {
                                        Label_43699: {
                                            if (c.getHATELevel() < 3) {
                                                if (!penetrated) {
                                                    w.append(t, "that the counter is still increasing at an alarming rate as the viewers enjoy " + c.hisHer() + " effective nudity.  " + c.HeShe() + " can't help but ");
                                                    break Label_43699;
                                                }
                                            }
                                            if (vVirg) {
                                                if (!penetrated) {
                                                    w.append(t, "In a matter of seconds, " + c.hisHer() + " whole body is covered in the semen, " + c.hisHer() + " skin glistening wetly.  The disgusting feeling makes " + c.himHer() + " ");
                                                    break Label_43699;
                                                }
                                            }
                                            if (!w.tickle()) {
                                                if (!gender.equals("female")) {
                                                    w.append(t, "The semen of hundreds of ejaculations is pumped inside " + c.himHer() + ", swelling " + c.hisHer() + " belly and quickly overflowing in a violent spray that gets spatters on " + c.hisHer() + " penis and the rest of " + c.hisHer() + " exposed body as well.  The pain is enough to make " + c.himHer() + " ");
                                                }
                                                else {
                                                    w.append(t, "The semen of hundreds of ejaculations is pumped inside " + c.himHer() + ", swelling " + c.hisHer() + " belly and quickly overflowing in a violent spray that gets spatters on the rest of " + c.hisHer() + " exposed body as well.  The pain is enough to make " + c.himHer() + " ");
                                                }
                                            }
                                            else if (!gender.equals("female")) {
                                                w.append(t, "The semen of hundreds of ejaculations is pumped inside " + c.himHer() + ", swelling " + c.hisHer() + " belly and quickly overflowing in a violent spray that gets spatters on " + c.hisHer() + " penis and the rest of " + c.hisHer() + " exposed body as well.  The sense of violation is enough to make " + c.himHer() + " ");
                                            }
                                            else {
                                                w.append(t, "The semen of hundreds of ejaculations is pumped inside " + c.himHer() + ", swelling " + c.hisHer() + " belly and quickly overflowing in a violent spray that gets spatters on the rest of " + c.hisHer() + " exposed body as well.  The sense of violation is enough to make " + c.himHer() + " ");
                                            }
                                        }
                                        if (confidence <= 66) {
                                            if (confidence <= 33) {
                                                w.append(t, "cry outright, tears streaming down " + c.hisHer() + " flushed red cheeks.");
                                            }
                                            else {
                                                w.append(t, "glare with building hatred as it becomes harder and harder to view these people as worthy of protection.");
                                            }
                                        }
                                        else {
                                            w.append(t, "scream abuse at the viewers, unable to contain " + c.hisHer() + " anger at being degraded like this.");
                                        }
                                    }
                                    else {
                                        Label_43033: {
                                            if (c.getHATELevel() < 3) {
                                                if (!penetrated) {
                                                    w.append(t, "just how many people have pleasured themselves to " + c.hisHer() + " suffering.  The realization makes " + c.himHer() + " ");
                                                    break Label_43033;
                                                }
                                            }
                                            if (vVirg) {
                                                if (!penetrated) {
                                                    w.append(t, "In a matter of seconds, " + c.hisHer() + " face, hair, and clothes are covered in the semen of hundreds of different men, and " + c.heShe() + " can only ");
                                                    break Label_43033;
                                                }
                                            }
                                            if (!w.tickle()) {
                                                w.append(t, "The semen of hundreds of ejaculations is pumped inside " + c.himHer() + ", swelling " + c.hisHer() + " belly and overflowing to soak " + c.hisHer() + " " + bottomDesc + ".  The pain is enough to make " + c.himHer() + " ");
                                            }
                                            else {
                                                w.append(t, "The semen of hundreds of ejaculations is pumped inside " + c.himHer() + ", swelling " + c.hisHer() + " belly and overflowing to soak " + c.hisHer() + " " + bottomDesc + ".  The sense of violation is enough to make " + c.himHer() + " ");
                                            }
                                        }
                                        if (confidence <= 66) {
                                            if (confidence <= 33) {
                                                w.append(t, "cry outright, tears streaming down " + c.hisHer() + " flushed red cheeks.");
                                            }
                                            else {
                                                w.append(t, "glare with building hatred as it becomes harder and harder to view these people as worthy of protection.");
                                            }
                                        }
                                        else {
                                            w.append(t, "scream abuse at the viewers, unable to contain " + c.hisHer() + " anger at being degraded like this.");
                                        }
                                    }
                                    if (!w.getBodyStatus()[4]) {
                                        if (!w.getBodyStatus()[20]) {
                                            if (w.getBodyStatus()[5]) {
                                                if (!w.tickle()) {
                                                    if (c.getHATELevel() >= 3) {
                                                        if (!vVirg) {
                                                            w.append(t, "  Afterward, the cables coiled around " + c.hisHer() + " midsection squeeze down");
                                                            if (c.getINJULevel() >= 3) {
                                                                if (!aVirg) {
                                                                    if (!gender.equals("male")) {
                                                                        w.append(t, " while more and more cables flow into " + c.hisHer() + " ass");
                                                                    }
                                                                    else {
                                                                        w.append(t, " while your cage tortures " + c.hisHer() + " penis with electric shocks");
                                                                    }
                                                                }
                                                            }
                                                            w.append(t, ", forcing the cum to spray out of " + c.hisHer() + " ruined ");
                                                            if (!gender.equals("male")) {
                                                                w.append(t, "pussy.");
                                                            }
                                                            else {
                                                                w.append(t, "asshole.");
                                                            }
                                                        }
                                                    }
                                                }
                                                else {
                                                    if (c.getINJULevel() >= 3) {
                                                        if (!aVirg) {
                                                            w.append(t, "  But no matter how awful it feels, your tickling is still forcing " + c.himHer() + " to grin and laugh, each spasm shooting a little spurt of cum out of " + c.hisHer() + " ruined ");
                                                            if (!gender.equals("male")) {
                                                                w.append(t, "pussy.");
                                                            }
                                                            else {
                                                                w.append(t, "asshole.");
                                                            }
                                                            return;
                                                        }
                                                    }
                                                    w.append(t, "  Lubricated by the copious amounts of semen, your cables continue to tickle all over " + c.hisHer() + " body, testing the limits of " + c.hisHer() + " willpower.");
                                                }
                                                return;
                                            }
                                            if (!w.getBodyStatus()[6]) {
                                                return;
                                            }
                                            w.append(t, "  There are rapid flashes of light as your cameras take detailed photographs of " + c.hisHer() + " humiliation from every possible angle.");
                                            return;
                                        }
                                    }
                                    if (!penetrated) {
                                        w.append(t, "  The vibrator against " + c.hisHer() + " ");
                                        if (!gender.equals("female")) {
                                            w.append(t, "cock");
                                        }
                                        else {
                                            w.append(t, "clit");
                                        }
                                        w.append(t, " surges at the same time, ");
                                    }
                                    else {
                                        w.append(t, "  The tentacle fucks " + c.himHer() + " even as it fills " + c.himHer() + " up");
                                    }
                                    if (c.getPLEALevel() >= 3) {
                                        if (!cVirg) {
                                            if (!gender.equals("female")) {
                                                w.append(t, "forcing another dribble out of " + c.hisHer() + " own exhausted cock.");
                                            }
                                            else {
                                                w.append(t, "forcing out another orgasm despite " + c.hisHer() + " disgust.");
                                            }
                                            return;
                                        }
                                    }
                                    w.append(t, "and " + c.heShe() + " hates how good it feels.");
                                }
                            }
                            else {
                                if (!w.getBodyStatus()[3]) {
                                    if (confidence <= 66) {
                                        if (confidence <= 33) {
                                            w.append(t, String.valueOf(mainName) + " winces, unable to make " + c.himHer() + "self look at the cameras you have pointed at " + c.himHer());
                                        }
                                        else {
                                            w.append(t, "You tighten your grip on " + mainName);
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(mainName) + " glares at the cameras you have pointed at " + c.himHer());
                                    }
                                    w.append(t, " as more holographic screens appear, showing the comments left by " + c.hisHer() + " live audience.  Many of the commenters are talking about how ");
                                }
                                else {
                                    if (confidence <= 66) {
                                        if (confidence <= 33) {
                                            w.append(t, String.valueOf(mainName) + " winces, unable to make " + c.himHer() + "self look at the viewers tormenting " + c.himHer());
                                        }
                                        else {
                                            w.append(t, "The viewers continue to torment " + mainName);
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(mainName) + " glares at the viewers tormenting " + c.himHer());
                                    }
                                    w.append(t, " as more holographic screens appear, showing the comments left by the members of the audience who weren't lucky enough to get assigned control over any of your cables.  Many of the commenters are talking about how ");
                                }
                                if (c.getEXPOLevel() >= 3) {
                                    if (morality <= 66) {
                                        if (morality <= 33) {
                                            if (!gender.equals("male")) {
                                                if (!gender.equals("female")) {
                                                    w.append(t, String.valueOf(c.heShe()) + " must be such a bitch because of " + c.hisHer() + " insecurity about having a dick");
                                                }
                                                else {
                                                    w.append(t, "nice it is to see the evil bitch get the humiliation " + c.heShe() + " deserves");
                                                }
                                            }
                                            else {
                                                w.append(t, "they want to see this bastard get fucked into becoming a submissive woman");
                                            }
                                        }
                                        else if (!gender.equals("male")) {
                                            if (!gender.equals("female")) {
                                                w.append(t, "that it feels weird to masturbate to a chick with a dick, but they're going to do it anyway");
                                            }
                                            else {
                                                w.append(t, "they're going to save this recording and masturbate to it later");
                                            }
                                        }
                                        else {
                                            w.append(t, "that it's definitely not gay to masturbate to a boy as cute as " + c.himHer());
                                        }
                                    }
                                    else if (!gender.equals("male")) {
                                        if (!gender.equals("female")) {
                                            w.append(t, "surprising it is that such a purehearted girl would be hiding such a dirty secret between " + c.hisHer() + " legs");
                                        }
                                        else {
                                            w.append(t, "surprising it is that such a purehearted girl would have such a slutty body");
                                        }
                                    }
                                    else {
                                        w.append(t, "surprising it is that such a purehearted boy would have such a fuckable ass");
                                    }
                                }
                                else if (morality <= 66) {
                                    if (morality <= 33) {
                                        w.append(t, String.valueOf(c.heShe()) + "'s an evil bitch who deserves what's happening to " + c.himHer());
                                    }
                                    else if (!w.getBodyStatus()[3]) {
                                        w.append(t, "they hope you hurry and finish stripping " + c.himHer() + " soon");
                                    }
                                    else {
                                        w.append(t, "the idiots in control should hurry up and finish stripping " + c.himHer());
                                    }
                                }
                                else {
                                    w.append(t, "if " + c.heShe() + " really wants to make people happy, " + c.heShe() + " should just let " + c.himHer() + "self get stripped already");
                                }
                                Label_40696: {
                                    if (c.getHATELevel() < 3) {
                                        if (!penetrated) {
                                            if (c.getEXPOLevel() >= 3) {
                                                if (!w.getBodyStatus()[6]) {
                                                    w.append(t, ".  As your cables pull " + c.hisHer() + " legs apart, the comments become even more sexual");
                                                }
                                                else {
                                                    w.append(t, ".  As your cameras capture " + c.hisHer() + " exposed body from every angle, the comments become even more sexual");
                                                }
                                            }
                                            else if (!w.getBodyStatus()[6]) {
                                                w.append(t, ".  As your cables strip off more and more of " + c.hisHer() + " clothes, the comments become increasingly sexual");
                                            }
                                            else {
                                                w.append(t, ".  As your various tools disintegrate more and more of " + c.hisHer() + " clothes, the comments become increasingly sexual");
                                            }
                                            if (innocence <= 66) {
                                                if (innocence <= 33) {
                                                    w.append(t, ", crude enough to make " + c.himHer() + " frown in distaste.");
                                                }
                                                else {
                                                    w.append(t, ", much to " + c.hisHer() + " disgust.");
                                                }
                                            }
                                            else {
                                                w.append(t, ", to the point that " + c.heShe() + " can't understand what they're talking about.");
                                            }
                                            break Label_40696;
                                        }
                                    }
                                    if (vVirg) {
                                        if (!penetrated) {
                                            if (c.getEXPOLevel() >= 3) {
                                                String addition = "";
                                                if (w.getBodyStatus()[6]) {
                                                    addition = " so that you can shine a bright light inside and zoom in with your cameras";
                                                }
                                                if (!gender.equals("male")) {
                                                    w.append(t, ".  As your cables latch on to " + c.hisHer() + " virgin pussy and spread it open" + addition + ", the comments become even more sexual");
                                                }
                                                else {
                                                    w.append(t, ".  As your cables latch on to " + c.hisHer() + " virgin anus and spread it open" + addition + ", the comments become even more sexual");
                                                }
                                            }
                                            else if (!w.getBodyStatus()[6]) {
                                                w.append(t, ".  As your cables strip off more and more of " + c.hisHer() + " clothes, the comments become increasingly sexual");
                                            }
                                            else {
                                                w.append(t, ".  As your various tools disintegrate more and more of " + c.hisHer() + " clothes, the comments become increasingly sexual");
                                            }
                                            if (innocence <= 66) {
                                                if (innocence <= 33) {
                                                    w.append(t, ", their crudeness and cruelty making it hard for " + c.himHer() + " to calm down.");
                                                }
                                                else {
                                                    w.append(t, ", making " + c.himHer() + " even angrier.");
                                                }
                                            }
                                            else {
                                                w.append(t, ", and while " + c.heShe() + " doesn't comprehend all of what they're saying, " + c.heShe() + " understands enough to feel insulted.");
                                            }
                                            break Label_40696;
                                        }
                                    }
                                    if (c.getEXPOLevel() >= 3) {
                                        String addition = "";
                                        if (w.getBodyStatus()[6]) {
                                            addition = " so that you can shine a bright light inside and zoom in with your cameras";
                                        }
                                        if (!gender.equals("male")) {
                                            w.append(t, ".  As your cables spread " + c.hisHer() + " pussy painfully wide" + addition + ", the comments become even more sexual");
                                        }
                                        else {
                                            w.append(t, ".  As your cables spread " + c.hisHer() + " asshole painfully wide" + addition + ", the comments become even more sexual");
                                        }
                                    }
                                    else {
                                        String start = ".  As another cable with a camera on the end roughly shoves its ";
                                        if (w.getBodyStatus()[6]) {
                                            start = ".  As several more cables with bulky cameras attached force their ";
                                        }
                                        if (!gender.equals("male")) {
                                            w.append(t, String.valueOf(start) + "way into " + c.hisHer() + " pussy, the comments become increasingly sexual");
                                        }
                                        else {
                                            w.append(t, String.valueOf(start) + "way into " + c.hisHer() + " asshole, the comments become increasingly sexual");
                                        }
                                    }
                                    if (innocence <= 66) {
                                        if (innocence <= 33) {
                                            w.append(t, ", and the obvious amusement they show at " + c.hisHer() + " pain makes it impossible for " + c.himHer() + " to stay calm and rational.");
                                        }
                                        else {
                                            w.append(t, ", and " + c.heShe() + " can't help but get angrier at the enjoyment they're taking from " + c.hisHer() + " suffering.");
                                        }
                                    }
                                    else {
                                        w.append(t, ", and while " + c.heShe() + " doesn't understand all of what they're saying, the fact that they're enjoying " + c.hisHer() + " suffering is obvious enough to make " + c.himHer() + " even angrier.");
                                    }
                                }
                                Label_41200: {
                                    if (!w.getBodyStatus()[4]) {
                                        if (!w.getBodyStatus()[20]) {
                                            break Label_41200;
                                        }
                                    }
                                    if (c.getPLEALevel() >= 3) {
                                        if (!cVirg) {
                                            if (!w.getBodyStatus()[20]) {
                                                w.append(t, "  " + c.HeShe() + " struggles to answer, voice breaking as ");
                                            }
                                            else {
                                                w.append(t, "  " + c.HisHer() + " voice is dull and distracted as ");
                                                if (!hypnotized) {
                                                    w.append(t, String.valueOf(c.heShe()) + " struggles to shake off the hypnotic imagery");
                                                }
                                                else {
                                                    w.append(t, "the cruel words only briefly break the lull of the hypnotism");
                                                }
                                                w.append(t, ", and it breaks into a cry as ");
                                            }
                                            if (!gender.equals("female")) {
                                                w.append(t, String.valueOf(c.heShe()) + " abruptly shudders in climax, cumming hard");
                                            }
                                            else {
                                                w.append(t, String.valueOf(c.heShe()) + " abruptly cums again to your vibrators.");
                                            }
                                            if (c.getEXPOLevel() < 3) {
                                                w.append(t, " in " + c.hisHer() + " " + bottomDesc + ".");
                                            }
                                            else {
                                                w.append(t, " in plain view.");
                                            }
                                            break Label_41200;
                                        }
                                    }
                                    if (!w.getBodyStatus()[20]) {
                                        w.append(t, "  " + c.HeShe() + " struggles to answer through the stimulation of your vibrators.");
                                    }
                                    else if (!hypnotized) {
                                        w.append(t, String.valueOf(c.HisHer()) + " voice is dull and distracted as " + c.heShe() + " struggles to shake off the hypnotic imagery being shown to " + c.himHer() + ".");
                                    }
                                    else {
                                        w.append(t, "The cruel words briefly break the lull of the hypnotism.");
                                    }
                                }
                                if (w.getBodyStatus()[5]) {
                                    if (c.getINJULevel() >= 3) {
                                        if (!aVirg) {
                                            if (!w.tickle()) {
                                                if (!gender.equals("male")) {
                                                    w.append(t, "  " + c.HeShe() + " has a hard time speaking, voice thick with pain due to your cables exploring " + c.hisHer() + " ass.");
                                                }
                                                else {
                                                    w.append(t, "  " + c.HeShe() + " has a hard time speaking, " + c.hisHer() + " voice an octave higher than usual due to the tightness of your cage around " + c.hisHer() + " penis.");
                                                }
                                            }
                                            else {
                                                w.append(t, "  You give " + c.himHer() + " a brief break from the tickling in order to give an answer that satisfies the viewers, then go right back to forcing " + c.himHer() + " to laugh some more.");
                                            }
                                            return;
                                        }
                                    }
                                    if (!w.tickle()) {
                                        w.append(t, "  Your cables torture " + c.himHer() + " with periodic shocks of electricity as " + c.heShe() + " tries to answer.");
                                    }
                                    else {
                                        w.append(t, "  " + c.HeShe() + " has a hard time answering through your incessant tickle torture.");
                                    }
                                }
                            }
                        }
                        else {
                            if (!w.getBodyStatus()[3]) {
                                w.append(t, "You allow your viewers to vote on how " + mainName + " will be abused next");
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, ", and " + c.heShe() + " tries to convince them to vote to release " + c.himHer() + ", but " + c.heShe());
                                    }
                                    else {
                                        w.append(t, ", and one of the options is to simply let " + c.himHer() + " escape immediately.  Even though the civilians aren't under your influence in the same way that Thralls are, " + mainName);
                                    }
                                }
                                else {
                                    w.append(t, ".  " + c.HeShe() + " tries to convince " + c.himHer() + "self that " + c.hisHer() + " popularity is great enough that they'll vote to let " + c.himHer() + " go, but " + c.heShe());
                                }
                                if (c.getEXPOLevel() >= 3) {
                                    if (innocence <= 66) {
                                        if (innocence <= 33) {
                                            w.append(t, " isn't surprised at all when they instead vote to ");
                                        }
                                        else {
                                            w.append(t, " can only watch the votes count up and see that they'd much rather see you ");
                                        }
                                    }
                                    else {
                                        w.append(t, "'s surprised when they vote to ");
                                    }
                                }
                                else if (innocence <= 66) {
                                    if (innocence <= 33) {
                                        w.append(t, " isn't surprised at all when they instead vote for you to strip " + c.himHer() + " naked.  ");
                                    }
                                    else {
                                        w.append(t, " can only watch the votes count up and see that they'd much rather see you tear off " + c.hisHer() + " clothing.  ");
                                    }
                                }
                                else {
                                    w.append(t, "'s surprised when they vote to strip off " + c.hisHer() + " clothing instead.  ");
                                }
                            }
                            else {
                                w.append(t, "You give your viewers free reign to remotely control your tentacles however they please");
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, ", and " + mainName + " tries to convince them to release " + c.himHer() + ", but " + c.heShe());
                                    }
                                    else {
                                        w.append(t, ", and while a couple of them try to create an opening for " + mainName + " to escape, they're far outnumbered.  Even though the civilians aren't under your influence in the same way that Thralls are, " + mainName);
                                    }
                                }
                                else {
                                    w.append(t, ".  " + mainName + " tries to convince " + c.himHer() + "self that " + c.hisHer() + " popularity is great enough that they'll let " + c.himHer() + " go, but " + c.heShe());
                                }
                                if (c.getEXPOLevel() >= 3) {
                                    if (innocence <= 66) {
                                        if (innocence <= 33) {
                                            w.append(t, " isn't surprised at all when they instead opt to ");
                                        }
                                        else {
                                            w.append(t, " can only watch as they quickly grow bold enough to ");
                                        }
                                    }
                                    else {
                                        w.append(t, "'s surprised when they opt to ");
                                    }
                                }
                                else if (innocence <= 66) {
                                    if (innocence <= 33) {
                                        w.append(t, " isn't surprised at all when they instead opt to strip " + c.himHer() + " naked.  ");
                                    }
                                    else {
                                        w.append(t, " can only watch as they grow more and more bold about tearing off " + c.hisHer() + " clothing.");
                                    }
                                }
                                else {
                                    w.append(t, "'s surprised when they opt to strip off " + c.hisHer() + " clothing instead.  ");
                                }
                            }
                            Label_37500: {
                                if (c.getHATELevel() < 3) {
                                    if (!penetrated) {
                                        if (c.getEXPOLevel() >= 3) {
                                            String cameras = "the cameras";
                                            if (w.getBodyStatus()[6]) {
                                                cameras = "your high-definition cameras";
                                            }
                                            w.append(t, "electrically shock " + c.himHer() + ".  Each surge of voltage through your cables causes " + c.hisHer() + " nearly-naked body to squirm, showing off everything to " + cameras + " as ");
                                        }
                                        else if (!w.getBodyStatus()[6]) {
                                            w.append(t, "Your cables lash across " + c.hisHer() + " body, hooking " + c.hisHer() + " clothes and pulling them away as ");
                                        }
                                        else {
                                            w.append(t, "Buzzsaws and laser beams emerge from your body, shredding " + c.hisHer() + " clothes with rapid efficiency as ");
                                        }
                                        if (confidence <= 66) {
                                            if (confidence <= 33) {
                                                w.append(t, String.valueOf(c.heShe()) + " sobs and begs them to go easy on " + c.himHer() + ".");
                                            }
                                            else {
                                                w.append(t, String.valueOf(c.heShe()) + " tries to endure it.");
                                            }
                                        }
                                        else {
                                            w.append(t, String.valueOf(c.heShe()) + " clenches " + c.hisHer() + " teeth and refuses to beg for mercy.");
                                        }
                                        break Label_37500;
                                    }
                                }
                                if (vVirg) {
                                    if (!penetrated) {
                                        if (c.getEXPOLevel() >= 3) {
                                            String addition = "";
                                            if (w.getBodyStatus()[6]) {
                                                addition = " through your many high-definition cameras";
                                            }
                                            if (!gender.equals("female")) {
                                                if (gender.equals("male")) {
                                                    if (w.getBodyStatus()[6]) {
                                                        addition = " so they can get a good look inside" + addition;
                                                    }
                                                    w.append(t, "spread " + c.hisHer() + " virgin anus as much as possible" + addition + ".  " + c.HeShe() + " ");
                                                }
                                            }
                                            else {
                                                w.append(t, "spread " + c.hisHer() + " virgin pussy so they can get a good look at " + c.hisHer() + " hymen" + addition + ".  " + c.HeShe() + " ");
                                            }
                                        }
                                        else if (!w.getBodyStatus()[6]) {
                                            w.append(t, "Your cables lash across " + c.hisHer() + " body, hooking " + c.hisHer() + " clothes and pulling them away as " + c.heShe() + " ");
                                        }
                                        else {
                                            w.append(t, "Buzzsaws and laser beams emerge from your body, shredding " + c.hisHer() + " clothes with rapid efficiency as ");
                                        }
                                        if (confidence <= 66) {
                                            if (confidence <= 33) {
                                                w.append(t, " stares resentfully back at the viewers, trembling with anger and embarrassment.");
                                            }
                                            else {
                                                w.append(t, " squeezes " + c.hisHer() + " eyes shut and tries to calm down.");
                                            }
                                        }
                                        else {
                                            w.append(t, " grinds " + c.hisHer() + " teeth and glares back at the viewers.");
                                        }
                                        break Label_37500;
                                    }
                                }
                                if (c.getEXPOLevel() >= 3) {
                                    String addition = "";
                                    if (w.getBodyStatus()[6]) {
                                        addition = " in high-definition detail";
                                    }
                                    if (!w.getBodyStatus()[19]) {
                                        if (!gender.equals("female")) {
                                            if (!gender.equals("male")) {
                                                w.append(t, " pin " + c.hisHer() + " penis out of the way and then dig into " + c.hisHer() + " pussy, spreading it so wide open that they can see all the way to " + c.hisHer() + " cervix" + addition + ".  " + c.HeShe() + " ");
                                            }
                                            else {
                                                w.append(t, " penetrate " + c.hisHer() + " asshole, spreading it so wide open that they can see all the way inside" + addition + ".  " + c.HeShe() + " ");
                                            }
                                        }
                                        else {
                                            w.append(t, " dig into " + c.hisHer() + " pussy, spreading it so wide open that they can see all the way to " + c.hisHer() + " cervix" + addition + ".  " + c.HeShe() + " ");
                                        }
                                    }
                                    else {
                                        w.append(t, " pump even more Demonic cum inside " + c.himHer() + ".  " + c.HeShe() + " ");
                                    }
                                }
                                else {
                                    String addition = "";
                                    if (w.getBodyStatus()[6]) {
                                        addition = " high-definition";
                                    }
                                    if (!gender.equals("male")) {
                                        w.append(t, "Your cables tear apart " + c.hisHer() + " clothes on the way to " + c.hisHer() + " pussy, inserting probing" + addition + " cameras that give the viewers an internal view of " + c.hisHer() + " most private place.  " + c.HeShe() + " ");
                                    }
                                    else {
                                        w.append(t, "Your cables tear apart " + c.hisHer() + " clothes on the way to " + c.hisHer() + " asshole, inserting probing" + addition + " cameras that give the viewers an internal view.  " + c.HeShe() + " ");
                                    }
                                }
                                if (confidence <= 66) {
                                    if (confidence <= 33) {
                                        w.append(t, "winces in pain, but " + c.heShe() + "'s too timid to fight back.");
                                    }
                                    else {
                                        w.append(t, "struggles briefly, but your hold on " + c.hisHer() + " lower lips is firm enough that it's obviously futile.");
                                    }
                                }
                                else {
                                    w.append(t, "grunts in pain, struggling stubbornly even though it sends jolts of agony through " + c.hisHer() + " lower body.");
                                }
                            }
                            Label_38044: {
                                if (w.getBodyStatus()[5]) {
                                    if (!w.tickle()) {
                                        if (c.getINJULevel() >= 3) {
                                            if (!aVirg) {
                                                if (!gender.equals("male")) {
                                                    if (!penetrated) {
                                                        w.append(t, "  Meanwhile, more camera cables snake under " + c.hisHer() + " clothes to penetrate " + c.hisHer() + " ass, giving the viewers a deep internal view.");
                                                    }
                                                    else {
                                                        w.append(t, "  At the same time, more cables give the same treatment to " + c.hisHer() + " ass.");
                                                    }
                                                }
                                                else {
                                                    if (c.getEXPOLevel() < 3) {
                                                        w.append(t, "  The cage around " + c.hisHer() + " penis abruptly tightens, and " + c.hisHer() + " reflexive yelp of discomfort");
                                                    }
                                                    else {
                                                        w.append(t, "  The vulnerable position, combined with the cage around " + c.hisHer() + " penis");
                                                    }
                                                    w.append(t, " draws a wave of derisive laughter.");
                                                }
                                                break Label_38044;
                                            }
                                        }
                                        w.append(t, "  The rough treatment damages not only " + c.hisHer() + " clothes, but " + c.hisHer() + " body as well.");
                                    }
                                    else {
                                        if (c.getEXPOLevel() < 3) {
                                            w.append(t, "  The viewers prioritize exposing " + c.hisHer() + " armpits and feet for further tickling, ");
                                        }
                                        else {
                                            w.append(t, "  As the next set of votes come in, it becomes clear that the viewers want you to make " + c.himHer() + " laugh more, ");
                                        }
                                        Label_37739: {
                                            if (c.getINJULevel() >= 3) {
                                                if (!aVirg) {
                                                    w.append(t, "and " + c.heShe() + "'s already unable to stifle " + c.hisHer() + " nervous giggles of anticipation.");
                                                    break Label_37739;
                                                }
                                            }
                                            w.append(t, "and " + c.hisHer() + " face pales as " + c.heShe() + " realizes what's coming next.");
                                        }
                                    }
                                }
                            }
                            if (!w.getBodyStatus()[20]) {
                                if (w.getBodyStatus()[4]) {
                                    if (c.getPLEALevel() >= 3) {
                                        if (!cVirg) {
                                            w.append(t, "  The stimulation soon causes " + c.himHer() + " to climax again");
                                            if (!gender.equals("female")) {
                                                w.append(t, ", " + c.hisHer() + " cock twitching as it strains to produce each spurt of cum.");
                                            }
                                            else {
                                                w.append(t, ", moaning and covering " + c.hisHer() + " face.");
                                            }
                                            return;
                                        }
                                    }
                                    w.append(t, "  The tips of your cables start to vibrate, causing " + c.himHer() + " to jerk and frown as " + c.hisHer() + " resistance is pushed to its limit.");
                                }
                            }
                            else {
                                w.append(t, "  Meanwhile, the hypnotic images being displayed to " + c.himHer() + " ");
                                if (c.getPLEALevel() >= 3) {
                                    if (!cVirg) {
                                        if (!hypnotized) {
                                            w.append(t, "enhance the stimulation " + c.heShe() + " feels from the abuse, causing " + c.himHer() + " to cum again.");
                                        }
                                        else {
                                            w.append(t, "make " + c.himHer() + " continue to masturbate, cumming for " + c.hisHer() + " audience.");
                                        }
                                        return;
                                    }
                                }
                                if (!hypnotized) {
                                    w.append(t, "subtly alter " + c.hisHer() + " mental state, causing the abuse to feel far more pleasurable than it should.");
                                }
                                else {
                                    w.append(t, "make " + c.himHer() + " continue to masturbate, still straining in search of orgasm.");
                                }
                            }
                        }
                    }
                }
                else {
                    String hand = "hand";
                    String fist = "fist";
                    if (!w.getBodyStatus()[3]) {
                        if (w.getBodyStatus()[5]) {
                            hand = "claw";
                            fist = "clawed fist";
                        }
                    }
                    else {
                        hand = "tongue";
                        fist = "tongue";
                    }
                    if (captureProgression % 3 != 1) {
                        if (captureProgression % 3 != 2) {
                            if (captureProgression % 3 == 0) {
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, String.valueOf(mainName) + " doesn't outwardly react as you lift " + c.himHer() + " up above your head, but " + c.heShe() + " still cries out at the sensation of ");
                                    }
                                    else {
                                        w.append(t, "You lift " + mainName + " up above your head in order to display " + c.hisHer() + " defeated body, ");
                                    }
                                }
                                else {
                                    w.append(t, String.valueOf(mainName) + " gasps in horror and struggles to cover " + c.himHer() + "self as you lift " + c.himHer() + " up high, ");
                                }
                                if (c.getINJULevel() >= 3) {
                                    if (!w.tickle()) {
                                        if (!gender.equals("male")) {
                                            if (!w.getBodyStatus()[3]) {
                                                if (!w.getBodyStatus()[5]) {
                                                    w.append(t, "your fingers flexing inside " + c.hisHer() + " belly");
                                                }
                                                else {
                                                    w.append(t, "your sharp claws flexing inside " + c.hisHer() + " belly");
                                                }
                                            }
                                            else {
                                                w.append(t, "your tongues writhing inside " + c.hisHer() + " belly");
                                            }
                                            if (!w.getBodyStatus()[6]) {
                                                w.append(t, ", causing visible bumps moving on the surface.  ");
                                            }
                                            else if (c.getEXPOLevel() < 3) {
                                                w.append(t, ", " + c.hisHer() + " " + topDesc + " already dissolved enough to show the bumps moving beneath the surface.  ");
                                            }
                                            else {
                                                w.append(t, ", causing visible bumps to move on the slime-slick surface.  ");
                                            }
                                        }
                                        else {
                                            if (!w.getBodyStatus()[3]) {
                                                if (!w.getBodyStatus()[5]) {
                                                    w.append(t, "your fingers closing more and more tightly around " + c.hisHer() + " testicles.  ");
                                                }
                                                else {
                                                    w.append(t, "your pointed claws closing more and more tightly around " + c.hisHer() + " testicles.  ");
                                                }
                                            }
                                            else {
                                                w.append(t, "your tongues whipping " + c.hisHer() + " bruised testicles over and over again.  ");
                                            }
                                            if (w.getBodyStatus()[6]) {
                                                if (c.getEXPOLevel() < 3) {
                                                    w.append(t, "And with your slime dissolving " + c.hisHer() + " clothes, " + c.heShe() + "'s only getting more vulnerable by the moment.  ");
                                                }
                                                else {
                                                    w.append(t, "With " + c.hisHer() + " clothes dissolved by your slime, " + c.heShe() + " doesn't have any protection at all.  ");
                                                }
                                            }
                                        }
                                    }
                                    else {
                                        w.append(t, "your " + hand + "s tickling " + c.hisHer() + " stretched-out belly.  ");
                                        if (w.getBodyStatus()[6]) {
                                            if (c.getEXPOLevel() < 3) {
                                                w.append(t, "And with your slime dissolving " + c.hisHer() + " clothes, " + c.heShe() + "'s only getting more vulnerable by the moment.  ");
                                            }
                                            else {
                                                w.append(t, "With " + c.hisHer() + " clothes dissolved by your slime, " + c.heShe() + " doesn't have any protection at all.  ");
                                            }
                                        }
                                    }
                                    if (innocence <= 66) {
                                        if (innocence <= 33) {
                                            if (!w.tickle()) {
                                                if (!gender.equals("male")) {
                                                    w.append(t, "Though " + c.heShe() + " tries to remain rational, the strange pain deep inside " + c.hisHer() + " bowels makes it impossible to care that ");
                                                }
                                                else {
                                                    w.append(t, "Though " + c.heShe() + " tries to remain rational, the strange pain shooting deep into " + c.hisHer() + " abdomen makes it impossible to care that ");
                                                }
                                            }
                                            else {
                                                w.append(t, "Though " + c.heShe() + " tries to remain rational, the sensations distract " + c.himHer() + " from the fact that ");
                                            }
                                        }
                                        else if (!w.tickle()) {
                                            if (!gender.equals("male")) {
                                                w.append(t, "It's too much for " + c.himHer() + " to bear without moaning out loud, even though " + c.heShe() + " knows that ");
                                            }
                                            else {
                                                w.append(t, "It's too much for " + c.himHer() + " to bear without screaming in agony, even though " + c.heShe() + " knows that ");
                                            }
                                        }
                                        else {
                                            w.append(t, "It's too much for " + c.himHer() + " to bear without laughing out loud, even though " + c.heShe() + " knows that ");
                                        }
                                    }
                                    else if (!w.tickle()) {
                                        if (!gender.equals("male")) {
                                            w.append(t, String.valueOf(c.HeShe()) + " squirms in disgust, too caught up in the moment to realize that ");
                                        }
                                        else {
                                            w.append(t, String.valueOf(c.HeShe()) + " spasms in pain, too caught up in the moment to realize that ");
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.HeShe()) + " giggles girlishly, too caught up in the moment to realize that ");
                                    }
                                }
                                else {
                                    if (!w.getBodyStatus()[6]) {
                                        w.append(t, "your many " + hand + "s roughly tearing the clothes from " + c.hisHer() + " body to give the spectators a better look.  ");
                                    }
                                    else {
                                        w.append(t, "your many hands spreading more slime across " + c.hisHer() + " body in order to dissolve " + c.hisHer() + " clothes and give the spectators a better look at " + c.hisHer() + " body.  ");
                                    }
                                    if (innocence <= 66) {
                                        if (innocence <= 33) {
                                            w.append(t, String.valueOf(c.HeShe()) + " knows that they'll be thinking about how ");
                                        }
                                        else {
                                            w.append(t, "They whisper to each other about how ");
                                        }
                                    }
                                    else {
                                        w.append(t, "Their eyes feel disgusting, especially with them openly talking about how ");
                                    }
                                }
                                if (c.getEXPOLevel() >= 3) {
                                    if (!modest) {
                                        if (c.getINJULevel() >= 3) {
                                            w.append(t, "with " + c.hisHer() + " state of undress, the spectators can film every detail of what's happening to " + c.himHer() + ".  Some of them whisper to each other that ");
                                        }
                                        if (confidence <= 66) {
                                            if (confidence <= 33) {
                                                w.append(t, String.valueOf(c.heShe()) + "'s a pathetic failure whose only value is to be recorded for masturbation material.");
                                            }
                                            else {
                                                w.append(t, "the recordings they're taking will get millions of views.");
                                            }
                                        }
                                        else {
                                            w.append(t, String.valueOf(c.heShe()) + "'ll have a harder time acting all high and mighty with recordings of this defeat out there.");
                                        }
                                    }
                                    else {
                                        if (c.getINJULevel() >= 3) {
                                            w.append(t, "with " + c.hisHer() + " state of undress, the spectators can see exactly what's happening to " + c.himHer() + ".  Some of them whisper to each other that ");
                                        }
                                        if (confidence <= 66) {
                                            if (confidence <= 33) {
                                                w.append(t, String.valueOf(c.heShe()) + "'s really only good for being stripped and shown off.");
                                            }
                                            else {
                                                w.append(t, "they hope " + c.heShe() + "'ll keep getting beaten so they can enjoy more shows like this.");
                                            }
                                        }
                                        else {
                                            w.append(t, "they like seeing such a stuck-up bitch get put in " + c.hisHer() + " place.");
                                        }
                                    }
                                }
                                else {
                                    if (c.getINJULevel() >= 3) {
                                        if (!w.tickle()) {
                                            w.append(t, "civilians are witnessing " + c.hisHer() + " pained reaction.  Some of them whisper to each other that ");
                                        }
                                        else {
                                            w.append(t, "civilians are witnessing " + c.hisHer() + " failure.  Some of them whisper to each other that ");
                                        }
                                    }
                                    if (confidence <= 66) {
                                        if (confidence <= 33) {
                                            w.append(t, "such a weak-willed person should never have become one of the Chosen.");
                                        }
                                        else {
                                            w.append(t, "they're sort of hoping " + c.heShe() + " gets stripped all the way.");
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.heShe()) + " wasn't really so strong after all.");
                                    }
                                }
                                if (!w.getBodyStatus()[3]) {
                                    if (!w.getBodyStatus()[19]) {
                                        if (!w.getBodyStatus()[4]) {
                                            if (!w.getBodyStatus()[20]) {
                                                return;
                                            }
                                        }
                                        if (c.getPLEALevel() >= 3) {
                                            if (!cVirg) {
                                                w.append(t, "  When your stroking fingers");
                                                if (w.getBodyStatus()[20]) {
                                                    w.append(t, ", aided by your hypnotic spores,");
                                                }
                                                if (!gender.equals("female")) {
                                                    if (gender.equals("male")) {
                                                        if (c.getINJULevel() >= 3) {
                                                            if (w.tickle().equals(false)) {
                                                                w.append(t, " cause " + c.hisHer() + " tortured penis to release a dribble of cum, shocked gasps and amused laughter ring out from the viewers.");
                                                                return;
                                                            }
                                                        }
                                                    }
                                                    w.append(t, " cause " + c.hisHer() + " penis to start spurting cum, shocked gasps and amused laughter ring out from the viewers.");
                                                }
                                                else {
                                                    w.append(t, " cause " + c.himHer() + " to start spasming in orgasm, shocked gasps and amused laughter ring out from the viewers.");
                                                }
                                                return;
                                            }
                                        }
                                        w.append(t, "  When your stroking fingers");
                                        if (w.getBodyStatus()[20]) {
                                            w.append(t, ", aided by your hypnotic spores,");
                                        }
                                        w.append(t, " force out a moan of pleasure, the whispers turn into judgmental murmuring.");
                                        return;
                                    }
                                }
                                Label_34300: {
                                    if (c.getHATELevel() >= 3) {
                                        if (!vVirg) {
                                            break Label_34300;
                                        }
                                    }
                                    if (w.getBodyStatus()[19]) {
                                        if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                                            break Label_34300;
                                        }
                                    }
                                    w.append(t, "  Several can't help but laugh at " + c.hisHer() + " predicament");
                                    if (!w.getBodyStatus()[3]) {
                                        w.append(t, " as " + c.heShe() + " struggles to avoid your massive cock.");
                                        return;
                                    }
                                    w.append(t, ", and your mouths laugh with them.");
                                    return;
                                }
                                if (c.getINJULevel() >= 3) {
                                    if (!gender.equals("male")) {
                                        if (w.tickle().equals(false)) {
                                            w.append(t, "  Several can't help but laugh at how absurd " + c.heShe() + " looks with " + c.hisHer() + " pussy and asshole both filled so full.");
                                            return;
                                        }
                                    }
                                }
                                w.append(t, "  Several make judgmental comments about how " + c.heShe() + " should've kept " + c.hisHer() + " legs closed instead of letting " + c.himHer() + "self get fucked");
                                if (!w.getBodyStatus()[19]) {
                                    w.append(t, " by your tongues.");
                                }
                                else {
                                    w.append(t, ".");
                                }
                            }
                        }
                        else {
                            if (innocence <= 66) {
                                if (innocence <= 33) {
                                    w.append(t, String.valueOf(mainName) + " tries to brace " + c.himHer() + "self, but there's not much " + c.heShe() + " can do as ");
                                }
                                else {
                                    w.append(t, String.valueOf(mainName) + " is unable to defend " + c.himHer() + "self as ");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(mainName) + " is caught by surprise when ");
                            }
                            if (c.getINJULevel() >= 3) {
                                if (!w.tickle()) {
                                    if (!gender.equals("male")) {
                                        w.append(t, "you slam " + c.himHer() + " into the pavement, pushing your " + fist + " even deeper inside " + c.himHer() + " to the point that it's hard for " + c.himHer() + " to breathe.  ");
                                    }
                                    else if (!w.getBodyStatus()[3]) {
                                        w.append(t, "you slam " + c.himHer() + " into the pavement, then follow it up with a heavy punch right between " + c.hisHer() + " legs, strong enough to steal " + c.hisHer() + " breath away.  ");
                                    }
                                    else {
                                        w.append(t, "you slam " + c.himHer() + " into the pavement, then follow it up with a brutal strike right between " + c.hisHer() + " legs, strong enough to steal " + c.hisHer() + " breath away.  ");
                                    }
                                    if (dignity <= 66) {
                                        if (dignity <= 33) {
                                            w.append(t, String.valueOf(c.HeShe()) + " screams openly, " + c.hisHer() + " helpless thrashing making it even less likely that " + c.heShe() + "'ll be able to ");
                                        }
                                        else {
                                            w.append(t, String.valueOf(c.HeShe()) + " moans and writhes in pain, giving up " + c.hisHer() + " efforts to ");
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.HeShe()) + " covers " + c.hisHer() + " face, in far too much pain to consider how the show of weakness will sabotage " + c.hisHer() + " attempts to ");
                                    }
                                }
                                else {
                                    w.append(t, "you pin " + c.himHer() + " down against the pavement, holding " + c.himHer() + " firmly enough that " + c.heShe() + " can't even squirm an inch while you tickle " + c.hisHer() + " armpits and feet.  ");
                                    if (dignity <= 66) {
                                        if (dignity <= 33) {
                                            w.append(t, String.valueOf(c.HeShe()) + " laughs openly, " + c.hisHer() + " helpless thrashing making it even less likely that " + c.heShe() + "'ll be able to ");
                                        }
                                        else {
                                            w.append(t, String.valueOf(c.HeShe()) + " gasps with exhausted laughter, giving up " + c.hisHer() + " efforts to ");
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.HeShe()) + "'s almost grateful for the opportunity to stifle " + c.hisHer() + " laughter against the ground, too flustered to consider how the show of weakness will sabotage " + c.hisHer() + " attempts to ");
                                    }
                                }
                            }
                            else {
                                w.append(t, "you slam " + c.himHer() + " into the pavement.  ");
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, String.valueOf(c.HeShe()) + " goes limp, stunned.  " + c.HeShe() + " makes no attempt to get up, too desperate for a moment's rest to bother to ");
                                    }
                                    else {
                                        w.append(t, "The sight of " + c.himHer() + " lying motionless on the ground underlines the futility of " + c.hisHer() + " attempt to ");
                                    }
                                }
                                else {
                                    w.append(t, String.valueOf(c.HeShe()) + " tries to stand up, only to collapse onto " + c.hisHer() + " face, utterly failing to ");
                                }
                            }
                            if (c.getEXPOLevel() >= 3) {
                                if (!modest) {
                                    w.append(t, "make the recordings being taken of " + c.hisHer() + " nudity less humiliating by ");
                                    if (morality <= 66) {
                                        if (morality <= 33) {
                                            w.append(t, "looking strong enough to take this treatment.");
                                        }
                                        else {
                                            w.append(t, "keeping a proud, undaunted demeanor");
                                        }
                                    }
                                    else {
                                        w.append(t, "remaining hopeful and heroic.");
                                    }
                                }
                                else {
                                    w.append(t, "counteract the humiliation of " + c.hisHer() + " effective nudity by ");
                                    if (morality <= 66) {
                                        if (morality <= 33) {
                                            w.append(t, "looking strong enough to take this treatment.");
                                        }
                                        else {
                                            w.append(t, "keeping a proud, undaunted demeanor.");
                                        }
                                    }
                                    else {
                                        w.append(t, "remaining hopeful and heroic.");
                                    }
                                }
                            }
                            else if (morality <= 66) {
                                if (morality <= 33) {
                                    w.append(t, "look strong enough to take this sort of punishment.");
                                }
                                else {
                                    w.append(t, "survive this sort of treatment with " + c.hisHer() + " pride intact.");
                                }
                            }
                            else {
                                w.append(t, "inspire hope by proudly withstanding this torture.");
                            }
                            if (!w.getBodyStatus()[3]) {
                                if (!w.getBodyStatus()[19]) {
                                    if (!w.getBodyStatus()[4]) {
                                        if (!w.getBodyStatus()[20]) {
                                            if (w.getBodyStatus()[5]) {
                                                if (!w.tickle()) {
                                                    w.append(t, "  Covered in bruises and claw marks, " + c.heShe() + " makes for a pitiful sight.");
                                                }
                                                else {
                                                    w.append(t, "  Tears streaming down " + c.hisHer() + " cheeks, " + c.heShe() + " makes for a pitiful sight.");
                                                }
                                                return;
                                            }
                                            if (!w.getBodyStatus()[6]) {
                                                return;
                                            }
                                            w.append(t, "  You take the opportunity to spit more slime onto " + c.hisHer() + " defenseless body.");
                                            return;
                                        }
                                    }
                                    w.append(t, "  Meanwhile your spores continue to take effect.");
                                    if (c.getPLEALevel() >= 3) {
                                        if (!cVirg) {
                                            if (!w.tickle()) {
                                                w.append(t, "  " + c.HisHer() + " only movement is ");
                                            }
                                            else {
                                                w.append(t, "  All eyes are drawn to ");
                                            }
                                            if (!gender.equals("female")) {
                                                w.append(t, "the spurting of " + c.hisHer() + " penis as you continue to milk it with your countless hands.");
                                            }
                                            else {
                                                w.append(t, "the reflexive bucking of " + c.hisHer() + " hips into the pavement as you knead " + c.hisHer() + " breasts, triggering another orgasm.");
                                            }
                                            return;
                                        }
                                    }
                                    w.append(t, "  " + c.HeShe() + "'s completely defenseless as you resume ");
                                    if (!gender.equals("female")) {
                                        w.append(t, "roughly playing with " + c.hisHer() + " penis.");
                                    }
                                    else {
                                        w.append(t, "pinching " + c.hisHer() + " nipples and rubbing between " + c.hisHer() + " legs.");
                                    }
                                    return;
                                }
                            }
                            Label_31128: {
                                if (c.getHATELevel() >= 3) {
                                    if (!vVirg) {
                                        break Label_31128;
                                    }
                                }
                                if (w.getBodyStatus()[19]) {
                                    if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                                        break Label_31128;
                                    }
                                }
                                if (!w.getBodyStatus()[3]) {
                                    w.append(t, "  " + c.HeShe() + " barely even has the energy to struggle as you position your cock between " + c.hisHer() + " legs.");
                                    return;
                                }
                                w.append(t, "  " + c.HeShe() + " barely even has the energy to struggle as your mouths resume biting down on " + c.himHer() + ".");
                                return;
                            }
                            w.append(t, "  " + c.HeShe() + " barely even has the energy to scream as you shove ");
                            if (!w.getBodyStatus()[19]) {
                                w.append(t, "one of your tongues back ");
                            }
                            else {
                                w.append(t, "your cock back ");
                            }
                            if (!gender.equals("male")) {
                                w.append(t, "into " + c.hisHer() + " pussy.");
                            }
                            else {
                                w.append(t, "up " + c.hisHer() + " ass.");
                            }
                        }
                    }
                    else {
                        if (!w.getBodyStatus()[5]) {
                            if (confidence <= 66) {
                                if (confidence <= 33) {
                                    w.append(t, String.valueOf(mainName) + " sobs and tries to curl up into a ball, ashamed at " + c.hisHer() + " inability to ");
                                }
                                else if (!w.tickle()) {
                                    w.append(t, String.valueOf(mainName) + " gasps and thrashes in pain, finding it difficult to ");
                                }
                                else {
                                    w.append(t, String.valueOf(mainName) + " gasps and thrashes, finding it difficult to ");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(mainName) + " bites " + c.hisHer() + " lip and fights to free " + c.himHer() + "self, determined to ");
                            }
                        }
                        else if (confidence <= 66) {
                            if (confidence <= 33) {
                                if (!w.tickle()) {
                                    w.append(t, String.valueOf(mainName) + " sobs in pain at your sharp claws and in shame at " + c.hisHer() + " inability to resist them, desperately wanting to ");
                                }
                                else {
                                    w.append(t, String.valueOf(mainName) + " pulls weakly at the claws holding " + c.himHer() + " down, ashamed at " + c.hisHer() + " inability to ");
                                }
                            }
                            else if (!w.tickle()) {
                                w.append(t, String.valueOf(mainName) + " gasps and thrashes in pain as your claws dig into " + c.hisHer() + " skin, finding it difficult to ");
                            }
                            else {
                                w.append(t, String.valueOf(mainName) + " gasps and thrashes as your claws dig into " + c.hisHer() + " skin, finding it difficult to ");
                            }
                        }
                        else {
                            w.append(t, String.valueOf(mainName) + " bites " + c.hisHer() + " lip and fights to free " + c.himHer() + "self from your claws, determined to ");
                        }
                        if (c.getINJULevel() >= 3) {
                            if (morality <= 66) {
                                if (morality <= 33) {
                                    if (!w.tickle()) {
                                        if (!gender.equals("male")) {
                                            w.append(t, "escape and get revenge for the pain inflicted by your " + fist + " inside " + c.himHer() + ".  ");
                                        }
                                        else {
                                            w.append(t, "escape and get revenge for the pain you're inflicting on " + c.hisHer() + " most sensitive parts.  ");
                                        }
                                    }
                                    else {
                                        w.append(t, "escape and get revenge for the humiliation of being forced to laugh like this.  ");
                                    }
                                }
                                else if (!w.tickle()) {
                                    if (!gender.equals("male")) {
                                        if (!w.getBodyStatus()[3]) {
                                            w.append(t, "escape your brutal fisting.  ");
                                        }
                                        else {
                                            w.append(t, "escape your brutal violation of " + c.hisHer() + " ass.  ");
                                        }
                                    }
                                    else {
                                        w.append(t, "escape your grip on " + c.hisHer() + " nether regions.  ");
                                    }
                                }
                                else {
                                    w.append(t, "control " + c.hisHer() + " laughter.  ");
                                }
                            }
                            else if (!w.tickle()) {
                                if (!gender.equals("male")) {
                                    w.append(t, "overcome the pain of the " + fist + " inside " + c.himHer() + " and get back to helping the others.  ");
                                }
                                else {
                                    w.append(t, "overcome the pain of " + c.hisHer() + " most sensitive place being grabbed and get back to helping the others.  ");
                                }
                            }
                            else {
                                w.append(t, "stop laughing and go help the innocents who are in danger.  ");
                            }
                        }
                        else if (morality <= 66) {
                            if (morality <= 33) {
                                if (!w.tickle()) {
                                    w.append(t, "get you back for hurting " + c.himHer() + " like this.  ");
                                }
                                else {
                                    w.append(t, "get you back for toying with " + c.himHer() + " like this.  ");
                                }
                            }
                            else {
                                w.append(t, "escape the torture you're inflicting on " + c.himHer() + ".  ");
                            }
                        }
                        else {
                            w.append(t, "escape and get back to helping the others.  ");
                        }
                        if (c.getEXPOLevel() >= 3) {
                            if (!modest) {
                                if (c.getINJULevel() >= 3) {
                                    if (!w.tickle()) {
                                        if (!gender.equals("male")) {
                                            w.append(t, "You pull " + c.hisHer() + " legs further apart so that the watching cameras get a good look at how you've pushed yourself inside " + c.himHer());
                                        }
                                        else {
                                            w.append(t, "You pull " + c.hisHer() + " legs further apart so that the watching cameras get a good look at how you're pulling on " + c.hisHer() + " testicles hard enough to stretch them out");
                                        }
                                    }
                                    else {
                                        w.append(t, "You pull " + c.hisHer() + " spasming legs further apart so that the watching cameras can see everything");
                                    }
                                }
                                else {
                                    w.append(t, "You pull " + c.hisHer() + " legs in different directions in order to give the watching cameras a clear shot of " + c.hisHer() + " bared pussy");
                                }
                                if (!w.getBodyStatus()[6]) {
                                    if (innocence <= 66) {
                                        if (innocence <= 33) {
                                            w.append(t, ", and the realization of just how pathetic " + c.heShe() + " must look makes " + c.himHer() + " shudder.");
                                        }
                                        else {
                                            w.append(t, ", deepening " + c.hisHer() + " humiliation.");
                                        }
                                    }
                                    else {
                                        w.append(t, ", and the feeling of so many eyes watching makes it all even worse.");
                                    }
                                }
                                else if (innocence <= 66) {
                                    if (innocence <= 33) {
                                        w.append(t, ", and the realization that " + c.hisHer() + " " + bottomDesc + " being dissolved has left " + c.himHer() + " without a scrap of modesty makes " + c.himHer() + " shudder.");
                                    }
                                    else {
                                        w.append(t, ", and the fact that your slime has dissolved " + c.hisHer() + " " + bottomDesc + " only deepens " + c.hisHer() + " humiliation.");
                                    }
                                }
                                else {
                                    w.append(t, ", and since your slime has dissolved " + c.hisHer() + " " + bottomDesc + ", the feeling of so many eyes watching makes it all even worse.");
                                }
                            }
                            else {
                                if (c.getINJULevel() >= 3) {
                                    if (!w.tickle()) {
                                        if (!gender.equals("male")) {
                                            w.append(t, "You pull " + c.hisHer() + " legs further apart in order to push yourself even deeper");
                                        }
                                        else {
                                            w.append(t, "You spread " + c.hisHer() + " legs further apart and pull even harder on " + c.hisHer() + " testicles");
                                        }
                                    }
                                    else {
                                        w.append(t, "You pull " + c.hisHer() + " limbs in different directions, overpowering " + c.hisHer() + " reflexive efforts to curl up and protect " + c.himHer() + "self");
                                    }
                                }
                                else {
                                    w.append(t, "You pull " + c.hisHer() + " legs in different directions");
                                }
                                if (!w.tickle()) {
                                    if (innocence <= 66) {
                                        if (innocence <= 33) {
                                            w.append(t, ", and while " + c.heShe() + " knows that " + c.hisHer() + " shredded " + bottomDesc + " and lack of panties mean that the spectators below can see everything, " + c.heShe() + "'s in too much agony to care.");
                                        }
                                        else {
                                            w.append(t, ", and with " + c.hisHer() + " shredded " + bottomDesc + " and lack of panties, the position is especially humiliating.");
                                        }
                                    }
                                    else {
                                        w.append(t, ", and the agony is so great that " + c.heShe() + " doesn't even mentally register that " + c.hisHer() + " shredded " + bottomDesc + " and lack of panties mean that " + c.heShe() + "'s completely exposed to anyone watching below.");
                                    }
                                }
                                else if (innocence <= 66) {
                                    if (innocence <= 33) {
                                        w.append(t, ", and while " + c.heShe() + " knows that " + c.hisHer() + " shredded " + bottomDesc + " and lack of panties mean that the spectators below can see everything, " + c.heShe() + " can't actually do anything about it.");
                                    }
                                    else {
                                        w.append(t, ", and with " + c.hisHer() + " shredded " + bottomDesc + " and lack of panties, the position is especially humiliating.");
                                    }
                                }
                                else {
                                    w.append(t, ", and " + c.heShe() + " finds the position so distracting that " + c.heShe() + " doesn't even mentally register that " + c.hisHer() + " shredded " + bottomDesc + " and lack of panties mean that " + c.heShe() + "'s completely exposed to anyone watching below.");
                                }
                                if (w.getBodyStatus()[6]) {
                                    w.append(t, "  Your slime is dissolving what's left by the moment.");
                                }
                            }
                        }
                        else {
                            if (c.getINJULevel() >= 3) {
                                if (!w.tickle()) {
                                    if (!gender.equals("male")) {
                                        w.append(t, "You pull " + c.hisHer() + " legs further apart in order to push yourself even deeper");
                                    }
                                    else {
                                        w.append(t, "You spread " + c.hisHer() + " legs further apart and pull even harder on " + c.hisHer() + " testicles");
                                    }
                                }
                                else {
                                    w.append(t, "You pull " + c.hisHer() + " limbs in different directions, overpowering " + c.hisHer() + " reflexive efforts to curl up and protect " + c.himHer() + "self");
                                }
                            }
                            else {
                                w.append(t, "You pull " + c.hisHer() + " legs in different directions");
                            }
                            if (!w.tickle()) {
                                if (innocence <= 66) {
                                    if (innocence <= 33) {
                                        w.append(t, ", and even though " + c.heShe() + " knows that something like this can't kill one of the Chosen, a part of " + c.himHer() + " wishes that it would.");
                                    }
                                    else {
                                        w.append(t, ", and another wave of agony causes " + c.himHer() + " to choke and sputter.");
                                    }
                                }
                                else {
                                    w.append(t, ", and the intense agony makes " + c.himHer() + " wonder whether " + c.heShe() + "'ll be split in two.");
                                }
                            }
                            else if (innocence <= 66) {
                                if (innocence <= 33) {
                                    w.append(t, ", and it takes considerable effort for " + c.himHer() + " to remind " + c.himHer() + "self that the vulnerable position ultimately changes nothing.");
                                }
                                else {
                                    w.append(t, ", and even though " + c.heShe() + " knows " + c.hisHer() + " body is practically invincible, " + c.heShe() + " can't shake the instinctive feeling of vulnerability.");
                                }
                            }
                            else {
                                w.append(t, ", and " + c.heShe() + " squirms uselessly in an effort to escape the vulnerable position.");
                            }
                            if (w.getBodyStatus()[6]) {
                                w.append(t, "  Furthermore, contact with your slimy body is dissolving " + c.hisHer() + " clothes, which has the potential to make the position incredibly embarrassing.");
                            }
                        }
                        if (!w.getBodyStatus()[3]) {
                            if (!w.getBodyStatus()[19]) {
                                if (!w.getBodyStatus()[4]) {
                                    if (!w.getBodyStatus()[20]) {
                                        return;
                                    }
                                }
                                w.append(t, "  " + c.HeShe() + "'s completely unable to hide ");
                                Label_29593: {
                                    if (c.getPLEALevel() >= 3) {
                                        if (!cVirg) {
                                            if (c.getEXPOLevel() < 3) {
                                                if (!gender.equals("female")) {
                                                    w.append(t, String.valueOf(c.hisHer()) + " cum");
                                                }
                                                else {
                                                    w.append(t, String.valueOf(c.hisHer()) + " wetness");
                                                }
                                                w.append(t, " dripping down from under " + c.hisHer() + " torn " + bottomDesc);
                                            }
                                            else if (!gender.equals("female")) {
                                                w.append(t, String.valueOf(c.hisHer()) + " cum spurting into the air as you steadily stroke " + c.hisHer() + " cock");
                                            }
                                            else {
                                                w.append(t, "the way " + c.heShe() + " squirts in orgasm as you spread " + c.hisHer() + " lower lips wide open and fondle " + c.hisHer() + " clit");
                                            }
                                            break Label_29593;
                                        }
                                    }
                                    w.append(t, "the pleasure " + c.heShe() + "'s feeling from your rough fondling");
                                }
                                if (!w.getBodyStatus()[20]) {
                                    w.append(t, ".");
                                    return;
                                }
                                w.append(t, ", enhanced by your hypnotic spores.");
                                return;
                            }
                        }
                        Label_28723: {
                            if (c.getHATELevel() >= 3) {
                                if (!vVirg) {
                                    break Label_28723;
                                }
                            }
                            if (w.getBodyStatus()[19]) {
                                if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                                    break Label_28723;
                                }
                            }
                            if (w.getBodyStatus()[3]) {
                                w.append(t, "  The humiliation is enhanced by the way that your mouths laugh at " + c.himHer() + " and run their tongues across " + c.hisHer() + " body until " + c.hisHer() + " exposed skin glistens with sweat and saliva.");
                                return;
                            }
                            w.append(t, "  The humiliation is enhanced by the way that you rub your oversized cock ");
                            if (!gender.equals("male")) {
                                w.append(t, "against " + c.hisHer() + " slit.");
                                return;
                            }
                            w.append(t, "against " + c.hisHer() + " ass.");
                            return;
                        }
                        if (c.getINJULevel() >= 3) {
                            if (!gender.equals("male")) {
                                if (!w.tickle()) {
                                    if (!w.getBodyStatus()[19]) {
                                        w.append(t, "  Your tongues in " + c.hisHer() + " ass and pussy both thrash against each other through " + c.hisHer() + " internal walls.");
                                        return;
                                    }
                                    w.append(t, "  Your move your hand inside " + c.hisHer() + " ass to further stimulate your cock ejaculating into " + c.hisHer() + " womb through " + c.hisHer() + " internal walls.");
                                    return;
                                }
                            }
                        }
                        w.append(t, "  The position allows you to fuck " + c.hisHer() + " ");
                        if (!gender.equals("male")) {
                            w.append(t, "pussy");
                        }
                        else {
                            w.append(t, "ass");
                        }
                        w.append(t, " even more deeply with your ");
                        if (!w.getBodyStatus()[19]) {
                            w.append(t, "oversized tongue.");
                        }
                        else {
                            w.append(t, "oversized cock.");
                        }
                    }
                }
            }
            else if (captureProgression % 3 != 1) {
                if (captureProgression % 3 != 2) {
                    if (captureProgression % 3 == 0) {
                        if (morality <= 66) {
                            if (morality <= 33) {
                                w.append(t, String.valueOf(mainName) + " fights " + c.hisHer() + " way to the surface of the aphrodisiac fluid, aiming to escape and launch a counterattack against your body");
                            }
                            else {
                                w.append(t, String.valueOf(mainName) + " manages to struggle to the surface of the aphrodisiac fluid and start climbing out of your body");
                            }
                        }
                        else {
                            w.append(t, String.valueOf(mainName) + "'s concern for " + c.hisHer() + " friends gives " + c.himHer() + " the strength to struggle " + c.hisHer() + " way to the surface of the aphrodisiac fluid and start climbing out of your body");
                        }
                        if (!w.getBodyStatus()[20]) {
                            if (!w.getBodyStatus()[4]) {
                                w.append(t, ", but ");
                            }
                            else {
                                w.append(t, ".  The breath of fresh air quickly dispels " + c.hisHer() + " aphrodisiac-induced mental haze, but ");
                            }
                        }
                        else if (!hypnotized) {
                            w.append(t, ".  The breath of fresh air isn't enough to fully dispel your powerful hypnotic effects, and ");
                        }
                        else {
                            w.append(t, ".  The breath of fresh air only gives " + c.himHer() + " the false impression of mental clarity, and ");
                        }
                        if (c.getPLEALevel() >= 3) {
                            if (confidence <= 66) {
                                if (confidence <= 33) {
                                    w.append(t, String.valueOf(c.heShe()) + " stops with a pathetic scream, orgasming");
                                }
                                else {
                                    w.append(t, "then " + c.heShe() + " abruptly stops, trembling and moaning in orgasm");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.hisHer()) + " determined extermination melts with an orgasmic cry");
                            }
                        }
                        else if (confidence <= 66) {
                            if (confidence <= 33) {
                                if (!w.tickle()) {
                                    w.append(t, String.valueOf(c.heShe()) + " stops abruptly with a cry of pain");
                                }
                                else {
                                    w.append(t, String.valueOf(c.heShe()) + " abruptly stops with an undignified yelp");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.heShe()) + " stops short");
                            }
                        }
                        else {
                            w.append(t, String.valueOf(c.hisHer()) + " determined charge is stopped short");
                        }
                        if (!w.tickle()) {
                            if (c.getINJULevel() >= 3) {
                                if (!aVirg) {
                                    if (!w.getBodyStatus()[5]) {
                                        if (!gender.equals("female")) {
                                            if (!gender.equals("male")) {
                                                w.append(t, " as " + c.heShe() + " feels a large sphere pop out of " + c.hisHer() + " butt - just one of the inflated bumps lining the tentacle you previously shoved up " + c.hisHer() + " ass.  ");
                                                if (c.getPLEALevel() >= 3) {
                                                    w.append(t, "Another spurt of cum emerges from " + c.hisHer() + " cock as the stimulation pushes " + c.himHer() + " over the edge into another orgasm.  ");
                                                }
                                            }
                                            else {
                                                w.append(t, " as the thin, durable tendril binding " + c.hisHer() + " testicles is pulled taut.  ");
                                                if (c.getPLEALevel() >= 3) {
                                                    w.append(t, "Already on the brink of another orgasm, the stimulation pushes " + c.himHer() + " over the edge, but " + c.heShe() + " can't actually release any cum like this.  ");
                                                }
                                            }
                                        }
                                        else {
                                            w.append(t, " as " + c.heShe() + " feels a large sphere pop out of " + c.hisHer() + " butt - just one of the inflated bumps lining the tentacle you previously shoved up " + c.hisHer() + " ass.  ");
                                        }
                                    }
                                    else if (!gender.equals("male")) {
                                        w.append(t, " as the enormous tentacle penetrating " + c.hisHer() + " ass all the way to " + c.hisHer() + " intestines is pulled taut.  ");
                                        if (c.getPLEALevel() >= 3) {
                                            if (gender.equals("futanari")) {
                                                w.append(t, "Another spurt of cum emerges from " + c.hisHer() + " cock as the stimulation pushes " + c.himHer() + " over the edge into another orgasm.  ");
                                            }
                                        }
                                    }
                                    else {
                                        w.append(t, " as the ribbed tentacle penetrating " + c.hisHer() + " urethra is pulled taut.  ");
                                        if (c.getPLEALevel() >= 3) {
                                            w.append(t, "Already on the brink of another orgasm, the stimulation pushes " + c.himHer() + " over the edge, but " + c.heShe() + " can't actually release any cum like this.  ");
                                        }
                                    }
                                    if (dignity <= 66) {
                                        if (dignity <= 33) {
                                            if (!gender.equals("male")) {
                                                w.append(t, String.valueOf(c.HeShe()) + " grunts and moans as " + c.heShe() + " tries to resist the stimulation and pull the others out, but by the time " + c.heShe() + "'s halfway done, you've already wrapped more tendrils around " + c.hisHer() + " limbs and dragged " + c.himHer() + " back to your entrance.");
                                            }
                                            else {
                                                w.append(t, String.valueOf(c.HeShe()) + " grunts and moans as " + c.heShe() + " tries to resist the stimulation and untangle " + c.himHer() + "self, but by the time " + c.heShe() + "'s halfway done, you've already wrapped more tendrils around " + c.hisHer() + " limbs and dragged " + c.himHer() + " back to your entrance.");
                                            }
                                        }
                                        else {
                                            w.append(t, String.valueOf(c.HeShe()) + " finds it impossible to resist the tentacle's pull as it brings " + c.himHer() + " back to you.");
                                        }
                                    }
                                    else if (!gender.equals("male")) {
                                        w.append(t, "The embarrassment of being seen with something like that coming out of " + c.himHer() + " drains " + c.hisHer() + " strength and allows you to drag " + c.himHer() + " back toward you.");
                                    }
                                    else {
                                        w.append(t, "The embarrassment of being seen in such a pitiful state drains " + c.hisHer() + " strength and allows you to drag " + c.himHer() + " back toward you.");
                                    }
                                }
                                else {
                                    if (!w.getBodyStatus()[5]) {
                                        if (!gender.equals("female")) {
                                            if (c.getPLEALevel() >= 3) {
                                                w.append(t, " as the hollow tentacle envoloping " + c.hisHer() + " penis is pulled taut, milking out another dribble of cum.  ");
                                            }
                                            else {
                                                w.append(t, " as the hollow tentacle enveloping " + c.hisHer() + " penis is pulled taut.  ");
                                            }
                                        }
                                        else {
                                            w.append(t, " as the thin, durable tentacle wrapped around " + c.hisHer() + " clit is pulled taut.  ");
                                        }
                                    }
                                    else if (!gender.equals("female")) {
                                        w.append(t, " as the thorned tentacle wrapped around " + c.hisHer() + " penis is pulled taut.  ");
                                    }
                                    else {
                                        w.append(t, " as the thorned tentacle wrapped around " + c.hisHer() + " body is pulled tight at the crotch.  ");
                                    }
                                    if (dignity <= 66) {
                                        if (dignity <= 33) {
                                            w.append(t, String.valueOf(c.HeShe()) + " struggles to pull away, but with " + c.hisHer() + " injuries weakening " + c.himHer() + ", " + c.heShe() + " accomplishes little more than stimulating " + c.himHer() + "self further as you pull " + c.himHer() + " back toward you.");
                                        }
                                        else {
                                            w.append(t, "Combined with " + c.hisHer() + " existing injuries, this makes it trivially easy to reel " + c.himHer() + " back inside.");
                                        }
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.HeShe()) + " knows " + c.heShe() + "'s in no condition to pull away like this, so " + c.heShe() + " opts not to make an even bigger fool of " + c.himHer() + "self and doesn't resist as you capture " + c.himHer() + " again.");
                                    }
                                }
                            }
                            else {
                                if (!w.getBodyStatus()[5]) {
                                    if (!gender.equals("female")) {
                                        if (c.getPLEALevel() >= 3) {
                                            w.append(t, " as the hollow tentacle envoloping " + c.hisHer() + " penis is pulled taut, milking out another dribble of cum.  ");
                                        }
                                        else {
                                            w.append(t, " as the hollow tentacle enveloping " + c.hisHer() + " penis is pulled taut.  ");
                                        }
                                    }
                                    else {
                                        w.append(t, " as the thin, durable tentacle wrapped around " + c.hisHer() + " clit is pulled taut.  ");
                                    }
                                }
                                else if (!gender.equals("female")) {
                                    w.append(t, " as the thorned tentacle wrapped around " + c.hisHer() + " penis is pulled taut.  ");
                                }
                                else {
                                    w.append(t, " as the thorned tentacle wrapped around " + c.hisHer() + " body is pulled tight at the crotch.  ");
                                }
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, String.valueOf(c.HeShe()) + " tries to fight the pleasure and get away, but " + c.hisHer() + " body won't obey " + c.himHer() + ", and you have no trouble wrapping more tendrils around " + c.hisHer() + " body to recapture " + c.himHer() + ".");
                                    }
                                    else {
                                        w.append(t, "The overwhelming stimulation drains the fight from " + c.hisHer() + " body, making it easy for you to secure " + c.himHer() + " with more and more tendrils.");
                                    }
                                }
                                else {
                                    w.append(t, "Distracted by " + c.hisHer() + " attempt to resist the pleasure, " + c.heShe() + " is powerless to stop you from wrapping more tendrils around " + c.hisHer() + " body to keep " + c.himHer() + " from getting away.");
                                }
                            }
                        }
                        else {
                            Label_23063: {
                                if (c.getINJULevel() >= 3) {
                                    if (!aVirg) {
                                        if (!w.getBodyStatus()[5]) {
                                            if (c.getPLEALevel() >= 3) {
                                                w.append(t, " when the bumpy, bristled tentacles wrapped around " + c.hisHer() + " armpits, feet, and crotch slide against " + c.himHer());
                                            }
                                            else {
                                                Label_22828: {
                                                    if (c.getEXPOLevel() < 1) {
                                                        if (!feetType.equals("none")) {
                                                            w.append(t, " when the small tendrils you've slid into " + c.hisHer() + " " + feetType + " abruptly start tickling the sensitive arches of " + c.hisHer() + " feet");
                                                            break Label_22828;
                                                        }
                                                    }
                                                    w.append(t, " when your tendrils seize " + c.hisHer() + " ankles and start forcefully tickling the sensitive arches of " + c.hisHer() + " bare feet");
                                                }
                                            }
                                            w.append(t, ".  " + c.HeShe() + " squirms and giggles uncontrollably");
                                        }
                                        else if (c.getPLEALevel() >= 3) {
                                            w.append(t, " when " + c.heShe() + " feels the gentle breeze outside ");
                                            if (!gender.equals("female")) {
                                                w.append(t, "making " + c.hisHer() + " penis twitch and release another dribble of cum");
                                            }
                                            else {
                                                w.append(t, "caressing " + c.hisHer() + " crotch");
                                            }
                                            w.append(t, ".  The rest of " + c.hisHer() + " body has been rendered equally sensitive by your treatment, and while it won't last forever, for the time being " + c.heShe() + "'s paralyzed by alternating giggles and orgasming spasms");
                                        }
                                        else {
                                            w.append(t, " when the gentle breeze across " + c.hisHer() + " skin is enough to make " + c.himHer() + " feel like you're still tickling " + c.himHer() + ".  " + c.HeShe() + " squirms and giggles uncontrollably");
                                        }
                                        if (dignity > 66) {
                                            w.append(t, ", so embarrassed by " + c.hisHer() + " body's reaction that " + c.heShe() + " can't muster the willpower to go back out onto the battlefield.");
                                            break Label_23063;
                                        }
                                        if (dignity <= 33) {
                                            w.append(t, ", too caught up in the sensations to spare a thought for how foolish " + c.heShe() + " looks.");
                                            break Label_23063;
                                        }
                                        w.append(t, ", no matter how " + c.heShe() + " tries to control " + c.himHer() + "self.");
                                        break Label_23063;
                                    }
                                }
                                if (!w.getBodyStatus()[5]) {
                                    if (c.getPLEALevel() >= 3) {
                                        w.append(t, " when " + c.heShe() + " ends up pulling " + c.himHer() + "self against the bumpy tendril between " + c.hisHer() + " legs");
                                    }
                                    else {
                                        Label_22110: {
                                            if (c.getEXPOLevel() < 1) {
                                                if (!feetType.equals("none")) {
                                                    w.append(t, " when the small tendrils you've slid into " + c.hisHer() + " " + feetType + " abruptly start tickling the sensitive arches of " + c.hisHer() + " feet");
                                                    break Label_22110;
                                                }
                                            }
                                            w.append(t, " when your tendrils seize " + c.hisHer() + " ankles and start forcefully tickling the sensitive arches of " + c.hisHer() + " bare feet");
                                        }
                                    }
                                    w.append(t, ".  " + c.HisHer() + " body has been rendered completely helpless due to its enhanced sensitivity, and ");
                                }
                                else {
                                    if (c.getPLEALevel() >= 3) {
                                        w.append(t, " when " + c.heShe() + " feels the gentle breeze outside ");
                                        if (!gender.equals("female")) {
                                            w.append(t, "making " + c.hisHer() + " penis spasm and release another dribble of cum.  ");
                                        }
                                        else {
                                            w.append(t, "caressing " + c.hisHer() + " crotch.  ");
                                        }
                                    }
                                    else {
                                        w.append(t, " when the feeling of the cold air on " + c.hisHer() + " skin hits " + c.himHer() + " so strongly that " + c.heShe() + " can't even move.  ");
                                    }
                                    w.append(t, "Even though the way your ear-tentacles rewrote " + c.hisHer() + " nervous system won't last forever, ");
                                }
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, "there's no way " + c.heShe() + " can fight you off like this, but " + c.heShe() + " keeps trying, making a fool of " + c.himHer() + "self in the process.");
                                    }
                                    else {
                                        w.append(t, "there's nothing " + c.heShe() + " can do to stop you from dragging " + c.himHer() + " back inside.");
                                    }
                                }
                                else {
                                    w.append(t, "the realization that everyone can see " + c.hisHer() + " weakness makes " + c.himHer() + " want to just give up and hide.");
                                }
                            }
                        }
                        if (!w.getBodyStatus()[3]) {
                            if (w.getBodyStatus()[6]) {
                                if (c.getEXPOLevel() >= 3) {
                                    if (!modest) {
                                        w.append(t, "  Through your transparent body, " + c.hisHer() + " embarrassing predicament is completely visible.");
                                        return;
                                    }
                                }
                                w.append(t, "  " + c.HisHer() + " brief defiance accomplished nothing more than tearing apart the clothes weakened by exposure to your slime.");
                            }
                        }
                        else {
                            if (c.getHATELevel() >= 3) {
                                if (!vVirg) {
                                    w.append(t, "  Finally, you cement " + c.hisHer() + " recapture by ramming another of your tentacles into " + c.hisHer() + " ");
                                    if (!gender.equals("male")) {
                                        w.append(t, "pussy");
                                    }
                                    else {
                                        w.append(t, "ass");
                                    }
                                    w.append(t, ", fucking " + c.himHer() + " with slow, steady strokes as you pull " + c.himHer() + " back inside.");
                                    return;
                                }
                            }
                            w.append(t, "  Before long, " + c.hisHer() + " struggles weaken once again as your hallucinogenic aphrodisiac takes hold.");
                        }
                    }
                }
                else {
                    String otherOne = "";
                    String otherTwo = "";
                    for (int i = 0; i < 3; ++i) {
                        if (w.getCast()[i] != null) {
                            if (w.getCast()[i] != c) {
                                if (otherOne.length() != 0) {
                                    otherTwo = w.getCast()[i].getMainName();
                                }
                                else {
                                    otherOne = w.getCast()[i].getMainName();
                                }
                            }
                        }
                    }
                    if (innocence <= 66) {
                        if (innocence <= 33) {
                            w.append(t, "The liquid inside your body causes " + mainName + " to hallucinate that " + c.heShe() + "'s being groped by " + otherOne + " and " + otherTwo + ", and while " + c.heShe() + " knows that's impossible, it still has a subconscious effect on the way that " + c.heShe() + " thinks.  ");
                        }
                        else {
                            w.append(t, "With " + c.hisHer() + " mind addled by the aphrodisiac filling your body, " + mainName + " finds it difficult to discern whether the image " + c.heShe() + " sees of " + otherOne + " and " + otherTwo + " running their hands over " + c.hisHer() + " body is real or not.  ");
                        }
                    }
                    else {
                        w.append(t, "Immersed in the aphrodisiac within your body, " + mainName + " hallucinates that " + c.heShe() + "'s being molested by " + otherOne + " and " + otherTwo + ".  ");
                    }
                    if (w.getBodyStatus()[4]) {
                        w.append(t, "The warm, fuzzy feelings running through " + c.hisHer() + " head make it hard to remember that " + c.heShe() + "'s supposed to be fighting right now.  ");
                    }
                    if (c.getPLEALevel() >= 3) {
                        if (dignity <= 66) {
                            if (dignity <= 33) {
                                w.append(t, String.valueOf(c.HeShe()) + " can't find the willpower to resist, embracing the illusions and shamelessly grinding " + c.hisHer() + " body against them.  ");
                            }
                            else {
                                w.append(t, "In " + c.hisHer() + " eagerness to feel another orgasm, " + c.heShe() + " allows " + c.hisHer() + " legs to be spread wide open.  ");
                            }
                        }
                        else if (!w.getBodyStatus()[6]) {
                            w.append(t, "Here, shielded from the eyes of the public, " + c.heShe() + " sees no reason not to give in to the pleasure, bucking " + c.hisHer() + " hips wildly.  ");
                        }
                        else {
                            w.append(t, "With " + c.hisHer() + " mind and " + c.hisHer() + " view of the outside world distorted by your hallucinogens, " + c.heShe() + " briefly forgets just how visible " + c.heShe() + " is to everyone watching, and " + c.heShe() + " freely bucks " + c.hisHer() + " hips in obvious pleasure.  ");
                        }
                    }
                    else if (dignity <= 66) {
                        if (dignity <= 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " barely retains enough sanity to remember that " + c.heShe() + " needs to resist the pleasure of their kisses and caresses in order to escape.  ");
                        }
                        else if (!gender.equals("female")) {
                            w.append(t, String.valueOf(c.HeShe()) + " tries to ignore the feeling of them running their tongues up and down " + c.hisHer() + " body, kissing and licking " + c.hisHer() + " nipples and cock.  ");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " tries to ignore the feeling of them running their tongues up and down " + c.hisHer() + " body, kissing and licking " + c.hisHer() + " nipples and clit.  ");
                        }
                    }
                    else if (!gender.equals("female")) {
                        w.append(t, "Their fingers (actually your tentacles) pinching " + c.hisHer() + " nipples and fondling " + c.hisHer() + " cock feel stronger than ever, but " + c.hisHer() + " embarrassment causes " + c.himHer() + " to resist the pleasure.  ");
                    }
                    else {
                        w.append(t, "Their fingers (actually your tentacles) fondling and pinching " + c.hisHer() + " nipples and clit feel stronger than ever, but " + c.hisHer() + " embarrassment causes " + c.himHer() + " to resist the pleasure.  ");
                    }
                    if (!w.tickle()) {
                        if (c.getINJULevel() >= 3) {
                            if (!aVirg) {
                                if (c.getPLEALevel() >= 3) {
                                    if (!gender.equals("female")) {
                                        if (!gender.equals("male")) {
                                            w.append(t, "The feeling of " + otherOne + "'s fingers invading " + c.hisHer() + " anus forces out another orgasm, and " + otherTwo + " deepthroats " + c.hisHer() + " cock to suck out every last drop of cum.  ");
                                        }
                                        else {
                                            w.append(t, "The feeling of " + otherOne + " deepthroating " + c.hisHer() + " cock makes " + mainName + " start to cum, but then " + otherTwo + " cruelly pinches the base of " + c.hisHer() + " cock, giggling and nibbling " + c.hisHer() + " ear as the release " + c.heShe() + " craves remains out of reach.  ");
                                        }
                                    }
                                    else {
                                        w.append(t, "The feeling of " + otherOne + "'s fingers invading " + c.hisHer() + " anus forces out another orgasm, and " + otherTwo + " pinches and twists " + c.hisHer() + " clit to draw it out for several agonizing seconds.  ");
                                    }
                                    if (w.getBodyStatus()[5]) {
                                        w.append(t, String.valueOf(c.HisHer()) + " eyes roll into the back of " + c.hisHer() + " head as the conflicting sensations overwhelm " + c.himHer() + ".  ");
                                    }
                                }
                                else if (!gender.equals("male")) {
                                    if (!w.getBodyStatus()[5]) {
                                        w.append(t, "When " + c.heShe() + " feels " + otherOne + "'s tongue invade " + c.hisHer() + " anus, " + c.heShe() + " moans into " + otherTwo + "'s mouth.  ");
                                    }
                                    else {
                                        w.append(t, "When " + c.heShe() + " feels " + otherOne + "'s entire fist begin to force its way into " + c.hisHer() + " anus, " + c.heShe() + " screams into " + otherTwo + "'s mouth. ");
                                    }
                                }
                                else if (!w.getBodyStatus()[5]) {
                                    w.append(t, "When " + c.heShe() + " feels " + otherOne + " nibble on " + c.hisHer() + " scrotum, " + c.heShe() + " moans into " + otherTwo + "'s mouth.  ");
                                }
                                else {
                                    w.append(t, "When " + c.heShe() + " feels " + otherOne + " sharply knee " + c.himHer() + " between the legs, " + c.heShe() + " screams into " + otherTwo + "'s mouth.  ");
                                }
                                w.append(t, "The rough treatment plays into " + c.hisHer() + " psychological weaknesses, as ");
                                if (morality <= 66) {
                                    if (morality <= 33) {
                                        w.append(t, String.valueOf(c.heShe()) + " knows deep down inside that " + c.heShe() + " deserves far worse.");
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.heShe()) + " feels " + c.heShe() + " deserves it for not living up to a higher moral standard.");
                                    }
                                }
                                else {
                                    w.append(t, String.valueOf(c.heShe()) + " feels that it's " + c.hisHer() + " place in the world to suffer for others' happiness.");
                                }
                            }
                            else {
                                if (c.getPLEALevel() >= 3) {
                                    if (!w.getBodyStatus()[3]) {
                                        if (!w.getBodyStatus()[5]) {
                                            w.append(t, "The stimulation seems to become more and more cruel, until finally, ");
                                        }
                                        else {
                                            w.append(t, "In reality, tentacles with blunt teeth are biting down and savaging " + c.hisHer() + " erogenous zones.  But " + c.heShe() + " feels only pleasure, and ");
                                        }
                                    }
                                    else {
                                        w.append(t, "Finally, ");
                                    }
                                    if (!gender.equals("female")) {
                                        w.append(t, "finally, as " + otherOne + " bites " + c.hisHer() + " nipple and " + otherTwo + " squeezes " + c.hisHer() + " cock, " + mainName + " cums into the fluid surrounding " + c.himHer() + ".  " + c.HeShe() + " craves more");
                                    }
                                    else {
                                        w.append(t, "as " + otherOne + " bites " + c.hisHer() + " nipple and " + otherTwo + " pinches " + c.hisHer() + " clit, " + mainName + "'s scream of climax is swallowed up by the fluid.  " + c.HeShe() + " craves more");
                                    }
                                }
                                else if (!w.getBodyStatus()[5]) {
                                    w.append(t, "The pain of " + c.hisHer() + " injuries plays into " + c.hisHer() + " fantasy");
                                }
                                else {
                                    w.append(t, "The pain of " + c.hisHer() + " injuries is strong enough to be felt even now, but " + c.hisHer() + " fantasy just incorporates it as being treated roughly");
                                }
                                if (morality <= 66) {
                                    if (morality <= 33) {
                                        w.append(t, ", as " + c.heShe() + " knows deep down inside that " + c.heShe() + " deserves far worse.");
                                    }
                                    else {
                                        w.append(t, ", as " + c.heShe() + " feels " + c.heShe() + " deserves it for not living up to a higher moral standard.");
                                    }
                                }
                                else {
                                    w.append(t, ", as " + c.heShe() + " feels that it's " + c.hisHer() + " place in the world to suffer for others' happiness.");
                                }
                            }
                        }
                        else {
                            if (c.getPLEALevel() >= 3) {
                                if (!w.getBodyStatus()[5]) {
                                    w.append(t, "Feeling " + otherOne + " sucking one nipple while " + otherTwo + " licks the other");
                                }
                                else {
                                    w.append(t, "Feeling " + otherOne + " biting one nipple while " + otherTwo + " nibbles the other");
                                }
                                if (!gender.equals("female")) {
                                    w.append(t, ", " + mainName + " cums into " + otherTwo + "'s hand, falling victim to ");
                                }
                                else {
                                    w.append(t, " and fondles " + c.hisHer() + " clit, " + mainName + " cums hard, falling victim to ");
                                }
                            }
                            else {
                                if (w.getBodyStatus()[5]) {
                                    w.append(t, "With " + c.hisHer() + " guard down, the tentacles have a much easier time abusing " + c.hisHer() + " body.  ");
                                }
                                w.append(t, "The vision exploits ");
                            }
                            if (morality <= 66) {
                                if (morality <= 33) {
                                    w.append(t, String.valueOf(c.hisHer()) + " fantasies about having the others serve " + c.himHer() + ".");
                                }
                                else {
                                    w.append(t, String.valueOf(c.hisHer()) + " budding feelings for the others.");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.hisHer()) + " deep-seated longing to get along with the others.");
                            }
                        }
                    }
                    else {
                        Label_18486: {
                            if (c.getINJULevel() >= 3) {
                                if (!aVirg) {
                                    if (!w.getBodyStatus()[5]) {
                                        if (c.getPLEALevel() >= 3) {
                                            w.append(t, otherOne);
                                            if (!gender.equals("female")) {
                                                w.append(t, " swallows " + mainName + "'s cock and drinks down " + c.hisHer() + " cum");
                                            }
                                            else {
                                                w.append(t, " earnestly licks " + mainName + "'s slit");
                                            }
                                            w.append(t, " while " + otherTwo + " tickles " + c.himHer() + " at the same time, forcing " + c.himHer() + " to squirm and laugh even as " + c.heShe() + " climaxes.");
                                        }
                                        else {
                                            w.append(t, "While " + otherOne + " tickles " + c.himHer() + " all over " + c.hisHer() + " body and forces out " + c.hisHer() + " laughter, " + otherTwo + " ");
                                            if (!gender.equals("female")) {
                                                w.append(t, "swallows " + c.hisHer() + " cock");
                                            }
                                            else {
                                                w.append(t, "hungrily licks " + c.hisHer() + " slit");
                                            }
                                            w.append(t, " and looks up pleadingly as if begging " + c.himHer() + " to cum.");
                                        }
                                    }
                                    else if (c.getPLEALevel() >= 3) {
                                        w.append(t, "They torment " + c.hisHer() + " body with vibrators, feather dusters, and spinning brushes, forcing " + c.himHer() + " to laugh wildly even as " + c.heShe() + " cums over and over again.  ");
                                    }
                                    else {
                                        w.append(t, "While " + otherOne + " uses feather dusters and spinning brushes to make " + c.himHer() + " squirm and laugh, " + otherTwo + " ");
                                        if (!gender.equals("female")) {
                                            w.append(t, "persistently pumps an onahole over " + c.hisHer() + " cock");
                                        }
                                        else {
                                            w.append(t, "presses a vibrating massager against " + c.hisHer() + " clit");
                                        }
                                        w.append(t, ", gently coaxing " + c.himHer() + " to cum.  ");
                                    }
                                    if (morality > 66) {
                                        w.append(t, "  " + mainName + " knows on some level that " + c.heShe() + "'s allowing " + c.himHer() + "self to be tired out, but it's hard to resist " + c.hisHer() + " fellow Chosen.");
                                        break Label_18486;
                                    }
                                    if (morality <= 33) {
                                        w.append(t, "  The fact that " + c.heShe() + "'s seeing " + c.hisHer() + " fellow Chosen do this, rather than having it done to " + c.himHer() + " by Demons, makes it hard for " + c.himHer() + " to feel as angry about this treatment as " + c.heShe() + " normally would.");
                                        break Label_18486;
                                    }
                                    w.append(t, "");
                                    break Label_18486;
                                }
                            }
                            if (!w.getBodyStatus()[5]) {
                                if (c.getPLEALevel() >= 3) {
                                    w.append(t, otherOne);
                                    if (!gender.equals("female")) {
                                        w.append(t, " swallows " + mainName + "'s cock and drinks down " + c.hisHer() + " cum");
                                    }
                                    else {
                                        w.append(t, " earnestly licks " + mainName + "'s slit");
                                    }
                                    w.append(t, " while " + otherTwo + " tickles " + c.himHer() + " at the same time, trying to force " + c.himHer() + " to spasm and laugh.  ");
                                }
                                else {
                                    w.append(t, "Their hands roam all over " + c.hisHer() + " body, tickling and teasing to build up the anticipation before they start stimulating " + c.himHer() + " in earnest.  ");
                                }
                            }
                            else if (c.getPLEALevel() >= 3) {
                                w.append(t, otherOne);
                                if (!gender.equals("female")) {
                                    w.append(t, " persistently pumps an onahole over " + mainName + "'s cock");
                                }
                                else {
                                    w.append(t, " presses a vibrating massager against " + mainName + "'s clit");
                                }
                                w.append(t, " to keep " + c.himHer() + " cumming while " + otherTwo + " uses feather dusters and spinning brushes all over " + c.hisHer() + " body to try to make " + c.himHer() + " laugh as well.  ");
                            }
                            else {
                                w.append(t, "They pull out vibrators, feather dusters, spinning brushes, and countless other tools designed to make " + c.himHer() + " laugh, cum, or both.  ");
                            }
                            if (morality <= 66) {
                                if (morality <= 33) {
                                    w.append(t, String.valueOf(mainName) + " tries to rely on " + c.hisHer() + " annoyance at being treated so lightly in order to resist, but " + c.heShe() + "'s already starting to break.");
                                }
                                else {
                                    w.append(t, "When " + otherTwo + " whispers in " + mainName + "'s ear that " + c.heShe() + " should just give up, " + mainName + " almost gives in.");
                                }
                            }
                            else {
                                w.append(t, "The way they whine and beg for " + mainName + " to just give in already makes it hard for " + c.himHer() + " to keep resisting.");
                            }
                        }
                    }
                    Label_20883: {
                        if (!w.getBodyStatus()[3]) {
                            if (!w.getBodyStatus()[19]) {
                                break Label_20883;
                            }
                        }
                        w.append(t, "  The scenario seems to become more and more nightmarish, " + otherOne + " and " + otherTwo + " growing Demonic features and being joined by countless Thralls who ");
                        Label_20756: {
                            if (c.getHATELevel() >= 3) {
                                if (!vVirg) {
                                    w.append(t, "start to gangbang " + c.himHer() + " while " + c.hisHer() + " allies watch and play with themselves");
                                    break Label_20756;
                                }
                            }
                            w.append(t, "abuse " + c.himHer() + " as " + c.hisHer() + " allies watch and laugh");
                        }
                        if (!w.getBodyStatus()[19]) {
                            w.append(t, ".");
                        }
                        else if (!impregnated) {
                            w.append(t, ", reflecting " + c.hisHer() + " fears that the seed inside this body will be able to turn " + c.himHer() + " into nothing more than breeding stock.");
                        }
                        else {
                            w.append(t, ", reflecting " + c.hisHer() + " insecurity about being used by the Demons as breeding stock.");
                        }
                    }
                    if (w.getBodyStatus()[6]) {
                        if (c.getEXPOLevel() >= 3) {
                            if (!modest) {
                                w.append(t, "  To the people watching " + c.himHer() + " through your transparent body, " + c.heShe() + " looks completely delirious.");
                                return;
                            }
                        }
                        w.append(t, "  " + c.HeShe() + " can't muster the willpower to fight back as they undress " + c.himHer() + ".");
                    }
                }
            }
            else {
                if (confidence <= 66) {
                    if (confidence <= 33) {
                        w.append(t, "With a startled scream, " + mainName + " is pulled all the way into your body");
                    }
                    else {
                        w.append(t, "You use your tentacles to pull " + mainName + " all the way into your body");
                    }
                }
                else {
                    w.append(t, String.valueOf(mainName) + " struggles with all " + c.hisHer() + " strength, but " + c.heShe() + " can't stop your tentacles from pulling " + c.himHer() + " completely into your body");
                }
                if (c.getPLEALevel() >= 3) {
                    if (!w.getBodyStatus()[19]) {
                        if (!w.getBodyStatus()[6]) {
                            w.append(t, ", completely submerging " + c.himHer() + " in aphrosisiac liquid that ");
                        }
                        else {
                            w.append(t, ", completely submerging " + c.himHer() + " in aphrosisiac slime that ");
                        }
                    }
                    else {
                        w.append(t, ", completely submerging " + c.himHer() + " in aphrodisiac Demon-cum that ");
                    }
                    if (morality <= 66) {
                        if (morality <= 33) {
                            if (!gender.equals("female")) {
                                w.append(t, "makes it easier for " + c.himHer() + " to convince " + c.himHer() + "self that " + c.heShe() + " might as well just give in and let out all " + c.hisHer() + " cum.  ");
                            }
                            else {
                                w.append(t, "makes it easier for " + c.himHer() + " to convince " + c.himHer() + "self that " + c.heShe() + " might as well just give in and let you use your tendrils to make " + c.himHer() + " feel even better.  ");
                            }
                        }
                        else if (!gender.equals("female")) {
                            w.append(t, "forces " + c.hisHer() + " cock to keep cumming, even to the point of becoming painful.  ");
                        }
                        else {
                            w.append(t, "intensifies the orgasm your tendrils are giving " + c.himHer() + ".  ");
                        }
                    }
                    else if (!gender.equals("female")) {
                        w.append(t, "makes it even easier for the tendrils stimulating " + c.hisHer() + " body to overcome " + c.hisHer() + " resistance and coax out more spurts of cum.  ");
                    }
                    else {
                        w.append(t, "makes it even easier for the tendrils stimulating " + c.hisHer() + " body to overcome " + c.hisHer() + " resistance and coax out another orgasm.  ");
                    }
                }
                else {
                    if (!w.getBodyStatus()[19]) {
                        if (!w.getBodyStatus()[6]) {
                            w.append(t, ", where " + c.heShe() + "'s completely submerged in aphrodisiac liquid.  ");
                        }
                        else {
                            w.append(t, ", where " + c.heShe() + "'s completely submerged in slime.  ");
                        }
                    }
                    else {
                        w.append(t, ", where " + c.heShe() + "'s completely submerged in your Demon-cum.  ");
                    }
                    if (morality <= 66) {
                        if (morality <= 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " tries to fight back, but it's hard to move through the viscous substance, and the tendrils between " + c.hisHer() + " legs continue their assault uninterrupted.  ");
                        }
                        else {
                            w.append(t, "Your tendrils spread across " + c.hisHer() + " body, tightening around " + c.hisHer() + " chest and pinching " + c.hisHer() + " nipples.  ");
                        }
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " tries to stay calm and focus on " + c.hisHer() + " mission, but the wriggling tendrils covering " + c.hisHer() + " body redouble their effort to make " + c.himHer() + " cum.  ");
                    }
                }
                if (!w.tickle()) {
                    if (c.getINJULevel() >= 3) {
                        if (!aVirg) {
                            if (c.getPLEALevel() >= 3) {
                                if (!w.getBodyStatus()[5]) {
                                    if (!gender.equals("male")) {
                                        w.append(t, "Crying out in agonized climax with every thrust of the tentacle in " + c.hisHer() + " ass, " + c.heShe() + " immediately takes in a lungful of aphrodisiac");
                                    }
                                    else {
                                        w.append(t, "Crying out in agonized climax as you use several needle-like tentacles to prick all over " + c.hisHer() + " balls, " + c.heShe() + " immediately takes in a lungful of aphrodisiac");
                                    }
                                }
                                else if (!gender.equals("male")) {
                                    w.append(t, "Crying out in agonized climax as you use an array of hooked tentacles to pull " + c.hisHer() + " asshole impossibly wide, " + c.heShe() + " immediately takes in a lungful of aphrodisiac");
                                }
                                else {
                                    w.append(t, "Crying out in agonized climax as you use a toothed sucker tentacle to bite down on " + c.hisHer() + " penis, " + c.heShe() + " immediately takes in a lungful of aphrodisiac");
                                }
                            }
                            else {
                                final String tentacle = "";
                                if (w.getBodyStatus()[5]) {
                                    w.append(t, "wickedly spined ");
                                }
                                if (!gender.equals("male")) {
                                    w.append(t, String.valueOf(c.HeShe()) + " holds " + c.hisHer() + " breath as long as " + c.heShe() + " can, but a particularly savage thrust from the " + "tentacle in " + c.hisHer() + " ass causes " + c.himHer() + " to cry out");
                                }
                                else {
                                    w.append(t, String.valueOf(c.HeShe()) + " holds " + c.hisHer() + " breath as long as " + c.heShe() + " can, but an abrupt, savage twist from your " + tentacle + "tendrils around " + c.hisHer() + " balls causes " + c.himHer() + " to cry out");
                                }
                            }
                            if (innocence <= 66) {
                                if (innocence <= 33) {
                                    w.append(t, " no matter how much " + c.heShe() + " tries to stop it.  " + c.HisHer() + " vision darkens as " + c.heShe() + " begins to drown.");
                                }
                                else {
                                    w.append(t, ", and the stinging from inside " + c.hisHer() + " chest as " + c.heShe() + " starts to drown only intesifies " + c.hisHer() + " sense of helplessness.");
                                }
                            }
                            else {
                                w.append(t, ", and " + c.hisHer() + " instinctive fear of drowning only makes it even harder to remain composed in the face of what's being done to " + c.himHer() + ".");
                            }
                        }
                        else {
                            if (!w.getBodyStatus()[5]) {
                                if (c.getPLEALevel() >= 3) {
                                    w.append(t, "Climaxing and injured, " + c.heShe() + " has no chance of holding " + c.hisHer() + " breath for long, ");
                                }
                                else {
                                    w.append(t, String.valueOf(c.HeShe()) + "'s too badly-hurt to hold " + c.hisHer() + " breath for long, ");
                                }
                            }
                            else if (c.getPLEALevel() >= 3) {
                                w.append(t, "The tentacles wrapped around " + c.hisHer() + " nipples and ");
                                if (!gender.equals("female")) {
                                    w.append(t, "penis");
                                }
                                else {
                                    w.append(t, "clit");
                                }
                                w.append(t, " continue to twist and tug the abused flesh, forcing out a scream");
                            }
                            else {
                                w.append(t, "You have " + c.himHer() + " contorted into a very uncomfortable shape, so " + c.heShe() + " can't hold " + c.hisHer() + " breath for long, ");
                            }
                            if (innocence <= 66) {
                                if (innocence <= 33) {
                                    w.append(t, "and while " + c.heShe() + " knows that " + c.hisHer() + " body can survive drowning, the pain as the aphrodisiac flows into " + c.hisHer() + " lungs reminds " + c.himHer() + " that the lack of oxygen will still damage and weaken " + c.himHer() + ".");
                                }
                                else {
                                    w.append(t, "but the pain as " + c.heShe() + " starts to drown is barely noticeable next to " + c.hisHer() + " prior injuries.");
                                }
                            }
                            else {
                                w.append(t, "and when the aphrodisiac flows into " + c.hisHer() + " lungs, " + c.heShe() + " thrashes in instinctive panic, briefly forgetting that the Chosen can survive drowning.");
                            }
                        }
                    }
                    else {
                        if (!w.getBodyStatus()[5]) {
                            if (c.getPLEALevel() >= 3) {
                                w.append(t, "The climax makes it impossible for " + c.himHer() + " to hold " + c.hisHer() + " breath, and soon " + c.heShe() + "'s drowning in the aphrosiaic");
                            }
                            else {
                                w.append(t, String.valueOf(c.HisHer()) + " gasps of unwilling pleasure draw the aphrosisiac into " + c.hisHer() + " lungs");
                            }
                        }
                        else if (c.getPLEALevel() >= 3) {
                            w.append(t, String.valueOf(c.HeShe()) + " can't hold back " + c.hisHer() + " scream as you draw out the orgasm by clamping down on " + c.hisHer() + " nipples and ");
                            if (!gender.equals("female")) {
                                w.append(t, "penis");
                            }
                            else {
                                w.append(t, "clit");
                            }
                            w.append(t, ".  The aphrodisiac flows into " + c.hisHer() + " lungs");
                        }
                        else {
                            w.append(t, "When " + c.heShe() + " manages to hold " + c.hisHer() + " breath for longer than you'd prefer, you shove a tentacle down " + c.hisHer() + " throat to apply the aphrodisiac more directly.  " + c.HeShe() + " chokes and sputters on the fluid");
                        }
                        if (innocence <= 66) {
                            if (innocence <= 33) {
                                w.append(t, ".  " + c.HeShe() + " knows that the Chosen can survive without breathing, but the lack of oxygen will still damage and weaken " + c.hisHer() + " body.");
                            }
                            else {
                                w.append(t, ", the sharp pain inside " + c.hisHer() + " chest doing little to distract from the orgasmic sensations.");
                            }
                        }
                        else {
                            w.append(t, ", causing " + c.himHer() + " to thrash in blind panic as " + c.hisHer() + " instinctive fear makes " + c.himHer() + " forget that something like this could never kill one of the Chosen.");
                        }
                    }
                }
                else {
                    Label_13542: {
                        if (c.getINJULevel() >= 3) {
                            if (!aVirg) {
                                if (!w.getBodyStatus()[5]) {
                                    if (c.getPLEALevel() >= 3) {
                                        w.append(t, "With your tendrils forcing " + c.himHer() + " to cum and laugh at the same time, there's no way " + c.heShe() + " can stop " + c.himHer() + "self from breathing in the aphrodisiac");
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.HisHer()) + " attempts to hold " + c.hisHer() + " breath are futile.  Even though " + c.heShe() + " isn't cumming yet, your tendrils tickling " + c.himHer() + " are more than sufficient to make " + c.himHer() + " laugh and breathe the aphrodisiac in");
                                    }
                                }
                                else if (c.getPLEALevel() >= 3) {
                                    w.append(t, "Then, you insert a pair of specialized tentacles into " + c.hisHer() + " ears that amplify " + c.hisHer() + " sensitivity even more, overloading " + c.hisHer() + " brain as " + c.heShe() + " tries to scream in orgasm and laugh at your incessant tickling at the same time.  Because " + c.heShe() + "'s submerged in aphrodisiac, this causes " + c.himHer() + " to breathe it in");
                                }
                                else {
                                    w.append(t, "A pair of specialized tentacles finds its way into " + c.hisHer() + " ears, hijacking " + c.hisHer() + " brain and increasing " + c.hisHer() + " sensitivity severalfold so that even the slightest touch has " + c.himHer() + " squealing in laughter.  Because " + c.heShe() + "'s submerged in aphrodisiac, this causes " + c.himHer() + " to breathe it in");
                                }
                                if (innocence > 66) {
                                    w.append(t, ", melting " + c.hisHer() + " mind into a pleasurable haze.");
                                    break Label_13542;
                                }
                                if (innocence <= 33) {
                                    w.append(t, ", and while " + c.heShe() + " knows that the Chosen don't need to breathe, " + c.heShe() + " can't help but worry about how the chemical's influence will deepen " + c.hisHer() + " predicament even further.");
                                    break Label_13542;
                                }
                                w.append(t, ", the direct contact with " + c.hisHer() + " lungs multiplying its effect on " + c.himHer() + ".");
                                break Label_13542;
                            }
                        }
                        if (!w.getBodyStatus()[5]) {
                            if (c.getPLEALevel() >= 3) {
                                w.append(t, "Climaxing and being tickled at the same time, " + c.heShe() + "'s unable to stop " + c.himHer() + "self from gasping in a lungful of the aphrodisiac, and ");
                            }
                            else {
                                w.append(t, "When " + c.heShe() + " manages to hold " + c.hisHer() + " breath too long for your liking, you redouble your tickling, and when " + c.hisHer() + " gasp of surprise causes " + c.himHer() + " to breathe in the aphrodisiac, ");
                            }
                        }
                        else if (c.getPLEALevel() >= 3) {
                            w.append(t, String.valueOf(c.HisHer()) + " gasps of pleasure draw in the aphrodisiac, and then you accelerate " + c.hisHer() + " corruption even further by inserting specialized tentacles into " + c.hisHer() + " ears.  Faced with the combination of the stimulation to " + c.hisHer() + " genitals, the pleasurable signals transmitted directly into " + c.hisHer() + " brain, and the chemicals being absorbed directly into " + c.hisHer() + " lungs, ");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " manages to hold " + c.hisHer() + " breath right up until you slide a pair of specialized tentacles right into " + c.hisHer() + " ear canals.  The burst of pleasurable sensations transmitted directly to " + c.hisHer() + " brain makes " + c.hisHer() + " face go slack, and when " + c.heShe() + " unthinkingly breathes in the aphrodisiac, ");
                        }
                        if (innocence <= 66) {
                            if (innocence <= 33) {
                                w.append(t, String.valueOf(c.hisHer()) + " rational mind quickly begins to melt into a haze of animalistic desires.");
                            }
                            else {
                                w.append(t, String.valueOf(c.heShe()) + " quickly begins to lose " + c.hisHer() + " sanity.");
                            }
                        }
                        else {
                            w.append(t, "the warm, fuzzy feelings filling " + c.hisHer() + " head make it hard to think of anything other than cumming again.");
                        }
                    }
                }
                if (!w.getBodyStatus()[6]) {
                    if (!w.getBodyStatus()[3]) {
                        if (w.getBodyStatus()[4]) {
                            if (!w.tickle()) {
                                w.append(t, "  The pain quickly fades into a haze of pleasure that blocks out the unpleasant feelings of " + c.hisHer() + " injuries and replaces them with pure bliss.");
                            }
                            else {
                                w.append(t, "  The potent substance even blocks out the discomfort that someone drowning in a liquid would normally feel.");
                            }
                        }
                    }
                    else {
                        if (c.getHATELevel() >= 3) {
                            if (!vVirg) {
                                w.append(t, "  The tentacle in " + c.hisHer() + " ");
                                if (!gender.equals("male")) {
                                    w.append(t, "pussy");
                                }
                                else {
                                    w.append(t, "ass");
                                }
                                w.append(t, " continues fucking " + c.himHer() + " with a steady rhythm, heedless of " + c.hisHer() + " suffering.");
                                return;
                            }
                        }
                        w.append(t, "  The hallucinogens cause " + c.himHer() + " to hear derisive laughter and feel rough fingers in " + c.hisHer() + " hair holding " + c.himHer() + " under the surface.");
                    }
                }
                else {
                    if (c.getEXPOLevel() >= 3) {
                        if (!modest) {
                            w.append(t, "  " + c.HeShe() + " looks almost comical, nearly naked and spasming wildly in your transparent body.");
                            return;
                        }
                    }
                    w.append(t, "  At the same time, " + c.hisHer() + " head-to-toe submersion means that " + c.hisHer() + " clothes are dissolving away even more quickly.");
                }
            }
        }
        else {
            boolean b2 = false;
            Label_0307: {
                Label_0306: {
                    if (c.getHATELevel() < 3) {
                        if (c.getImpregnationEffectiveness() >= c.impregnationReq()) {
                            if (w.getBodyStatus()[19]) {
                                break Label_0306;
                            }
                        }
                        b2 = false;
                        break Label_0307;
                    }
                }
                b2 = true;
            }
            final Boolean penetrated = b2;
            if (captureProgression % 3 != 1) {
                if (captureProgression % 3 != 2) {
                    if (captureProgression % 3 == 0) {
                        if (morality <= 66) {
                            if (morality <= 33) {
                                w.append(t, "You toy with " + mainName + ", stoking " + c.hisHer() + " hate by allowing " + c.himHer() + " to escape and crawl away for a moment before you leap onto " + c.himHer() + " again");
                            }
                            else {
                                w.append(t, String.valueOf(mainName) + " manages to escape you for a moment and start to crawl away, but you quickly catch up");
                            }
                        }
                        else {
                            w.append(t, "Driven by determination to help " + c.hisHer() + " friends, " + mainName + " lunges out of your grasp and starts to crawl away, but you quickly pounce on " + c.himHer() + " again");
                        }
                        if (w.getBodyStatus()[3]) {
                            w.append(t, ", laughing derisively,");
                        }
                        if (penetrated) {
                            Label_9738: {
                                if (!w.getBodyStatus()[6]) {
                                    if (w.getBodyStatus()[5]) {
                                        if (!gender.equals("male")) {
                                            if (w.tickle().equals(false)) {
                                                w.append(t, " and slam your first cock into " + c.hisHer() + " pussy with one mighty thrust.  ");
                                                break Label_9738;
                                            }
                                        }
                                    }
                                    w.append(t, " and slam your cock into " + c.himHer() + " with one mighty thrust.  ");
                                }
                                else {
                                    w.append(t, " and easily push your slime back inside " + c.himHer() + " before " + c.heShe() + " can stop you.  ");
                                }
                            }
                            if (confidence <= 66) {
                                if (confidence <= 33) {
                                    w.append(t, "Tears stream down " + c.hisHer() + " face, but ");
                                }
                                else {
                                    w.append(t, "The moment of false hope crushes " + c.hisHer() + " spirit, but ");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.HeShe()) + "'s not used to feeling so weak, but ");
                            }
                        }
                        else {
                            Label_9409: {
                                if (!gender.equals("male")) {
                                    if (w.getBodyStatus()[5]) {
                                        if (w.tickle().equals(false)) {
                                            w.append(t, " and slam " + c.himHer() + " into the pavement.  Your twin cocks resume rubbing against " + c.hisHer() + " holes");
                                            break Label_9409;
                                        }
                                    }
                                    if (!w.getBodyStatus()[6]) {
                                        w.append(t, " and slam " + c.himHer() + " into the pavement.  Your cock resumes persistently rubbing against " + c.hisHer() + " slit");
                                    }
                                    else {
                                        w.append(t, " and slam " + c.himHer() + " into the pavement.  Your slime quickly resumes pressing against " + c.hisHer() + " slit");
                                    }
                                }
                                else if (!w.getBodyStatus()[6]) {
                                    w.append(t, " and slam " + c.himHer() + " into the pavement.  Your cocks press against each other once again");
                                }
                                else {
                                    w.append(t, " and slam " + c.himHer() + " into the pavement.  Your slime envelops " + c.hisHer() + " hips once again");
                                }
                            }
                            if (confidence <= 66) {
                                if (confidence <= 33) {
                                    w.append(t, " as " + c.heShe() + " bitterly hangs " + c.hisHer() + " head, demoralized by " + c.hisHer() + " brief glimpse of freedom.  ");
                                }
                                else {
                                    w.append(t, ".  ");
                                }
                            }
                            else {
                                w.append(t, " as " + c.heShe() + " kicks and struggles.  ");
                            }
                        }
                        if (c.getPLEALevel() >= 3) {
                            if (!cVirg) {
                                if (gender.equals("female")) {
                                    if (penetrated) {
                                        w.append(t, String.valueOf(c.heShe()) + " can't stop " + c.himHer() + "self from cumming, ");
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.HeShe()) + " can't stop " + c.himHer() + "self from cumming, ");
                                    }
                                }
                                else if (penetrated) {
                                    w.append(t, String.valueOf(c.heShe()) + " can't stop " + c.hisHer() + " cock from spurting onto the ground, ");
                                }
                                else {
                                    w.append(t, String.valueOf(c.HeShe()) + " can't stop " + c.hisHer() + " cock from spurting onto the ground, ");
                                }
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, "and the moans of pleasure come out freely.");
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.hisHer()) + " body spasming wildly.");
                                    }
                                }
                                else {
                                    w.append(t, "and it's all " + c.heShe() + " can do to avoid moaning out loud.");
                                }
                            }
                            else {
                                if (penetrated) {
                                    w.append(t, "");
                                }
                                else {
                                    w.append(t, "The pleasure almost makes " + c.himHer() + " want to allow you inside, but ");
                                }
                                if (dignity <= 66) {
                                    if (dignity <= 33) {
                                        w.append(t, String.valueOf(c.heShe()) + " tries to manage " + c.hisHer() + " lust by moaning out loud.");
                                    }
                                    else {
                                        w.append(t, String.valueOf(c.hisHer()) + " anger helps " + c.himHer() + " resist " + c.hisHer() + " despair and " + c.hisHer() + " lust alike.");
                                    }
                                }
                                else {
                                    w.append(t, String.valueOf(c.heShe()) + " refuses to show any sign of how good it feels.");
                                }
                            }
                        }
                        else {
                            if (penetrated) {
                                w.append(t, "");
                            }
                            else {
                                w.append(t, "Your treatment of " + c.himHer() + " is far from gentle, but ");
                            }
                            if (dignity <= 66) {
                                if (dignity <= 33) {
                                    w.append(t, String.valueOf(c.hisHer()) + " screams of pain are mingled with anger.");
                                }
                                else {
                                    w.append(t, "the pain " + c.heShe() + " feels is drowned out by the anger.");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.heShe()) + " refuses to cry out in pain.");
                            }
                        }
                        Label_11190: {
                            if (!w.getBodyStatus()[4]) {
                                if (!w.getBodyStatus()[5]) {
                                    if (w.getBodyStatus()[6]) {
                                        if (c.getEXPOLevel() >= 3) {
                                            if (!modest) {
                                                w.append(t, "  The feelings of helplessness and humiliation are enhanced by the way that everyone can see " + c.hisHer() + " fruitless struggling underneath your transparent body.");
                                                break Label_11190;
                                            }
                                        }
                                        w.append(t, "  In the end, " + c.hisHer() + " shortlived escape accomplished nothing beyond leaving even more of " + c.hisHer() + " clothes behind in your slime body.");
                                    }
                                }
                                else {
                                    Label_11057: {
                                        if (!w.tickle()) {
                                            if (c.getINJULevel() >= 3) {
                                                if (!gender.equals("male")) {
                                                    if (!aVirg) {
                                                        w.append(t, "  It's not long before your second cock manages to force its way back inside " + c.hisHer() + " ass.");
                                                        break Label_11057;
                                                    }
                                                }
                                            }
                                            w.append(t, "  The spines on your cocks continue to grind maddeningly against " + c.himHer() + ".");
                                        }
                                        else {
                                            w.append(t, "  You continue " + c.hisHer() + " tickle punishment with a vengeance");
                                            Label_10940: {
                                                if (c.getINJULevel() >= 3) {
                                                    if (!aVirg) {
                                                        w.append(t, ", and there's despair and exhaustion in " + c.hisHer() + " voice as " + c.heShe() + " gives in once again.");
                                                        break Label_10940;
                                                    }
                                                }
                                                w.append(t, ", and you can tell that " + c.hisHer() + " resistance is wearing thin.");
                                            }
                                        }
                                    }
                                }
                            }
                            else {
                                w.append(t, "  The tentacles lining your underside quickly ");
                                if (!gender.equals("female")) {
                                    w.append(t, "wrap themselves around " + c.hisHer() + " cock and continue stroking.");
                                }
                                else {
                                    w.append(t, "continue toying with " + c.hisHer() + " clit.");
                                }
                            }
                        }
                        if (w.getBodyStatus()[20]) {
                            if (!hypnotized) {
                                w.append(t, "  Even if " + c.heShe() + " had managed to get away, the disorientation caused by your mind-affecting fluids would make it hard to get far.");
                            }
                            else {
                                w.append(t, "  Your hypnotic conditioning ensured that " + c.heShe() + " would fail.");
                            }
                        }
                    }
                }
                else {
                    if (!w.getBodyStatus()[3]) {
                        w.append(t, mainName);
                    }
                    else {
                        w.append(t, "You tell " + mainName + " to look down at " + c.hisHer() + " body, and " + c.heShe());
                    }
                    if (dignity <= 66) {
                        if (dignity <= 33) {
                            w.append(t, " thrashes wildly and screams in ");
                        }
                        else {
                            w.append(t, " struggles to escape, screaming in ");
                        }
                    }
                    else {
                        w.append(t, " suppresses a scream of ");
                    }
                    if (penetrated) {
                        Label_5904: {
                            if (!w.getBodyStatus()[5]) {
                                if (!w.getBodyStatus()[6]) {
                                    w.append(t, "pain as you force your spurting cock even deeper inside " + c.himHer() + ", insistently pressing against " + c.hisHer() + " ");
                                    break Label_5904;
                                }
                            }
                            w.append(t, "pain as you force yourself even deeper inside " + c.himHer() + ", insistently pressing against " + c.hisHer() + " ");
                        }
                        if (!gender.equals("male")) {
                            w.append(t, "cervix.  ");
                        }
                        else {
                            w.append(t, "intestine.  ");
                        }
                        if (innocence <= 66) {
                            if (innocence <= 33) {
                                w.append(t, String.valueOf(c.HeShe()) + " can't do anything to stop you from ");
                            }
                            else {
                                w.append(t, String.valueOf(c.HeShe()) + " is in no state to consider that you're ");
                            }
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " has no idea that you're ");
                        }
                    }
                    else {
                        Label_5465: {
                            if (w.getBodyStatus()[5]) {
                                if (w.tickle().equals(false)) {
                                    w.append(t, "disgust as the pool of fluid from your spurting cocks inches toward " + c.hisHer() + " face against the pavement.  ");
                                    break Label_5465;
                                }
                            }
                            if (!w.getBodyStatus()[6]) {
                                w.append(t, "disgust as the pool of fluid from your spurting cock inches toward " + c.hisHer() + " face against the pavement.  ");
                            }
                            else {
                                w.append(t, "disgust as your slime threatens to envelop " + c.hisHer() + " entire body, inching toward " + c.hisHer() + " face against the pavement.  ");
                            }
                        }
                        if (innocence <= 66) {
                            if (innocence <= 33) {
                                if (!w.getBodyStatus()[6]) {
                                    if (!gender.equals("male")) {
                                        w.append(t, "On a rational level, " + c.heShe() + "'d rather have it there than in " + c.hisHer() + " womb, but ");
                                    }
                                    else {
                                        w.append(t, "On a rational level, " + c.heShe() + "'d rather have it there than in " + c.hisHer() + " ass, but ");
                                    }
                                }
                                else {
                                    w.append(t, "On a rational level, " + c.heShe() + " knows " + c.heShe() + " should just be happy that none of it has gotten inside " + c.himHer() + " yet, but ");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.HeShe()) + " is trying to stay composed, but ");
                            }
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " can hardly comprehend what's happening to " + c.himHer() + ", but ");
                        }
                    }
                    if (c.getPLEALevel() >= 3) {
                        if (!cVirg) {
                            if (penetrated) {
                                if (!w.getBodyStatus()[4]) {
                                    if (!w.getBodyStatus()[6]) {
                                        w.append(t, "using " + c.hisHer() + " orgasmic spasms to usher your vile seed ");
                                    }
                                    else {
                                        w.append(t, "using " + c.hisHer() + " orgasmic spasms to usher your slime ");
                                    }
                                }
                                else if (!gender.equals("female")) {
                                    w.append(t, "milking " + c.hisHer() + " cock with your tentacles and using " + c.hisHer() + " orgasmic spasms to usher your vile seed ");
                                }
                                else {
                                    w.append(t, "abusing " + c.hisHer() + " clit with your tentacles and using " + c.hisHer() + " orgasmic spasms to usher your vile seed ");
                                }
                                if (!gender.equals("male")) {
                                    w.append(t, "into " + c.hisHer() + " womb.");
                                }
                                else {
                                    w.append(t, "deep into " + c.hisHer() + " belly even as " + c.heShe() + " spurts " + c.hisHer() + " own cum onto the ground.");
                                }
                            }
                            else if (!gender.equals("female")) {
                                if (!w.getBodyStatus()[4]) {
                                    w.append(t, "with " + c.hisHer() + " cock spurting in orgasm, it's hard to think of anything but the way you're frotting against " + c.himHer() + ".");
                                }
                                else {
                                    w.append(t, "with your tentacles milking " + c.hisHer() + " cock, it's hard to think of anything but how good each orgasmic spurt feels.");
                                }
                            }
                            else if (!w.getBodyStatus()[4]) {
                                if (!w.getBodyStatus()[6]) {
                                    w.append(t, "with orgasm wracking " + c.hisHer() + " body, it's hard to think of anything but your cock grinding against " + c.himHer() + ".");
                                }
                                else {
                                    w.append(t, "with orgasm wracking " + c.hisHer() + " body, it's hard to think of anything but your slime undulating against " + c.hisHer() + " clit.");
                                }
                            }
                            else {
                                w.append(t, "with orgasm wracking " + c.hisHer() + " body, it's hard to think of anything but your tentacles pinching and fondling " + c.hisHer() + " clit.");
                            }
                            if (confidence <= 66) {
                                if (confidence <= 33) {
                                    w.append(t, "  " + c.HeShe() + " gives in to the pleasure, moaning and sobbing in defeat.");
                                }
                                else {
                                    w.append(t, "");
                                }
                            }
                            else {
                                w.append(t, "  " + c.HeShe() + " tries to fight it, but " + c.heShe() + " can't, and " + c.hisHer() + " cries of helpless pleasure rise above the battlefield.");
                            }
                        }
                        else {
                            if (penetrated) {
                                if (!w.getBodyStatus()[4]) {
                                    w.append(t, "trying to make " + c.himHer() + " cum.  ");
                                }
                                else if (!gender.equals("female")) {
                                    w.append(t, " using your tentacles to try to milk " + c.hisHer() + " penis.  ");
                                }
                                else {
                                    w.append(t, " grinding your tentacles against " + c.hisHer() + " clit.  ");
                                }
                            }
                            else if (!w.getBodyStatus()[4]) {
                                if (!gender.equals("female")) {
                                    if (!w.getBodyStatus()[6]) {
                                        w.append(t, "combined with the difficulty of resisting the overwhelming pleasure " + c.heShe() + " feels every time your penises grind together, it's impossible to think straight.  ");
                                    }
                                    else {
                                        w.append(t, "combined with the difficulty of resisting the overwhelming pleasure of your slime enveloping " + c.hisHer() + " penis, it's impossible to think straight.  ");
                                    }
                                }
                                else {
                                    w.append(t, "combined with the difficulty of resisting the overwhelming pleasure " + c.heShe() + " feels every time you grind against " + c.hisHer() + " clit, it's impossible to think straight.  ");
                                }
                            }
                            else if (!gender.equals("female")) {
                                w.append(t, "combined with the difficulty of resisting the overwhelming pleasure " + c.heShe() + " feels every time your tentacles caress " + c.hisHer() + " penis, it's impossible to think straight.  ");
                            }
                            else {
                                w.append(t, "combined with the difficulty of resisting the overwhelming pleasure " + c.heShe() + " feels every time your tentacles caress " + c.hisHer() + " clit, it's impossible to think straight.  ");
                            }
                            if (confidence <= 66) {
                                if (confidence <= 33) {
                                    w.append(t, String.valueOf(c.HeShe()) + " just goes limp, trying to escape into " + c.hisHer() + " own thoughts.");
                                }
                                else {
                                    w.append(t, String.valueOf(c.HeShe()) + " struggles weakly, softly moaning into the ground with each breath.");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.HeShe()) + " grits " + c.hisHer() + " teeth against the sensations, but " + c.heShe() + " can't stop " + c.hisHer() + " hips from bucking with every thrust.");
                            }
                        }
                    }
                    else {
                        if (penetrated) {
                            if (!w.getBodyStatus()[6]) {
                                if (!gender.equals("male")) {
                                    if (impregnated) {
                                        w.append(t, "ejaculating your seed directly into " + c.hisHer() + " womb in order to hasten its transformation into a tool for breeding Demons.  ");
                                    }
                                    else {
                                        w.append(t, "ejaculating your seed directly into " + c.hisHer() + " womb to maximize the slim chance of conception.  ");
                                    }
                                }
                                else {
                                    w.append(t, "ejaculating your seed as deep inside " + c.himHer() + " as possible in order to hasten the corruption of " + c.hisHer() + " body.  ");
                                }
                            }
                            else {
                                w.append(t, "leaving your potent slime");
                                if (!gender.equals("male")) {
                                    if (impregnated) {
                                        w.append(t, " as deep as possible in " + c.hisHer() + " womb in order to hasten its transformation into a tool for breeding Demons.  ");
                                    }
                                    else {
                                        w.append(t, " as deep as possible in " + c.hisHer() + " womb in order to maximize the slim chance of impregnation.  ");
                                    }
                                }
                                else {
                                    w.append(t, " as deep inside " + c.himHer() + " as possible in order to hasten the corruption of " + c.hisHer() + " body.  ");
                                }
                            }
                            if (w.getBodyStatus()[4]) {
                                w.append(t, "The tentacles binding and stroking " + c.hisHer() + " whole body make it impossible to resist.  ");
                            }
                        }
                        else if (!w.getBodyStatus()[4]) {
                            w.append(t, "the added violation only makes it harder to focus.  ");
                        }
                        else {
                            w.append(t, "the tentacles crawling all over " + c.hisHer() + " body only make it harder to focus.  ");
                        }
                        if (confidence <= 66) {
                            if (confidence <= 33) {
                                w.append(t, String.valueOf(c.HeShe()) + " just sobs and doesn't fight it.");
                            }
                            else {
                                w.append(t, String.valueOf(c.HeShe()) + " continues to struggle weakly.");
                            }
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " just grits " + c.hisHer() + " teeth and wills " + c.himHer() + "self to find the strength to throw off the bulk pinning " + c.himHer() + " down.");
                        }
                    }
                    Label_8714: {
                        if (!w.getBodyStatus()[5]) {
                            if (w.getBodyStatus()[6]) {
                                if (c.getEXPOLevel() >= 3) {
                                    if (!modest) {
                                        if (c.getHATELevel() < 3) {
                                            w.append(t, "  " + c.HeShe() + " can't even hide from the filming spectators, as your transparent body pins " + c.himHer() + " in a humiliating position.");
                                        }
                                        else {
                                            w.append(t, "  Pinned down and anchored in place by your transparent pseudopod inside " + c.himHer() + ", there's nothing " + c.heShe() + " can do to retain any semblance of modesty.");
                                        }
                                        break Label_8714;
                                    }
                                }
                                w.append(t, "  And even as your amorphous body pins " + c.himHer() + " down, the slime continues to dissolve " + c.hisHer() + " clothes.");
                            }
                        }
                        else {
                            Label_8502: {
                                if (!w.tickle()) {
                                    if (c.getINJULevel() >= 3) {
                                        if (!aVirg) {
                                            if (!gender.equals("male")) {
                                                w.append(t, "  Your second cock in " + c.hisHer() + " ass anchors " + c.himHer() + " in place, ensuring that " + c.heShe() + " can't escape.");
                                                break Label_8502;
                                            }
                                        }
                                    }
                                    w.append(t, "  Any attempt to escape comes up short when your second spined cock grinds against " + c.hisHer() + " ");
                                    if (!gender.equals("female")) {
                                        w.append(t, "own penis");
                                    }
                                    else {
                                        w.append(t, "clit");
                                    }
                                    w.append(t, ", driving out all rational thought.");
                                }
                                else {
                                    w.append(t, "  Pinned in place like this");
                                    Label_8312: {
                                        if (c.getINJULevel() >= 3) {
                                            if (!aVirg) {
                                                w.append(t, " with your claws continuing to mercilessly tickle " + c.himHer() + ", " + c.heShe() + " feels like " + c.heShe() + " can barely breathe, " + c.hisHer() + " laughter coming in exhausted gasps.");
                                                break Label_8312;
                                            }
                                        }
                                        w.append(t, ", " + c.heShe() + " can't even squirm away from your tickling claws.");
                                    }
                                }
                            }
                        }
                    }
                    if (w.getBodyStatus()[20]) {
                        if (!hypnotized) {
                            w.append(t, "  The longer you hold " + c.himHer() + " like this, the more difficult it will be for " + c.himHer() + " to resist the substance's mental effects.");
                        }
                        else {
                            w.append(t, "  The longer you hold " + c.himHer() + " like this, the more deeply the substance can influence " + c.hisHer() + " mind.");
                        }
                    }
                }
            }
            else {
                if (innocence <= 66) {
                    if (innocence <= 33) {
                        w.append(t, String.valueOf(mainName) + "'s eyes go wide with fear as " + c.heShe() + " feels ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " moans helplessly as " + c.heShe() + " feels ");
                    }
                }
                else {
                    w.append(t, String.valueOf(mainName) + " cries out in disgust as " + c.heShe() + " feels ");
                }
                if (!w.getBodyStatus()[3]) {
                    if (!w.getBodyStatus()[6]) {
                        w.append(t, "your monstrous cock begin spurting");
                    }
                    else {
                        w.append(t, "your slime flowing");
                    }
                }
                else {
                    w.append(t, "you nibble on " + c.hisHer() + " ear while your monstrous cock twitches");
                }
                if (penetrated) {
                    w.append(t, " inside " + c.himHer() + ".  ");
                    if (dignity <= 66) {
                        if (dignity <= 33) {
                            w.append(t, String.valueOf(c.HeShe()) + " can't stop " + c.himHer() + "self from reacting to ");
                        }
                        else {
                            w.append(t, String.valueOf(c.HeShe()) + " tries and fails to ignore ");
                        }
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " mask of composure is unable to withstand ");
                    }
                }
                else {
                    w.append(t, " against " + c.hisHer() + " belly");
                    if (dignity <= 66) {
                        if (dignity <= 33) {
                            w.append(t, ", plainly disturbed by what you're threatening to do to " + c.himHer() + ".  ");
                        }
                        else {
                            w.append(t, ".  ");
                        }
                    }
                    else {
                        w.append(t, ", only regaining some level of composure by reminding " + c.himHer() + "self that " + c.hisHer() + " Sexual Barrier remains intact.  ");
                    }
                }
                if (c.getPLEALevel() >= 3) {
                    if (!cVirg) {
                        if (penetrated) {
                            if (!w.getBodyStatus()[6]) {
                                w.append(t, "the sensation of you cumming inside " + c.himHer() + ".  ");
                            }
                            else {
                                w.append(t, "the sensation of your pseudopod plumbing " + c.hisHer() + " depths.  ");
                            }
                            if (!gender.equals("male")) {
                                if (!gender.equals("female")) {
                                    w.append(t, String.valueOf(c.HeShe()) + " spurts " + c.hisHer() + " own cum onto the ground, " + c.hisHer() + " folds ");
                                }
                                else {
                                    w.append(t, String.valueOf(c.HeShe()) + " involuntarily bucks " + c.hisHer() + " hips, " + c.hisHer() + " folds ");
                                }
                            }
                            else {
                                w.append(t, String.valueOf(c.HeShe()) + " spurts " + c.hisHer() + " own cum onto the ground, " + c.hisHer() + " ass ");
                            }
                            if (!w.getBodyStatus()[4]) {
                                if (!w.getBodyStatus()[6]) {
                                    w.append(t, "squeezing every last drop of seed out of your member ");
                                }
                                else {
                                    w.append(t, "squeezing as if trying to trap you inside ");
                                }
                            }
                            else {
                                w.append(t, "squeezing down every time your sucker tentacle pulls on " + c.hisHer() + " ");
                                if (!gender.equals("female")) {
                                    w.append(t, "penis ");
                                }
                                else {
                                    w.append(t, "oversensitive clit ");
                                }
                            }
                        }
                        else {
                            if (!gender.equals("female")) {
                                w.append(t, String.valueOf(c.HeShe()) + " cums as ");
                            }
                            else {
                                w.append(t, String.valueOf(c.HeShe()) + " spasms in helpless orgasm as ");
                            }
                            Label_3193: {
                                if (!w.getBodyStatus()[4]) {
                                    if (w.getBodyStatus()[5]) {
                                        if (w.tickle().equals(false)) {
                                            w.append(t, "your spined member rubs");
                                            break Label_3193;
                                        }
                                    }
                                    if (!w.getBodyStatus()[6]) {
                                        w.append(t, "your bumpy-skinned member rubs");
                                    }
                                    else {
                                        w.append(t, "the ridges you form along your pseudopod rub");
                                    }
                                }
                                else {
                                    w.append(t, "one your tentacles rubs");
                                }
                            }
                            if (!gender.equals("female")) {
                                w.append(t, " against " + c.hisHer() + " own penis, unable to control " + c.himHer() + "self ");
                            }
                            else {
                                w.append(t, " against " + c.hisHer() + " clit, unable to control " + c.himHer() + "self ");
                            }
                            if (w.getBodyStatus()[4]) {
                                w.append(t, "even as your enormous member continues to push against " + c.hisHer() + " entrance.  " + c.HeShe() + " subconsciously wants this to continue forever, ");
                            }
                        }
                        if (morality <= 66) {
                            if (morality <= 33) {
                                if (!gender.equals("male")) {
                                    w.append(t, "despite " + c.hisHer() + " rage at being used as breeding stock.");
                                }
                                else {
                                    w.append(t, "despite " + c.hisHer() + " rage at being used as if " + c.heShe() + " were female breeding stock.");
                                }
                            }
                            else if (!gender.equals("male")) {
                                if (impregnated) {
                                    w.append(t, "despite " + c.hisHer() + " horror at what your semen has already done to " + c.himHer() + ".");
                                }
                                else {
                                    w.append(t, "despite " + c.hisHer() + " horror at the possibility of bearing a Demon Lord's child.");
                                }
                            }
                            else if (!w.getBodyStatus()[6]) {
                                w.append(t, "despite " + c.hisHer() + " horror at what the Demon Lord's semen might do to " + c.hisHer() + " body.");
                            }
                            else {
                                w.append(t, "despite " + c.hisHer() + " horror at what having a part of the Demon Lord inside " + c.himHer() + "  might do to " + c.hisHer() + " body.");
                            }
                        }
                        else if (!gender.equals("male")) {
                            if (impregnated) {
                                w.append(t, "despite the fact that you're threatening to impregnate " + c.himHer() + " with yet another enemy of humanity.");
                            }
                            else {
                                w.append(t, "despite the fact that " + c.heShe() + " is in danger of being impregnated with an enemy of humanity.");
                            }
                        }
                        else if (!w.getBodyStatus()[6]) {
                            w.append(t, "despite the danger of the Demon Lord's potent semen changing " + c.hisHer() + " body somehow.");
                        }
                        else {
                            w.append(t, "despite the danger that taking a part of the Demon Lord inside " + c.himHer() + " might change " + c.hisHer() + " body somehow.");
                        }
                    }
                    else {
                        if (penetrated) {
                            if (!w.getBodyStatus()[4]) {
                                if (!w.getBodyStatus()[6]) {
                                    w.append(t, "the near-orgasmic pleasure as every twitch of your member stimulates " + c.hisHer() + " deepest parts.  " + c.HeShe() + " desperately resists the sensations ");
                                }
                                else {
                                    w.append(t, "the near-orgasmic pleasure as every undulation of the pseudopod stimulates " + c.hisHer() + " deepest parts.  " + c.HeShe() + " desperately resists the sensations ");
                                }
                            }
                            else {
                                w.append(t, "the near-orgasmic pleasure as " + c.heShe() + "'s stimulated from the inside by your cock and from the outside by the sucker tentacle attached to " + c.hisHer() + " ");
                                if (!gender.equals("femae")) {
                                    w.append(t, "penis");
                                }
                                else {
                                    w.append(t, "clit");
                                }
                                w.append(t, String.valueOf(c.HeShe()) + " only resists the sensations ");
                            }
                        }
                        else {
                            Label_1993: {
                                if (!w.getBodyStatus()[4]) {
                                    if (w.getBodyStatus()[5]) {
                                        if (w.tickle().equals(false)) {
                                            w.append(t, "The spines covering your member rub against ");
                                            break Label_1993;
                                        }
                                    }
                                    if (!w.getBodyStatus()[6]) {
                                        w.append(t, "The bumpy skin of your member rubs against ");
                                    }
                                    else {
                                        w.append(t, "The substance forms into ridges that rub against ");
                                    }
                                }
                                else {
                                    w.append(t, "Your attached sucker tentacle tugs on ");
                                }
                            }
                            if (!gender.equals("female")) {
                                w.append(t, String.valueOf(c.hisHer()) + " own penis with each thrust, but " + c.heShe() + " resists the near-orgasmic pleasure ");
                            }
                            else {
                                w.append(t, String.valueOf(c.hisHer()) + " clit with each thrust, but " + c.heShe() + " resists the near-orgasmic pleasure ");
                            }
                        }
                        if (morality <= 66) {
                            if (morality <= 33) {
                                if (!gender.equals("male")) {
                                    if (impregnated) {
                                        w.append(t, "by focusing on " + c.hisHer() + " rage at the way that you're continuing to use " + c.himHer() + " as breeding stock.");
                                    }
                                    else {
                                        w.append(t, "by focusing on " + c.hisHer() + " rage at the way you're attempting to use " + c.hisHer() + " body as breeding stock.");
                                    }
                                }
                                else {
                                    w.append(t, "by focusing on " + c.hisHer() + " rage at the way you're using " + c.hisHer() + " body as if " + c.heShe() + " were female breeding stock.");
                                }
                            }
                            else if (!gender.equals("male")) {
                                if (!impregnated) {
                                    w.append(t, "by focusing on how horrifying it would be to bear a Demon Lord's child.");
                                }
                                else {
                                    w.append(t, "by focusing on " + c.hisHer() + " revulsion at the fact that " + c.heShe() + "'s already bearing your child.");
                                }
                            }
                            else if (!w.getBodyStatus()[6]) {
                                w.append(t, "by focusing on how horrifying it would for " + c.hisHer() + " body to be altered by the Demon Lord's cum.");
                            }
                            else {
                                w.append(t, "by focusing on how horrifying it would for " + c.hisHer() + " body to be altered by such intimate contact with the Demon Lord.");
                            }
                        }
                        else if (!gender.equals("male")) {
                            if (impregnated) {
                                w.append(t, "by reminding " + c.himHer() + "self that if " + c.heShe() + " doesn't escape soon, it's entirely possible that your potent seed might even be able to put a second Demonic child inside " + c.himHer() + ".");
                            }
                            else {
                                w.append(t, "by reminding " + c.himHer() + "self that " + c.heShe() + " needs to escape before you impregnate " + c.himHer() + " with an enemy of the human race.");
                            }
                        }
                        else {
                            w.append(t, "by reminding " + c.himHer() + "self that " + c.heShe() + " needs to escape before your influence can corrupt " + c.himHer() + ".");
                        }
                    }
                }
                else {
                    if (penetrated) {
                        if (!w.getBodyStatus()[6]) {
                            w.append(t, "the foul seed polluting ");
                        }
                        else {
                            w.append(t, "your amorphous shape filling ");
                        }
                        if (!gender.equals("male")) {
                            w.append(t, String.valueOf(c.hisHer()) + " womb");
                        }
                        else {
                            w.append(t, String.valueOf(c.hisHer()) + " bowels");
                        }
                        if (w.getBodyStatus()[4]) {
                            if (!gender.equals("female")) {
                                w.append(t, " while your tentacles steadily stroke " + c.hisHer() + " cock");
                            }
                            else {
                                w.append(t, " while your tentacles molest " + c.hisHer() + " clit");
                            }
                        }
                        w.append(t, ".  Not only does it feel awful, but ");
                    }
                    else if (!w.getBodyStatus()[4]) {
                        w.append(t, String.valueOf(c.HeShe()) + " knows that it could slip inside at any moment, and ");
                    }
                    else {
                        w.append(t, "With your tentacles fondling " + c.hisHer() + " ");
                        if (!gender.equals("male")) {
                            w.append(t, "pussy");
                        }
                        else {
                            w.append(t, "anus");
                        }
                        w.append(t, ", " + c.heShe() + " knows you could slip inside at any moment, and ");
                    }
                    if (morality <= 66) {
                        if (morality <= 33) {
                            if (!gender.equals("male")) {
                                if (impregnated) {
                                    w.append(t, "the reminder that " + c.hisHer() + " body is being used as breeding stock enrages " + c.himHer() + ".");
                                }
                                else {
                                    w.append(t, "the fact that you're attempting to use " + c.hisHer() + " body as breeding stock enrages " + c.himHer() + ".");
                                }
                            }
                            else {
                                w.append(t, "the fact that you're using " + c.hisHer() + " body as if " + c.heShe() + " were female breeding stock enrages " + c.himHer() + ".");
                            }
                        }
                        else if (!gender.equals("male")) {
                            if (impregnated) {
                                w.append(t, "the reminder that " + c.heShe() + "'s already bearing a Demon Lord's child horrifies " + c.himHer() + ".");
                            }
                            else {
                                w.append(t, "the thought of being forced to bear a Demon Lord's child horrifies " + c.himHer() + ".");
                            }
                        }
                        else {
                            w.append(t, "the thought of that this might alter " + c.hisHer() + " body somehow horrifies " + c.himHer() + ".");
                        }
                    }
                    else if (!gender.equals("male")) {
                        if (impregnated) {
                            w.append(t, "the reminder that " + c.hisHer() + " body is being used to breed an enemy of the human race is too terrible to bear.");
                        }
                        else {
                            w.append(t, "the thought that " + c.hisHer() + " own body might be used to breed an enemy of the human race is too terrible to bear.");
                        }
                    }
                    else {
                        w.append(t, "the thought that " + c.heShe() + " might be influenced by the corrupt substance is too terrible to bear.");
                    }
                }
                Label_5046: {
                    if (!w.getBodyStatus()[5]) {
                        if (w.getBodyStatus()[6]) {
                            if (c.getHATELevel() < 3) {
                                if (c.getEXPOLevel() >= 3) {
                                    if (!modest) {
                                        w.append(t, "  The struggling of " + c.hisHer() + " nearly-naked body against the transparent slime captivates the filming spectators.");
                                        break Label_5046;
                                    }
                                }
                                w.append(t, "  Your slime flows around " + c.hisHer() + " body, dissolving " + c.hisHer() + " clothes as you wait for an opportunity to penetrate.");
                            }
                            else {
                                Label_4931: {
                                    if (c.getEXPOLevel() >= 3) {
                                        if (!modest) {
                                            w.append(t, "  With the penetration pinning " + c.himHer() + " in place, " + c.heShe() + " can't do anything at all to stop you from dissolving " + c.hisHer() + " clothes.");
                                            break Label_4931;
                                        }
                                    }
                                    w.append(t, "  With " + c.hisHer() + " clothes mostly gone, the bulge of your slime filling " + c.hisHer() + " belly is humiliatingly obvious to the filming spectators.");
                                }
                            }
                        }
                    }
                    else {
                        Label_4756: {
                            if (!w.tickle()) {
                                w.append(t, "  Your other cock begins spurting as well, ");
                                if (!gender.equals("male")) {
                                    if (c.getINJULevel() >= 3) {
                                        if (!aVirg) {
                                            w.append(t, "filling " + c.hisHer() + " bowels.");
                                            break Label_4756;
                                        }
                                    }
                                }
                                w.append(t, "smearing " + c.hisHer() + " back and " + c.hisHer() + " hair with your semen.");
                            }
                            else {
                                w.append(t, "  You force " + c.himHer() + " face-down into a stray puddle your ejaculate");
                                Label_4617: {
                                    if (c.getINJULevel() >= 3) {
                                        if (!aVirg) {
                                            w.append(t, ", then abruptly tickle " + c.himHer() + " some more.  When " + c.heShe() + " opens " + c.hisHer() + " mouth in laughter, some of your slime gets inside.");
                                            break Label_4617;
                                        }
                                    }
                                    w.append(t, ", and " + c.heShe() + " frantically shakes " + c.hisHer() + " head, mouth tightly closed as you tickle " + c.himHer() + " in an effort to make " + c.himHer() + " open up.");
                                }
                            }
                        }
                    }
                }
                if (w.getBodyStatus()[20]) {
                    if (!hypnotized) {
                        w.append(t, "  Meanwhile, even the smell of the copious fluids is making it harder and harder to avoid falling into a hypnotic trance.");
                    }
                    else {
                        w.append(t, "  Meanwhile, even the smell of the copious fluids is deepening " + c.hisHer() + " hypnotic conditioning.");
                    }
                }
            }
        }
    }
    
    public void Examine(final JTextPane t, final JPanel p, final JFrame f, final Chosen c) {
        final WorldState w = this;
        String breasts = "breasts";
        if (c.gender.equals("male")) {
            breasts = "nipples";
        }
        w.append(t, "\n\n" + w.getSeparator() + "\n\n");
        if ((c.surrounded || c.captured) && (c.previousFEAR > 0L || c.previousDISG > 0L || c.previousPAIN > 0L || c.previousSHAM > 0L || c.previousHATE > 0L || c.previousPLEA > 0L || c.previousINJU > 0L || c.previousEXPO > 0L)) {
            w.append(t, "Previous ");
            if (c.surrounded) {
                w.append(t, "Surround");
            }
            else {
                w.append(t, "Capture");
            }
            w.append(t, " Damage\nFEAR: " + c.fixedFormat(c.previousFEAR) + "  HATE: " + c.fixedFormat(c.previousHATE) + "\nDISG: " + c.fixedFormat(c.previousDISG) + "  PLEA: " + c.fixedFormat(c.previousPLEA) + "\n");
            if (w.tickle()) {
                w.append(t, "TICK: " + c.fixedFormat(c.previousPAIN) + "  ANTI: " + c.fixedFormat(c.previousINJU) + "\n");
            }
            else {
                w.append(t, "PAIN: " + c.fixedFormat(c.previousPAIN) + "  INJU: " + c.fixedFormat(c.previousINJU) + "\n");
            }
            w.append(t, "SHAM: " + c.fixedFormat(c.previousSHAM) + "  EXPO: " + c.fixedFormat(c.previousEXPO) + "\n\n");
        }
        w.append(t, c.mainName);
        if (c.captured) {
            if (c.getHATELevel() == 0) {
                w.append(t, " is struggling to escape the clutches of your Commander body.  ");
            }
            else if (c.getHATELevel() == 1) {
                w.append(t, "'s eyes are narrowed with annoyance as " + c.heShe() + " struggles to escape your Commander body.  ");
            }
            else if (c.getHATELevel() == 2) {
                w.append(t, " is fuming with anger as " + c.heShe() + " struggles to escape your Commander body.  ");
            }
            else if (c.getHATELevel() == 3) {
                w.append(t, " is violently lashing out at anyone who strays too close to " + c.hisHer() + " struggle with your Commander body.  ");
            }
            else if (c.getHATELevel() == 4) {
                w.append(t, " is screaming madly, overwhelmed by emotion, as " + c.heShe() + " struggles to escape your Commander body.  ");
            }
            else {
                w.append(t, "'s body is erupting with Demonic energy, a sign of " + c.hisHer() + " hateful state of mind, as " + c.heShe() + " struggles to escape your Commander.  ");
            }
        }
        else if (c.surrounded) {
            if (c.getHATELevel() == 0) {
                w.append(t, " is struggling to escape the Thralls surrounding " + c.himHer() + ".  ");
            }
            else if (c.getHATELevel() == 1) {
                w.append(t, "'s eyes are narrowed with annoyance as " + c.heShe() + " struggles to escape the Thralls surrounding " + c.himHer() + ".  ");
            }
            else if (c.getHATELevel() == 2) {
                w.append(t, " is fuming with anger as " + c.heShe() + " struggles to escape the Thralls surrounding " + c.himHer() + ".  ");
            }
            else if (c.getHATELevel() == 3) {
                w.append(t, " is violently lashing out at anyone who strays too close to " + c.hisHer() + " struggle with the Thralls surrounding " + c.himHer() + ".  ");
            }
            else if (c.getHATELevel() == 4) {
                w.append(t, " is screaming madly, overwhelmed by emotion, as " + c.heShe() + " struggles to escape the Thralls surrounding " + c.himHer() + ".  ");
            }
            else {
                w.append(t, "'s body is erupting with Demonic energy, a sign of " + c.hisHer() + " hateful state of mind, as " + c.heShe() + " struggles to escape the Thralls surrounding " + c.himHer() + ".  ");
            }
        }
        else if (c.getHATELevel() == 0) {
            w.append(t, " is doing " + c.hisHer() + " best to stay focused.  ");
        }
        else if (c.getHATELevel() == 1) {
            w.append(t, "'s eyes are narrowed with annoyance.  ");
        }
        else if (c.getHATELevel() == 2) {
            w.append(t, "'s teeth are clenched with hatred.  ");
        }
        else if (c.getHATELevel() == 3) {
            w.append(t, " is violently lashing out.  ");
        }
        else if (c.getHATELevel() == 4) {
            w.append(t, " is screaming madly as " + c.hisHer() + " emotions overwhelm " + c.himHer() + ".  ");
        }
        else {
            w.append(t, "'s body is erupting with Demonic energy due to " + c.hisHer() + " hateful state of mind.  ");
        }
        if (c.getEXPOLevel() == 0 || c.getEXPOLevel() == 1) {
            if (c.getINJULevel() == 0) {
                if (c.weapon.equals("boots") || c.weapon.equals("fists") || c.weapon.equals("claws") || c.weapon.equals("gauntlets") || c.customWeaponType.equals("part")) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s fighting at full strength, " + c.hisHer() + " " + c.weapon + " crackling with energy.  ");
                }
                else if (c.weapon.equals("spirits") || c.weapon.equals("monster") || c.customWeaponType.equals("command")) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HeShe()) + "'s still full of energy, allowing " + c.hisHer() + " " + c.weapon + " to do the fighting for " + c.himHer() + ".  ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + "'s uninjured, allowing " + c.hisHer() + " " + c.weapon + " to do the fighting for " + c.himHer() + ".  ");
                    }
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " fights with a firm grip on " + c.hisHer() + " " + c.weapon + ".  ");
                }
            }
            else if (c.getINJULevel() == 1) {
                if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s grimacing with the effort of continuing to fight, especially when " + c.heShe() + "'s poked some place sensitive.  ");
                }
                else {
                    w.append(t, "Some bruises show on " + c.hisHer() + " skin where they aren't covered by " + c.hisHer() + " " + c.topDesc() + ".  ");
                }
            }
            else if (c.getINJULevel() == 2) {
                if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s demoralized by how the fight has gone so far, flinching reflexively from the Demons' attacks.  ");
                }
                else {
                    w.append(t, "Blood is dripping from beneath " + c.hisHer() + " " + c.topDesc() + ".  ");
                }
            }
            else if (c.getINJULevel() == 3) {
                if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s gasping with exhaustion, chest heaving under " + c.hisHer() + " " + c.topDesc() + ".  ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " body is covered with deep wounds, though it's hard to see the full extent of them under " + c.hisHer() + " " + c.topDesc() + ".  ");
                }
            }
            else if (c.getINJULevel() == 4) {
                if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s still spasming reflexively due to the intense stimulation " + c.heShe() + "'s faced over the course of the battle.  ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " body is shattered, and " + c.heShe() + "'s only able to stay upright due to the magical power flowing through " + c.himHer() + ".  ");
                }
            }
            else if (w.tickle()) {
                w.append(t, String.valueOf(c.HeShe()) + "'s gasping with exhaustion due to the intense tickle torture " + c.heShe() + "'s faced, only remaining conscious due to the magical power flowing through " + c.himHer() + ".  ");
            }
            else {
                w.append(t, "Moral wounds cover " + c.hisHer() + " body, which only remains alive due to the magical power flowing through " + c.himHer() + ".  ");
            }
            if (c.getPLEALevel() == 0) {
                if (c.innocence > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " uses whatever tactics feel right, not thinking too hard about what " + c.heShe() + "'s doing");
                }
                else if (c.innocence > 33) {
                    w.append(t, String.valueOf(c.HeShe()) + " acts to finish the battle as quickly as possible");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " acts with measured precision, choosing " + c.hisHer() + " tactics for maximum effectiveness");
                }
                if (c.getEXPOLevel() == 1) {
                    w.append(t, " and trying not to think about how ");
                    if (c.getINJULevel() > 0 && c.getINJULevel() < 4 && c.topDesc().equals(c.bottomDesc())) {
                        w.append(t, "the torn garment exposes so much of " + c.hisHer() + " skin.");
                    }
                    else {
                        w.append(t, String.valueOf(c.hisHer()) + " legs are completely exposed by " + c.hisHer() + " torn " + c.bottomDesc() + ".");
                    }
                }
                else {
                    w.append(t, ".");
                }
            }
            else if (c.getPLEALevel() == 1) {
                if (c.getEXPOLevel() == 0) {
                    w.append(t, "The blush rising in " + c.hisHer() + " cheeks shows that " + c.heShe() + "'s becoming aroused.");
                }
                else if (c.getINJULevel() > 0 && c.getINJULevel() < 4 && c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, "The garment is torn, and perhaps because of how much of " + c.hisHer() + " legs it now exposes, a blush has risen to " + c.hisHer() + " cheeks.");
                }
                else {
                    w.append(t, "There's a deep blush in " + c.hisHer() + " cheeks, perhaps because of how " + c.hisHer() + " legs are exposed by " + c.hisHer() + " torn " + c.bottomDesc() + ".");
                }
            }
            else if (c.getPLEALevel() == 2) {
                if (c.getEXPOLevel() == 0) {
                    w.append(t, String.valueOf(c.HisHer()) + " breaths come in soft moans, betraying " + c.hisHer() + " strong sexual arousal.");
                }
                else if (c.getINJULevel() > 0 && c.getINJULevel() < 4 && c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, "The garment is torn, revealing the way that " + c.hisHer() + " legs tremble slightly with each moaning breath.");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " legs are visible through " + c.hisHer() + " torn " + c.bottomDesc() + ", and they tremble slightly with each moaning breath.");
                }
            }
            else if (c.getPLEALevel() == 3) {
                if (c.gender.equals("female")) {
                    w.append(t, String.valueOf(c.HisHer()) + " love juices run down " + c.hisHer() + " thighs");
                    if (c.getEXPOLevel() == 0) {
                        w.append(t, ", though it's hard to tell beneath " + c.hisHer() + " " + c.bottomDesc() + ".");
                    }
                    else if (c.getINJULevel() > 0 && c.getINJULevel() < 4 && c.topDesc().equals(c.bottomDesc())) {
                        w.append(t, ", plainly visible through the torn garment.");
                    }
                    else {
                        w.append(t, ", plainly visible through " + c.hisHer() + " torn " + c.bottomDesc() + ".");
                    }
                }
                else if (c.getINJULevel() > 0 && c.getINJULevel() < 4 && c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, "The ");
                    if (c.getEXPOLevel() > 0) {
                        w.append(t, "torn ");
                    }
                    w.append(t, "garment is tented upward between " + c.hisHer() + " legs by the straining erection underneath.");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " straining erection tents " + c.hisHer());
                    if (c.getEXPOLevel() > 0) {
                        w.append(t, " torn");
                    }
                    w.append(t, " " + c.bottomDesc() + " noticeably between " + c.hisHer() + " legs.");
                }
            }
            else {
                w.append(t, String.valueOf(c.HisHer()) + " legs shudder with constant orgasmic spasms");
                if (c.getEXPOLevel() == 0) {
                    w.append(t, ".");
                }
                else if (c.getINJULevel() > 0 && c.getINJULevel() < 4 && c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, ", making the torn garment especially immodest.");
                }
                else {
                    w.append(t, ", making " + c.hisHer() + " torn " + c.bottomDesc() + " especially immodest.");
                }
            }
        }
        else if (c.getEXPOLevel() == 2 || c.getEXPOLevel() == 3) {
            if (c.getINJULevel() == 0) {
                w.append(t, String.valueOf(c.HeShe()) + " needs to use one hand to hold " + c.hisHer() + " torn " + c.topDesc() + " closed and keep " + c.hisHer() + " " + breasts + " covered");
            }
            else if (c.getINJULevel() == 1) {
                if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + " frowns with the effort required to maintain " + c.hisHer() + " composure as " + c.heShe() + " holds " + c.hisHer() + " torn " + c.topDesc() + " closed to cover " + c.hisHer() + " " + breasts);
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " needs to devote one bruised arm toward holding " + c.hisHer() + " torn " + c.topDesc() + " closed in order to keep " + c.hisHer() + " " + breasts + " covered");
                }
            }
            else if (c.getINJULevel() == 2) {
                if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + " makes for a sad sight with " + c.hisHer() + " torn " + c.topDesc() + ", flinching away from the Demons' attacks and crossing " + c.hisHer() + " arms in front of " + c.hisHer() + " bare " + breasts);
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " bloodied arm holds " + c.hisHer() + " torn " + c.topDesc() + " closed with a weakening grip in order to keep " + c.hisHer() + " " + breasts + " covered");
                }
            }
            else if (c.getINJULevel() == 3) {
                if (w.tickle()) {
                    w.append(t, "Moaning with exhaustion, " + c.heShe() + " has trouble holding " + c.hisHer() + " torn " + c.topDesc() + " closed to cover " + c.hisHer() + " " + breasts);
                }
                else {
                    w.append(t, "With one arm fractured, " + c.heShe() + " has trouble holding " + c.hisHer() + " torn " + c.topDesc() + " closed to cover " + c.hisHer() + " " + breasts);
                }
            }
            else if (w.tickle()) {
                w.append(t, "Twitching reflexively at the lightest touch, " + c.heShe() + " has no hope of holding " + c.hisHer() + " torn " + c.topDesc() + " closed to conceal " + c.hisHer() + " " + breasts);
            }
            else {
                w.append(t, "With " + c.hisHer() + " shattered body, " + c.heShe() + " has no hope of holding " + c.hisHer() + " torn " + c.topDesc() + " closed to conceal " + c.hisHer() + " " + breasts);
            }
            if (c.getPLEALevel() == 0) {
                if (c.getEXPOLevel() == 2) {
                    if (c.topDesc().equals(c.bottomDesc())) {
                        w.append(t, ", and " + c.hisHer() + " legs are completely exposed up to the hip.");
                    }
                    else {
                        w.append(t, ", while " + c.hisHer() + " legs are completely exposed up to the hip by the damage to " + c.hisHer() + " " + c.bottomDesc() + ".");
                    }
                }
                else if (c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, ", and " + c.heShe() + " has to be careful not to reveal " + c.hisHer() + " lack of panties.");
                }
                else {
                    w.append(t, ", and the damage to " + c.hisHer() + " " + c.bottomDesc() + " nearly reveals " + c.hisHer() + " lack of panties.");
                }
            }
            else if (c.getPLEALevel() == 1) {
                if (c.getEXPOLevel() == 2) {
                    if (c.topDesc().equals(c.bottomDesc())) {
                        w.append(t, ", and the way the damaged garment completely exposes " + c.hisHer() + " legs makes " + c.himHer() + " blush deeply.");
                    }
                    else {
                        w.append(t, ", while the damage to " + c.hisHer() + " " + c.bottomDesc() + " exposes enough leg to make " + c.himHer() + " blush deeply.");
                    }
                }
                else if (c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, ", and the way the damaged garment allows the cool air to blow over " + c.hisHer() + " pantiless crotch makes " + c.himHer() + " blush with embarrassment and arousal.");
                }
                else {
                    w.append(t, ", while the damage to " + c.hisHer() + " " + c.bottomDesc() + " allows cool air to blow over " + c.hisHer() + " pantiless crotch, making " + c.himHer() + " blush with arousal.");
                }
            }
            else if (c.getPLEALevel() == 2) {
                w.append(t, " as they heave with moans of arousal.  ");
                if (c.getEXPOLevel() == 2) {
                    if (c.topDesc().equals(c.bottomDesc())) {
                        w.append(t, String.valueOf(c.HisHer()) + " legs are also completely exposed by the damaged garment.");
                    }
                    else {
                        w.append(t, "There's also significant damage to " + c.hisHer() + " " + c.bottomDesc() + ", exposing " + c.hisHer() + " legs up to the hip.");
                    }
                }
                else if (c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, "The damaged garment also threatens to expose " + c.hisHer() + " lack of panties.");
                }
                else {
                    w.append(t, "There's also significant damage to " + c.hisHer() + " " + c.bottomDesc() + ", threatening to expose " + c.hisHer() + " lack of panties.");
                }
            }
            else if (c.getPLEALevel() == 3) {
                if (c.getEXPOLevel() == 2) {
                    if (c.topDesc().equals(c.bottomDesc())) {
                        if (c.gender.equals("female")) {
                            w.append(t, ", and the damaged garment also reveals " + c.hisHer() + " thighs, glistening with " + c.hisHer() + " juices.");
                        }
                        else if (c.gender.equals("male")) {
                            w.append(t, ", and the damaged garment is tented up by " + c.hisHer() + " erection to reveal " + c.hisHer() + " thighs.");
                        }
                        else {
                            w.append(t, ", and the damaged garment is tented up by " + c.hisHer() + " erection to reveal " + c.hisHer() + " thighs, glistening with " + c.hisHer() + " juices.");
                        }
                    }
                    else if (c.gender.equals("female")) {
                        w.append(t, ", while the damage to " + c.hisHer() + " " + c.bottomDesc() + " also reveals " + c.hisHer() + " thighs, glistening with " + c.hisHer() + " juices.");
                    }
                    else if (c.gender.equals("male")) {
                        w.append(t, ", while " + c.hisHer() + " straining erection tents " + c.hisHer() + " torn " + c.bottomDesc() + " upward to reveal " + c.hisHer() + " thighs.");
                    }
                    else {
                        w.append(t, ", while " + c.hisHer() + " straining erection tents " + c.hisHer() + " torn " + c.bottomDesc() + " upward to reveal " + c.hisHer() + " thighs, glistening with " + c.hisHer() + " juices.");
                    }
                }
                else if (c.topDesc().equals(c.bottomDesc())) {
                    if (c.gender.equals("female")) {
                        w.append(t, ", and the damaged garment also threatens to reveal " + c.hisHer() + " lack of panties and the fact that " + c.hisHer() + " juices drip down " + c.hisHer() + " thighs.");
                    }
                    else if (c.gender.equals("male")) {
                        w.append(t, ", " + c.hisHer() + " straining erection lifts the damaged garment almost enough to reveal " + c.hisHer() + " lack of panties.");
                    }
                    else {
                        w.append(t, ", " + c.hisHer() + " straining erection lifts the damaged garment almost enough to reveal " + c.hisHer() + " lack of panties and the fact that " + c.hisHer() + " juices drip down " + c.hisHer() + " thighs.");
                    }
                }
                else if (c.gender.equals("female")) {
                    w.append(t, ", while the damage to " + c.hisHer() + " " + c.bottomDesc() + " threatens to reveal " + c.hisHer() + " lack of panties and the fact that " + c.hisHer() + " juices drip down " + c.hisHer() + " thighs.");
                }
                else if (c.gender.equals("male")) {
                    w.append(t, ", while " + c.hisHer() + " straining erection lifts " + c.hisHer() + " damaged " + c.bottomDesc() + " almost enough to reveal " + c.hisHer() + " lack of panties.");
                }
                else {
                    w.append(t, ", while " + c.hisHer() + " straining erection lifts " + c.hisHer() + " damaged " + c.bottomDesc() + " almost enough to reveal " + c.hisHer() + " lack of panties and the fact that " + c.hisHer() + " juices drip down " + c.hisHer() + " thighs.");
                }
            }
            else if (c.getEXPOLevel() == 2) {
                if (c.topDesc().equals(c.bottomDesc())) {
                    w.append(t, ", and the garment's damage also completely exposes " + c.hisHer() + " legs, which spasm uncontrollably with pleasure.");
                }
                else {
                    w.append(t, ", while the damage to " + c.hisHer() + " " + c.bottomDesc() + " exposes " + c.hisHer() + " legs, which spasm uncontrollably with pleasure.");
                }
            }
            else if (c.topDesc().equals(c.bottomDesc())) {
                w.append(t, ", and the damaged garment also threatens to reveal " + c.hisHer() + " lack of panties, particularly with " + c.hisHer() + " legs spasming uncontrollably in pleasure.");
            }
            else {
                w.append(t, ", while the damage to " + c.hisHer() + " " + c.bottomDesc() + " threatens to reveal " + c.hisHer() + " lack of panties, particularly with " + c.hisHer() + " legs spasming uncontrollably in pleasure.");
            }
        }
        else {
            if (!c.topDesc().equals(c.bottomDesc()) || c.getEXPOLevel() > 4) {
                w.append(t, "With " + c.hisHer() + " " + c.topDesc() + " completely torn away, ");
            }
            else {
                w.append(t, "The top half of " + c.hisHer() + " " + c.topDesc() + " has been completely torn away, ");
            }
            if (c.getINJULevel() == 0) {
                w.append(t, "forcing " + c.himHer() + " to use one arm to cover " + c.hisHer() + " bare " + breasts + " ");
            }
            else if (c.getINJULevel() == 1) {
                if (w.tickle()) {
                    w.append(t, "and " + c.heShe() + " frowns with the effort of fighting while remembering to keep " + c.hisHer() + " " + breasts + " covered");
                }
                else {
                    w.append(t, "exposing " + c.hisHer() + " bruises and " + c.hisHer() + " " + breasts + " when " + c.heShe() + " isn't careful enough to cover them");
                }
            }
            else if (c.getINJULevel() == 2) {
                if (w.tickle()) {
                    w.append(t, "forcing " + c.himHer() + " to flinch away whenever the Demons try to force " + c.himHer() + " to stop covering " + c.hisHer() + " bare " + breasts);
                }
                else {
                    w.append(t, "forcing " + c.himHer() + " to use one bloodied arm to weakly cover " + c.hisHer() + " bare " + breasts);
                }
            }
            else if (c.getINJULevel() == 3) {
                if (w.tickle()) {
                    w.append(t, "and " + c.heShe() + "'s so out of breath that it's difficult for " + c.himHer() + " to remember to cover " + c.hisHer() + " bare " + breasts);
                }
                else {
                    w.append(t, "and " + c.hisHer() + " fractured arm makes it difficult for " + c.himHer() + " to cover " + c.hisHer() + " bare " + breasts);
                }
            }
            else if (w.tickle()) {
                w.append(t, "and with the way " + c.hisHer() + " sensitive body reacts to the lightest touch, " + c.heShe() + " has little hope of keeping " + c.hisHer() + " bare " + breasts + " hidden");
            }
            else {
                w.append(t, "and with " + c.hisHer() + " body shattered, " + c.heShe() + " has little hope of keeping " + c.hisHer() + " bare " + breasts + " hidden");
            }
            w.append(t, ".  ");
            if (c.topDesc().equals(c.bottomDesc()) && c.getEXPOLevel() > 4) {
                if (c.gender.equals("female")) {
                    w.append(t, String.valueOf(c.HisHer()) + " pussy is completely exposed as well.  It's practically impossible to keep it covered while fighting");
                }
                else if (c.gender.equals("male")) {
                    w.append(t, String.valueOf(c.HisHer()) + " penis is completely exposed as well.  It's practically impossible to keep it covered while fighting");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " penis and pussy are both completely exposed as well.  It's practically impossible to keep them covered while fighting");
                }
            }
            else if (c.getEXPOLevel() > 4) {
                if (c.gender.equals("female")) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s also lost " + c.hisHer() + " " + c.bottomDesc() + ", exposing " + c.hisHer() + " pussy too");
                }
                else if (c.gender.equals("male")) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s also lost " + c.hisHer() + " " + c.bottomDesc() + ", exposing " + c.hisHer() + " penis too");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + "'s also lost " + c.hisHer() + " " + c.bottomDesc() + ", exposing " + c.hisHer() + " pussy and penis too");
                }
            }
            else if (c.topDesc().equals(c.bottomDesc())) {
                w.append(t, "The scraps that remain are far too short to conceal " + c.hisHer() + " lack of panties");
            }
            else {
                w.append(t, "Parts of " + c.hisHer() + " " + c.bottomDesc() + " remain, but not nearly enough to hide " + c.hisHer() + " lack of panties");
            }
            if (c.getPLEALevel() == 0) {
                w.append(t, ".");
            }
            else if (c.getPLEALevel() == 1) {
                w.append(t, ", and the feeling of so many eyes watching " + c.himHer() + " brings a blush to " + c.hisHer() + " cheeks.");
            }
            else if (c.getPLEALevel() == 2) {
                w.append(t, ", and the feeling of so many eyes watching " + c.himHer() + " causes " + c.himHer() + " to pant and moan with arousal.");
            }
            else if (c.getPLEALevel() == 3) {
                if (c.gender.equals("female")) {
                    w.append(t, ", making the trails of wetness running down " + c.hisHer() + " thighs humiliatingly obvious.");
                }
                else {
                    w.append(t, ", making " + c.hisHer() + " straining erection humiliatingly obvious.");
                }
            }
            else {
                w.append(t, ", and " + c.hisHer() + " orgasmic spasms only make " + c.hisHer() + " humiliation more complete.");
            }
        }
        if (w.getTechs()[0].isOwned()) {
            c.printProfile(t, p, f, w);
        }
        if (w.tutorialResponse()) {
            if (w.getBattleRound() == 1) {
                if (w.tickle()) {
                    w.grayAppend(t, "\n\n(Most of the information here only shows up when the player has the Psychic Reading upgrade, which can be very useful for new players.  When breaking vulnerabilities, the circumstances listed on the right side are the most important thing to consider.  Looks like Miracle is weakest to ANTIcipation and strongest against HATE.  To make use of that, let's create an opening.  Threaten and Taunt only create openings when certain conditions hold, and she doesn't take much TICKle damage, so let's use Slime.)");
                }
                else {
                    w.grayAppend(t, "\n\n(Most of the information here only shows up when the player has the Psychic Reading upgrade, which can be very useful for new players.  When breaking vulnerabilities, the circumstances listed on the right side are the most important thing to consider.  Looks like Miracle is weakest to INJUry and strongest against HATE.  To make use of that, let's create an opening.  Threaten and Taunt only create openings when certain conditions hold, and she doesn't take much PAIN damage, so let's use Slime.)");
                }
            }
            else if (w.getBattleRound() == 6 && c == w.getCast()[2]) {
                if (w.tickle()) {
                    w.grayAppend(t, "\n\n(You can see that if we had started the battle by going after Axiom instead, Miracle would have shown up on round 7.  Anyway, Axiom isn't very weak against FEAR, DISG, ANTI, or SHAM.  It would take two turns to set up an opening against her, and that time would be better spent working on our main target, Miracle.  Go back to the target selection screen.)");
                }
                else {
                    w.grayAppend(t, "\n\n(You can see that if we had started the battle by going after Axiom instead, Miracle would have shown up on round 7.  Anyway, Axiom isn't very weak against FEAR, DISG, PAIN, or SHAM.  It would take two turns to set up an opening against her, and that time would be better spent working on our main target, Miracle.  Go back to the target selection screen.)");
                }
            }
            else if (w.getBattleRound() == 7 && c == w.getCast()[1]) {
                w.grayAppend(t, "\n\n(Her pre-broken vulnerabilities mean that she's extremely weak to HATE and EXPO.  However, with all three Chosen here, the battle is quickly moving toward its ending, and we don't have time to both set up an opening and then take it.  This sort of situation is what Commanders are for.  If you hover over the purple Capture button, you can see the traits of the Commander that's been brought to this battle.  It specializes in EXPO, which is Spice's biggest weakness.  This Commander cost 2 Evil Energy to make, but as long as we get at least 2 Evil Energy from breaking vulnerabilities, it's definitely worth it.  Capture Spice!");
            }
        }
    }
    
    public void Orgy(final JTextPane t, final JPanel p, final JFrame f, final Chosen c) {
        final WorldState w = this;
        String topDesc = c.topCover;
        final int morality = c.morality;
        final int innocence = c.innocence;
        final int confidence = c.confidence;
        final int dignity = c.dignity;
        final Boolean vVirg = c.vVirg;
        final Boolean cVirg = c.cVirg;
        final Boolean aVirg = c.aVirg;
        final Boolean modest = c.modest;
        final String mainName = c.getMainName();
        final String bottomCover = c.bottomCover;
        if (topDesc.equals("crop")) {
            topDesc = "crop top";
        }
        else if (topDesc.equals("strips")) {
            topDesc = "strips of cloth";
        }
        String bottomDesc = c.bottomCover;
        final String topCover = c.topCover;
        final String feetType = c.feetType;
        final String underType = c.underType;
        final String bottomAccess = c.bottomAccess;
        if (bottomDesc.equals("strips")) {
            bottomDesc = "strips of cloth";
        }
        String hole = "pussy";
        if (c.getGender().equals("male")) {
            hole = "anus";
        }
        String organ = "penis";
        if (c.getGender().equals("female")) {
            organ = "clit";
        }
        final int thisAttack = c.nextAttack[0];
        c.nextAttack[0] = c.nextAttack[1];
        c.nextAttack[1] = c.nextAttack[2];
        c.nextAttack[2] = thisAttack;
        Chosen high = null;
        Chosen mid = null;
        Chosen low = null;
        for (int i = 0; i < 3; ++i) {
            if (w.getCast()[i].getConfidence() > 66) {
                high = w.getCast()[i];
            }
            else if (w.getCast()[i].getConfidence() > 33) {
                mid = w.getCast()[i];
            }
            else {
                low = w.getCast()[i];
            }
        }
        int variant = w.getOrgyStage();
        int valueCheck = 0;
        int order = 0;
        if (c.confidence > 66) {
            order = 0;
        }
        else if (c.confidence > 33) {
            order = 1;
        }
        else {
            order = 2;
        }
        valueCheck = w.getLastOrgyStage()[order];
        if (valueCheck == variant) {
            w.cycleOrgyStage();
            variant = w.getOrgyStage();
        }
        Boolean variantFound = false;
        while (!variantFound) {
            if ((c.vVirg || c.getHATELevel() < 3) && (c.cVirg || c.getPLEALevel() < 3) && (c.aVirg || c.getINJULevel() < 3) && (c.modest || c.getEXPOLevel() < 3)) {
                variant = 4;
                variantFound = true;
            }
            else if ((variant == 0 && !c.vVirg && c.getHATELevel() >= 3) || (variant == 1 && !c.cVirg && c.getPLEALevel() >= 3) || (variant == 2 && !c.aVirg && c.getINJULevel() >= 3) || (variant == 3 && !c.modest && c.getEXPOLevel() >= 3)) {
                variantFound = true;
            }
            else {
                w.cycleOrgyStage();
                variant = w.getOrgyStage();
            }
        }
        Boolean solo = true;
        Boolean trio = false;
        Chosen partner = null;
        Boolean hated = true;
        Boolean loved = false;
        Chosen lover = null;
        for (int j = 0; j < 3; ++j) {
            if (w.getCast()[j] != c) {
                if ((variant == 0 && w.getCast()[j].getHATELevel() >= 3 && !w.getCast()[j].isVVirg()) || (variant == 1 && w.getCast()[j].getPLEALevel() >= 3 && !w.getCast()[j].isCVirg()) || (variant == 2 && w.getCast()[j].getINJULevel() >= 3 && !w.getCast()[j].isAVirg()) || (variant == 3 && w.getCast()[j].getEXPOLevel() >= 3 && !w.getCast()[j].isModest())) {
                    if (partner == null) {
                        partner = w.getCast()[j];
                        solo = false;
                    }
                    else {
                        trio = true;
                    }
                }
                if (w.getRelationship(c.number, w.getCast()[j].getNumber()) >= 0) {
                    if (lover == null) {
                        lover = w.getCast()[j];
                        hated = false;
                    }
                    else {
                        loved = true;
                    }
                }
            }
        }
        if (c.confidence > 66) {
            if (variant == 0) {
                if (c.getEXPOLevel() < 3 || c.modest) {
                    if (dignity > 66) {
                        w.append(t, String.valueOf(mainName) + " glares indignantly at the Thralls pulling aside " + c.hisHer() + " " + bottomDesc);
                    }
                    else if (dignity > 33) {
                        w.append(t, String.valueOf(mainName) + " struggles with all " + c.hisHer() + " strength, giving pause to the Thralls pulling aside " + c.hisHer() + " " + bottomDesc);
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " kicks and screams at the Thralls pulling aside " + c.hisHer() + " " + bottomDesc);
                    }
                }
                else if (dignity > 66) {
                    w.append(t, String.valueOf(mainName) + " blushes bright red from anger and indignation as the Thralls bring their cameras close to " + c.hisHer() + " crotch");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(mainName) + " struggles with all " + c.hisHer() + " strength, giving pause to the Thralls spreading " + c.hisHer() + " legs in order to film " + c.hisHer() + " crotch");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " kicks and screams at the Thralls bringing their cameras close to " + c.hisHer() + " crotch");
                }
                String another = "one of the Thralls ";
                if (c.getINJULevel() < 3 || aVirg) {
                    if (morality > 66) {
                        w.append(t, ", eyes focused and determined.  However, " + c.heShe() + " ");
                    }
                    else if (morality > 33) {
                        w.append(t, ", not even close to giving up.  However, " + c.heShe() + " ");
                    }
                    else {
                        w.append(t, ", eyes full of rage and hatred.  However, " + c.heShe() + " ");
                    }
                }
                else if (w.tickle()) {
                    if (morality > 66) {
                        w.append(t, ", but " + c.hisHer() + " heroic demeanor is shattered when the Thralls start tickling " + c.himHer() + ", drawing out shrieks of laughter.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, ", but then the Thralls start tickling " + c.himHer() + ", causing " + c.himHer() + " to burst into helpless laughter that's very unlike " + c.hisHer() + " normal severe expression.  ");
                    }
                    else {
                        w.append(t, ", but then the Thralls start tickling " + c.himHer() + ", and " + c.hisHer() + " bloodthirsty expression melts into helpless laughter.  ");
                    }
                    w.append(t, String.valueOf(c.HeShe()) + " ");
                }
                else if (c.getGender().equals("male")) {
                    if (morality > 66) {
                        w.append(t, ", only to start cursing and screaming openly when the Thralls start stomping on " + c.hisHer() + " penis.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, ", grunting in pain and struggling to keep " + c.hisHer() + " cool as the Thralls viciously stomp on " + c.hisHer() + " penis.  ");
                    }
                    else {
                        w.append(t, ", shouting threats that devolve into cries of pain as the Thralls stomp on " + c.hisHer() + " penis.  ");
                    }
                    w.append(t, String.valueOf(c.HeShe()) + " ");
                }
                else {
                    if (morality > 66) {
                        w.append(t, ", only to start wailing openly when one of the Thralls pushes his cock into " + c.hisHer() + " ass.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, ", grunting in pain and struggling to keep " + c.hisHer() + " cool as " + c.heShe() + " feels one of the Thralls' cocks begin forcing its way up " + c.hisHer() + " ass.  ");
                    }
                    else {
                        w.append(t, ", shouting threats that devolve into pitiful squeals as one of the Thralls forces himself further and further up " + c.hisHer() + " ass.  ");
                    }
                    w.append(t, String.valueOf(c.HeShe()) + " ");
                    another = "another Thrall ";
                }
                if (c.getPLEALevel() < 3 || cVirg) {
                    if (innocence > 66) {
                        w.append(t, "screams as " + another + "penetrates " + c.hisHer() + " " + hole + ", vainly calling him names and trying to push him away.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, "grits " + c.hisHer() + " teeth as " + c.heShe() + " endures " + another + "fucking " + c.hisHer() + " " + hole + ".  ");
                    }
                    else {
                        w.append(t, "huffs in indignation when " + another + "begins to slowly penetrate " + c.hisHer() + " " + hole + ", doing " + c.hisHer() + " best to ignore the unwelcome violation and search for a way to escape.  ");
                    }
                }
                else if (innocence > 66) {
                    w.append(t, "cums instantly when " + another + "starts fucking " + c.hisHer() + " " + hole + ", too caught up in the pleasure to care about resisting anymore.  ");
                }
                else if (innocence > 33) {
                    w.append(t, "can only grit " + c.hisHer() + " teeth against the pleasure when " + another + "starts fucking " + c.hisHer() + " " + hole + ", and it's not long before " + c.heShe() + "'s moaning in an unwilling climax.  ");
                }
                else {
                    w.append(t, "stifles a desperate moan when " + another + "penetrates " + c.hisHer() + " " + hole + ", clinging to " + c.hisHer() + " sanity for only a few moments before the overwhelming pleasure forces " + c.himHer() + " to cum.  ");
                }
                if (solo) {
                    if (mid.getHATELevel() < 3) {
                        if (low.getHATELevel() < 3) {
                            w.append(t, "With the other Chosen's Sexual Barriers still intact, the Thralls eagerly gather around to put " + mainName + " in " + c.hisHer() + " place.");
                        }
                        else {
                            w.append(t, "With " + mid.getMainName() + "'s Sexual Barrier still intact and " + low.getMainName() + " occupied by other tortures, the Thralls eagerly gather around to put " + mainName + " in " + c.hisHer() + " place.");
                        }
                    }
                    else if (low.getHATELevel() < 3) {
                        w.append(t, "With " + low.getMainName() + "'s Sexual Barrier still intact and " + mid.getMainName() + " still managing to barely fend off " + mid.hisHer() + " attackers, the Thralls eagerly gather around to put " + mainName + " in " + c.hisHer() + " place.");
                    }
                    else {
                        w.append(t, "With " + mid.getMainName() + " still managing to fend off " + mid.hisHer() + " attackers and " + low.getMainName() + " occupied by other tortures, the Thralls eagerly gather around to put " + mainName + " in " + c.hisHer() + " place.");
                    }
                }
                else if (trio) {
                    if (hated) {
                        w.append(t, String.valueOf(mid.getMainName()) + " and " + low.getMainName() + ", who are also being raped by the Thralls, glare angrily at " + mainName + " - silently blaming " + c.himHer() + " for not using " + c.hisHer() + " greater strength to stop this.");
                    }
                    else if (loved) {
                        w.append(t, "The Thralls raping " + mid.getMainName() + " and " + low.getMainName() + " threaten to hurt them worse unless " + mainName + " moves " + c.hisHer() + " hips on " + c.hisHer() + " own, and " + c.heShe() + " tries to focus and go along with it.");
                    }
                    else {
                        w.append(t, "The Thralls raping " + mid.getMainName() + " and " + low.getMainName() + " threaten to hurt them worse unless " + mainName + " moves " + c.hisHer() + " hips on " + c.hisHer() + " own, and " + c.heShe() + " complies - mostly for " + lover.getMainName() + "'s sake.");
                    }
                }
                else if (loved || partner == lover) {
                    w.append(t, "At the sight of " + partner.getMainName() + " breaking under " + partner.hisHer() + " own rape, " + mainName + " challenges the Thralls to come after " + c.himHer() + ", taking some of the pressure off " + c.hisHer() + " friend.");
                }
                else {
                    w.append(t, "The Thrall raping " + partner.getMainName() + " pushes " + partner.hisHer() + " crotch against " + mainName + "'s, forcing " + partner.getMainName() + " to grind against " + c.himHer() + ".  The other Thralls laugh at the anger that's obvious on their faces.");
                }
            }
            else if (variant == 1) {
                if (c.getEXPOLevel() < 3 || modest) {
                    if (dignity > 66) {
                        w.append(t, "Full of indignant fury, " + mainName + " tries to fend off the Thralls in the process of stripping " + c.himHer() + ", but ");
                    }
                    else if (dignity > 33) {
                        w.append(t, "A stubborn set in " + c.hisHer() + " jaw, " + mainName + " firmly grasps " + c.hisHer() + " " + bottomDesc + " and refuses to let the Thralls strip " + c.himHer() + ", but ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " is struggling with all " + c.hisHer() + " might, not even caring how much " + c.heShe() + "'s tearing " + c.hisHer() + " own " + bottomDesc + " in the process, but ");
                    }
                    w.append(t, String.valueOf(c.heShe()) + " can't stop one of them from slipping under " + c.hisHer() + " clothes and ");
                }
                else {
                    if (dignity > 66) {
                        w.append(t, "Boiling over with rage, " + mainName + " furiously glares and kicks at any Thralls who dare film " + c.hisHer() + " exposed body, but ");
                    }
                    else if (dignity > 33) {
                        w.append(t, String.valueOf(mainName) + " grits " + c.hisHer() + " teeth and squeezes " + c.hisHer() + " thighs together, but ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s bare legs kick wildly as " + c.heShe() + " tries to escape, flashing the Thralls and their cameras, but ");
                    }
                    w.append(t, String.valueOf(c.heShe()) + " has no protection whatsoever from the Thrall ");
                }
                if (c.getINJULevel() < 3 || aVirg) {
                    if (innocence > 66) {
                        w.append(t, "fondling " + c.hisHer() + " " + organ + " until the pleasure makes it hard for " + c.himHer() + " to remember that " + c.heShe() + "'s supposed to resist.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, "fondling " + c.hisHer() + " " + organ + " until " + c.hisHer() + " resistance begins to weaken under the growing pleasure.  ");
                    }
                    else {
                        w.append(t, "fondling " + c.hisHer() + " " + organ + " until it becomes difficult for " + c.himHer() + " to maintain " + c.hisHer() + " rationality.  ");
                    }
                }
                else if (w.tickle()) {
                    if (innocence > 66) {
                        w.append(t, "tickling " + c.himHer() + " until " + c.hisHer() + " squirming laughter leaves " + c.hisHer() + " " + organ + " wide open to the others' fondling.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, "tickling " + c.himHer() + " to force " + c.himHer() + " to laugh and let " + c.hisHer() + " guard down, then pulling " + c.hisHer() + " legs apart so the others can fondle " + c.hisHer() + " " + organ + ".  ");
                    }
                    else {
                        w.append(t, "tickling " + c.himHer() + " until " + c.hisHer() + " willpower finally breaks and " + c.heShe() + " starts thrashing with unwilling laughter, letting " + c.hisHer() + " guard down enough that the others can concentrate their attention on " + c.hisHer() + " " + organ + ".  ");
                    }
                }
                else if (c.getGender().equals("male")) {
                    if (innocence > 66) {
                        w.append(t, "cruelly pinching and twisting " + c.hisHer() + " penis in a way that leaves " + c.himHer() + " too dazed and confused with combined pleasure and pain to continue fighting.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, "manhandling " + c.hisHer() + " penis, breaking " + c.hisHer() + " will to fight with combined pleasure and pain.  ");
                    }
                    else {
                        w.append(t, "alternating between stroking " + c.hisHer() + " penis and harshly pinching it, using the unexpected sensations to wear down " + c.hisHer() + " willpower.  ");
                    }
                }
                else if (innocence > 66) {
                    w.append(t, "penetrating " + c.hisHer() + " ass, the painful thrusts eventually building into a strange pleasure deep inside " + c.himHer() + ".  ");
                }
                else if (innocence > 33) {
                    w.append(t, "ramming up " + c.hisHer() + " ass, breaking " + c.hisHer() + " will to fight with the combination of pain and pleasure deep inside.  ");
                }
                else {
                    w.append(t, "repeatedly sliding his cock in and out of " + c.hisHer() + " asshole until " + c.hisHer() + " willpower finally breaks and " + c.heShe() + " starts groaning at the intense stimulation.  ");
                }
                if (c.getHATELevel() < 3 || vVirg) {
                    if (morality > 66) {
                        w.append(t, String.valueOf(c.HisHer()) + " heroic effort to hold back only delays the inevitable for a few moments before " + c.heShe() + " cums, ");
                    }
                    else if (morality > 33) {
                        w.append(t, String.valueOf(c.HisHer()) + " limbs lose all their strength as " + c.heShe() + " cums, ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " enraged kicking weakens as " + c.heShe() + " cums, ");
                    }
                }
                else if (morality > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " tries to calm down and remain focused, but then another Thrall's cock pushes into " + c.hisHer() + " " + hole + ", forcing " + c.himHer() + " to cum again, ");
                }
                else if (morality > 33) {
                    w.append(t, "When another Thrall's cock pushes into " + c.hisHer() + " " + hole + ", " + c.heShe() + " cums hard, ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " bloodthirsty rage has left " + c.hisHer() + " Sexual Barrier completely broken, allowing another Thrall's cock to plunge into " + c.hisHer() + " " + hole + ".  The penetration makes " + c.himHer() + " cum instantly, ");
                }
                if (solo) {
                    if (hated) {
                        w.append(t, "moaning out loud while " + mid.getMainName() + " and " + low.getMainName() + " look on in disappointment.");
                    }
                    else if (loved) {
                        w.append(t, "moaning out loud while " + mid.getMainName() + " and " + low.getMainName() + " blush and look away.");
                    }
                    else {
                        w.append(t, "moaning " + lover.getMainName() + "'s name.");
                    }
                }
                else if (trio) {
                    if (loved) {
                        w.append(t, "turned on even more by " + mid.getMainName() + "'s and " + low.getMainName() + "'s own orgasmic moans.");
                    }
                    else if (hated) {
                        w.append(t, "and while " + c.heShe() + " hates to admit it to " + c.himHer() + "self, the sound of " + mid.getMainName() + "'s and " + low.getMainName() + "'s own moans of orgasm are turning " + c.himHer() + " on even more.");
                    }
                    else {
                        w.append(t, String.valueOf(c.hisHer()) + " orgasmic moans joining those of " + mid.getMainName() + " and " + low.getMainName() + ".");
                    }
                }
                else if (loved || lover == partner) {
                    w.append(t, "the sound of " + c.hisHer() + " moans pushing " + partner.getMainName() + " over the edge into " + partner.hisHer() + " own orgasm as well.");
                }
                else {
                    w.append(t, "moaning out loud until the Thralls force " + c.hisHer() + " mouth against " + partner.getMainName() + "'s.  The two Chosen find themselves muffling each other's orgasmic cries with an unwilling kiss.");
                }
            }
            else if (variant == 2) {
                if (c.getEXPOLevel() < 3 || modest) {
                    if (dignity > 66) {
                        w.append(t, String.valueOf(mainName) + "'s expression of cold rage breaks with a ");
                    }
                    else if (dignity > 33) {
                        w.append(t, String.valueOf(mainName) + "'s determined struggles abruptly falter, and " + c.heShe() + " lets out a ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " struggles without regard for the Thralls grabbing " + c.himHer() + " by " + c.hisHer() + " " + bottomDesc + ", letting out a ");
                    }
                }
                else if (dignity > 66) {
                    w.append(t, "Being seen in such a humiliating state has wounded " + mainName + "'s pride, and it gets even worse when " + c.heShe() + "'s forced to let out a ");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(mainName) + " tries to ignore the cameras filming " + c.himHer() + " in " + c.hisHer() + " near-nude state, but the distraction weakens " + c.hisHer() + " usual strong will, and " + c.heShe() + " finds " + c.himHer() + "self unable to keep in " + c.hisHer() + " ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " struggles without regard for how " + c.hisHer() + " near-nudity is resulting in an erotic show for the cameras, letting out a ");
                }
                if (w.tickle()) {
                    w.append(t, "cry of high-pitched laughter as the Thralls tickle " + c.himHer() + ".  ");
                }
                else if (c.getGender().equals("male")) {
                    w.append(t, "cry of pain as a Thrall's boot crushes " + c.hisHer() + " testicles.  ");
                }
                else {
                    w.append(t, "breathless groan as the Thrall behind " + c.himHer() + " thrusts in and out of " + c.hisHer() + " ass.  ");
                }
                if (c.getPLEALevel() < 3 || cVirg) {
                    if (innocence > 66) {
                        w.append(t, String.valueOf(c.HeShe()) + "'s confused about how " + c.heShe() + " can be so weak to something so simple, ");
                    }
                    else if (innocence > 33) {
                        w.append(t, String.valueOf(c.HisHer()) + " body won't obey " + c.hisHer() + " wishes, ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " feels like " + c.heShe() + " should have acclimated to this torture by now, but it's still as effective as ever, ");
                    }
                }
                else if (innocence > 66) {
                    w.append(t, "The strange stimulation is impossible to fight, causing " + c.himHer() + " to cum again, ");
                }
                else if (innocence > 33) {
                    w.append(t, "Confused by the overwhelming sensations, " + c.hisHer() + " body orgasms against " + c.hisHer() + " will, ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " has been trying to mentally train " + c.himHer() + "self to endure this sort of thing, but " + c.heShe() + " still reaches climax as quickly as ever, ");
                }
                if (c.getHATELevel() < 3 || vVirg) {
                    if (morality > 66) {
                        w.append(t, "and " + c.heShe() + " can't help but wonder whether " + c.heShe() + " was ever truly strong at all.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, "leaving " + c.himHer() + " unusually helpless.  ");
                    }
                    else {
                        w.append(t, "leaving " + c.himHer() + " unable to even coherently word " + c.hisHer() + " threats at the surrounding Thralls.  ");
                    }
                }
                else if (morality > 66) {
                    w.append(t, "and " + c.hisHer() + " sense of pride and heroism is further broken down as the other Thralls take turns violating " + c.hisHer() + " " + hole + ".  ");
                }
                else if (morality > 33) {
                    w.append(t, "leaving " + c.himHer() + " completely helpless as the other Thralls take turns fucking " + c.hisHer() + " " + hole + ".  ");
                }
                else {
                    w.append(t, "leaving " + c.himHer() + " helpless to do anything but scream in rage as another Thrall penetrates " + c.hisHer() + " " + hole + ".  ");
                }
                if (solo) {
                    if (loved) {
                        w.append(t, String.valueOf(mid.getMainName()) + " and " + low.getMainName() + " are horrified and heartbroken at seeing their stronger friend abused so savagely.");
                    }
                    else if (hated) {
                        w.append(t, "Despite their rivalry, " + mid.getMainName() + " and " + low.getMainName() + " are both horrified at the sight of their stronger teammate being so savagely abused.");
                    }
                    else {
                        w.append(t, "Despite their very different opinions of " + c.himHer() + ", " + mid.getMainName() + " and " + low.getMainName() + " are both horrified by the display.");
                    }
                }
                else if (trio) {
                    w.append(t, String.valueOf(c.HisHer()) + " louder voice rises above " + mid.getMainName() + "'s and " + low.getMainName() + "'s own ");
                    if (w.tickle()) {
                        w.append(t, "unwilling laughter.");
                    }
                    else {
                        w.append(t, "moans of pain.");
                    }
                }
                else if (loved || lover == partner) {
                    w.append(t, "For " + partner.getMainName() + ", who had been relying on " + mainName + "'s strength, the sight saps " + c.hisHer() + " drive to resist");
                    if (w.tickle()) {
                        w.append(t, ", causing " + c.himHer() + " to let out " + c.hisHer() + " own unwilling laughter out as well.");
                    }
                    else {
                        w.append(t, ", causing " + c.himHer() + " to sob softly in despair.");
                    }
                }
                else {
                    w.append(t, "The Thralls taunt " + mainName + " with the fact that " + c.heShe() + "'s faring no better than " + partner.getMainName() + ", who's ");
                    if (w.tickle()) {
                        w.append(t, "also caught up in unwilling laughter.");
                    }
                    else {
                        w.append(t, "squirming uselessly and moaning in pain as well.");
                    }
                }
            }
            else if (variant == 3) {
                if (c.getINJULevel() < 3 || aVirg) {
                    if (dignity > 66) {
                        w.append(t, "Bringing their cameras close, the Thralls demand that " + mainName + " apologize for being such a bitch");
                    }
                    else if (dignity > 33) {
                        w.append(t, "The Thralls demand that " + mainName + " proclaim " + c.himHer() + "self a complete weakling in front of the cameras");
                    }
                    else {
                        w.append(t, "The Thralls demand that " + mainName + " suck their cocks in order to provide a sexy show for the cameras");
                    }
                }
                else if (w.tickle()) {
                    if (dignity > 66) {
                        w.append(t, "The filming Thralls capture a close-up of " + mainName + "'s laughing, tear-streaked face.  They tell " + c.himHer() + " that they won't let up on the tickling unless " + c.heShe() + " apologizes for being such a bitch");
                    }
                    else if (dignity > 33) {
                        w.append(t, "The Thralls demand that " + mainName + " acknowledge in front of the cameras that " + c.heShe() + " must be a true weakling to be so easily defeated by tickling");
                    }
                    else {
                        w.append(t, "Bringing their cameras close, the Thralls try to get " + mainName + " to suck their cocks while " + c.hisHer() + " mouth is forced open with laughter by the tickling");
                    }
                }
                else if (c.getGender().equals("male")) {
                    if (dignity > 66) {
                        w.append(t, "The filming Thralls capture a close-up of " + mainName + "'s grimacing, tear-streaked face.  They tell " + c.himHer() + " that they won't let up on " + c.hisHer() + " balls unless " + c.heShe() + " apologizes for tempting other guys with " + c.hisHer() + " body");
                    }
                    else if (dignity > 33) {
                        w.append(t, "The Thralls demand that " + mainName + " acknowledge in front of the cameras that " + c.heShe() + " must be a true weakling to submit so easily to a little bit of ballbusting");
                    }
                    else {
                        w.append(t, "Bringing their cameras close, the Thralls try to get " + mainName + " to suck their cocks while " + c.heShe() + "'s distracted by the pain of " + c.hisHer() + " bruised testicles");
                    }
                }
                else if (dignity > 66) {
                    w.append(t, "The filming Thralls capture a close-up of " + mainName + "'s cross-eyed expression as " + c.heShe() + "'s fucked up the ass.  They tell " + c.himHer() + " that they won't let up on " + c.himHer() + " unless " + c.heShe() + " apologizes for being such a bitch");
                }
                else if (dignity > 33) {
                    w.append(t, "The Thralls demand that " + mainName + " acknowledge in front of the cameras that " + c.heShe() + "'s a pervert who's enjoying being fucked up the ass");
                }
                else {
                    w.append(t, "Bringing their cameras close, the Thralls try to get " + mainName + " to suck their cocks while " + c.heShe() + "'s distracted by the cock up " + c.hisHer() + " ass");
                }
                if (c.getPLEALevel() < 3 || cVirg) {
                    if (innocence > 66) {
                        w.append(t, ", but when " + c.heShe() + " doesn't stop " + c.hisHer() + " wild attempts to punch and bite them, they ");
                    }
                    else if (innocence > 33) {
                        w.append(t, ", but when " + c.heShe() + " just clenches " + c.hisHer() + " teeth and glares at them, they ");
                    }
                    else {
                        w.append(t, ", but when " + c.heShe() + " coldly refuses, they ");
                    }
                }
                else {
                    if (innocence > 66) {
                        w.append(t, ", but " + c.heShe() + "'s too busy cumming from their fingers on " + c.hisHer() + " " + organ + " to cooperate.  ");
                    }
                    else if (innocence > 33) {
                        w.append(t, ", but " + c.heShe() + " refuses to respond, even as their fingers tease an orgasm from " + c.hisHer() + " " + organ + ".  ");
                    }
                    else {
                        w.append(t, ", but even though " + c.heShe() + "'s constantly cumming from their fingers on " + c.hisHer() + " " + organ + ", " + c.heShe() + " still manages to stammer out a flat refusal.  ");
                    }
                    w.append(t, "They ");
                }
                if (c.getHATELevel() < 3 || vVirg) {
                    if (morality > 66) {
                        w.append(t, "force " + c.himHer() + " to comply by threatening the others.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, "escalate the punishment even further.  ");
                    }
                    else {
                        w.append(t, "punish " + c.himHer() + " by ejaculating all over " + c.hisHer() + " face and chest - from a safe distance, of course.  ");
                    }
                }
                else if (morality > 66) {
                    w.append(t, "punish " + c.himHer() + " by violating " + c.hisHer() + " " + hole + ", telling " + c.himHer() + " to move " + c.hisHer() + " hips for them unless " + c.heShe() + " wants the others to suffer even worse treatment.  ");
                }
                else if (morality > 33) {
                    w.append(t, "punish " + c.himHer() + " by fucking " + c.hisHer() + " " + hole + " at the same time.  ");
                }
                else {
                    w.append(t, "punish " + c.himHer() + " by violating " + c.hisHer() + " " + hole + " at the same time, pinning " + c.himHer() + " down so " + c.heShe() + " can't fight back.  ");
                }
                if (solo) {
                    w.append(t, "The broadcasted display of weakness is not only a shock to " + c.hisHer() + " fans, ");
                    if (loved) {
                        w.append(t, "but a despair-inducing sight for " + mid.getMainName() + " and " + low.getMainName() + " as well.");
                    }
                    else if (hated) {
                        w.append(t, "but to " + c.hisHer() + " watching rivals as well.");
                    }
                    else {
                        w.append(t, "but a demoralizing sight for ");
                        if (lover == mid) {
                            w.append(t, String.valueOf(mid.getMainName()) + " and even " + low.getMainName() + " as well.");
                        }
                        else {
                            w.append(t, String.valueOf(low.getMainName()) + " and even " + mid.getMainName() + " as well.");
                        }
                    }
                }
                else if (trio) {
                    if (loved) {
                        w.append(t, "Even though it means the Thralls aren't paying so much attention to " + mid.getMainName() + " and " + low.getMainName() + ", they both find it somehow even worse to watch " + mainName + " suffer.");
                    }
                    else if (hated) {
                        w.append(t, String.valueOf(mid.getMainName()) + " and " + low.getMainName() + " can't help but feel relieved on some level that " + mainName + " is bearing the brunt of the Thralls' attention for the moment.");
                    }
                    else {
                        w.append(t, "While it means that the Thralls aren't paying so much attention to the other Chosen, " + lover.getMainName() + " still finds this painful to watch.");
                    }
                }
                else if (loved || lover == partner) {
                    w.append(t, "While it means that the Thralls aren't paying so much attention to " + partner.getMainName() + ", " + partner.heShe() + " still finds it painful to watch.");
                }
                else {
                    w.append(t, String.valueOf(partner.getMainName()) + " can't help but be relieved that the Thralls are distracted from torturing " + partner.himHer() + ".");
                }
            }
        }
        else if (confidence > 33) {
            if (variant == 0) {
                if (c.getINJULevel() < 3 || aVirg) {
                    if (morality > 66) {
                        w.append(t, String.valueOf(mainName) + " closes " + c.hisHer() + " eyes and tries to focus as the Thralls ");
                    }
                    else if (morality > 33) {
                        w.append(t, String.valueOf(mainName) + " is unable to contain a yelp of surprise as the Thralls ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " glares and desperately clenches " + c.hisHer() + " teeth as the Thralls ");
                    }
                }
                else if (w.tickle()) {
                    if (morality > 66) {
                        w.append(t, "Despite " + c.hisHer() + " heroic effort, " + mainName + " still ends up laughing helplessly as the Thralls tickle " + c.himHer() + " and ");
                    }
                    else if (morality > 33) {
                        w.append(t, String.valueOf(mainName) + " has no choice but to laugh openly as the Thralls tickle " + c.himHer() + " and ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " completely fails to intimidate the Thralls, laughter leaking out as they tickle " + c.himHer() + " and ");
                    }
                }
                else if (c.getGender().equals("male")) {
                    if (morality > 66) {
                        w.append(t, String.valueOf(mainName) + "'s heroic demeanor cracks as the Thralls stomp on " + c.hisHer() + " penis and ");
                    }
                    else if (morality > 33) {
                        w.append(t, String.valueOf(mainName) + " is unable to contain " + c.hisHer() + " cries of pain as the Thralls stomp on " + c.hisHer() + " penis and ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s attempt to intimidate the Thralls falls apart with a pathetic cry as they stomp on " + c.hisHer() + " penis and ");
                    }
                }
                else if (morality > 66) {
                    w.append(t, String.valueOf(mainName) + "'s heroic demeanor cracks as one Thrall thrusts into " + c.hisHer() + " ass while the others ");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " is unable to contain " + c.hisHer() + " cries of pain as one of the Thralls thrusts into " + c.hisHer() + " ass.  The others ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s attempt to intimidate the Thralls falls apart with a pathetic cry as one of them thrusts into " + c.hisHer() + " ass.  The others ");
                }
                if (c.getEXPOLevel() < 3 || modest) {
                    if (dignity > 66) {
                        w.append(t, "start trying to strip " + c.himHer() + ", ignoring " + c.hisHer() + " indignant protests.  ");
                    }
                    else if (dignity > 33) {
                        w.append(t, "force their hands under " + c.hisHer() + " " + bottomDesc + " and try to strip " + c.himHer() + ".  ");
                    }
                    else {
                        w.append(t, "grab " + c.himHer() + " by the " + bottomDesc + ", and " + c.hisHer() + " flailing efforts to escape accomplish nothing but tearing " + c.hisHer() + " clothes.  ");
                    }
                }
                else if (dignity > 66) {
                    w.append(t, "pry apart " + c.hisHer() + " tightly-clenched thighs to more easily film " + c.himHer() + " down there.  ");
                }
                else if (dignity > 33) {
                    w.append(t, "force " + c.hisHer() + " bare legs apart and bring their cameras in close.  ");
                }
                else {
                    w.append(t, "grab " + c.hisHer() + " kicking ankles and pull them apart in order to more easily film " + c.himHer() + " down there.  ");
                }
                if (solo) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s so distracted that " + c.heShe() + " can't even defend " + c.himHer() + "self when one of " + c.hisHer() + " attackers mounts " + c.himHer() + " and thrusts into " + c.hisHer() + " " + hole + ".  Being taken right in front of " + high.getMainName() + " and " + low.getMainName() + ", ");
                }
                else if (trio) {
                    w.append(t, "The three Chosen are all laid on their backs and fucked side-by-side.  ");
                    if (loved) {
                        w.append(t, String.valueOf(high.getMainName()) + " grasps one of " + mid.getMainName() + "'s hands and " + low.getMainName() + " takes the other as they endure their punishment together.  Grip tightening with every thrust against " + c.hisHer() + " ");
                        if (c.getGender().equals("male")) {
                            w.append(t, "bowels, ");
                        }
                        else {
                            w.append(t, "cervix, ");
                        }
                    }
                    else if (hated) {
                        w.append(t, "Staring straight ahead and refusing to meet " + high.getMainName() + "'s and " + low.getMainName() + "'s eyes, ");
                    }
                    else if (lover == high) {
                        w.append(t, "Doing " + c.hisHer() + " best to ignore " + low.getMainName() + "'s whimpering and take strength from " + high.getMainName() + "'s stubborn defiance, ");
                    }
                    else {
                        w.append(t, "Taking " + lover.getMainName() + " by the hand and murmuring reassuring words even as " + high.getMainName() + " grunts and groans next to them, ");
                    }
                }
                else {
                    w.append(t, String.valueOf(partner.getMainName()) + " is forced down atop " + c.himHer() + " and they're both fucked at the same time.  ");
                    if (lover == partner) {
                        w.append(t, "Sharing a passionate kiss with " + c.hisHer() + " friend, ");
                    }
                    else {
                        w.append(t, "Trying in vain to keep " + partner.getMainName() + "'s body from rubbing against " + c.himHer() + ", ");
                    }
                }
                if (c.getPLEALevel() < 3 || cVirg) {
                    if (innocence > 66) {
                        w.append(t, String.valueOf(mainName) + " squeals in mingled disgust and arousal as " + c.heShe() + " feels the Thrall cum inside.");
                    }
                    else if (innocence > 33) {
                        w.append(t, String.valueOf(mainName) + " tells " + c.himHer() + "self that " + c.heShe() + " won't lose to the pleasure.");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " ignores the building pleasure as best " + c.heShe() + " can.");
                    }
                }
                else {
                    if (innocence > 66) {
                        w.append(t, String.valueOf(mainName) + " is soon moaning openly in orgasm, having forgot completely about escape.  " + c.HisHer() + " whole body spasms");
                    }
                    else if (innocence > 33) {
                        w.append(t, String.valueOf(mainName) + " goes bright red with shame as " + c.heShe() + " feels " + c.himHer() + "self start to climax");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " knows there's no way " + c.heShe() + "'ll be able to stop the coming climax.  " + c.HisHer() + " body soon gives in");
                    }
                    if (c.getGender().equals("female")) {
                        w.append(t, ", squeezing down on the invading cock.");
                    }
                    else {
                        w.append(t, ", cumming all over " + c.hisHer() + " own chest.");
                    }
                }
            }
            else if (variant == 1) {
                if (c.getINJULevel() < 3 || aVirg) {
                    if (innocence > 66) {
                        w.append(t, String.valueOf(mainName) + " is dazed and confused by the pleasure inflicted by the Thralls stroking " + c.hisHer() + " " + organ);
                    }
                    else if (innocence > 33) {
                        w.append(t, "The Thralls pin " + mainName + " down and firmly stroke " + c.hisHer() + " " + organ);
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " tries to focus, but the pleasure of the Thralls stroking " + c.hisHer() + " " + organ + " is too strong");
                    }
                }
                else if (w.tickle()) {
                    if (innocence > 66) {
                        w.append(t, "The combination of the Thralls tickling " + c.himHer() + " and stroking " + c.hisHer() + " " + organ + " has left " + mainName + " barely aware of " + c.hisHer() + " surroundings");
                    }
                    else if (innocence > 33) {
                        w.append(t, String.valueOf(mainName) + " is unable resist the Thralls tickling " + c.himHer() + " and stroking " + c.hisHer() + " " + organ);
                    }
                    else {
                        w.append(t, "The laughter brought on by the Thralls' tickling has left " + mainName + " lightheaded and unable to focus, vulnerable to the hands stroking " + c.hisHer() + " " + organ);
                    }
                }
                else if (c.getGender().equals("male")) {
                    if (innocence > 66) {
                        w.append(t, "The combination of pain and pleasure inflicted by the Thralls tormenting " + c.hisHer() + " penis has left " + mainName + " barely aware of " + c.hisHer() + " surroundings");
                    }
                    else if (innocence > 33) {
                        w.append(t, String.valueOf(mainName) + " is unable to resist the Thralls alternating between stroking and stomping on " + c.hisHer() + " penis");
                    }
                    else {
                        w.append(t, "The repeated abuse to " + c.hisHer() + " bruised penis has left " + mainName + " lightheaded and unable to focus, especially as the Thralls' hands shift to inflicting pleasure rather than pain");
                    }
                }
                else if (innocence > 66) {
                    w.append(t, "The combination of the Thrall's cock up " + c.hisHer() + " ass and the others' hands stroking " + c.hisHer() + " " + organ + " has left " + mainName + " barely aware of " + c.hisHer() + " surroundings");
                }
                else if (innocence > 33) {
                    w.append(t, String.valueOf(mainName) + " is unable to resist the Thrall's cock thrusting up " + c.hisHer() + " ass as the others stroke " + c.hisHer() + " " + organ);
                }
                else {
                    w.append(t, "The repeated thrusting of the Thrall's cock up " + c.hisHer() + " ass has left " + mainName + " lightheaded and unable to focus, vulnerable to the hands stroking " + c.hisHer() + " " + organ);
                }
                if (c.getEXPOLevel() > 3 || modest) {
                    if (dignity > 66) {
                        w.append(t, ", but " + c.heShe() + " still reflexively tries to pull " + c.hisHer() + " " + bottomDesc + " back into place in order to hide " + c.hisHer() + " ");
                    }
                    else if (dignity > 33) {
                        w.append(t, ", and with " + c.hisHer() + " " + bottomDesc + " pulled aside, there's no hiding " + c.hisHer() + " ");
                    }
                    else {
                        w.append(t, ", and with " + c.hisHer() + " " + bottomDesc + " pulled aside, " + c.hisHer() + " reflexive kicking causes " + c.himHer() + " to completely expose " + c.hisHer() + " ");
                    }
                }
                else if (dignity > 66) {
                    w.append(t, ", especially with the overwhelming embarrassment at the Thralls filming " + c.hisHer() + " ");
                }
                else if (dignity > 33) {
                    w.append(t, ", and in " + c.hisHer() + " stripped state, everyone can see " + c.hisHer() + " ");
                }
                else {
                    w.append(t, ", and " + c.heShe() + " can't even spare a thought to hiding " + c.hisHer() + " ");
                }
                if (c.getGender().equals("female")) {
                    w.append(t, "dripping wet slit.  ");
                }
                else {
                    w.append(t, "pre-cum dripping out the tip.  ");
                }
                if (solo) {
                    w.append(t, String.valueOf(high.getMainName()) + " and " + low.getMainName() + " both find it increasingly hard not to get turned on as they watch more Thralls step forward to ");
                }
                else if (trio) {
                    if (loved) {
                        w.append(t, "Using " + high.getMainName() + "'s and " + low.getMainName() + "'s feelings against them, ");
                    }
                    else if (hated) {
                        w.append(t, "Savoring how much " + high.getMainName() + " and " + low.getMainName() + " hate this, ");
                    }
                    else if (lover == high) {
                        w.append(t, "Taking advantage of " + high.getMainName() + "'s feelings and " + low.getMainName() + "'s mental weakness, ");
                    }
                    else {
                        w.append(t, "Much to " + high.getMainName() + "'s anger and " + low.getMainName() + "'s despair, ");
                    }
                    if (high.getGender().equals("female") && low.getGender().equals("female")) {
                        w.append(t, "the Thralls force them against " + mainName + "'s thighs, grinding them together until they gasp and moan in climax.  Meanwhile, more Thralls step forward to ");
                    }
                    else if (high.getGender().equals("female")) {
                        w.append(t, "the Thralls make " + low.getMainName() + " join the Thralls attacking " + mainName + ".  " + high.getMainName() + " is forced to climax as " + high.heShe() + " watches, while the Thralls (with " + low.getMainName() + ") start to ");
                    }
                    else if (low.getGender().equals("female")) {
                        w.append(t, "the Thralls make " + high.getMainName() + " join the Thralls attacking " + mainName + ".  " + low.getMainName() + " is forced to climax as " + low.heShe() + " watches, while the Thralls (with " + high.getMainName() + ") start to ");
                    }
                    else {
                        w.append(t, "the Thralls force them to ");
                    }
                }
                else if (partner.getGender().equals("female")) {
                    w.append(t, "The Thralls force " + mainName + " and " + partner.getMainName() + " to grind their bodies together until they're both close to climax again, ");
                    if (loved || lover == partner) {
                        w.append(t, "using their mutual affection to make it more difficult for them to resist");
                    }
                    else {
                        w.append(t, "enjoying how much they obviously hate it");
                    }
                    w.append(t, ", then the Thralls themselves join in and ");
                }
                else if (loved || lover == partner) {
                    w.append(t, "Forcing " + partner.getMainName() + " to join the abuse of " + partner.hisHer() + " friend, the Thralls ");
                }
                else {
                    w.append(t, "The Thralls force " + partner.getMainName() + " to participate in the punishment, and together they start to ");
                }
                if (c.getHATELevel() < 3 || vVirg) {
                    w.append(t, "push their cocks into " + mainName + "'s mouth, " + c.hisHer() + " lips stretching to accommodate two at once.  ");
                    if (morality > 66) {
                        w.append(t, String.valueOf(mainName) + " reflexively sucks as " + c.heShe() + " climaxes, and " + c.hisHer() + " orgasmic moans drive them to cum down " + c.hisHer() + " throat.");
                    }
                    else if (morality > 33) {
                        w.append(t, String.valueOf(mainName) + " reaches " + c.hisHer() + " own orgasm as " + c.heShe() + " feels their cum shoot down " + c.hisHer() + " throat.");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s indignant anger doesn't stop " + c.himHer() + " from climaxing under the continued stimulation, and " + c.heShe() + " chokes on the cum being shot down " + c.hisHer() + " throat.");
                    }
                }
                else {
                    w.append(t, "fuck " + mainName + "'s " + hole + " together, stretching it wide enough to hold two cocks at once.  ");
                    if (morality > 66) {
                        w.append(t, String.valueOf(mainName) + "'s sense of violation doesn't stop " + c.himHer() + " from climaxing under the stimulation, and the feeling of the cocks shooting their loads inside " + c.himHer() + " only enhances the shameful pleasure.");
                    }
                    else if (morality > 33) {
                        w.append(t, "The feeling of both of them shooting their loads deep inside " + c.himHer() + " drives " + mainName + " to cum as well.");
                    }
                    else {
                        w.append(t, "The stimulation is too much to bear, and " + mainName + " wraps " + c.hisHer() + " legs around them as they reach simultaneous orgasm together.");
                    }
                }
            }
            else if (variant == 2) {
                if (w.tickle()) {
                    w.append(t, "The Thralls aren't content with just tickling " + mainName + " and ");
                }
                else if (c.getGender().equals("male")) {
                    w.append(t, "The Thralls aren't content with just torturing " + mainName + "'s penis and ");
                }
                else {
                    w.append(t, "Only one Thrall at a time can fit himself into " + mainName + "'s asshole, and the others aren't content with just ");
                }
                if (c.getEXPOLevel() < 3 || modest) {
                    if (dignity > 66) {
                        w.append(t, "pulling off " + c.hisHer() + " clothes, even though " + c.hisHer() + " clear embarrassment is somewhat satisfying.  ");
                    }
                    else if (dignity > 33) {
                        w.append(t, "tearing " + c.hisHer() + " clothes off.  ");
                    }
                    else {
                        w.append(t, "stripping " + c.himHer() + ", especially with how little embarrassment " + c.heShe() + "'s showing.  ");
                    }
                }
                else if (dignity > 66) {
                    w.append(t, "enjoying " + c.hisHer() + " obvious humiliation at being filmed in such an exposed state.  ");
                }
                else if (dignity > 33) {
                    w.append(t, "filming " + c.hisHer() + " exposed body.  ");
                }
                else {
                    w.append(t, "filming the places exposed by " + c.hisHer() + " torn clothes and splayed out limbs as " + c.heShe() + " struggles wildly to escape.  ");
                }
                if (solo) {
                    if (loved) {
                        w.append(t, "Ignoring " + high.getMainName() + "'s demands that they stop, they pull out their cocks, and " + low.getMainName() + " winces and averts " + low.hisHer() + " eyes.  ");
                    }
                    else if (hated) {
                        w.append(t, String.valueOf(high.getMainName()) + " and " + low.getMainName() + " watch without much of a reaction as the Thralls around " + mainName + " pull out their cocks.  ");
                    }
                    else {
                        w.append(t, String.valueOf(lover.getMainName()) + " raises " + c.hisHer() + " voice, trying to get the Thralls to stop, but they ignore " + c.himHer() + " and pull out their cocks.  ");
                    }
                    w.append(t, "They close in and ");
                }
                else if (trio) {
                    w.append(t, "The three Chosen are forced to kneel facing toward each other with their butts all facing outward toward the crowd");
                    if (loved) {
                        w.append(t, ", whispering reassurances to each other ");
                    }
                    else if (hated) {
                        w.append(t, ", glaring at each other ");
                    }
                    else {
                        w.append(t, ", their breath hot on each other's faces ");
                    }
                    if (high.getGender().equals("male") && low.getGender().equals("male")) {
                        w.append(t, "as the Thralls grab " + high.getMainName() + "'s and " + low.getMainName() + "'s bruised penises to make them hold still while their ass cheeks are spread wide open.  ");
                    }
                    else if (high.getGender().equals("male")) {
                        w.append(t, "as " + low.getMainName() + " whimpers with every thrust into " + c.hisHer() + " ass.  " + high.getMainName() + "'s bruised penis is grabbed firmly to make " + c.himHer() + " stop struggling as they spread " + c.hisHer() + " ass cheeks wide open.  ");
                    }
                    else if (low.getGender().equals("male")) {
                        w.append(t, "as " + high.getMainName() + " grunts and groans with every thrust into " + c.hisHer() + " ass.  " + low.getMainName() + "'s bruised penis is grabbed firmly, leaving " + c.himHer() + " unable to do anything but whimper in pain as they spread " + c.hisHer() + " ass cheeks wide open.  ");
                    }
                    else {
                        w.append(t, "as " + high.getMainName() + " and " + low.getMainName() + " endure their own anal rape.  ");
                    }
                    w.append(t, "The Thralls closest to " + mainName + " pull out their cocks and ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + "'s forced to lay atop " + partner.getMainName());
                    if (loved || partner == lover) {
                        w.append(t, ", who tries to say something supportive but stops with a gasp");
                    }
                    else {
                        w.append(t, ", who winces and frowns at " + c.himHer());
                    }
                    if (partner.getGender().equals("male")) {
                        w.append(t, " as the position puts pressure on " + partner.hisHer() + " ");
                        if (c.getGender().equals("male")) {
                            w.append(t, "own ");
                        }
                        w.append(t, "bruised penis.  ");
                    }
                    else {
                        w.append(t, " as " + c.heShe() + " endures the Thrall's cock thrusting in and out of " + c.hisHer() + " ");
                        if (!c.getGender().equals("male")) {
                            w.append(t, "own ");
                        }
                        w.append(t, "ass.  ");
                    }
                    w.append(t, "Crowding around the both of them, the Thralls on " + mainName + "'s side pull out their cocks and ");
                }
                if (c.getHATELevel() < 3 || vVirg) {
                    if (morality > 66) {
                        w.append(t, "grind against " + c.hisHer() + " whole body, taunting " + c.himHer() + " all the while in an effort to awaken " + c.hisHer() + " hatred.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, "grind against " + c.hisHer() + " whole body.  ");
                    }
                    else {
                        w.append(t, "grind against " + c.hisHer() + " whole body, careful to avoid " + c.hisHer() + " bared teeth.  ");
                    }
                    if (c.getHATELevel() < 3) {
                        w.append(t, String.valueOf(c.HisHer()) + " Sexual Barrier prevents them from penetrating " + c.himHer() + ", but the way their shafts rub against ");
                    }
                    else {
                        if (c.getGender().equals("male")) {
                            w.append(t, "They can't agree on who gets to teach " + c.himHer() + " the pleasure of getting fucked like a girl");
                        }
                        else {
                            w.append(t, "They can't agree on who gets to deflower " + c.himHer());
                        }
                        w.append(t, ", but the way their jostling shafts rub against ");
                    }
                    if (c.getGender().equals("female")) {
                        w.append(t, String.valueOf(c.hisHer()) + " clit ");
                    }
                    else {
                        w.append(t, String.valueOf(c.hisHer()) + " own ");
                    }
                }
                else if (morality > 66) {
                    w.append(t, "take turns penetrating " + c.hisHer() + " " + hole + ".  The sense of violation, as terrible as it feels, also ");
                }
                else if (morality > 33) {
                    w.append(t, "take turns fucking " + c.hisHer() + " " + hole + ".  The sensation of them cumming inside ");
                }
                else {
                    w.append(t, "take turns riding " + c.himHer() + ", penetrating " + c.hisHer() + " " + hole + " as " + c.heShe() + " angrily tries to buck them off.  It's infuriating, but it also ");
                }
                if (c.getPLEALevel() < 3 || cVirg) {
                    if (innocence > 66) {
                        w.append(t, "gives " + c.himHer() + " a sense of butterflies in " + c.hisHer() + " belly.");
                    }
                    else if (innocence > 33) {
                        w.append(t, "starts to turn " + c.himHer() + " on.");
                    }
                    else {
                        w.append(t, "causes a degree of sexual arousal " + c.heShe() + " can't deny.");
                    }
                }
                else if (innocence > 66) {
                    w.append(t, "makes " + c.hisHer() + " mind go pure white with pulses of pleasure.");
                }
                else if (innocence > 33) {
                    w.append(t, "doesn't take long to make " + c.himHer() + " cum.");
                }
                else {
                    w.append(t, "causes pleasure that quickly builds to the point of orgasm.");
                }
            }
            else if (variant == 3) {
                if (c.getINJULevel() < 3 || aVirg) {
                    if (dignity > 66) {
                        w.append(t, String.valueOf(mainName) + " struggles not to show any reaction as the Thralls ");
                    }
                    else if (dignity > 33) {
                        w.append(t, String.valueOf(mainName) + " tells the Thralls to stop, attempting to put authority into " + c.hisHer() + " voice, but they continue to ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " shouts for the Thralls to stop as they ");
                    }
                }
                else if (w.tickle()) {
                    if (dignity > 66) {
                        w.append(t, String.valueOf(mainName) + " struggles vainly to keep a straight face and suppress " + c.hisHer() + " laughter as the Thralls tickle " + c.hisHer() + " bare feet and ");
                    }
                    else if (dignity > 33) {
                        w.append(t, "Even as " + c.heShe() + " laughs uncontrollably, " + mainName + " tries to tell the Thralls to leave " + c.himHer() + " alone, but they continue to tickle " + c.hisHer() + " bare feet and ");
                    }
                    else {
                        w.append(t, "Laughing uncontrollably as the Thralls tickle " + c.hisHer() + " bare feet, " + mainName + " barely manages to tell them to stop, but they only torment " + c.himHer() + " even more, starting to ");
                    }
                }
                else if (c.getGender().equals("male")) {
                    if (dignity > 66) {
                        w.append(t, String.valueOf(mainName) + " struggles vainly to suppress " + c.hisHer() + " moans of pain as the Thralls crush " + c.hisHer() + " testicles and ");
                    }
                    else if (dignity > 33) {
                        w.append(t, "Even as " + c.heShe() + " moans in pain, " + mainName + " tries to tell the Thralls to leave " + c.himHer() + " alone, but they continue to crush " + c.hisHer() + " testicles as they ");
                    }
                    else {
                        w.append(t, "Squealing in pain as the Thralls crush " + c.hisHer() + " testicles, " + mainName + " tries to tell them to stop, but they only torment " + c.himHer() + " even more, starting to ");
                    }
                }
                else if (dignity > 66) {
                    w.append(t, String.valueOf(mainName) + " struggles vainly to suppress " + c.hisHer() + " little squeaks and moans as one of the Thralls fucks " + c.himHer() + " up the ass and the others ");
                }
                else if (dignity > 33) {
                    w.append(t, "Even as " + c.heShe() + " moans in mingled pain and pleasure at being fucked up the ass, " + mainName + " tries to tell the Thralls to leave " + c.himHer() + " alone, but they only move on to ");
                }
                else {
                    w.append(t, "Squealing as the Thralls fuck " + c.himHer() + " up the ass, " + mainName + " tries to tell them to stop, but they only torment " + c.himHer() + " even more, starting to ");
                }
                if (c.getHATELevel() < 3 || vVirg) {
                    if (morality > 66) {
                        w.append(t, "force " + c.himHer() + " to suck their cocks as they tease " + c.hisHer() + " nipples and " + organ + ".  ");
                    }
                    else if (morality > 33) {
                        w.append(t, "push vibrating rotors against " + c.hisHer() + " nipples and " + organ + ".  ");
                    }
                    else {
                        w.append(t, "tease " + c.hisHer() + " nipples and " + organ + " with no regard for " + c.hisHer() + " obvious anger.  ");
                    }
                }
                else if (morality > 66) {
                    w.append(t, "force their cocks into " + c.hisHer() + " mouth and " + hole + " as well.  ");
                }
                else if (morality > 33) {
                    w.append(t, "penetrate " + c.hisHer() + " " + hole + " and push vibrating rotors against " + c.hisHer() + " nipples and " + organ + " at the same time.  ");
                }
                else {
                    w.append(t, "push their cocks into " + c.hisHer() + " " + hole + ", ignoring " + c.hisHer() + " demands that they not cum inside.  ");
                }
                if (solo) {
                    w.append(t, "The Thralls push their cameras close from all angles, ");
                    if (loved) {
                        w.append(t, "forcing " + high.getMainName() + " and " + low.getMainName() + " to watch as well.  The stimulation continues until ");
                    }
                    else if (hated) {
                        w.append(t, "intending to make it so that the public as well as the watching " + high.getMainName() + " and " + low.getMainName() + " are disappointed in " + c.hisHer() + " weakness when " + c.heShe() + " ");
                    }
                    else {
                        w.append(t, "intending to show this to the public.  Meanwhile, ");
                        if (lover == high) {
                            w.append(t, String.valueOf(low.getMainName()) + "'s disappointment and " + high.getMainName() + "'s anger are obvious as the Thralls escalate the stimulation until ");
                        }
                        else {
                            w.append(t, String.valueOf(low.getMainName()) + "'s fear and " + high.getMainName() + "'s contempt are obvious as the Thralls escalate the stimulation until ");
                        }
                    }
                }
                else if (trio) {
                    w.append(t, String.valueOf(c.HeShe()) + ", " + high.getMainName() + ", and " + low.getMainName() + " are all forced together, tangling their bare limbs around each other as the pleasure escalates and the Thralls pull out their cameras to film their mutual lust.  ");
                    if (loved) {
                        w.append(t, "The feeling of " + c.hisHer() + " friends' bodies trembling as they approach their own orgasms stimulates " + c.himHer() + " until ");
                    }
                    else if (hated) {
                        w.append(t, "The taboo pleasure of being forced to grind against " + c.hisHer() + " rivals grows stronger and stronger until ");
                    }
                    else {
                        w.append(t, "In the midst of the orgy, " + c.heShe() + " and " + lover.getMainName() + " can clearly feel each other approaching orgasm, and that knowledge is so stimulating that ");
                    }
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " and " + partner.getMainName() + " are pushed together, bare limbs tangled around each other's stripped bodies, ");
                    if (loved || partner == lover) {
                        w.append(t, "close enough to feel each other's breath on their faces");
                    }
                    else {
                        w.append(t, "refusing to meet each other's gaze as they deny their shared passion");
                    }
                    w.append(t, ".  The Thralls close in with their cameras to film as ");
                }
                if (c.getPLEALevel() < 3 || cVirg) {
                    if (innocence > 66) {
                        w.append(t, String.valueOf(mainName) + " gasps and squirms against the warmth building in " + c.hisHer() + " loins.");
                    }
                    else if (innocence > 33) {
                        w.append(t, String.valueOf(mainName) + " is shaking with the urge to cum.");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " has to shake " + c.hisHer() + " head and take deep breaths in order to stay sane.");
                    }
                }
                else if (innocence > 66) {
                    w.append(t, String.valueOf(mainName) + " throws " + c.hisHer() + " head back and surrenders to the urge to cum, forgetting everything else.");
                }
                else if (innocence > 33) {
                    w.append(t, String.valueOf(mainName) + " starts reflexively bucking " + c.hisHer() + " hips, turning " + c.hisHer() + " face downward in shame at cumming like this.");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " gasps and shudders, face bright red with shame at being forced to cum.");
                }
            }
        }
        else if (variant == 0) {
            if (solo) {
                if (high.getHATELevel() < 3 && mid.getHATELevel() < 3) {
                    w.append(t, "With " + high.getMainName() + "'s and " + mid.getMainName() + "'s Sexual Barriers still intact, ");
                }
                else if (high.getHATELevel() < 3) {
                    w.append(t, "With " + mid.getMainName() + " barely fending off " + mid.hisHer() + " attackers and " + high.getMainName() + "'s Sexual Barrier still intact, ");
                }
                else if (mid.getHATELevel() < 3) {
                    w.append(t, "With " + high.getMainName() + " determinedly fending off " + high.hisHer() + " attackers and " + mid.getMainName() + "'s Sexual Barrier still intact, ");
                }
                else {
                    w.append(t, "With " + high.getMainName() + " and " + mid.getMainName() + " fending off their attackers, ");
                }
                w.append(t, "the Thralls focus their efforts on " + mainName + ".  Some force " + c.himHer() + " to suck their cocks while others prefer ");
            }
            else if (trio) {
                if (high.getGender().equals("female") && mid.getGender().equals("female")) {
                    w.append(t, String.valueOf(mainName) + " alternates between licking " + high.getMainName() + "'s and " + mid.getMainName() + "'s clits as their pussies are pounded by the Thralls, ");
                }
                else if (high.getGender().equals("female")) {
                    w.append(t, String.valueOf(mainName) + " alternates between sucking " + mid.getMainName() + "'s cock and licking " + high.getMainName() + "'s clit as they're both fucked by the Thralls, ");
                }
                else if (mid.getGender().equals("female")) {
                    w.append(t, String.valueOf(mainName) + " alternates between sucking " + high.getMainName() + "'s cock and licking " + mid.getMainName() + "'s clit as they're both fucked by the Thralls, ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " takes " + high.getMainName() + "'s and " + mid.getMainName() + "'s cocks into " + c.hisHer() + " mouth at once as they're both fucked from behind by the Thralls, ");
                }
                if (loved) {
                    w.append(t, "deliriously trying to soothe " + c.hisHer() + " friends' suffering.  ");
                }
                else if (hated) {
                    w.append(t, "forced to move " + c.hisHer() + " head back and forth by " + c.hisHer() + " attackers' hands gripping " + c.hisHer() + " hair.  ");
                }
                else {
                    w.append(t, "being forced against " + c.hisHer() + " will but clearly less bothered by servicing " + lover.getMainName() + ".  ");
                }
                w.append(t, "Meanwhile, the Thralls make use of " + mainName + "'s lower body, ");
            }
            else {
                if (partner.getGender().equals("female")) {
                    w.append(t, "As one of the Thralls pounds " + partner.getMainName() + ", " + mainName + " licks " + partner.hisHer() + " clit");
                }
                else {
                    w.append(t, "As one of the Thralls fucks " + partner.getMainName() + ", " + mainName + " sucks " + partner.hisHer() + " cock");
                }
                if (loved || lover == partner) {
                    w.append(t, ", obeying the Thralls' orders while also soothing " + c.hisHer() + " friend.  ");
                }
                else {
                    w.append(t, ".  ");
                }
                w.append(t, String.valueOf(mainName) + " is completely distracted and defenseless when the Thralls start ");
            }
            if (c.getINJULevel() < 3 || aVirg) {
                if (morality > 66) {
                    w.append(t, "violating " + c.hisHer() + " " + hole + " as " + c.heShe() + " shudders in self-disgust.  ");
                }
                else if (morality > 33) {
                    w.append(t, "penetrating " + c.hisHer() + " " + hole + " as " + c.heShe() + " sobs and tries to shake " + c.hisHer() + " head.  ");
                }
                else {
                    w.append(t, "thrusting in and out of " + c.hisHer() + " " + hole + " as " + c.heShe() + " sobs in helpless fury.  ");
                }
            }
            else if (w.tickle()) {
                if (morality > 66) {
                    w.append(t, "tickling " + c.himHer() + " and violating " + c.hisHer() + " " + hole + " at the same time.  The fact that " + c.heShe() + " can't contain " + c.hisHer() + " sobs of laughter makes " + c.himHer() + " feel like an utter failure.  ");
                }
                else if (morality > 33) {
                    w.append(t, "forcing " + c.himHer() + " into helpless laughter so that " + c.hisHer() + " " + hole + " tightens up around their cocks.  ");
                }
                else {
                    w.append(t, "deepening " + c.hisHer() + " humiliation by using incessant tickling to force " + c.himHer() + " to laugh as they fuck " + c.hisHer() + " " + hole + ".  ");
                }
            }
            else if (c.getGender().equals("male")) {
                if (morality > 66) {
                    w.append(t, "violating " + c.hisHer() + " asshole and pinching " + c.hisHer() + " penis as " + c.heShe() + " sobs with self-disgust at " + c.hisHer() + " own weakness for letting this happen.  ");
                }
                else if (morality > 33) {
                    w.append(t, "pummeling " + c.hisHer() + " penis so that " + c.hisHer() + " anus tightens reflexively around their cocks.  ");
                }
                else {
                    w.append(t, "twisting " + c.hisHer() + " penis and pounding " + c.hisHer() + " asshole until " + c.hisHer() + " resentful glare melts into pathetic tears.  ");
                }
            }
            else if (morality > 66) {
                w.append(t, "violating " + c.hisHer() + " pussy and asshole in turn as " + c.heShe() + " shudders in self-disgust.  ");
            }
            else if (morality > 33) {
                w.append(t, "penetrating " + c.hisHer() + " pussy and asshole in turn as " + c.heShe() + " sobs and shakes " + c.hisHer() + " head.  ");
            }
            else {
                w.append(t, "thrusting in and out of " + c.hisHer() + " pussy and asshole in turn as " + c.heShe() + " sobs in helpless fury.  ");
            }
            if (c.getPLEALevel() < 3 || cVirg) {
                if (innocence > 66) {
                    w.append(t, "The feeling of the Thrall cumming inside is so awful that " + mainName + " barely even notices the Thralls ");
                }
                else if (innocence > 33) {
                    w.append(t, "Feeling completely helpless, " + mainName + " just goes limp in the arms of the Thralls ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " knows " + c.heShe() + " needs to focus on escaping, but " + c.heShe() + " can't even muster the energy to struggle against the Thralls ");
                }
            }
            else if (innocence > 66) {
                w.append(t, "But the negative responses don't last long, as the pleasure soon builds to the point of orgasm, leaving " + mainName + " moaning helplessly in the arms of the Thralls ");
            }
            else if (innocence > 33) {
                w.append(t, "Feeling completely helpless, " + mainName + " almost welcomes the haze of pleasure that builds to the point of orgasm, preventing " + c.himHer() + " from even thinking about fighting against the Thralls ");
            }
            else {
                w.append(t, String.valueOf(mainName) + " knows that " + c.heShe() + " needs to focus on escaping, but " + c.hisHer() + " body betrays " + c.himHer() + ".  " + c.HeShe() + " climaxes, helpless against the Thralls ");
            }
            String girl = "girl";
            if (c.getGender().equals("male")) {
                girl = "boy";
            }
            if (c.getEXPOLevel() < 3 || modest) {
                if (dignity > 66) {
                    w.append(t, "tearing at " + c.hisHer() + " " + bottomDesc + " in order to expose the shy " + girl + "'s body to the world.");
                }
                else if (dignity > 33) {
                    w.append(t, "tearing at " + c.hisHer() + " " + bottomDesc + " in hopes of humiliating " + c.himHer() + " even further.");
                }
                else {
                    w.append(t, "pulling off " + c.hisHer() + " " + bottomDesc + ".");
                }
            }
            else if (dignity > 66) {
                w.append(t, "filming the shy " + girl + "'s stripped body.");
            }
            else if (dignity > 33) {
                w.append(t, "spreading " + c.hisHer() + " legs apart in order to film the spot where " + c.heShe() + "'s being penetrated.");
            }
            else {
                w.append(t, "filming the spot between " + c.hisHer() + " splayed-out legs.");
            }
        }
        else if (variant == 1) {
            if (solo) {
                if (loved) {
                    w.append(t, "Turned on by the way " + high.getMainName() + " and " + mid.getMainName() + " are watching " + c.himHer() + ", " + mainName + " hates " + c.himHer() + "self for ");
                }
                else if (hated) {
                    w.append(t, String.valueOf(high.getMainName()) + " and " + mid.getMainName() + " are obviously contemptful toward " + mainName + " for ");
                }
                else {
                    w.append(t, "Turned on by the feeling of " + lover.getMainName() + "'s eyes on " + c.himHer() + ", " + mainName + " hates " + c.himHer() + "self for ");
                }
            }
            else if (trio) {
                if (loved) {
                    w.append(t, "The sight of " + high.getMainName() + " and " + mid.getMainName() + " squirming and moaning in orgasm turns " + mainName + " on so much that " + c.heShe() + " has no chance to resist ");
                }
                else if (hated) {
                    w.append(t, "The sight of " + high.getMainName() + " and " + mid.getMainName() + " squirming and moaning in orgasm makes " + mainName + " feel like there's nothing wrong with ");
                }
                else {
                    w.append(t, "Feeling turned on and a little jealous as " + c.heShe() + " watches " + high.getMainName() + " and " + mid.getMainName() + " forced to grind against each other as they reach orgasm, " + mainName + " can't resist ");
                }
            }
            else if (lover == partner || loved) {
                w.append(t, "In the press of bodies around the three Chosen, " + partner.getMainName() + "'s orgasmic spasms cause " + partner.himHer() + " to grind against " + mainName + ", who is so turned on by the contact that " + c.heShe() + " has no chance to resist ");
            }
            else {
                w.append(t, "In the press of bodies around the three Chosen, " + partner.getMainName() + "'s orgasmic spasms cause " + partner.himHer() + " to grind against " + mainName + ".  Even though " + mainName + " tries to be strong, the stimulation is still too much to bear, and " + c.heShe() + " ends up ");
            }
            if (c.getINJULevel() < 3 || aVirg) {
                if (innocence > 66) {
                    w.append(t, "surrendering to the pleasure of the Thralls' hands on " + c.hisHer() + " " + organ + ".  ");
                }
                else if (innocence > 33) {
                    w.append(t, "cumming for the Thralls tugging " + c.hisHer() + " " + organ + ".  ");
                }
                else {
                    w.append(t, "reaching climax due to the Thralls' stimulation of " + c.hisHer() + " " + organ + ".  ");
                }
            }
            else if (w.tickle()) {
                if (innocence > 66) {
                    w.append(t, "surrendering to the pleasure, whimpering with delirious laughter as the Thralls' tickling hands make their way to " + c.hisHer() + " " + organ + ".  ");
                }
                else if (innocence > 33) {
                    w.append(t, "cumming and laughing at the same time, helpless against the Thralls tickling " + c.himHer() + " and tugging " + c.hisHer() + " " + organ + ".  ");
                }
                else {
                    w.append(t, "reaching climax even as " + c.heShe() + " shakes with helpless laughter due to the Thralls' tickling and stimulation of " + c.hisHer() + " " + organ + ".  ");
                }
            }
            else if (c.getGender().equals("male")) {
                if (innocence > 66) {
                    w.append(t, "surrendering to the mingled pleasure and pain of the Thralls' rough hands tormenting " + c.hisHer() + " sensitive penis.  ");
                }
                else if (innocence > 33) {
                    w.append(t, "cumming and whimpering in pain at the same time, helpless against the Thralls manhandling " + c.hisHer() + " sensitive penis.  ");
                }
                else {
                    w.append(t, "reaching climax even as the Thralls pummel " + c.hisHer() + " sensitive testicles.  ");
                }
            }
            else if (innocence > 66) {
                w.append(t, "surrendering to the mingled pleasure and pain as one of the Thralls pinches " + c.hisHer() + " " + organ + " while another fists " + c.hisHer() + " ass.  ");
            }
            else if (innocence > 33) {
                w.append(t, "cumming and whimpering in pain at the same time, helpless against the rough handling of " + c.hisHer() + " " + organ + " from the outside and the fist ravaging " + c.hisHer() + " ass from the inside.  ");
            }
            else {
                w.append(t, "reaching climax as the Thralls combine stimulating " + c.hisHer() + " " + organ + " with fisting " + c.hisHer() + " ass.  ");
            }
            if (c.getHATELevel() < 3 || vVirg) {
                if (morality > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " still has the presence of mind to be disgusted by the Thralls grinding against " + c.himHer() + " in pursuit of their own orgasms, but " + c.heShe() + " feels " + c.heShe() + " deserves the degrading treatment for enjoying " + c.himHer() + "self this much");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(c.HisHer()) + " limbs feel too weak to push away the Thralls grinding against " + c.himHer() + " in pursuit of their own orgasms");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + "'s so delirious with pleasure that " + c.heShe() + " barely notices the Thralls humping " + c.himHer() + " in pursuit of their own orgasms");
                }
            }
            else if (morality > 66) {
                w.append(t, "As disgusted as " + c.heShe() + " is by the Thrall's cock plunging into " + c.hisHer() + " " + hole + " and spurting its load inside, " + c.heShe() + " feels " + c.heShe() + " deserves it for enjoying this at all");
            }
            else if (morality > 33) {
                w.append(t, String.valueOf(c.HisHer()) + " " + hole + " squeezes down on a Thrall's invading cock, and " + c.heShe() + " realizes with detached disgust that it's cumming inside " + c.himHer());
            }
            else {
                w.append(t, String.valueOf(c.HeShe()) + " tries to threaten retribution if the Thrall fucking " + c.hisHer() + " " + hole + " cums inside, but " + c.heShe() + " can't form the words.  " + c.HeShe() + " groans as " + c.heShe() + " feels the invading cock spurting inside " + c.himHer());
            }
            if (c.getEXPOLevel() < 3 || modest) {
                if (dignity > 66) {
                    w.append(t, ".  No matter how embarrassing it is, " + c.heShe() + " doesn't have the willpower to stop the others from stripping " + c.himHer() + ".");
                }
                else if (dignity > 33) {
                    w.append(t, ".  With " + c.hisHer() + " mind feeling so empty, " + c.heShe() + " can't muster the effort to stop the others from stripping " + c.himHer() + ".");
                }
                else {
                    w.append(t, ".  Before " + c.heShe() + " knows it, the others have made significant progress in stripping " + c.himHer() + ".");
                }
            }
            else if (dignity > 66) {
                w.append(t, ".  No matter how embarrassing it is, " + c.heShe() + " doesn't have the willpower to hide " + c.hisHer() + " stripped body from all the cameras.");
            }
            else if (dignity > 33) {
                w.append(t, ".  With " + c.hisHer() + " mind feeling so empty, " + c.heShe() + " can't muster the effort to stop the others from filming " + c.hisHer() + " humiliating state from all angles.");
            }
            else {
                w.append(t, ".  Before " + c.heShe() + " knows it, dozens of cameras are being pushed up close to film " + c.hisHer() + " face and stripped body.");
            }
        }
        else if (variant == 2) {
            if (solo) {
                if (loved) {
                    w.append(t, String.valueOf(mainName) + " sobs for " + high.getMainName() + " and " + mid.getMainName() + " to save " + c.himHer() + ", but they're both held back by their captors.  ");
                }
                else if (hated) {
                    w.append(t, String.valueOf(mainName) + " sobs at the helplessness of " + c.hisHer() + " situation, earning contemptful glances from " + high.getMainName() + " and " + mid.getMainName() + ".  ");
                }
                else if (lover == high) {
                    w.append(t, String.valueOf(mainName) + " sobs openly for " + lover.getMainName() + " to help " + c.himHer() + ", prompting " + mid.getMainName() + " to sigh with annoyance.  ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " sobs openly for " + lover.getMainName() + " to help " + c.himHer() + ", earning a contemptful glance from " + high.getMainName() + ".  ");
                }
            }
            else if (trio) {
                if (!loved && !hated) {
                    w.append(t, "Even though " + lover.getMainName() + " is dealing with " + lover.hisHer() + " own torture, ");
                }
                else {
                    w.append(t, "Even though they're dealing with their own torture, ");
                }
                if (loved) {
                    w.append(t, String.valueOf(mainName) + " still sobs for " + high.getMainName() + " and " + mid.getMainName() + " to help " + c.himHer() + ", which only makes them feel even worse.  ");
                }
                else if (hated) {
                    w.append(t, String.valueOf(high.getMainName()) + " and " + mid.getMainName() + " aren't sobbing pathetically like " + mainName + " is.  ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " still sobs for " + lover.hisHer() + " help ");
                    if (lover == high) {
                        w.append(t, "while " + mid.getMainName() + " clenches " + mid.hisHer() + " teeth and tries to hold back " + mid.hisHer() + " voice.  ");
                    }
                    else {
                        w.append(t, "while " + high.getMainName() + " tries to fight " + high.hisHer() + " way free.  ");
                    }
                }
            }
            else if (loved || lover == partner) {
                w.append(t, "Even though " + partner.getMainName() + " is dealing with " + partner.hisHer() + " own torture, " + mainName + " still sobs for " + partner.hisHer() + " help.  ");
            }
            else {
                w.append(t, String.valueOf(mainName) + " sobs openly for someone to save " + c.himHer() + " while " + partner.getMainName() + " clenches " + c.hisHer() + " teeth and tries to hold back " + c.hisHer() + " own voice.  ");
            }
            if (w.tickle()) {
                w.append(t, "The Thrall's tickling is driving " + mainName + " crazy, ");
            }
            else if (c.getGender().equals("male")) {
                w.append(t, "The pain of the Thralls crushing and twisting " + mainName + "'s testicles is driving " + c.himHer() + " crazy, ");
            }
            else {
                w.append(t, "The repeated impacts of the Thrall fucking " + c.himHer() + " up the ass are driving " + c.himHer() + " crazy, ");
            }
            if (c.getHATELevel() < 3 || vVirg) {
                if (morality > 66) {
                    w.append(t, "and " + c.heShe() + "'s ashamed of " + c.himHer() + "self for feeling pleasure from the way they tug " + c.hisHer() + " " + organ + " at the same time.  ");
                }
                else if (morality > 33) {
                    w.append(t, "and " + c.heShe() + "'s desperately trying to deny the pleasure " + c.heShe() + " feels as they tug " + c.hisHer() + " " + organ + " at the same time.  ");
                }
                else {
                    w.append(t, "and " + c.heShe() + "'s caught between rage, embarrassment, and confused pleasure as they tug " + c.hisHer() + " " + organ + " at the same time.  ");
                }
            }
            else if (morality > 66) {
                w.append(t, "and it's only made worse by " + c.hisHer() + " feelings of violated worthlessness as they take turns cumming inside " + c.hisHer() + " " + hole + " and stroking " + c.hisHer() + " " + organ + " at the same time.  ");
            }
            else if (morality > 33) {
                w.append(t, "and " + c.hisHer() + " efforts to deny the pleasure from the Thrall tugging " + c.hisHer() + " " + organ + " fall to pieces when another penetrates " + c.hisHer() + " " + hole + " and cums inside.  ");
            }
            else {
                w.append(t, "and even as " + c.heShe() + " deliriously tries to threaten the Thrall penetrating " + c.hisHer() + " " + hole + ", " + c.heShe() + " can't help but buck " + c.hisHer() + " hips at the same time.  ");
            }
            if (c.getPLEALevel() < 3 || cVirg) {
                if (innocence > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " still manages to not completely give " + c.himHer() + "self over to the feelings, focusing on ");
                }
                else if (innocence > 33) {
                    w.append(t, "It's not quite enough to make " + c.himHer() + " cum yet, mostly because of ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " still manages to resist the urge to climax, thanks largely to ");
                }
            }
            else if (innocence > 66) {
                w.append(t, String.valueOf(c.HisHer()) + " feeble willpower is completely outmatched, and " + c.heShe() + " doesn't even try to fight the waves of pleasure running through " + c.hisHer() + " body despite ");
            }
            else if (innocence > 33) {
                w.append(t, String.valueOf(c.HeShe()) + " cums quickly despite ");
            }
            else {
                w.append(t, "Tears of humiliation leak out of " + c.hisHer() + " eyes as " + c.heShe() + "'s forced to climax, unable to stop dwelling on ");
            }
            if (c.getEXPOLevel() < 3 || modest) {
                if (dignity > 66) {
                    w.append(t, String.valueOf(c.hisHer()) + " horror at the fact that the Thralls are stripping " + c.himHer() + " at the same time.");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(c.hisHer()) + " embarrassment.");
                }
                else {
                    w.append(t, String.valueOf(c.hisHer()) + " belief that enjoying this sort of thing is just wrong.");
                }
            }
            else if (dignity > 66) {
                w.append(t, String.valueOf(c.hisHer()) + " overpowering shame at being stripped and filmed in such a humiliating state.");
            }
            else if (dignity > 33) {
                w.append(t, "the fact that so many cameras are watching " + c.himHer() + ".");
            }
            else {
                w.append(t, String.valueOf(c.hisHer()) + " belief that a true hero shouldn't be affected by little things like stripping and molestation.");
            }
        }
        else if (variant == 3) {
            if (solo) {
                w.append(t, "The Thralls order " + mainName + " to spread " + c.hisHer() + " own " + hole + " wide open for the cameras");
                if (loved) {
                    w.append(t, ", ignoring " + high.getMainName() + "'s and " + mid.getMainName() + "'s attempts to distract them and protect " + c.himHer() + ".  ");
                }
                else if (hated) {
                    w.append(t, ", and since " + c.heShe() + "'s the one that allowed " + c.himHer() + "self to get stripped, neither " + high.getMainName() + " nor " + mid.getMainName() + " feel much sympathy.  ");
                }
                else {
                    w.append(t, ", ignoring " + lover.getMainName() + "'s attempts to divert their attention onto " + lover.himHer() + "self.  ");
                }
            }
            else if (trio) {
                w.append(t, "The three Chosen are laid on their backs with their legs lifted up into the air in order to display their bare lower halves to the cameras");
                if (loved) {
                    w.append(t, ", but " + high.getMainName() + " and " + mid.getMainName() + " both look worried when the crowd turns its attention to their friend.  ");
                }
                else if (hated) {
                    w.append(t, ", obviously all angry with each other for allowing this to happen.  ");
                }
                else {
                    w.append(t, ", and although " + lover.getMainName() + " tries to get the Thralls to focus on " + lover.himHer() + ", they have a different target in mind.  ");
                }
                w.append(t, String.valueOf(mainName) + " is ordered to use " + c.hisHer() + " own fingers to spread " + c.hisHer() + " " + hole + ".  ");
            }
            else {
                if (loved || lover == partner) {
                    w.append(t, "Even though they've both been stripped, " + partner.getMainName() + " tries to use " + partner.hisHer() + " body to hide " + mainName + " from the cameras, but the Thralls pull them apart.  ");
                }
                else {
                    w.append(t, "Neither " + mainName + " nor " + partner.getMainName() + " are happy about being forced to sit side-by-side with their legs lifted up into the air in order to expose their bare lower halves to the cameras.  ");
                }
                w.append(t, "The Thralls order " + mainName + " to use " + c.hisHer() + " own fingers to spread " + c.hisHer() + " " + hole + ".  ");
            }
            if (c.getINJULevel() < 3 || aVirg) {
                if (dignity > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " freezes up, stammering incoherently until the Thralls reach down to do it themselves.  ");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(c.HeShe()) + " squeezes " + c.hisHer() + " eyes shut as " + c.heShe() + " complies, face bright red.  ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " hurriedly complies for fear of being punished.  ");
                }
            }
            else if (w.tickle()) {
                if (dignity > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s already practically delirious with embarrassment at being filmed while practically naked and flailing in helpless laughter, so " + c.heShe() + " doesn't even notice the request until the Thralls reach down to do it for " + c.himHer() + ".  ");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(c.HeShe()) + " complies as best " + c.heShe() + " can while being tickled at the same time, " + c.hisHer() + " laughter coming out mingled with whimpers of embarrassment.  ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " complies as best " + c.heShe() + " can while being tickled at the same time, stammering apologies for not being quicker about it.  ");
                }
            }
            else if (c.getGender().equals("male")) {
                if (dignity > 66) {
                    w.append(t, String.valueOf(c.HeShe()) + " tries to comply, but " + c.hisHer() + " hands are shaking so much with sheer embarrassment that the Thralls have to do it for " + c.himHer() + ", twisting " + c.hisHer() + " bruised testicles at the same time as punishment.  ");
                }
                else if (dignity > 33) {
                    w.append(t, String.valueOf(c.HeShe()) + " slowly complies, " + c.hisHer() + " trembling fingers carefully avoiding " + c.hisHer() + " swollen, bruised testicles.  ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " complies without hesitation, begging the Thralls to go easier on " + c.hisHer() + " bruised testicles in return.  ");
                }
            }
            else if (dignity > 66) {
                w.append(t, String.valueOf(c.HeShe()) + " tries to comply, but " + c.hisHer() + " hands are shaking so badly with the embarrassment of being filmed while also being anally penetrated that " + c.heShe() + " can't do it, and the Thralls need to reach down to do it for " + c.himHer() + ".  ");
            }
            else if (dignity > 33) {
                w.append(t, String.valueOf(c.HeShe()) + " complies as best " + c.heShe() + " can while being fucked up the ass at the same time, practically delirious with shame over having " + c.hisHer() + " privates seen in such a state.  ");
            }
            else {
                w.append(t, String.valueOf(c.HeShe()) + " complies without hesitation, the cock thrusting in and out of " + c.hisHer() + " asshole making the image even more lewd.  ");
            }
            if (c.getHATELevel() < 3 || vVirg) {
                if (c.getHATELevel() < 3) {
                    w.append(t, "In order to assert their dominance even more, ");
                }
                else {
                    w.append(t, "Because " + c.hisHer() + " Sexual Barrier prevents them from going any further down there, ");
                }
                w.append(t, "they force " + c.himHer() + " to suck their cocks as well.  ");
                if (morality > 66) {
                    w.append(t, "They force " + c.hisHer() + " compliance by threatening the others, ");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(c.HisHer()) + " meek nature prevents " + c.himHer() + " from refusing, ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + "'s afraid of what will happen if " + c.heShe() + " bites down, ");
                }
            }
            else {
                w.append(t, "Then, they force " + c.himHer() + " to straddle one of the Thralls and ride his cock.  ");
                if (morality > 66) {
                    w.append(t, String.valueOf(mainName) + "'s ability to pleasure others is normally one of the few things " + c.heShe() + " prides " + c.himHer() + "self on, ");
                }
                else if (morality > 33) {
                    w.append(t, "They order " + mainName + " to move " + c.hisHer() + " hips, ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " starts to move " + c.hisHer() + " hips by reflex, ");
                }
            }
            if (c.getPLEALevel() < 3 || cVirg) {
                if (innocence > 66) {
                    w.append(t, "but " + c.heShe() + "'s too scared to effectively perform.");
                }
                else if (innocence > 33) {
                    w.append(t, "and " + c.heShe() + " does " + c.hisHer() + " best to make them cum.");
                }
                else {
                    w.append(t, "and " + c.heShe() + " just focuses on bringing them to orgasm as quickly as possible.");
                }
            }
            else if (innocence > 66) {
                w.append(t, "but with their fingers coaxing another orgasm from " + c.hisHer() + " " + organ + ", " + c.heShe() + " lacks the willpower to do anything but squirm and moan.");
            }
            else if (innocence > 33) {
                w.append(t, "but with their fingers coaxing another orgasm from " + c.hisHer() + " " + organ + ", " + c.heShe() + "'s almost too distracted to perform.");
            }
            else {
                w.append(t, "but with their fingers coaxing another orgasm from " + c.hisHer() + " " + organ + ", " + c.hisHer() + " movements are much less skillful than usual.");
            }
        }
        if (variant == 4) {
            Chosen otherOne = null;
            Chosen otherTwo = null;
            if (confidence > 66) {
                otherOne = mid;
                otherTwo = low;
            }
            else if (confidence > 33) {
                otherOne = high;
                otherTwo = low;
            }
            else {
                otherOne = high;
                otherTwo = mid;
            }
            if (w.getOrgyStage() == 0) {
                if ((otherOne.getHATELevel() < 3 || otherOne.isVVirg()) && (otherTwo.getHATELevel() < 3 || otherTwo.isVVirg())) {
                    w.append(t, "Frustrated by " + otherOne.getMainName() + "'s and " + otherTwo.getMainName() + "'s continued resistance against the attempts to penetrate them, the Thralls ");
                }
                else if (otherOne.getHATELevel() < 3 || otherOne.isVVirg()) {
                    w.append(t, String.valueOf(otherTwo.getMainName()) + " is hardly visible among the crowd of Thralls filling " + otherTwo.hisHer() + " every available hole with their cum.  " + otherOne.getMainName() + " is struggling hard against the attempts to do the same to " + c.himHer() + ", so the other Thralls ");
                }
                else if (otherTwo.getHATELevel() < 3 || otherTwo.isVVirg()) {
                    w.append(t, String.valueOf(otherOne.getMainName()) + " is hardly visible among the crowd of Thralls filling " + otherOne.hisHer() + " every available hole with their cum.  There are only room for so many, though, and the others are growing bored tormenting " + otherTwo.getMainName() + ", so they ");
                }
                else {
                    w.append(t, String.valueOf(otherOne.getMainName()) + " and " + otherTwo.getMainName() + " are both pinned down by the horde of Thralls frantically thrusting their cocks into every available hole.  Not content with just the two of them, the Thralls ");
                }
                if (c.getHATELevel() < 3) {
                    w.append(t, "try to force themselves through " + mainName + "'s Sexual Barrier, but it remains intact for the moment.");
                }
                else {
                    w.append(t, "decide to use " + mainName + "'s " + hole + ".  " + c.HisHer() + " ");
                    if (c.getGender().equals("male")) {
                        w.append(t, "anal ");
                    }
                    w.append(t, "virginity is onlys aved by the fact that they can't agree on which of them gets to break " + c.himHer() + " in.");
                }
            }
            else if (w.getOrgyStage() == 1) {
                if ((otherOne.getPLEALevel() < 3 || otherOne.isCVirg()) && (otherTwo.getPLEALevel() < 3 || otherTwo.isCVirg())) {
                    w.append(t, "The Thralls press the three Chosen against each other, forcing them to reflexively hump each other as they endure their torments.  ");
                }
                else if (otherOne.getPLEALevel() < 3 || otherOne.isCVirg()) {
                    w.append(t, "Taking a break from trying to get the stubborn " + otherOne.getMainName() + " to climax, the Thralls push " + mainName + " and " + otherTwo.getMainName() + " face-to-face, forcing them to grind against each other.  " + otherTwo.getMainName() + " moans helplessly into " + mainName + "'s mouth, bucking " + otherTwo.hisHer() + " hips against " + c.himHer() + " as " + otherTwo.heShe() + " cums.  ");
                }
                else if (otherTwo.getPLEALevel() < 3 || otherTwo.isCVirg()) {
                    w.append(t, "While some Thralls try to break the helpless " + otherTwo.getMainName() + " with various sex toys, the others push " + mainName + " and " + otherOne.getMainName() + " face-to-face, forcing them to grind against each other.  " + otherOne.getMainName() + "'s struggles grow erratic as " + otherOne.heShe() + " cums, bucking " + otherOne.hisHer() + " hips against " + mainName + ".  ");
                }
                else {
                    w.append(t, "Pressing various sex toys against their crotches, the Thralls make " + otherOne.getMainName() + " and " + otherTwo.getMainName() + " cum hard, forcing their faces between " + mainName + "'s legs at the same time so they're moaning against " + c.hisHer() + " " + organ + ".  ");
                }
                if (c.getPLEALevel() < 3) {
                    w.append(t, "However, " + mainName + " is still more disgusted than turned on.");
                }
                else {
                    w.append(t, "For " + c.hisHer() + " part, " + mainName + " barely holds on, ");
                    if (c.getGender().equals("female")) {
                        w.append(t, String.valueOf(c.hisHer()) + " body still refusing to accept the pleasure.");
                    }
                    else {
                        w.append(t, "pre-cum dribbling out of " + c.hisHer() + " penis.");
                    }
                }
            }
            else if (w.getOrgyStage() == 2) {
                Boolean allResist = false;
                if ((otherOne.getINJULevel() < 3 || otherOne.isAVirg()) && (otherTwo.getINJULevel() < 3 || otherTwo.isAVirg())) {
                    allResist = true;
                    w.append(t, String.valueOf(otherOne.getMainName()) + " and " + otherTwo.getMainName() + " barely manage to hold their voices in ");
                }
                else if (otherOne.getINJULevel() < 3 || otherOne.isAVirg()) {
                    w.append(t, "While " + otherOne.getMainName() + " stubbornly holds on, " + otherTwo.getMainName() + " whimpers ");
                }
                else if (otherTwo.getINJULevel() < 3 || otherTwo.isAVirg()) {
                    w.append(t, "While " + otherTwo.getMainName() + " somehow holds on, " + otherOne.getMainName() + " is forced to scream ");
                }
                else {
                    w.append(t, "Utterly defeated, " + otherOne.getMainName() + " and " + otherTwo.getMainName() + " cry out ");
                }
                if (w.tickle()) {
                    if (allResist) {
                        w.append(t, "as they're tickled.  ");
                    }
                    else {
                        w.append(t, "in helpless laughter at the Thralls' tickling.  ");
                    }
                    if (c.getINJULevel() < 3) {
                        w.append(t, String.valueOf(mainName) + " is resisting as best " + c.heShe() + " can, but it's getting harder every moment.");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " is only spared the indignity of laughing out loud by the Thrall's cock shoved down " + c.hisHer() + " throat.");
                    }
                }
                else {
                    if (allResist) {
                        w.append(t, "as the Thralls pummel them and twist their limbs.  ");
                    }
                    else {
                        w.append(t, "in pain at the Thralls' savage abuse.  ");
                    }
                    if (c.getGender().equals("male")) {
                        w.append(t, "For " + c.hisHer() + " part, " + mainName + " is tightly clenching " + c.hisHer() + " thighs together to protect " + c.hisHer() + " vulnerable penis.");
                    }
                    else {
                        w.append(t, "For " + c.hisHer() + " part, " + mainName + " is grimacing at the sensation of another Thrall trying and failing over and over again to shove a huge dildo up " + c.hisHer() + " ass.");
                    }
                }
            }
            else if (w.getOrgyStage() == 3) {
                if (otherOne.getEXPOLevel() < 3 || otherOne.isModest() || otherTwo.getEXPOLevel() < 3 || otherTwo.isModest()) {
                    w.append(t, "Scraps of shredded clothing are flying out of the crowd of Thralls around the three Chosen, but the group is so densely-packed that no one can get clear footage of their exposed bodies.");
                }
                else if (otherOne.getEXPOLevel() < 3 || otherOne.isModest()) {
                    w.append(t, "The orgy is so densely-packed that the watching cameras can't get any good footage of the Chosen within.  Only " + otherTwo.getMainName() + " is visible, being lifted above the crowd with " + otherTwo.hisHer() + " legs forcibly spread wide open.");
                }
                else if (otherTwo.getEXPOLevel() < 3 || otherTwo.isModest()) {
                    w.append(t, "The orgy is so densely-packed that the watching cameras can't get any good footage of the Chosen within.  Only " + otherOne.getMainName() + " is visible at the edge of the crowd, " + otherOne.hisHer() + " bare bottom and flailing legs drawing plenty of attention.");
                }
                else {
                    w.append(t, "The orgy is so densely-packed that " + mainName + ", who's currently at its center, can't be clearly seen.  Meanwhile, " + otherOne.getMainName() + " and " + otherTwo.getMainName() + " have been pulled to the edge and forced to bend over, showing their bare bottoms to the watching cameras.");
                }
            }
        }
        w.append(t, "\n\n" + mainName + ":\n");
        int[] totalDamage = { 200, 200, 200, 200, 200, 200, 200, 200 };
        Boolean penetrationBonus = false;
        if (!vVirg && c.getHATELevel() >= 3) {
            penetrationBonus = true;
            totalDamage = c.multiplyArray(totalDamage, 200);
        }
        Boolean orgasmBonus = false;
        if (!cVirg && c.getPLEALevel() >= 3) {
            orgasmBonus = true;
            totalDamage = c.multiplyArray(totalDamage, 200);
        }
        Boolean analBonus = false;
        if (!aVirg && c.getINJULevel() >= 3) {
            analBonus = true;
            totalDamage = c.multiplyArray(totalDamage, 200);
        }
        Boolean broadcastBonus = false;
        if (!modest && c.getEXPOLevel() >= 3) {
            broadcastBonus = true;
            totalDamage = c.multiplyArray(totalDamage, 200);
        }
        String firstRelation = "";
        String secondRelation = "";
        if (c != high) {
            String summary = "(x";
            if (w.getRelationship(c.number, high.getNumber()) == -4) {
                summary = String.valueOf(summary) + "2";
            }
            else {
                summary = String.valueOf(summary) + "1." + (6 - w.getRelationship(c.number, high.getNumber()));
            }
            summary = String.valueOf(summary) + " damage due to relationship with " + high.getMainName() + ")\n\n";
            totalDamage = c.multiplyArray(totalDamage, (16 - w.getRelationship(c.number, high.getNumber())) * 10);
            firstRelation = summary;
        }
        if (c != mid) {
            String summary = "(x";
            if (w.getRelationship(c.number, mid.getNumber()) == -4) {
                summary = String.valueOf(summary) + "2";
            }
            else {
                summary = String.valueOf(summary) + "1." + (6 - w.getRelationship(c.number, mid.getNumber()));
            }
            summary = String.valueOf(summary) + " damage due to relationship with " + mid.getMainName() + ")\n\n";
            totalDamage = c.multiplyArray(totalDamage, (16 - w.getRelationship(c.number, mid.getNumber())) * 10);
            if (c != high) {
                secondRelation = summary;
            }
            else {
                firstRelation = summary;
            }
        }
        if (c != low) {
            String summary = "(x";
            if (w.getRelationship(c.number, low.getNumber()) == -4) {
                summary = String.valueOf(summary) + "2";
            }
            else {
                summary = String.valueOf(summary) + "1." + (6 - w.getRelationship(c.number, low.getNumber()));
            }
            summary = String.valueOf(summary) + " damage due to relationship with " + low.getMainName() + ")\n\n";
            totalDamage = c.multiplyArray(totalDamage, (16 - w.getRelationship(c.number, low.getNumber())) * 10);
            secondRelation = summary;
        }
        final int previousHATE = c.getHATELevel();
        final int previousPLEA = c.getPLEALevel();
        final int previousINJU = c.getINJULevel();
        final int previousEXPO = c.getEXPOLevel();
        c.damage(t, w, totalDamage);
        if (penetrationBonus) {
            if (c.getGender().equals("male")) {
                w.append(t, "(x2 damage due to penetration)\n\n");
            }
            else {
                w.append(t, "(x2 damage due to vaginal penetration)\n\n");
            }
        }
        if (orgasmBonus) {
            w.append(t, "(x2 damage due to orgasm)\n\n");
        }
        if (analBonus) {
            if (w.tickle()) {
                w.append(t, "(x2 damage due to forced laughter)\n\n");
            }
            else if (c.getGender().equals("male")) {
                w.append(t, "(x2 damage due to genital torture)\n\n");
            }
            else {
                w.append(t, "(x2 damage due to anal penetration)\n\n");
            }
        }
        if (broadcastBonus) {
            w.append(t, "(x2 damage due to broadcasted humiliation)\n\n");
        }
        w.append(t, String.valueOf(firstRelation) + secondRelation);
        w.rememberOrgyStage(order);
        w.cycleOrgyStage();
        final int[] priorities = new int[4];
        if (c.getHATELevel() > previousHATE) {
            final int[] array = priorities;
            final int n = 0;
            ++array[n];
            if (c.getHATELevel() == 3 && !vVirg) {
                final int[] array2 = priorities;
                final int n2 = 0;
                ++array2[n2];
            }
            w.purpleAppend(t, "HATE up!  ");
        }
        if (c.getPLEALevel() > previousPLEA) {
            final int[] array3 = priorities;
            final int n3 = 1;
            ++array3[n3];
            if (c.getPLEALevel() == 3 && !cVirg) {
                final int[] array4 = priorities;
                final int n4 = 1;
                ++array4[n4];
            }
            w.purpleAppend(t, "PLEA up!  ");
        }
        if (c.getINJULevel() > previousINJU) {
            final int[] array5 = priorities;
            final int n5 = 2;
            ++array5[n5];
            if (c.getINJULevel() == 3 && !aVirg) {
                final int[] array6 = priorities;
                final int n6 = 2;
                ++array6[n6];
            }
            if (w.tickle()) {
                w.purpleAppend(t, "ANTI up!  ");
            }
            else {
                w.purpleAppend(t, "INJU up!  ");
            }
        }
        if (c.getEXPOLevel() > previousEXPO) {
            final int[] array7 = priorities;
            final int n7 = 3;
            ++array7[n7];
            if (c.getEXPOLevel() == 3 && !modest) {
                final int[] array8 = priorities;
                final int n8 = 3;
                ++array8[n8];
            }
            w.purpleAppend(t, "EXPO up!  ");
        }
        int highestPriority = -1;
        if (priorities[0] > priorities[1] && priorities[0] > priorities[3] && priorities[0] > priorities[2]) {
            highestPriority = 0;
        }
        else if (priorities[2] > priorities[1] && priorities[2] > priorities[3]) {
            highestPriority = 2;
        }
        else if (priorities[1] > priorities[3]) {
            highestPriority = 1;
        }
        else if (priorities[3] > 0) {
            highestPriority = 3;
        }
        if (highestPriority == 3) {
            if (c.getEXPOLevel() == 1) {
                if (c.getHATELevel() < 1) {
                    w.append(t, "Despite " + mainName + "'s best efforts to keep " + c.himHer() + "self covered, ");
                }
                else if (c.getHATELevel() > 1) {
                    w.append(t, "With " + mainName + "'s magical defenses decreased by " + c.hisHer() + " impure emotions, ");
                }
                else {
                    w.append(t, "With " + mainName + "'s annoyance causing " + c.himHer() + " to become impatient and vulnerable, ");
                }
                if (bottomCover.equals("skirt")) {
                    w.append(t, "the Thralls have managed to tear away a large section of " + c.hisHer() + " skirt, rendering it much shorter than before.  ");
                }
                else if (bottomCover.equals("miniskirt")) {
                    w.append(t, "the Thralls have ripped open " + c.hisHer() + " miniskirt so that " + c.hisHer() + " hip and part of " + c.hisHer() + " ass are completely exposed.  ");
                }
                else if (bottomCover.equals("robe")) {
                    w.append(t, "the Thralls have managed to tear away the bottom portion of " + c.hisHer() + " robe so that " + c.hisHer() + " legs are exposed.  ");
                }
                else if (bottomCover.equals("cloak")) {
                    w.append(t, "the Thralls have ripped " + c.hisHer() + " cloak almost in half, so that it barely remains in one piece.  ");
                }
                else if (bottomCover.equals("trousers")) {
                    w.append(t, "the Thralls have torn a large hole in " + c.hisHer() + " trousers, partially exposing " + c.hisHer() + " ass.  ");
                }
                else if (bottomCover.equals("leotard")) {
                    w.append(t, "the Thralls have ripped open the side of " + c.hisHer() + " leotard, from " + c.hisHer() + " hip up to " + c.hisHer() + " ribcage.  ");
                }
                else if (bottomCover.equals("bodysuit")) {
                    w.append(t, "the Thralls have torn a large hole in " + c.hisHer() + " bodysuit, partially exposing " + c.hisHer() + " ass.  ");
                }
                else if (bottomCover.equals("armor")) {
                    w.append(t, "the Thralls have pulled away one of " + c.hisHer() + " armor plates, exposing the side of " + c.hisHer() + " ass.  ");
                }
                else if (bottomCover.equals("strips")) {
                    w.append(t, "the Thralls have pulled apart enough of the strips of cloth covering " + c.hisHer() + " lower body that part of " + c.hisHer() + " ass can be seen in the gaps between those that remain.  ");
                }
                else if (bottomCover.equals("belts")) {
                    w.append(t, "the Thralls have snapped enough of the belts around " + c.hisHer() + " lower body that part of " + c.hisHer() + " ass can be seen in the gaps between those that remain.  ");
                }
                else if (bottomCover.equals("shorts")) {
                    w.append(t, "the Thralls have ripped " + c.hisHer() + " shorts right down the middle, turning them into more of a skirt.  ");
                }
                else {
                    w.append(t, "the Thralls have ripped " + c.hisHer() + " " + bottomDesc + " all the way up to " + c.hisHer() + " hip.   ");
                }
                if (feetType.equals("none")) {
                    if (c.getINJULevel() < 1) {
                        w.append(t, String.valueOf(c.HeShe()) + " does " + c.hisHer() + " best to squirm away and reduce the damage, but ");
                    }
                    else if (c.getINJULevel() > 1) {
                        if (w.tickle()) {
                            w.append(t, "Flustered and demoralized, there's nothing " + c.heShe() + " can do to resist the stripping, and ");
                        }
                        else {
                            w.append(t, String.valueOf(c.HisHer()) + " bloodied body is in no state to resist the stripping, and ");
                        }
                    }
                    else if (w.tickle()) {
                        w.append(t, "The effects of exhaustion are starting to set in, slowing " + c.hisHer() + " efforts to resist the stripping, and ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " bruised body is in no state to resist the stripping, and ");
                    }
                    if (c.getPLEALevel() < 1) {
                        w.append(t, String.valueOf(c.hisHer()) + " clothes are much less durable than " + c.hisHer() + " flesh.");
                    }
                    else if (c.getPLEALevel() > 1) {
                        w.append(t, String.valueOf(c.heShe()) + " can't help but become even more turned on by the fact that " + c.heShe() + "'s being stripped.");
                    }
                    else {
                        w.append(t, "the realization that " + c.heShe() + "'s showing off so much more skin than " + c.heShe() + "'s comfortable with makes " + c.himHer() + " blush even more deeply.");
                    }
                }
                else {
                    if (c.getINJULevel() < 1) {
                        w.append(t, "Then, they pull off " + c.hisHer() + " " + feetType);
                    }
                    else if (c.getINJULevel() > 1) {
                        if (w.tickle()) {
                            w.append(t, "Then, while " + c.heShe() + "'s surprised and flustered, they pull off " + c.hisHer() + " " + feetType + " too");
                        }
                        else {
                            w.append(t, "Bruised and bloodied as " + c.heShe() + " is, they have no trouble pulling off " + c.hisHer() + " " + feetType + " too");
                        }
                    }
                    else if (w.tickle()) {
                        w.append(t, "With the effects of exhaustion starting to set in, " + c.heShe() + "'s too slow to stop them from pulling off " + c.hisHer() + " " + feetType + " as well");
                    }
                    else {
                        w.append(t, "With bruises accumulating on " + c.hisHer() + " body, " + c.heShe() + "'s too slow to stop them from pulling off " + c.hisHer() + " " + feetType + " as well");
                    }
                    if (c.getPLEALevel() < 1) {
                        w.append(t, ", leaving " + c.hisHer() + " feet bare.");
                    }
                    else if (c.getPLEALevel() > 1) {
                        w.append(t, ", taking advantage of how turned on and distracted " + c.heShe() + " is.");
                    }
                    else {
                        w.append(t, ", and when " + c.heShe() + " realizes that " + c.hisHer() + " legs are completely exposed now, " + c.heShe() + " can't help but be a little turned on by the thought of what could happen next.");
                    }
                }
            }
            else if (c.getEXPOLevel() == 2) {
                if (topCover.equals("blouse")) {
                    w.append(t, "The Thralls have torn " + mainName + "'s blouse open down the front");
                }
                else if (topCover.equals("bodice")) {
                    w.append(t, "The Thralls have torn apart " + mainName + "'s bodice");
                }
                else if (topCover.equals("cloak")) {
                    w.append(t, "The Thralls have torn " + mainName + "'s cloak in half");
                }
                else if (topCover.equals("robe")) {
                    w.append(t, "The Thralls have ripped open " + mainName + "'s robe");
                }
                else if (topCover.equals("jacket")) {
                    w.append(t, "The Thralls have ripped away the front of " + mainName + "'s jacket");
                }
                else if (topCover.equals("shirt")) {
                    w.append(t, "The Thralls have torn " + mainName + "'s shirt down off " + c.hisHer() + " shoulder");
                }
                else if (topCover.equals("strips")) {
                    w.append(t, "The Thralls have torn apart the strips of cloth covering " + mainName + "'s chest");
                }
                else if (topCover.equals("crop")) {
                    w.append(t, "The Thralls have torn " + mainName + "'s crop top in half");
                }
                else if (topCover.equals("bindings")) {
                    w.append(t, "The Thralls have ripped " + mainName + "'s chest bindings");
                }
                else if (topCover.equals("belts")) {
                    w.append(t, "The Thralls have snapped the belts covering " + mainName + "'s chest");
                }
                else if (topCover.equals("leotard")) {
                    w.append(t, "The Thralls have ripped away the front of " + mainName + "'s leotard");
                }
                else if (topCover.equals("armor")) {
                    w.append(t, "The Thralls have broken the clasps holding " + mainName + "'s armor closed");
                }
                else if (topCover.equals("bodysuit")) {
                    w.append(t, "The Thralls have torn open the front of " + mainName + "'s bodysuit");
                }
                else if (topCover.equals(bottomCover)) {
                    w.append(t, "The Thralls have torn open the top of " + mainName + "'s " + topDesc);
                }
                else {
                    w.append(t, "The Thralls have torn open " + mainName + "'s " + topDesc);
                }
                if (c.getINJULevel() < 2) {
                    if (c.getGender().equals("male")) {
                        w.append(t, " so that " + c.hisHer() + " smooth chest is exposed.  ");
                    }
                    else {
                        w.append(t, " so that " + c.heShe() + " needs to devote one hand to keeping everything covered.  ");
                    }
                }
                else if (c.getINJULevel() > 2) {
                    if (aVirg) {
                        if (w.tickle()) {
                            w.append(t, ", and when they see that " + c.heShe() + "'s exhausted enough to have a hard time covering " + c.himHer() + "self to compensate, they grin darkly and prepare to punish " + c.himHer() + " even more.  ");
                        }
                        else {
                            w.append(t, ", and when they see that " + c.heShe() + "'s badly-hurt enough to have a hard time covering " + c.himHer() + "self to compensate, they grin darkly and prepare to punish " + c.himHer() + " even more.  ");
                        }
                    }
                    else if (w.tickle()) {
                        w.append(t, ", making it even easier to tickle under " + c.hisHer() + " armpits.  ");
                    }
                    else if (c.getGender().equals("male")) {
                        w.append(t, ", allowing them to pinch and twist " + c.hisHer() + " nipples and " + c.hisHer() + " penis at the same time.  ");
                    }
                    else {
                        w.append(t, ", allowing the Thrall fucking " + c.himHer() + " up the ass to pinch and twist " + c.hisHer() + " nipples at the same time.  ");
                    }
                }
                else if (c.getGender().equals("male")) {
                    if (w.tickle()) {
                        w.append(t, ", and with how worried " + c.heShe() + " is by the direction the battle is going, " + c.heShe() + " can't even spare the effort of covering " + c.hisHer() + " smooth chest.  ");
                    }
                    else {
                        w.append(t, ", and in " + c.hisHer() + " injured state, " + c.heShe() + " doesn't care at all about having " + c.hisHer() + " smooth chest exposed.  ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, ", and there's obvious tiredness in " + c.hisHer() + " expression as " + c.heShe() + " uses one arm to keep everything covered.  ");
                }
                else {
                    w.append(t, ", and " + c.heShe() + " has to use one bloodied arm to keep everything covered.  ");
                }
                if (c.getPLEALevel() < 2) {
                    w.append(t, String.valueOf(c.HeShe()) + " frowns with exertion");
                }
                else if (c.getPLEALevel() > 2) {
                    if (cVirg) {
                        if (c.getGender().equals("male")) {
                            w.append(t, String.valueOf(c.HisHer()) + " legs wobble as " + c.heShe() + " suppresses " + c.hisHer() + " arousal");
                        }
                        else {
                            w.append(t, String.valueOf(c.HisHer()) + " breasts heave as " + c.heShe() + " grunts and moans with arousal");
                        }
                    }
                    else if (c.getGender().equals("female")) {
                        w.append(t, String.valueOf(c.HisHer()) + " juices soak " + c.hisHer() + " " + bottomDesc + " as " + c.heShe() + " endures " + c.hisHer() + " orgasm");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " spurting cock is barely contained within " + c.hisHer() + " torn " + bottomDesc + " as " + c.heShe() + " endures " + c.hisHer() + " orgasm");
                    }
                }
                else if (c.getGender().equals("male")) {
                    w.append(t, String.valueOf(c.HisHer()) + " erection remains hidden as " + c.heShe() + " struggles with " + c.hisHer() + " arousal");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " breasts heave as " + c.heShe() + " gasps with arousal");
                }
                if (c.getHATELevel() < 2) {
                    w.append(t, " and tries to focus.");
                }
                else if (c.getHATELevel() > 2) {
                    if (vVirg) {
                        w.append(t, ", keenly aware that " + c.hisHer() + " Sexual Barrier has broken.");
                    }
                    else {
                        w.append(t, " and the sensation of the shaft thrusting in and out of " + c.hisHer() + " " + hole + ".");
                    }
                }
                else {
                    w.append(t, " and anger.");
                }
            }
            else if (c.getEXPOLevel() == 3) {
                if (underType.equals("none")) {
                    if (c.getGender().equals("female")) {
                        w.append(t, "The Thralls have torn away the front of " + mainName + "'s " + bottomDesc + " so that " + c.hisHer() + " bare pussy is blatantly exposed.  " + c.HeShe() + " tries to cover " + c.himHer() + "self, but they pull apart " + c.hisHer() + " ");
                    }
                    else if (c.getGender().equals("male")) {
                        w.append(t, "The Thralls have torn away the front of " + mainName + "'s " + bottomDesc + " so that " + c.hisHer() + " bare penis is blatantly exposed.  " + c.HeShe() + " tries to cover " + c.himHer() + "self, but they pull apart " + c.hisHer() + " ");
                    }
                    else {
                        w.append(t, "The Thralls have torn away the front of " + mainName + "'s " + bottomDesc + " so that " + c.hisHer() + " penis and pussy are both blatantly exposed.  " + c.HeShe() + " tries to cover " + c.himHer() + "self, but they pull apart " + c.hisHer() + " ");
                    }
                }
                else {
                    if (underType.equals("panties") || underType.equals("wrap")) {
                        w.append(t, "The Thralls have pulled " + mainName + "'s panties ");
                    }
                    else if (underType.equals("g-string")) {
                        w.append(t, "The Thralls have pulled the remains of " + mainName + "'s g-string ");
                    }
                    else if (underType.equals("shorts")) {
                        w.append(t, "The Thralls have shredded " + mainName + "'s shorts and pulled them ");
                    }
                    else if (underType.equals("straps")) {
                        w.append(t, "The Thralls have snapped " + mainName + "'s underharness and pulled the straps ");
                    }
                    if (bottomAccess.equals("front") || bottomAccess.equals("cutout") || bottomAccess.equals("into") || bottomAccess.equals("around")) {
                        w.append(t, "apart, removing them from under " + c.hisHer() + " torn " + bottomDesc + ".  Next, they forcibly spread " + c.hisHer() + " ");
                    }
                    else if (bottomAccess.equals("top")) {
                        w.append(t, "apart, stripping " + c.himHer() + " through " + c.hisHer() + " torn " + bottomDesc + ".  Next, they forcibly spread " + c.hisHer() + " ");
                    }
                    else {
                        w.append(t, "down " + c.hisHer() + " ");
                    }
                }
                if (c.getPLEALevel() < 3) {
                    w.append(t, "thighs.  ");
                }
                else if (c.getPLEALevel() > 3 && cVirg) {
                    w.append(t, "thighs as they uncontrollably spasm with pleasure.  ");
                }
                else if (cVirg) {
                    if (c.getGender().equals("female")) {
                        w.append(t, "thighs, driven wild by the way that " + c.hisHer() + " flowing love juices signal " + c.hisHer() + " readiness for orgasm.  ");
                    }
                    else {
                        w.append(t, "thighs, driven wild by the way that " + c.hisHer() + " erection springs free.  ");
                    }
                }
                else if (c.getGender().equals("female")) {
                    w.append(t, "thighs, driven wild by the clear view of the juices streaming from " + c.hisHer() + " orgasmically clenching pussy.  ");
                }
                else {
                    w.append(t, "thighs, driven wild by the clear view of " + c.hisHer() + " repeatedly spurting cock.  ");
                }
                if (!modest) {
                    w.append(t, "Cameras flash from all directions as the spectators eagerly capture " + c.hisHer() + " most recent humiliation.  ");
                }
                if (c.getINJULevel() < 3) {
                    w.append(t, String.valueOf(c.HeShe()) + " struggles against them");
                }
                else if (c.getINJULevel() > 3 && aVirg) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HeShe()) + " spasms wildly, wasting the last of " + c.hisHer() + " energy");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " shrieks in pain as " + c.hisHer() + " shattered limbs are manhandled");
                    }
                }
                else if (aVirg) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HeShe()) + " can't hold back " + c.hisHer() + " desperate moans");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " cries out in pain as " + c.hisHer() + " weakened body is prepared for even more extreme abuses");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + " can't hold back " + c.hisHer() + " exhausted gasps of laughter as " + c.heShe() + "'s tickled");
                }
                else if (c.getGender().equals("male")) {
                    w.append(t, String.valueOf(c.HeShe()) + " can't hold back " + c.hisHer() + " squeals of pain as " + c.heShe() + " feels the Thralls' boots directly on the sensitive skin of " + c.hisHer() + " penis");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " can't hold back " + c.hisHer() + " groans of intense discomfort as " + c.heShe() + "'s fucked up the ass");
                }
                if (c.getHATELevel() < 3) {
                    w.append(t, ", now protected only by the magic of " + c.hisHer() + " Sexual Barrier.");
                }
                else if (c.getHATELevel() > 3 && vVirg) {
                    w.append(t, ", cursing and sobbing with rage.");
                }
                else if (vVirg) {
                    w.append(t, ", completely defenseless now that " + c.hisHer() + " Sexual Barrier has also failed.");
                }
                else {
                    w.append(t, ", " + c.hisHer() + " voice rising even higher as another Thrall penetrates " + c.hisHer() + " " + hole + ".");
                }
            }
            else if (c.getEXPOLevel() == 4) {
                if (c.getPLEALevel() < 4) {
                    if (c.getGender().equals("male")) {
                        w.append(t, String.valueOf(mainName) + "'s chest is completely exposed, ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s breasts are completely exposed, ");
                    }
                }
                else if (c.getPLEALevel() > 4) {
                    if (c.getGender().equals("male")) {
                        w.append(t, String.valueOf(mainName) + "'s bare chest heaves with " + c.hisHer() + " uncontrollable screams of pleasure, ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s bare breasts heave with " + c.hisHer() + " uncontrollable screams of pleasure, ");
                    }
                }
                else if (c.getGender().equals("male")) {
                    w.append(t, String.valueOf(mainName) + "'s orgasmic spasms emphasize " + c.hisHer() + " bare chest and fully erect nipples, ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s orgasmic spasms emphasize " + c.hisHer() + " bare breasts and fully erect nipples, ");
                }
                if (bottomCover.equals("skirt")) {
                    if (c.getGender().equals("female")) {
                        w.append(t, "while the remains of the skirt flapping around " + c.hisHer() + " hips are too short to conceal " + c.hisHer() + " pussy.  ");
                    }
                    else if (c.getGender().equals("male")) {
                        w.append(t, "while the remains of the skirt flapping around " + c.hisHer() + " hips are too short to conceal " + c.hisHer() + " penis.  ");
                    }
                    else {
                        w.append(t, "while the remains of the skirt flapping around " + c.hisHer() + " hips are too short to conceal " + c.hisHer() + " penis and pussy.  ");
                    }
                }
                else if (bottomCover.equals("miniskirt")) {
                    w.append(t, "while " + c.hisHer() + " miniskirt has been reduced to nothing more than a belt of material around " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("robe")) {
                    w.append(t, "while " + c.hisHer() + " robe has been torn to the point that it doesn't even reach past " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("cloak")) {
                    w.append(t, "while " + c.hisHer() + " cloak has been torn to the point that it doesn't even reach past " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("trousers")) {
                    w.append(t, "while " + c.hisHer() + " trousers have been shredded to the point that only a few scraps around " + c.hisHer() + " legs remain.  ");
                }
                else if (bottomCover.equals("leotard")) {
                    if (c.getGender().equals("female")) {
                        w.append(t, "while the remaining scraps of " + c.hisHer() + " leotard clinging to " + c.hisHer() + " body provide no coverage whatsoever for " + c.hisHer() + " hips and pussy.  ");
                    }
                    else if (c.getGender().equals("male")) {
                        w.append(t, "while the remaining scraps of " + c.hisHer() + " leotard clinging to " + c.hisHer() + " body provide no coverage whatsoever for " + c.hisHer() + " hips and penis.  ");
                    }
                    else {
                        w.append(t, "while the remaining scraps of " + c.hisHer() + " leotard clinging to " + c.hisHer() + " body provide no coverage whatsoever for " + c.hisHer() + " penis and pussy.  ");
                    }
                }
                else if (bottomCover.equals("bodysuit")) {
                    w.append(t, "while the torso and crotch of " + c.hisHer() + " bodysuit have been completely torn away.  ");
                }
                else if (bottomCover.equals("armor")) {
                    w.append(t, "while the armor plates that would normally cover " + c.hisHer() + " hips and crotch have been lost.  ");
                }
                else if (bottomCover.equals("strips")) {
                    w.append(t, "while the strips of cloth that had been covering " + c.hisHer() + " body have been completely removed save for a few dangling ends around " + c.hisHer() + " waist.  ");
                }
                else if (bottomCover.equals("belts")) {
                    w.append(t, "while the belts that had been covering " + c.hisHer() + " lower half have also been snapped and pulled away.  ");
                }
                else if (bottomCover.equals("shorts")) {
                    if (c.getGender().equals("female")) {
                        w.append(t, "while " + c.hisHer() + " shorts have been torn open over " + c.hisHer() + " pussy and ass.  ");
                    }
                    else if (c.getGender().equals("male")) {
                        w.append(t, "while " + c.hisHer() + " shorts have been torn open over " + c.hisHer() + " penis and ass.  ");
                    }
                    else {
                        w.append(t, "while " + c.hisHer() + " shorts have been torn open over " + c.hisHer() + " pussy and penis.  ");
                    }
                }
                else {
                    w.append(t, "while only a few useless scraps remain of " + c.hisHer() + " " + bottomDesc + ".  ");
                }
                if (c.getINJULevel() < 4) {
                    w.append(t, "With " + c.hisHer() + " limbs splayed out, there's nothing " + c.heShe() + " can do to cover " + c.himHer() + "self, ");
                }
                else if (c.getINJULevel() > 4) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HisHer()) + " splayed-out form, gasping for breath, makes for a pathetic sight, ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " mortally-wounded body makes for a pathetic sight, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s too worn out to even have the coordination to cover " + c.himHer() + "self, ");
                }
                else {
                    w.append(t, "With " + c.hisHer() + " body shattered, " + c.heShe() + " has no strength to cover " + c.himHer() + " self, ");
                }
                if (c.getHATELevel() < 4) {
                    w.append(t, "and " + c.heShe() + " can only wait for the humiliation to end.");
                }
                else if (c.getHATELevel() > 4) {
                    w.append(t, "and the Demonic energy erupting from " + c.hisHer() + " body isn't opaque enough to provide any modesty.");
                }
                else {
                    w.append(t, "and " + c.hisHer() + " impotent screams of rage only make " + c.himHer() + " look even weaker.");
                }
            }
            else {
                w.append(t, "Removing the remaining scraps of " + mainName + "'s " + bottomDesc + " is only a formality, and the Thralls focus more on forcing " + c.hisHer() + " body into embarrassing positions.");
            }
            w.append(t, "\n\n");
        }
        else if (highestPriority == 1) {
            if (c.getPLEALevel() == 1) {
                if (c.getHATELevel() < 1) {
                    w.append(t, "Despite the dire situation, ");
                }
                else if (c.getHATELevel() > 1) {
                    w.append(t, "Despite " + c.hisHer() + " growing fury, ");
                }
                else {
                    w.append(t, "Despite " + c.hisHer() + " growing annoyance, ");
                }
                if (innocence > 66) {
                    w.append(t, "the things the Thralls are doing to " + mainName + " make " + c.himHer() + " feel nice enough to start blushing and squirming.  ");
                }
                else if (innocence > 33) {
                    w.append(t, String.valueOf(mainName) + " feels " + c.hisHer() + " face grow warm as the Thralls' stimulation starts to have an effect.  ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " can't deny that the Thralls' sexual stimulation is starting to have an effect on " + c.himHer() + ".  ");
                }
                if (c.getEXPOLevel() < 1) {
                    w.append(t, "Their fingers are able to work their way in under " + c.hisHer() + " clothes, and ");
                }
                else if (c.getEXPOLevel() > 1) {
                    w.append(t, String.valueOf(c.HisHer()) + " need to cover " + c.himHer() + "self means " + c.heShe() + " can't ignore how exposed " + c.heShe() + " is, and ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " can feel the way the bystanders are staring at " + c.hisHer() + " legs exposed by " + c.hisHer() + " torn " + bottomDesc + ", and ");
                }
                if (c.getINJULevel() < 1) {
                    w.append(t, "no matter how hard " + c.heShe() + " fights, it's impossible to completely fend off the pleasure.");
                }
                else if (c.getINJULevel() > 1) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.heShe()) + "'s far too exhausted to fend off the assault.");
                    }
                    else {
                        w.append(t, String.valueOf(c.heShe()) + "'s far too badly hurt to fend off the assault.");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.hisHer()) + " growing tiredness and distraction prevent " + c.himHer() + " from fending off the assault.");
                }
                else {
                    w.append(t, String.valueOf(c.hisHer()) + " bruised limbs lack the strength to completely fend off the assault.");
                }
            }
            else if (c.getPLEALevel() == 2) {
                if (c.getINJULevel() < 2) {
                    w.append(t, String.valueOf(mainName) + "'s gasps of exertion grow thick with pleasure ");
                }
                else if (c.getINJULevel() > 2) {
                    if (aVirg) {
                        if (w.tickle()) {
                            w.append(t, String.valueOf(mainName) + " moans helplessly ");
                        }
                        else {
                            w.append(t, String.valueOf(mainName) + " cries out in pain as the Thralls manhandle " + c.himHer() + ", but there's pleasure in " + c.hisHer() + " voice too ");
                        }
                    }
                    else if (w.tickle()) {
                        w.append(t, "The tickling, groping hands make " + mainName + " laugh helplessly ");
                    }
                    else if (c.getGender().equals("male")) {
                        w.append(t, "The Thrall's boot grinding back and forth on " + mainName + "'s penis makes " + c.himHer() + " moan in mingled pleasure and pain ");
                    }
                    else {
                        w.append(t, "The cock thrusting into " + mainName + "'s ass makes " + c.himHer() + " moan in mingled pleasure and pain ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(mainName) + " is barely able to suppress " + c.hisHer() + " moans of pleasure ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s grunts of pain turn into moans of pleasure ");
                }
                if (innocence > 66) {
                    w.append(t, "as " + c.heShe() + " struggles to understand what's happening to " + c.himHer() + ".  ");
                }
                else if (innocence > 33) {
                    w.append(t, "as " + c.heShe() + " starts to give in to the sensations assaulting " + c.himHer() + ".  ");
                }
                else {
                    w.append(t, "as " + c.heShe() + " begins to eagerly anticipate the stimulation despite " + c.himHer() + "self.  ");
                }
                if (c.getEXPOLevel() < 2) {
                    w.append(t, String.valueOf(c.HeShe()) + " can only defend " + c.himHer() + "self as best " + c.heShe() + " can");
                }
                else if (c.getEXPOLevel() > 2) {
                    if (modest) {
                        w.append(t, String.valueOf(c.HeShe()) + " can only desperately try to cover " + c.hisHer() + " exposed body");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " can only look back at the cameras zooming in on " + c.hisHer() + " bare crotch");
                    }
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " can only tightly clutch " + c.hisHer() + " torn " + topDesc + " to " + c.hisHer() + " chest");
                }
                if (c.getHATELevel() < 2) {
                    w.append(t, " and try to stay calm.");
                }
                else if (c.getHATELevel() > 2) {
                    if (vVirg) {
                        w.append(t, " and try " + c.hisHer() + " best not to think about how " + c.hisHer() + " Sexual Barrier has come undone.");
                    }
                    else {
                        w.append(t, " and endure having " + c.hisHer() + " " + organ + " played with as one of the Thralls thrusts into " + c.hisHer() + " " + hole + " at the same time.");
                    }
                }
                else {
                    w.append(t, " and glare back at them with seething hatred.");
                }
            }
            else if (c.getPLEALevel() == 3) {
                if (c.getEXPOLevel() < 3) {
                    w.append(t, "As the battle rages around " + mainName);
                }
                else if (c.getEXPOLevel() > 3 && modest) {
                    w.append(t, "With " + mainName + "'s clothes essentially stripped from " + c.hisHer() + " body");
                }
                else if (modest) {
                    w.append(t, "With " + mainName + "'s shredded " + bottomDesc + " and lack of panties");
                }
                else {
                    w.append(t, "With " + mainName + " stripped and being filmed from every angle");
                }
                if (cVirg) {
                    if (innocence > 66) {
                        if (!c.getGender().equals("female")) {
                            w.append(t, ", everyone else can see that " + c.heShe() + " has an erection, even if " + mainName + " " + c.himHer() + "self doesn't realize it.  ");
                        }
                        else {
                            w.append(t, ", everyone else can see the love juices dripping down " + c.hisHer() + " thighs, even if " + mainName + " " + c.himHer() + "self doesn't realize it.  ");
                        }
                    }
                    else if (innocence > 33) {
                        if (!c.getGender().equals("female")) {
                            w.append(t, ", it's obvious that " + c.heShe() + " has an erection.  ");
                        }
                        else {
                            w.append(t, ", it's obvious that " + c.hisHer() + " thighs are slick with " + c.hisHer() + " fluids.  ");
                        }
                    }
                    else if (!c.getGender().equals("female")) {
                        w.append(t, ", " + c.heShe() + " is fully aware that " + c.hisHer() + " shameful erection is visible.  ");
                    }
                    else {
                        w.append(t, ", " + c.heShe() + " is fully aware that shameful secretions are dripping down " + c.hisHer() + " thighs.  ");
                    }
                }
                else if (innocence > 66) {
                    if (c.getGender().equals("female")) {
                        w.append(t, ", everyone else can see that " + c.heShe() + "'s cumming hard, because " + c.heShe() + "'s too delirious with pleasure to hide it.  ");
                    }
                    else {
                        w.append(t, ", everyone can see the cum spurting from " + c.hisHer() + " penis, even if " + c.heShe() + "'s too caught up in how good it feels to realize what a scene " + c.heShe() + "'s making.  ");
                    }
                }
                else if (innocence > 33) {
                    if (c.getGender().equals("female")) {
                        w.append(t, ", it's obvious that " + c.heShe() + "'s cumming.  ");
                    }
                    else {
                        w.append(t, ", " + c.hisHer() + " spurting cock makes it obvious that " + c.heShe() + "'s cumming.  ");
                    }
                }
                else if (c.getGender().equals("female")) {
                    w.append(t, ", " + c.heShe() + "'s fully aware that the spectators will likely realize that " + c.heShe() + "'s orgasming.  ");
                }
                else {
                    w.append(t, ", " + c.heShe() + "'s fully aware that " + c.hisHer() + " spurting cock is revealing how much pleasure " + c.heShe() + "'s feeling right now.  ");
                }
                if (c.getHATELevel() < 3) {
                    w.append(t, String.valueOf(c.HisHer()) + " effort to stay focused ");
                }
                else if (c.getHATELevel() > 3 && vVirg) {
                    w.append(t, String.valueOf(c.HisHer()) + " shrieking rage ");
                }
                else if (vVirg) {
                    w.append(t, String.valueOf(c.HisHer()) + " violent anger ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " sense of violation over the Thralls penetrating " + c.hisHer() + " " + hole + " ");
                }
                if (c.getINJULevel() < 3) {
                    w.append(t, "isn't enough to stop the pleasure from growing stronger and stronger.");
                }
                else if (c.getINJULevel() > 3 && aVirg) {
                    if (w.tickle()) {
                        w.append(t, "is completely irrelevant in the face of " + c.hisHer() + " extreme exhaustion.");
                    }
                    else {
                        w.append(t, "and broken bones aren't enough to drown out the pleasure.");
                    }
                }
                else if (aVirg) {
                    if (w.tickle()) {
                        w.append(t, "isn't enough to stop " + c.hisHer() + " breathless moans from coming out.");
                    }
                    else {
                        w.append(t, "isn't enough to stop the pain of " + c.hisHer() + " injuries from being overwhelmed by surging pleasure.");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, "isn't enough to stop " + c.hisHer() + " laughter from growing whiny and desperate as the pleasure mounts.");
                }
                else if (c.getGender().equals("male")) {
                    w.append(t, "isn't enough to stop the painful crushing of " + c.hisHer() + " penis and balls from giving " + c.himHer() + " a masochistic pleasure.");
                }
                else {
                    w.append(t, "isn't enough to stop the cock up " + c.hisHer() + " butt from awakening even more shameful pleasure in " + c.himHer() + ".");
                }
            }
            else if (c.getPLEALevel() == 4) {
                if (innocence > 66) {
                    if (c.getGender().equals("female")) {
                        w.append(t, String.valueOf(mainName) + " is feeling so good that it's starting to scare " + c.himHer() + ", " + c.hisHer() + " body spasming against " + c.hisHer() + " will");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " is feeling so good that it's starting to scare " + c.himHer() + ", " + c.hisHer() + " penis dribbling a constant stream of cum");
                    }
                }
                else if (innocence > 33) {
                    if (c.getGender().equals("female")) {
                        w.append(t, String.valueOf(mainName) + "'s body spasms at the overwhelming pleasure");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s penis releases a constant dribble of cum as " + c.heShe() + " spasms in overwhelming pleasure");
                    }
                }
                else if (c.getGender().equals("female")) {
                    w.append(t, String.valueOf(mainName) + " squeezes " + c.hisHer() + " eyes shut, but " + c.heShe() + " can't ignore the way that " + c.hisHer() + " body is spasming against " + c.hisHer() + " will");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " squeezes " + c.hisHer() + " eyes shut, but " + c.heShe() + " can't ignore the way that " + c.hisHer() + " twitching penis is dribbling cum in a constant debilitating climax");
                }
                if (c.getINJULevel() < 4) {
                    w.append(t, ", interfering with " + c.hisHer() + " attempts to escape.  ");
                }
                else if (c.getINJULevel() > 4) {
                    if (w.tickle()) {
                        w.append(t, ", even as " + c.heShe() + " almost blacks out from exhaustion.  ");
                    }
                    else {
                        w.append(t, ", the sensations somehow bypassing the missing nerves from " + c.hisHer() + " moral wounds.  ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, ", " + c.hisHer() + " movements weak and uncoordinated with exhaustion.  ");
                }
                else {
                    w.append(t, ", each movement causing a spike of pain to shoot through " + c.hisHer() + " shattered limbs.  ");
                }
                if (c.getHATELevel() < 4) {
                    w.append(t, String.valueOf(c.HeShe()) + " can't think about anything except orgasm");
                }
                else if (c.getHATELevel() > 4) {
                    w.append(t, "Demonic energy erupts from " + c.himHer() + " with every movement");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " shrieks of rage contrast sharply with " + c.hisHer() + " erotic movements");
                }
                if (c.getEXPOLevel() < 4) {
                    w.append(t, ", " + c.hisHer() + " body gyrating on instinct.");
                }
                else if (c.getEXPOLevel() > 4) {
                    w.append(t, ", " + c.hisHer() + " naked body gyrating on instinct.");
                }
                else {
                    w.append(t, ", the scraps of " + c.hisHer() + " " + bottomDesc + " framing " + c.hisHer() + " shape as " + c.heShe() + " gyrates on pure instinct.");
                }
            }
            else {
                w.append(t, String.valueOf(mainName) + " screams as " + c.hisHer() + " pleasure reaches a new peak.  " + c.HisHer() + " whole body feels like one erogenous zone, and the Thralls' abuses feel far, far better than they should.");
            }
            w.append(t, "\n\n");
        }
        else if (highestPriority == 2) {
            if (c.getINJULevel() == 1) {
                if (c.getEXPOLevel() < 1) {
                    w.append(t, String.valueOf(mainName) + " is still trying to put on a brave face, but ");
                }
                else if (c.getEXPOLevel() > 1) {
                    w.append(t, String.valueOf(mainName) + "'s clothes are badly torn and ");
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(mainName) + "'s bare feet are being ruthlessly exploited by the Thralls, and ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " has had " + c.hisHer() + " " + bottomDesc + " torn off " + c.hisHer() + " legs, and ");
                }
                if (w.tickle()) {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(c.heShe()) + "'s forced to acknowledge that the tickling is starting to affect " + c.himHer() + ".  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(c.hisHer()) + " face wears a strained expression from being forced to endure the tickling.  ");
                    }
                    else {
                        w.append(t, "the tickling has started to affect " + c.himHer() + ".  " + c.HeShe() + "'s afraid of just how much worse it can get.  ");
                    }
                }
                else if (confidence > 66) {
                    w.append(t, "the bruises covering " + c.hisHer() + " body force " + c.himHer() + " to acknowledge that " + c.heShe() + "'s getting hurt.  ");
                }
                else if (confidence > 33) {
                    w.append(t, String.valueOf(c.hisHer()) + " confidence has been shaken by the bruises covering " + c.hisHer() + " body.  ");
                }
                else {
                    w.append(t, String.valueOf(c.heShe()) + " can't stifle " + c.hisHer() + " whimpers of pain nor cover the bruises across " + c.hisHer() + " body.  ");
                }
                if (c.getHATELevel() < 1) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s trying to remain calm and focused, but ");
                }
                else if (c.getHATELevel() > 1) {
                    w.append(t, String.valueOf(c.HisHer()) + " sense of hatred, unsuitable for one of the Chosen, has weakened " + c.hisHer() + " magical defenses, and ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " growing annoyance has disturbed " + c.hisHer() + " mental state and weakened " + c.hisHer() + " magical defenses, and ");
                }
                if (c.getPLEALevel() < 1) {
                    w.append(t, String.valueOf(c.heShe()) + " can't hold up against this kind of abuse forever.");
                }
                else if (c.getPLEALevel() > 1) {
                    w.append(t, "the pleasure inflicted on " + c.himHer() + " has rendered " + c.hisHer() + " nerves oversensitive and vulnerable.");
                }
                else {
                    w.append(t, String.valueOf(c.hisHer()) + " skin, flush with pleasure, feels especially sensitive.");
                }
            }
            else if (c.getINJULevel() == 2) {
                if (w.tickle()) {
                    if (c.getPLEALevel() < 2) {
                        w.append(t, String.valueOf(mainName) + " reels");
                    }
                    else if (c.getPLEALevel() > 2) {
                        if (cVirg) {
                            w.append(t, String.valueOf(mainName) + "'s near-orgasmic pleasure is interrupted by a spike of unpleasant stimulation");
                        }
                        else {
                            w.append(t, String.valueOf(mainName) + "'s orgasm is interrupted by a spike of unpleasant stimulation");
                        }
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s gasping breaths of pleasure turn into a stifled squeak");
                    }
                    if (confidence > 66) {
                        w.append(t, " as the tickling overwhelms " + c.hisHer() + " willpower and starts to make " + c.himHer() + " flinch and twitch.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, " as the tickling starts to make " + c.himHer() + " blatantly flinch and squirm.  ");
                    }
                    else {
                        w.append(t, " as the tickling reaches the point that " + c.heShe() + " can't help but flinch away from each touch.  ");
                    }
                    if (c.getEXPOLevel() < 2) {
                        w.append(t, String.valueOf(c.HisHer()) + " clothes are beginning to grow disheveled in the process");
                    }
                    else if (c.getEXPOLevel() > 2) {
                        w.append(t, "The damage to " + c.hisHer() + " clothes means that " + c.hisHer() + " reflexive movements threaten to expose everything");
                        if (!modest) {
                            w.append(t, " to the cameras");
                        }
                    }
                    else {
                        w.append(t, "The damage to " + c.hisHer() + " " + topDesc + " has turned " + c.hisHer() + " armpits into a target");
                    }
                }
                else {
                    if (c.getPLEALevel() < 2) {
                        w.append(t, String.valueOf(mainName) + " reels");
                    }
                    else if (c.getPLEALevel() > 2) {
                        if (cVirg) {
                            w.append(t, String.valueOf(mainName) + "'s near-orgasmic pleasure is interrupted by a spike of intense pain");
                        }
                        else {
                            w.append(t, String.valueOf(mainName) + "'s orgasm is interrupted by a spike of intense pain");
                        }
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s gasping breaths of pleasure turn into cries of pain");
                    }
                    if (confidence > 66) {
                        w.append(t, " as " + c.hisHer() + " previous overconfidence is punished with attacks that start to draw blood.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, " as the Thralls' attacks start to draw blood.  ");
                    }
                    else {
                        w.append(t, " as " + c.hisHer() + " lack of self-confidence means that the Thralls' attacks are already starting to draw blood.  ");
                    }
                    if (c.getEXPOLevel() < 2) {
                        w.append(t, "Patches of red are beginning to spread across " + c.hisHer() + " clothes");
                    }
                    else if (c.getEXPOLevel() > 2) {
                        if (modest) {
                            w.append(t, String.valueOf(c.HisHer()) + " clothes are too damaged to hide the wounds");
                        }
                        else {
                            w.append(t, String.valueOf(c.HisHer()) + " stripped, pitiful state is captured by the watching cameras");
                        }
                    }
                    else {
                        w.append(t, "The ragged edges of " + c.hisHer() + " " + topDesc + " are stained in red");
                    }
                }
                if (c.getHATELevel() < 2) {
                    w.append(t, ", and " + c.heShe() + "'ll only have a harder time defending " + c.himHer() + "self from here.");
                }
                else if (c.getHATELevel() > 2) {
                    if (vVirg) {
                        w.append(t, ", and with " + c.hisHer() + " Sexual Barrier broken, " + c.heShe() + "'s especially vulnerable.");
                    }
                    else {
                        w.append(t, ", and with one of the Thralls fucking " + c.hisHer() + " " + hole + " even as " + c.heShe() + "'s tortured, " + c.hisHer() + " defeat is undeniable.");
                    }
                }
                else {
                    w.append(t, ", and a desire for vengeance smolders in " + c.hisHer() + " eyes.");
                }
            }
            else if (c.getINJULevel() == 3) {
                if (w.tickle()) {
                    if (aVirg) {
                        if (confidence > 66) {
                            w.append(t, String.valueOf(mainName) + " has been stubbornly concealing just how much all the tickling has been affecting " + c.himHer() + ", but the Thralls are starting to notice " + c.hisHer() + " inability to completely suppress " + c.hisHer() + " voice");
                        }
                        else if (confidence > 33) {
                            w.append(t, String.valueOf(mainName) + "'s self-confidence has been completely destroyed by the way the Thralls are toying with " + c.himHer());
                        }
                        else {
                            w.append(t, String.valueOf(mainName) + "'s voice comes out in small whimpers every time the Thralls tickle " + c.himHer() + ".  " + c.HeShe() + " knows " + c.heShe() + " isn't strong enough to resist whatever they want to make " + c.himHer() + " do");
                        }
                    }
                    else if (confidence > 66) {
                        w.append(t, String.valueOf(mainName) + " has been stubbornly resisting the tickling so far, but now " + c.heShe() + " can't help but start laughing again");
                    }
                    else if (confidence > 33) {
                        w.append(t, String.valueOf(mainName) + " has been forced to laugh again by the Thralls' tickling");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + "'s voice comes out in whimpering giggles every time the Thralls tickle " + c.himHer() + ".  " + c.HeShe() + " knows " + c.heShe() + " never had a chance");
                    }
                }
                else if (aVirg) {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(mainName) + " has been stubbornly concealing just how hurt " + c.heShe() + " is, but the Thralls can feel the way that " + c.hisHer() + " previously unyielding flesh is becoming soft under their fingers");
                    }
                    else if (confidence > 33) {
                        w.append(t, "As the injuries accumulate, the Thralls feel " + mainName + "'s body becoming softer and more yielding");
                    }
                    else {
                        w.append(t, "The accumulating injuries destroy " + mainName + "'s self-confidence, causing " + c.hisHer() + " body to become more and more vulnerable to further abuses.  The Thralls notice how " + c.hisHer() + " skin seems to grow softer as " + c.hisHer() + " struggles weaken");
                    }
                }
                else if (c.getGender().equals("male")) {
                    if (confidence > 66) {
                        w.append(t, String.valueOf(mainName) + " has been trying to ignore the pain of " + c.hisHer() + " injuries, but the constant pummeling and twisting to " + c.hisHer() + " testicles finally causes " + c.himHer() + " to scream out loud");
                    }
                    else if (confidence > 33) {
                        w.append(t, "As the injuries accumulate, the Thralls take advantage of " + mainName + "'s weakening body by pummeling and twisting " + c.hisHer() + " sensitive testicles");
                    }
                    else {
                        w.append(t, "The accumulating injuries destroy " + mainName + "'s self-confidence, causing " + c.hisHer() + " sensitive testicles to become more vulnerable to the Thralls' pinching, twisting hands");
                    }
                }
                else if (confidence > 66) {
                    w.append(t, String.valueOf(mainName) + " has been trying to ignore the pain of " + c.hisHer() + " injuries, but " + c.heShe() + " still screams out loud as one of the Thralls manages to force the tip of his cock past " + c.hisHer() + " anus");
                }
                else if (confidence > 33) {
                    w.append(t, "As the injuries accumulate, the one of the Thralls takes advantage of " + mainName + "'s weakening body by forcing his cock into " + c.hisHer() + " ass");
                }
                else {
                    w.append(t, "The accumulating injuries destroy " + mainName + "'s self-confidence, causing " + c.hisHer() + " body to become vulnerable enough that one of the Thralls is able to force his cock into " + c.hisHer() + " ass");
                }
                if (c.getHATELevel() < 3) {
                    w.append(t, ", and even though " + c.hisHer() + " Sexual Barrier remains intact, there are other ways for them to enjoy " + c.hisHer() + " body.  ");
                }
                else if (c.getHATELevel() > 3 && vVirg) {
                    w.append(t, ", and " + c.hisHer() + " sobs of rage do nothing to deter them from using " + c.himHer() + " as they please.  ");
                }
                else if (vVirg) {
                    if (w.tickle()) {
                        w.append(t, ", and with " + c.hisHer() + " Sexual Barrier broken, " + c.heShe() + " feels especially vulnerable.  ");
                    }
                    else {
                        w.append(t, ", and with " + c.hisHer() + " Sexual Barrier broken, they have multiple ways they might enjoy that fact.  ");
                    }
                }
                else {
                    w.append(t, ", and they find it easier than ever to penetrate " + c.hisHer() + " " + hole + ".  ");
                }
                if (c.getEXPOLevel() < 3) {
                    w.append(t, "They're tearing apart " + c.hisHer() + " " + bottomDesc + " in the process");
                }
                else if (c.getEXPOLevel() > 3 && modest) {
                    w.append(t, "They aren't hindered in the slightest by " + c.hisHer() + " shredded " + bottomDesc);
                }
                else if (modest) {
                    w.append(t, String.valueOf(c.HisHer()) + " lack of panties leaves " + c.himHer() + " especially vulnerable");
                }
                else {
                    w.append(t, "The abuse is being filmed by countless cameras");
                }
                if (c.getPLEALevel() < 3) {
                    w.append(t, ".");
                }
                else if (c.getPLEALevel() > 3 && cVirg) {
                    w.append(t, ", and the pleasurable spasms in " + c.hisHer() + " body intensify as " + c.heShe() + " can't help but anticipate what they're about to do.");
                }
                else if (cVirg) {
                    w.append(t, ", and " + c.hisHer() + " fluid-soaked thighs tremble with approaching orgasm.");
                }
                else {
                    w.append(t, ", and " + c.heShe() + " can't stop cumming as they stroke " + c.hisHer() + " " + organ + " at the same time.");
                }
            }
            else if (c.getINJULevel() == 4) {
                if (c.getHATELevel() < 4) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(mainName) + " cries out helplessly");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " cries out in pain");
                    }
                }
                else if (c.getHATELevel() > 4) {
                    w.append(t, String.valueOf(mainName) + " erupts with tendrils of Demonic energy");
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(mainName) + " shrieks in helpless rage");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " shrieks in rage and pain");
                }
                if (w.tickle()) {
                    if (confidence > 66) {
                        w.append(t, ", still thrashing wildly as " + c.heShe() + "'s tickled, but too exhausted for it to do " + c.himHer() + " any good.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, ", completely fed up with the tickling but too exhausted to actually fight it.  ");
                    }
                    else {
                        w.append(t, ", spasming weakly as " + c.heShe() + "'s tickled, but too exhausted and demoralized to put any strength in " + c.hisHer() + " limbs.  ");
                    }
                    if (c.getPLEALevel() < 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " attempts to curl up and protect " + c.himHer() + "self are completely useless");
                    }
                    else if (c.getPLEALevel() > 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " nerves have been corrupted to the point that even the lightest touches make " + c.himHer() + " move erratically");
                    }
                    else {
                        w.append(t, "Combined with " + c.hisHer() + " sexual overstimulation, the attacks make " + c.hisHer() + " movements become completely uncontrolled");
                    }
                }
                else {
                    if (confidence > 66) {
                        w.append(t, ", struggling as much as " + c.heShe() + " can as the Thralls mangle " + c.hisHer() + " body.  ");
                    }
                    else if (confidence > 33) {
                        w.append(t, " as the Thralls crush " + c.hisHer() + " body.  ");
                    }
                    else {
                        w.append(t, ", trying and failing to curl up and protect " + c.himHer() + "self as the Thralls shatter " + c.hisHer() + " body.  ");
                    }
                    if (c.getPLEALevel() < 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " attempts to move only hurt " + c.himHer() + " more");
                    }
                    else if (c.getPLEALevel() > 4) {
                        w.append(t, String.valueOf(c.HisHer()) + " nerves have been corrupted to the point that the damage inflicts as much pain as pleasure, and the resulting orgasmic spasms only hurt " + c.himHer() + " more");
                    }
                    else {
                        w.append(t, String.valueOf(c.HisHer()) + " body continues to spasm with the aftershocks of the pleasure already inflicted on " + c.himHer() + ", and the movements only hurt " + c.himHer() + " more");
                    }
                }
                if (c.getEXPOLevel() < 4) {
                    w.append(t, ".");
                }
                else if (c.getEXPOLevel() > 4) {
                    w.append(t, " and showcase " + c.hisHer() + " exposed body for " + c.hisHer() + " abusers.");
                }
                else {
                    w.append(t, " and cause the remaining scraps of " + c.hisHer() + " " + bottomDesc + " to shift so that they don't cover anything at all.");
                }
            }
            else if (w.tickle()) {
                w.append(t, String.valueOf(mainName) + " is completely out of breath from being forced to laugh so much, and a regular person would have passed out already.  However, " + c.hisHer() + " Chosen powers force " + c.himHer() + " to remain awake and alert, no matter how heavy " + c.hisHer() + " limbs feel or how much " + c.heShe() + " just wants to give up.");
            }
            else {
                w.append(t, String.valueOf(mainName) + " is being continually dealt wounds that ought to be fatal, but " + c.hisHer() + " Chosen powers don't permit " + c.himHer() + " to die or even pass out.  However, they do make it harder and harder for " + c.himHer() + " to defend " + c.himHer() + "self.");
            }
            w.append(t, "\n\n");
        }
        else if (highestPriority == 0) {
            if (c.getHATELevel() == 1) {
                if (c.getPLEALevel() < 1) {
                    w.append(t, "In contrast to the Thralls' delight, ");
                }
                else if (c.getPLEALevel() > 1) {
                    w.append(t, "Despite (or perhaps because of) the intense pleasure that has been inflicted on " + c.himHer() + ", ");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " face turning red with combined arousal and anger, ");
                }
                if (morality > 66) {
                    w.append(t, "some serious annoyance is hidden behind " + mainName + "'s outwardly compassionate demeanor.  ");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " is already getting annoyed at the situation. ");
                }
                else {
                    w.append(t, String.valueOf(mainName) + "'s short temper means that " + c.heShe() + "'s quickly getting annoyed at being toyed with.  ");
                }
                if (c.getINJULevel() < 1) {
                    w.append(t, String.valueOf(c.HeShe()) + " realizes that they're deliberately provoking " + c.himHer() + ", but " + c.heShe() + "'s still ");
                }
                else if (c.getINJULevel() > 1) {
                    if (w.tickle()) {
                        w.append(t, String.valueOf(c.HeShe()) + " subconsciously compensates for " + c.hisHer() + " feelings of helplessness by blaming others, and " + c.heShe() + "'s ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + "'s bleding from various wounds, putting " + c.himHer() + " in a desperate state of mind, and " + c.heShe() + "'s ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, String.valueOf(c.HeShe()) + "'s starting to get worried about how easy it seems to be for the Thralls to toy with " + c.himHer() + ", and " + c.heShe() + "'s ");
                }
                else {
                    w.append(t, "The pain of " + c.hisHer() + " bruises fuels " + c.hisHer() + " anger, and " + c.heShe() + "'s ");
                }
                if (c.getEXPOLevel() < 1) {
                    w.append(t, "losing " + c.hisHer() + " cool.");
                }
                else if (c.getEXPOLevel() > 1) {
                    w.append(t, "flustered at being so exposed.");
                }
                else {
                    w.append(t, "distracted enough to forget the need to hold " + c.hisHer() + " torn " + bottomDesc + " closed.");
                }
            }
            else if (c.getHATELevel() == 2) {
                if (c.getEXPOLevel() < 2) {
                    w.append(t, "As the Thralls continue to harass " + mainName + ", ");
                }
                else if (c.getEXPOLevel() > 2) {
                    if (modest) {
                        w.append(t, "As " + mainName + " tries to cover " + c.hisHer() + " stripped body, ");
                    }
                    else {
                        w.append(t, "As the Thralls film " + mainName + "'s stripped body, ");
                    }
                }
                else {
                    w.append(t, "As " + mainName + " struggles to hold " + c.hisHer() + " " + topDesc + " closed, ");
                }
                if (morality > 66) {
                    w.append(t, String.valueOf(c.heShe()) + " wears an angry expression, unsuitable for " + c.hisHer() + " normally kind face.  ");
                }
                else if (morality > 33) {
                    w.append(t, "resentment burns in " + c.hisHer() + " eyes.  ");
                }
                else {
                    w.append(t, String.valueOf(c.hisHer()) + " teeth are gritted in rage.  ");
                }
                if (c.getINJULevel() < 2) {
                    w.append(t, String.valueOf(c.HisHer()) + " composure completely lost, ");
                }
                else if (c.getINJULevel() > 2) {
                    if (aVirg) {
                        if (w.tickle()) {
                            w.append(t, "Showing obvious signs of exhaustion, ");
                        }
                        else {
                            w.append(t, "With the pain of " + c.hisHer() + " severe injuries, ");
                        }
                    }
                    else if (w.tickle()) {
                        w.append(t, "Even so, " + c.heShe() + " still ends up squealing with laughter whenever they tickle " + c.himHer() + ", and ");
                    }
                    else if (c.getGender().equals("male")) {
                        w.append(t, "Crying out in pain whenever " + c.hisHer() + " attackers stomp on " + c.hisHer() + " testicles, ");
                    }
                    else {
                        w.append(t, "Enduring a Thrall's cock up " + c.hisHer() + " ass, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, "Reflexively flinching away from every touch, ");
                }
                else {
                    w.append(t, "With " + c.hisHer() + " fight-or-flight response stimulated by the cuts covering " + c.hisHer() + " body, ");
                }
                if (c.getPLEALevel() < 2) {
                    w.append(t, String.valueOf(c.heShe()) + "'s too caught up in the moment to calm down.");
                }
                else if (c.getPLEALevel() > 2) {
                    if (cVirg) {
                        w.append(t, "the way " + c.hisHer() + " nerves have been overstimulated by pleasure makes it impossible for " + c.himHer() + " to shut everything out and calm down.");
                    }
                    else {
                        w.append(t, "the countless hands stroking " + c.hisHer() + " " + organ + " still bring " + c.himHer() + " to another orgasm.");
                    }
                }
                else {
                    w.append(t, String.valueOf(c.heShe()) + " would have a hard enough time focusing even if " + c.heShe() + " weren't also gasping for breath in the wake of the sexual stimulation.");
                }
            }
            else if (c.getHATELevel() == 3) {
                if (c.getINJULevel() < 3) {
                    w.append(t, "Unable to contain " + c.hisHer() + " emotions anymore, ");
                }
                else if (c.getINJULevel() > 3 && aVirg) {
                    if (w.tickle()) {
                        w.append(t, "Desperately struggling against " + c.hisHer() + " overwhelming exhaustion, ");
                    }
                    else {
                        w.append(t, "Desperately struggling despite " + c.hisHer() + " shattered body, ");
                    }
                }
                else if (aVirg) {
                    if (w.tickle()) {
                        w.append(t, "Gasping and moaning with exhaustion, ");
                    }
                    else {
                        w.append(t, "Made desperate by " + c.hisHer() + " serious wounds, ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, "Gasping with unwilling laughter, ");
                }
                else if (c.getGender().equals("male")) {
                    w.append(t, "Made desperate by the pain from the Thralls stomping on " + c.hisHer() + " testicles, ");
                }
                else {
                    w.append(t, "Desperately struggling against the Thrall fucking " + c.himHer() + " up the ass, ");
                }
                if (vVirg) {
                    if (morality > 66) {
                        w.append(t, String.valueOf(mainName) + " lashes out, paying less mind than " + c.heShe() + " should to any innocents who might be close enough to get hurt.  ");
                    }
                    else if (morality > 33) {
                        w.append(t, String.valueOf(mainName) + " lashes out indiscrimiately in " + c.hisHer() + " attempts to escape.  ");
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " gives in to " + c.hisHer() + " rage and starts trying to lash out.  ");
                    }
                }
                else {
                    if (morality > 66) {
                        w.append(t, String.valueOf(mainName) + " shudders in revulsion as one of " + c.hisHer() + " attackers manages to penetrate " + c.hisHer() + " " + hole);
                    }
                    else if (morality > 33) {
                        w.append(t, String.valueOf(mainName) + " goes stiff and freezes up briefly as one of " + c.hisHer() + " attackers manages to penetrate " + c.hisHer() + " " + hole);
                    }
                    else {
                        w.append(t, String.valueOf(mainName) + " screams with rage as one of " + c.hisHer() + " attackers manages to penetrate " + c.hisHer() + " " + hole);
                    }
                    w.append(t, ".  ");
                }
                if (c.getPLEALevel() < 3) {
                    w.append(t, String.valueOf(c.HeShe()) + " just wants this all to be over");
                }
                else if (c.getPLEALevel() > 3 && cVirg) {
                    w.append(t, String.valueOf(c.HisHer()) + " body is uncontrollably writhing in pleasure, and " + c.hisHer() + " mind has been affected too");
                }
                else if (cVirg) {
                    w.append(t, "The pleasure has left " + c.himHer() + " incapable of thinking straight");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + "'s already cumming again");
                }
                if (c.getEXPOLevel() < 3) {
                    w.append(t, ".");
                }
                else if (c.getEXPOLevel() > 3 && modest) {
                    w.append(t, ", " + c.heShe() + " has practically forgotten just how exposed " + c.hisHer() + " body is.");
                }
                else if (modest) {
                    w.append(t, ", " + c.heShe() + " can't even muster the composure to cover " + c.hisHer() + " torn " + bottomDesc + " and maintain some level of modesty.");
                }
                else {
                    w.append(t, ", and " + c.heShe() + " barely notices when " + c.hisHer() + " bare legs are forced wide apart for the benefit of the cameras.");
                }
            }
            else if (c.getHATELevel() == 4) {
                if (morality > 66) {
                    w.append(t, String.valueOf(mainName) + " is torn between laughing and sobbing as " + c.hisHer() + " sanity cracks");
                }
                else if (morality > 33) {
                    w.append(t, String.valueOf(mainName) + " giggles madly as " + c.hisHer() + " sanity cracks");
                }
                else {
                    w.append(t, String.valueOf(mainName) + " laughs with despairing abandon as " + c.hisHer() + " sanity cracks");
                }
                if (c.getINJULevel() < 4) {
                    w.append(t, ".  ");
                }
                else if (c.getINJULevel() > 4) {
                    if (w.tickle()) {
                        w.append(t, ", struggling for breath.  ");
                    }
                    else {
                        w.append(t, ", barely even acknowledging the mortal wounds covering " + c.hisHer() + " body.  ");
                    }
                }
                else if (w.tickle()) {
                    w.append(t, ", twitching wildly at the slightest touch.  ");
                }
                else {
                    w.append(t, ", barely even acknowledging " + c.hisHer() + " shattered body.  ");
                }
                if (c.getPLEALevel() < 4) {
                    w.append(t, String.valueOf(c.HisHer()) + " emotions have spiraled far beyond " + c.hisHer() + " control");
                }
                else if (c.getPLEALevel() > 4) {
                    w.append(t, "The waves of pleasure rolling through " + c.hisHer() + " overstimulated nerves burn the scene into " + c.hisHer() + " memory");
                }
                else {
                    w.append(t, String.valueOf(c.HisHer()) + " constant spasms of pleasure make " + c.himHer() + " look completely unhinged");
                }
                if (c.getEXPOLevel() < 4) {
                    w.append(t, ".");
                }
                else if (c.getEXPOLevel() > 4) {
                    w.append(t, ", " + c.hisHer() + " mind and body both stripped of all defenses.");
                }
                else {
                    w.append(t, ", " + c.hisHer() + " shredded " + bottomDesc + " enhancing " + c.hisHer() + " savage appearance.");
                }
            }
            else {
                w.append(t, "Your provocations reach into the depths of " + mainName + "'s soul, drawing tendrils of Demonic energy out of " + c.hisHer() + " body.  " + c.HisHer() + " Chosen powers grow weaker and weaker as " + c.heShe() + " is further alienated from the virtues of humanity.");
            }
            w.append(t, "\n\n");
        }
        c.say(t, "\"");
        if (confidence > 66) {
            if (thisAttack == 0) {
                if (variant == 0) {
                    if (c.getPLEALevel() < 3 || cVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                        c.say(t, "Ergh, no, take it out!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "Ngh, no...!  Don't make me... enjoy this...!  Aaah!");
                    }
                }
                else if (variant == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    if (c.getHATELevel() < 3 || vVirg) {
                        c.say(t, "Need to... hold... aaah, ah, I'm-");
                    }
                    else {
                        c.say(t, "P-Pull out or I'll- ah, ah, nnnaaah!");
                    }
                }
                else if (variant == 2) {
                    if (w.tickle()) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        if (c.getHATELevel() < 3 || vVirg) {
                            c.say(t, "Hahah, ahahah, stop, don't touch meee!");
                        }
                        else {
                            c.say(t, "Ahahah, no, not while you're insiiide, hahahahah!");
                        }
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                        if (c.getHATELevel() < 3 || vVirg) {
                            c.say(t, "Ah!  No!  No more!");
                        }
                        else {
                            c.say(t, "Agh!  Ow!  No, no, take it out!");
                        }
                    }
                }
                else if (variant == 3) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                    if (c.getHATELevel() < 3 || vVirg) {
                        c.say(t, "Don't make me join in this disgusting stuff...");
                    }
                    else {
                        c.say(t, "You'd better pull out...");
                    }
                }
                else if (loved) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "No!  Leave them alone!");
                }
                else if (hated) {
                    if (morality > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                        c.say(t, "Do not harm them!");
                    }
                    else if (morality > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                        c.say(t, "I guess those two are relying on me to rescue them...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.NEUTRAL);
                        c.say(t, "I do like to see those two suffer...");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "No!  Leave " + lover.getMainName() + " alone!");
                }
            }
            else if (thisAttack == 1) {
                if (variant == 0) {
                    if (c.getINJULevel() < 3 || aVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                        c.say(t, "I won't... give in...!");
                    }
                    else if (w.tickle()) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "Ahahah, gaaah, take it ooout, hahahahah!");
                    }
                    else if (c.getGender().equals("male")) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                        c.say(t, "Don't touch my- Ah!  Ow, nooo!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                        c.say(t, "Agh, no, not in both at once- Gaaah!");
                    }
                }
                else if (variant == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    if (c.getINJULevel() < 3 || aVirg) {
                        c.say(t, "D-Don't touch me theeere!");
                    }
                    else if (w.tickle()) {
                        c.say(t, "Ahahah, no, no, I don't want to- naaahahahah!");
                    }
                    else {
                        c.say(t, "This... This shouldn't... feel goood...!");
                    }
                }
                else if (variant == 2) {
                    if (w.tickle()) {
                        if (c.getPLEALevel() < 3 || cVirg) {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                            c.say(t, "Ahah... ahah... why can't I...?");
                        }
                        else {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                            c.say(t, "Ahahah, nooo, not while I'm- Hahahah, aaahnnn!");
                        }
                    }
                    else if (c.getPLEALevel() < 3 || cVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                        c.say(t, "Ow...  Why...  Why can't I beat this...?");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "I can't... fight thiiis...!");
                    }
                }
                else if (variant == 3) {
                    if (c.getPLEALevel() < 3 || cVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                        c.say(t, "I won't play along!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "I won't... nnn... no, not there...!");
                    }
                }
                else if (loved) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.ANGER);
                    c.say(t, "They don't deserve this!");
                }
                else if (hated) {
                    if (morality > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.ANGER);
                        c.say(t, "Even if it's those two, they don't deserve this...");
                    }
                    else if (morality > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                        c.say(t, "Well, I guess those two might deserve this...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.NEUTRAL);
                        c.say(t, "Heh, looks like those two are having a harder time...");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.ANGER);
                    c.say(t, String.valueOf(lover.getMainName()) + " doesn't deserve this!");
                }
            }
            else if (variant == 0) {
                if (c.getEXPOLevel() < 3 || modest) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                    c.say(t, "Y-You think I'll be bothered by getting stripped when you're already doing this!?");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "What sort of freak would enjoy watching me get- Gh!  Aaah, stop!");
                }
            }
            else if (variant == 1) {
                if (c.getEXPOLevel() < 3 || modest) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.LEWD);
                    c.say(t, "I won't let you- Hng!?  Ah, ah, no, stooop!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.ANGER);
                    c.say(t, "Aaah, wow... hah, wh-what are you all looking at...?");
                }
            }
            else if (variant == 2) {
                if (w.tickle()) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    if (c.getEXPOLevel() < 3 || modest) {
                        c.say(t, "Hmph...  Ngah!?  Hahahahah, aaagh!");
                    }
                    else {
                        c.say(t, "Aaahahah, no, no, not my feeet!");
                    }
                }
                else if (c.getEXPOLevel() < 3 || modest) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "Hmph...  Ngah, ow, ow, no, not there!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                    c.say(t, "Guh!  Urgh, ow, ow...  Is this really... so fun to watch...?");
                }
            }
            else if (variant == 3) {
                if (c.getINJULevel() < 3 || aVirg) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.ANGER);
                    c.say(t, "Ugh, leave me alone...");
                }
                else if (w.tickle()) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    c.say(t, "Hahah, ahahah, j-just stop, stop it already!  Hahahahah!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                    c.say(t, "Just- ow!  J-Just stop!");
                }
            }
            else if (loved) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.FEAR);
                c.say(t, "Come on, focus on me instead!");
            }
            else if (hated) {
                if (morality > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                    c.say(t, "If you don't break me harder, I absolutely will rescue the others.");
                }
                else if (morality > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.ANGER);
                    c.say(t, "You Thralls can't afford to waste your time breaking the weaklings!  Come!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.ANGER);
                    c.say(t, "Come on, let me help you break the others!");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.FEAR);
                c.say(t, "Come on, focus on me instead of " + lover.getMainName() + "!");
            }
        }
        else if (confidence > 33) {
            if (thisAttack == 0) {
                if (variant == 0) {
                    if (c.getPLEALevel() < 3 || cVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.SHAME);
                        c.say(t, "Ugh, this is disgusting...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "Don't want to... enjoy this- Aaah!");
                    }
                }
                else if (variant == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    if (c.getHATELevel() < 3 || vVirg) {
                        c.say(t, "Aaah, d-don't- Mmf!  Nn nn!");
                    }
                    else {
                        c.say(t, "Aaah, no, I'm gonna breaaak!");
                    }
                }
                else if (variant == 2) {
                    if (w.tickle()) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        if (c.getHATELevel() < 3 || vVirg) {
                            c.say(t, "Ahahah, w-wait, don't tickle me with your- Ahahahahah!");
                        }
                        else {
                            c.say(t, "Ahahah, w-wait, don't put it- Agh!  Ahahahah!");
                        }
                    }
                    else if (c.getGender().equals("male")) {
                        if (c.getHATELevel() < 3 || vVirg) {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                            c.say(t, "They're all... so much bigger...");
                        }
                        else {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FEAR);
                            c.say(t, "It... hurts...!");
                        }
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.LEWD);
                        if (c.getHATELevel() < 3 || vVirg) {
                            c.say(t, "They're... getting it all over me...");
                        }
                        else {
                            c.say(t, "Urgh... They're filling me up...");
                        }
                    }
                }
                else if (variant == 3) {
                    if (c.getHATELevel() < 3 || vVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                        c.say(t, "Nn...!  Gh!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.SHAME);
                        c.say(t, "Ugh!  Not... inside...!  Mmf!");
                    }
                }
                else if (loved) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    c.say(t, "I don't want to see what's happening to them...");
                }
                else if (hated) {
                    if (morality > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                        c.say(t, "This is awful...");
                    }
                    else if (morality > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.SHAME);
                        c.say(t, "I can... deal with this...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                        c.say(t, "I don't care what happens to the others.");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    c.say(t, "I don't want to see what's happening to " + lover.getMainName() + "...");
                }
            }
            else if (thisAttack == 1) {
                if (variant == 0) {
                    if (c.getINJULevel() < 3 || aVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                        c.say(t, "Ah!  It's going inside...!");
                    }
                    else if (w.tickle()) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "Ahah!  Ahahah, no, i-it's too deep, I'm- Hahahahahah!");
                    }
                    else if (c.getGender().equals("male")) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "Ng... hitting that spot... from both sides...!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        c.say(t, "Ugh!  B-Both holes at once...!?");
                    }
                }
                else if (variant == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    if (c.getINJULevel() < 3 || aVirg) {
                        c.say(t, "I can't... ah... can't resist...!");
                    }
                    else if (w.tickle()) {
                        c.say(t, "Ahahah, ahn, if you tickle me at the same time, I-I can't- Hahahahah, oooh!");
                    }
                    else if (c.getGender().equals("male")) {
                        c.say(t, "Ow!  No!  If you hit me there anymore, I-I'll- Naaah, nooo!");
                    }
                    else {
                        c.say(t, "It's... nn... hitting so deep inside...!");
                    }
                }
                else if (variant == 2) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    if (w.tickle()) {
                        if (c.getPLEALevel() < 3 || cVirg) {
                            c.say(t, "Ahah, ahahah, wh-where are you touching- Hahahahah!");
                        }
                        else {
                            c.say(t, "Aaahahah, nn, no, I'm going to- Hahahahah, ah, ah, aaah!");
                        }
                    }
                    else if (c.getGender().equals("male")) {
                        if (c.getPLEALevel() < 3 || cVirg) {
                            c.say(t, "It... hurts... but...!");
                        }
                        else {
                            c.say(t, "Ow, ooow, no, it's coming ooout!");
                        }
                    }
                    else if (c.getPLEALevel() < 3 || cVirg) {
                        c.say(t, "Ugh...!  Ugh!  Deep...!");
                    }
                    else {
                        c.say(t, "Ugh!  Ugh!  Nooo, even from my buuutt!");
                    }
                }
                else if (variant == 3) {
                    if (c.getPLEALevel() < 3 || cVirg) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.SHAME);
                        c.say(t, "Have to... ignore it...!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FEAR);
                        c.say(t, "Ah!  Th-They're... watchiiing!");
                    }
                }
                else if (loved) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    c.say(t, "I know this is even harder for them...");
                }
                else if (hated) {
                    if (morality > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                        c.say(t, "Those two must have it even worse...");
                    }
                    else if (morality > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                        c.say(t, "I guess it's not too bad compared to what they're going through...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.NEUTRAL);
                        c.say(t, "At least those two are suffering worse.");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    c.say(t, "I know this is even harder for " + lover.getMainName() + "...");
                }
            }
            else if (variant == 0) {
                if (c.getEXPOLevel() < 3 || modest) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                    c.say(t, "Let go of me!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    c.say(t, "They can all see the spot where we're joined...");
                }
            }
            else if (variant == 1) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FEAR);
                if (c.getEXPOLevel() < 3 || modest) {
                    c.say(t, "I'm... nn... a-again...  ah, wooow!");
                }
                else {
                    c.say(t, "Everyone is... aaah... w-watchiiing...!");
                }
            }
            else if (variant == 2) {
                if (w.tickle()) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FEAR);
                    if (c.getEXPOLevel() < 3 || modest) {
                        c.say(t, "Ahahah, i-if they strip me, it'll make it even easier to- Hahahahah!");
                    }
                    else {
                        c.say(t, "Ahahah, nooo, I-I'm completely...!");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FEAR);
                    if (c.getEXPOLevel() < 3 || modest) {
                        c.say(t, "Ergh!  Even my clothes...!");
                    }
                    else {
                        c.say(t, "Ergh!  Let... go...!");
                    }
                }
            }
            else if (variant == 3) {
                if (c.getINJULevel() < 3 || aVirg) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.SHAME);
                    c.say(t, "Don't!");
                }
                else if (w.tickle()) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FEAR);
                    c.say(t, "Ahah, ahahah, dooon't!");
                }
                else if (c.getGender().equals("male")) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "Ow, dooon't, aaagh!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "Nn!  Nn!  Stop... this...!");
                }
            }
            else if (loved) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                c.say(t, "I need to... become stronger... for them...!");
            }
            else if (hated) {
                if (morality > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.STRUGGLE);
                    c.say(t, "For their sakes, too... I need to fight this...!");
                }
                else if (morality > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.ANGER);
                    c.say(t, "I won't let you... do what you want...!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.FOCUS);
                    c.say(t, "I'll... make all of you pay...!");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                c.say(t, "I need to... become stronger... for " + lover.getMainName() + "...!");
            }
        }
        else if (thisAttack == 0) {
            if (variant == 0) {
                if (c.getPLEALevel() < 3 || cVirg) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    c.say(t, "Mmf, mmf...  Mm...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                    c.say(t, "Mmf...  Mm!?  Nn, nn, nnn!");
                }
            }
            else if (variant == 1) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                if (c.getHATELevel() < 3 || vVirg) {
                    c.say(t, "They're... rubbing... aaah...!");
                }
                else {
                    c.say(t, "Aaahn...!  A-Ah, no... how could I enjoy something like this...?");
                }
            }
            else if (variant == 2) {
                if (w.tickle()) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                    if (c.getHATELevel() < 3 || vVirg) {
                        c.say(t, "Ahahah, ahah, th-they're touching my- Nn!  Hahahah!");
                    }
                    else {
                        c.say(t, "Ah!  Ahah!  Ahah!  It's... in...!  Ahah!");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    if (c.getHATELevel() < 3 || vVirg) {
                        c.say(t, "Nn!  So... rough...!");
                    }
                    else {
                        c.say(t, "Y-You're... ripping me in half...!");
                    }
                }
            }
            else if (variant == 3) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.LEWD);
                if (c.getHATELevel() < 3 || vVirg) {
                    c.say(t, "Um... P-Please... use my mouth...  Mm...");
                }
                else {
                    c.say(t, "Nn... O-Okay... I'm moving...");
                }
            }
            else if (loved) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                c.say(t, "It's my fault that this is happening to them...");
            }
            else if (hated) {
                if (morality > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    c.say(t, "I should have tried harder to stop this from happening to them...");
                }
                else if (morality > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                    c.say(t, "They're right about how weak I am...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                    c.say(t, "The others should have known better than to rely on me...");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                c.say(t, "It's my fault that this is happening to " + lover.getMainName() + "...");
            }
        }
        else if (thisAttack == 1) {
            if (variant == 0) {
                if (c.getINJULevel() < 3 || aVirg) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    c.say(t, "Mm.  Mm...");
                }
                else if (w.tickle()) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                    c.say(t, "Hahahahammf!  Mm mm mm mm!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.SHAME);
                    c.say(t, "Mm!  Mm!  Mm!  Mm!");
                }
            }
            else if (variant == 1) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                if (c.getINJULevel() < 3 || aVirg) {
                    c.say(t, "Nooo... my body is...");
                }
                else if (w.tickle()) {
                    c.say(t, "Ahahah, p-please, n-not while tickling me, i-it's going to make me- Aaaahahah, aaah!");
                }
                else {
                    c.say(t, "Ah, p-please, not so rough, it's- Ooow, nooo!");
                }
            }
            else if (variant == 2) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                if (w.tickle()) {
                    if (c.getPLEALevel() < 3 || cVirg) {
                        c.say(t, "Hahah, ahahah, this shouldn't, ahah, feel good, hahahah!");
                    }
                    else {
                        c.say(t, "Hahah, ahahah, no, I don't want to feel goood, hahahahah!");
                    }
                }
                else if (c.getPLEALevel() < 3 || cVirg) {
                    c.say(t, "Ah, please!  Please, stop trying to make me feel good!");
                }
                else {
                    c.say(t, "No, no, nooo, I don't want this to feel goood!");
                }
            }
            else if (variant == 3) {
                if (c.getPLEALevel() < 3 || cVirg) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    c.say(t, "Please... go easy on me...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.LEWD);
                    c.say(t, "Aaah, pleeease, not theeere!  Mmm!");
                }
            }
            else if (loved) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                c.say(t, "P-Please, I'll do anything, but leave them alone!");
            }
            else if (hated) {
                if (morality > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                    c.say(t, "I feel like I should offer myself in their place...");
                }
                else if (morality > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                    c.say(t, "There's nothing I can do to help the others...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "P-Please, I'll do anything, just let me go!");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                c.say(t, "P-Please, I'll do anything, but leave " + lover.getMainName() + " alone!");
            }
        }
        else if (variant == 0) {
            if (c.getEXPOLevel() < 3 || modest) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                c.say(t, "Mmf!?  Nn...");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                c.say(t, "Nn...");
            }
        }
        else if (variant == 1) {
            if (c.getEXPOLevel() < 3 || modest) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                c.say(t, "Nn... I can't... do anything...");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                c.say(t, "Aaah... th-they're seeing... how worthless I am...");
            }
        }
        else if (variant == 2) {
            if (w.tickle()) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FEAR);
                if (c.getEXPOLevel() < 3 || modest) {
                    c.say(t, "Ahah, ahahah, th-they're going to see...!");
                }
                else {
                    c.say(t, "Ahahah, nooo, don't loook!");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                if (c.getEXPOLevel() < 3 || modest) {
                    c.say(t, "I don't want... this...");
                }
                else {
                    c.say(t, "I'm... completely defeated...");
                }
            }
        }
        else if (variant == 3) {
            if (c.getINJULevel() < 3 || aVirg) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                c.say(t, "Ah, I-I, um, really- AH!");
            }
            else if (w.tickle()) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                c.say(t, "Ahahah, hah, nnn, hahahahah, nooo!");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                c.say(t, "I'm... I'm doing my best, so...");
            }
        }
        else if (loved) {
            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
            c.say(t, "A-Are you two alright!?");
        }
        else if (hated) {
            if (morality > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                c.say(t, "Um, are you two doing alright...?");
            }
            else if (morality > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                c.say(t, "I hope those two are doing alright...");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                c.say(t, "I don't really care what happens to the others...");
            }
        }
        else {
            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
            c.say(t, "A-Are you alright, " + lover.getMainName() + "!?");
        }
        c.say(t, "\"");
    }
    
    public int[] getLastOrgyStage() {
        return this.lastOrgyStage;
    }
    
    public void rememberOrgyStage(final int value) {
        this.lastOrgyStage[value] = this.orgyStage;
    }
    
    public void cycleOrgyStage() {
        ++this.orgyStage;
        if (this.orgyStage > 3) {
            this.orgyStage = 0;
        }
    }
    
    public int getOrgyStage() {
        return this.orgyStage;
    }
    
    public long softClamp(final long base, long change, int preApplied) {
        if (this.clampPercent == 0) {
            this.clampPercent = 100;
        }
        long nextClamp = 10L;
        long startPower = this.clampStart;
        long usedPercent = this.clampPercent;
        while (startPower > 0L) {
            nextClamp *= 10L;
            --startPower;
        }
        while (preApplied > 0) {
            nextClamp = this.nextMagnitude(nextClamp);
            --preApplied;
        }
        while (base > nextClamp) {
            if (nextClamp >= 922337203685477580L) {
                break;
            }
            nextClamp = this.nextMagnitude(nextClamp);
            if (nextClamp >= 1000000000000000L && usedPercent > 5L) {
                usedPercent = 5L;
            }
            if (change >= 92233720368547758L) {
                change = change / 100L * usedPercent;
            }
            else {
                change = change * usedPercent / 100L;
            }
        }
        while (base + change > nextClamp && nextClamp < 922337203685477580L) {
            if (nextClamp >= 1000000000000000L && usedPercent > 5L) {
                usedPercent = 5L;
            }
            long remainder = base + change - nextClamp;
            if (remainder >= 92233720368547758L) {
                remainder = remainder / 100L * usedPercent;
            }
            else {
                remainder = remainder * usedPercent / 100L;
            }
            change = remainder + nextClamp - base;
            if (nextClamp == this.nextMagnitude(nextClamp)) {
                nextClamp = Long.MAX_VALUE;
            }
            else {
                nextClamp = this.nextMagnitude(nextClamp);
            }
        }
        return change;
    }
    
    public long nextMagnitude(long number) {
        if (number < 922337203685477580L) {
            number *= 10L;
        }
        return number;
    }
    
    public void synchSurroundDurations(final Chosen[] c) {
        final int[] durations = new int[c.length];
        for (int i = 0; i < c.length; ++i) {
            if (c[i].isSurrounded()) {
                durations[i] = c[i].getSurroundDuration();
            }
            else if (c[i].getFEAROpening(this) + c[i].getDISGOpening() + c[i].getPAINOpening() + c[i].getSHAMOpening(this) >= c[i].getDefenseLevel()) {
                durations[i] = c[i].getFEAROpening(this) + c[i].getDISGOpening() + c[i].getPAINOpening() + c[i].getSHAMOpening(this);
            }
            else {
                durations[i] = this.captureDuration + 1;
            }
        }
        int lowest = durations[0];
        if (c.length > 1 && durations[1] < lowest) {
            lowest = durations[1];
        }
        if (c.length > 2 && durations[2] < lowest) {
            lowest = durations[2];
        }
        for (int j = 0; j < c.length; ++j) {
            c[j].setSurroundDuration(lowest);
        }
    }
    
    public void toggleTickle() {
        this.tickleOn = !this.tickleOn;
    }
    
    public Boolean tickle() {
        return this.tickleOn;
    }
    
    public long getBarrierMulti() {
        return this.barrierMulti;
    }
    
    public void increaseBarrier(final JTextPane t) {
        this.barrierMulti = this.barrierMulti * 105L / 100L;
        this.append(t, "\n\n" + this.separator + "\n\n");
        long comparison;
        int previousBarriers;
        for (comparison = 10000L, previousBarriers = 0; comparison < this.barrierMulti; comparison = comparison * 105L / 100L, ++previousBarriers) {}
        if (previousBarriers == 0) {
            this.append(t, "A faint haze, invisible to the naked eye, appears across the battlefield as you begin to exert control over reality.");
        }
        else if (previousBarriers == 1) {
            this.append(t, "The haze of your influence thickens enough to become visible, lending a faint red tint to the battlefield.");
        }
        else if (previousBarriers == 2) {
            this.append(t, "The red haze grows to the point that it's impossible not to notice, lending an unearthly quality to the scene.");
        }
        else if (previousBarriers == 3) {
            this.append(t, "From elsewhere in the city, your region of influence is visible as a transparent red dome which pulsates with every surge of power, signaling your increasing control over the space within.");
        }
        else if (previousBarriers == 4) {
            this.append(t, "The battlefield is completely sealed off from the rest of the city by the red fog, preparing it to be twisted even further by your will.");
        }
        else if (previousBarriers == 5) {
            this.append(t, "A high-pitched ringing sound begins to echo across the blood-red battlefield, affecting the minds of all within and influencing their emotions.");
        }
        else if (previousBarriers == 6) {
            this.append(t, "The ringing of your power grows louder, causing windows to shake and pebbles to vibrate and jump along the ground.");
        }
        else if (previousBarriers == 7) {
            this.append(t, "The red air grows thick and stifling, clinging to the Chosen and slowing their movements even as it protects and supports your servants.");
        }
        else if (previousBarriers == 8) {
            this.append(t, "Space begins to ripple and distort, as if flowing around unseen obstructions that exist parallel to the mundane architecture of the city.");
        }
        else {
            this.append(t, "The mind-numbing ringing digs deeper and deeper into the minds within your barrier.  For those trapped within, it feels as though countless eyes are watching from the edge of their peripheral vision.");
        }
        this.append(t, "\n\n+5% damage taken for the remainder of the battle.  (+" + (this.barrierMulti / 100L - 100L) + "% total)");
    }
    
    public String getSeparator() {
        return this.separator;
    }
    
    public void setSeparator(final String newSeparator) {
        this.separator = newSeparator;
    }
    
    public void setEarlyCheat(final Boolean value) {
        this.earlyCheat = value;
    }
    
    public Boolean getEarlyCheat() {
        return this.earlyCheat;
    }
    
    public void repairSave() {
        Boolean adjusted = false;
        if (this.genderBalance == null) {
            this.genderBalance = new int[] { 0, 3, 0, 0 };
            adjusted = true;
        }
        if (this.genders == null) {
            this.genders = new String[] { "female", "female", "female" };
            adjusted = true;
        }
        if (this.separator == null) {
            this.separator = "---";
        }
        if (this.earlyCheat == null) {
            this.earlyCheat = false;
            adjusted = true;
        }
        if (this.save != null) {
            if (this.save.harem != null && this.save.harem.length > 0 && this.save.harem[0].killRelationships == null) {
                for (int i = 0; i < this.save.harem.length; ++i) {
                    this.save.harem[i].formerPartners = new Chosen[] { this.save.harem[i].firstFormerPartner, this.save.harem[i].secondFormerPartner };
                    this.save.harem[i].formerFriendships = new int[] { this.save.harem[i].firstOriginalRelationship, this.save.harem[i].secondOriginalRelationship };
                    if (this.save.harem[i].kills[1] != null) {
                        this.save.harem[i].killRelationships = new int[] { this.save.harem[i].firstOriginalRelationship, this.save.harem[i].secondOriginalRelationship };
                    }
                    else if (this.save.harem[i].kills[0] != null) {
                        this.save.harem[i].kills = new Chosen[] { this.save.harem[i].kills[0] };
                        this.save.harem[i].killRelationships = new int[] { this.save.harem[i].firstOriginalRelationship };
                    }
                    else {
                        this.save.harem[i].kills = new Chosen[0];
                        this.save.harem[i].killRelationships = new int[0];
                    }
                }
            }
            final WriteObject wobj = new WriteObject();
            wobj.serializeSaveData(this.save);
        }
        if (this.getCast()[0] != null) {
            if (this.getCast()[0].kills == null) {
                for (int i = 0; i < 3; ++i) {
                    if (this.getCast()[i] != null) {
                        this.getCast()[i].formerPartners = new Chosen[0];
                        this.getCast()[i].formerRelationships = new int[0];
                        if (this.getCast()[i].secondKilled != null) {
                            this.getCast()[i].kills = new Chosen[] { this.getCast()[i].firstKilled, this.getCast()[i].secondKilled };
                            this.getCast()[i].killRelationships = new int[] { this.getCast()[i].firstKilledRelationship, this.getCast()[i].secondKilledRelationship };
                        }
                        else if (this.getCast()[i].firstKilled != null) {
                            this.getCast()[i].kills = new Chosen[] { this.getCast()[i].firstKilled };
                            this.getCast()[i].killRelationships = new int[] { this.getCast()[i].firstKilledRelationship };
                        }
                        else {
                            this.getCast()[i].kills = new Chosen[0];
                            this.getCast()[i].killRelationships = new int[0];
                        }
                    }
                }
                if (this.returning != null) {
                    for (int i = 0; i < this.returning.length; ++i) {
                        this.returning[i].formerPartners = new Chosen[0];
                        this.returning[i].formerRelationships = new int[0];
                        if (this.returning[i].secondKilled != null) {
                            this.returning[i].kills = new Chosen[] { this.returning[i].firstKilled, this.returning[i].secondKilled };
                            this.returning[i].killRelationships = new int[] { this.returning[i].firstKilledRelationship, this.returning[i].secondKilledRelationship };
                        }
                        else if (this.returning[i].firstKilled != null) {
                            this.returning[i].kills = new Chosen[] { this.returning[i].firstKilled };
                            this.returning[i].killRelationships = new int[] { this.returning[i].firstKilledRelationship };
                        }
                        else {
                            this.returning[i].kills = new Chosen[0];
                            this.returning[i].killRelationships = new int[0];
                        }
                    }
                }
                if (this.conquered != null) {
                    for (int i = 0; i < this.conquered.length; ++i) {
                        this.conquered[i].formerPartners = new Chosen[] { this.conquered[i].firstFormerPartner, this.conquered[i].secondFormerPartner };
                        this.conquered[i].formerFriendships = new int[] { this.conquered[i].firstOriginalRelationship, this.conquered[i].secondOriginalRelationship };
                        if (this.conquered[i].kills[1] != null) {
                            this.conquered[i].killRelationships = new int[] { this.conquered[i].firstOriginalRelationship, this.conquered[i].secondOriginalRelationship };
                        }
                        else if (this.conquered[i].kills[0] != null) {
                            this.conquered[i].kills = new Chosen[] { this.conquered[i].kills[0] };
                            this.conquered[i].killRelationships = new int[] { this.conquered[i].firstOriginalRelationship };
                        }
                        else {
                            this.conquered[i].kills = new Chosen[0];
                            this.conquered[i].killRelationships = new int[0];
                        }
                    }
                }
            }
            if (this.getCast()[0].originalGender == null) {
                for (int i = 0; i < 3; ++i) {
                    if (this.getCast()[i] != null) {
                        this.getCast()[i].originalGender = this.getGenders()[i];
                    }
                }
                if (this.returning != null) {
                    for (int i = 0; i < this.returning.length; ++i) {
                        this.returning[i].originalGender = this.returning[i].gender;
                    }
                }
            }
        }
        if (this.campaignCustom == null) {
            this.campaignCustom = new Chosen[0];
        }
        if (this.conquered != null) {
            for (int i = 0; i < this.conquered.length; ++i) {
                if (this.conquered[i].chosenRelations == null) {
                    this.conquered[i].otherChosen = new Chosen[] { this.conquered[i].firstFormerPartner, this.conquered[i].secondFormerPartner };
                    this.conquered[i].chosenRelations = new Forsaken.Relationship[] { Forsaken.Relationship.PARTNER, Forsaken.Relationship.PARTNER };
                    if (this.conquered[i].others != null) {
                        this.conquered[i].forsakenRelations = new Forsaken.Relationship[this.conquered[i].others.length];
                        for (int j = 0; j < this.conquered[i].others.length; ++j) {
                            if (this.conquered[i].others[j].equals(this.conquered[i].firstPartner) || this.conquered[i].others[j].equals(this.conquered[i].secondPartner)) {
                                this.conquered[i].forsakenRelations[j] = Forsaken.Relationship.PARTNER;
                            }
                        }
                    }
                    else {
                        this.conquered[i].others = new Forsaken[0];
                        this.conquered[i].forsakenRelations = new Forsaken.Relationship[0];
                        this.conquered[i].troublemaker = new int[0];
                    }
                    final Forsaken[] checkedForsaken = new Forsaken[this.getHarem().length + this.sacrificed.length];
                    for (int k = 0; k < checkedForsaken.length; ++k) {
                        if (k < this.getHarem().length) {
                            checkedForsaken[k] = this.getHarem()[k];
                        }
                        else {
                            checkedForsaken[k] = this.sacrificed[k - this.getHarem().length];
                        }
                        if (checkedForsaken[k].equals(this.conquered[i].firstPartner) || checkedForsaken[k].equals(this.conquered[i].secondPartner)) {
                            Boolean alreadyThere = false;
                            for (int l = 0; l < this.conquered[i].others.length; ++l) {
                                if (this.conquered[i].others[l].equals(checkedForsaken[k])) {
                                    alreadyThere = true;
                                }
                            }
                            if (!alreadyThere) {
                                final Forsaken[] newOthers = new Forsaken[this.conquered[i].others.length + 1];
                                final Forsaken.Relationship[] newRelationships = new Forsaken.Relationship[this.conquered[i].forsakenRelations.length + 1];
                                final int[] newTroubles = new int[this.conquered[i].troublemaker.length + 1];
                                for (int m = 0; m < this.conquered[i].others.length; ++m) {
                                    newOthers[m] = this.conquered[i].others[m];
                                    newRelationships[m] = this.conquered[i].forsakenRelations[m];
                                    newTroubles[m] = this.conquered[i].troublemaker[m];
                                }
                                newOthers[this.conquered[i].others.length] = checkedForsaken[k];
                                newRelationships[this.conquered[i].forsakenRelations.length] = Forsaken.Relationship.PARTNER;
                                this.conquered[i].others = newOthers;
                                this.conquered[i].forsakenRelations = newRelationships;
                                this.conquered[i].troublemaker = newTroubles;
                            }
                        }
                    }
                }
            }
        }
        if (this.campaign == null) {
            this.campaign = false;
            this.loops = 0;
            this.downtimeMultiplier = 100;
            this.conquered = new Forsaken[0];
            this.sacrificed = new Forsaken[0];
            this.returning = new Chosen[0];
            this.deceased = new Chosen[0];
            this.formerChosen = new Chosen[0];
            this.loopComplete = false;
        }
        if (this.portraits == null) {
            this.portraits = true;
        }
        if (this.achievementSeen == null || this.achievementSeen.length < 7) {
            this.achievementSeen = new int[7];
            for (int i = 0; i < this.achievementSeen.length; ++i) {
                this.achievementSeen[i] = 0;
            }
        }
        if (this.types == null) {
            this.types = new Chosen.Species[3];
        }
        for (int i = 0; i < 3; ++i) {
            if (this.getCast()[i] != null) {
                if (this.getCast()[i].isUsingStrip() == null || this.getCast()[i].getNextAdaptation() == 0L || this.getCast()[i].FANTlevels == null) {
                    this.getCast()[i].resetAdaptations();
                    adjusted = true;
                }
                if (this.getCast()[i].tempted == null) {
                    this.getCast()[i].tempted = false;
                    this.getCast()[i].pastTempted = false;
                    this.getCast()[i].betraying = false;
                    this.getCast()[i].temptReq = 100000L;
                    adjusted = true;
                }
            }
        }
        if (this.resolvedBreaks == null) {
            this.resolvedBreaks = new int[0];
            adjusted = true;
        }
        final int techsThisVersion = 49;
        if (this.techs.length < techsThisVersion) {
            final Tech[] oldTechs = new Tech[this.techs.length];
            for (int i2 = 0; i2 < this.techs.length; ++i2) {
                oldTechs[i2] = this.techs[i2];
            }
            this.techs = new Tech[techsThisVersion];
            for (int i2 = 0; i2 < techsThisVersion; ++i2) {
                (this.techs[i2] = new Tech()).initialize(i2, this);
                this.techs[i2].assignTooltip(i2, this);
                if (i2 < oldTechs.length && oldTechs[i2].isOwned()) {
                    this.techs[i2].owned = true;
                }
            }
            adjusted = true;
        }
        final int commanderUpgradesThisVersion = 27;
        Boolean commanderUpdate = false;
        if (this.bodyStatus.length < commanderUpgradesThisVersion) {
            commanderUpdate = true;
        }
        else if (this.recordedCommanders.length > 0 && this.recordedCommanders[0].length < commanderUpgradesThisVersion) {
            commanderUpdate = true;
        }
        if (commanderUpdate) {
            final Boolean[] newUpgrades = new Boolean[commanderUpgradesThisVersion];
            final Boolean[][] newRecordedCommanders = new Boolean[this.recordedCommanders.length][commanderUpgradesThisVersion];
            for (int i3 = 0; i3 < newUpgrades.length; ++i3) {
                if (i3 < this.bodyStatus.length) {
                    newUpgrades[i3] = this.bodyStatus[i3];
                }
                else {
                    newUpgrades[i3] = false;
                }
                if (this.recordedCommanders.length > 0) {
                    if (i3 < this.recordedCommanders[0].length) {
                        for (int j2 = 0; j2 < this.recordedCommanders.length; ++j2) {
                            newRecordedCommanders[j2][i3] = this.recordedCommanders[j2][i3];
                        }
                    }
                    else {
                        for (int j2 = 0; j2 < this.recordedCommanders.length; ++j2) {
                            newRecordedCommanders[j2][i3] = false;
                        }
                    }
                    this.recordedCommanders = newRecordedCommanders;
                }
            }
            this.bodyStatus = newUpgrades;
            adjusted = true;
        }
        if (this.barrierMulti == 0L) {
            this.barrierMulti = 10000L;
            adjusted = true;
        }
        if (this.tickleOn == null) {
            this.tickleOn = false;
            adjusted = true;
        }
        if (this.customFeet == null) {
            this.customFeet = new String[] { "", "", "" };
            for (int i4 = 0; i4 < 3; ++i4) {
                if (this.getCast()[i4] != null) {
                    final String[] cosmetics = this.pickCosmetics(this.cast[i4].getMorality(), this.cast[i4].getInnocence(), this.cast[i4].getConfidence(), this.cast[i4].getDignity());
                    this.cast[i4].feetType = cosmetics[9];
                }
            }
        }
        if (this.lastOrgyStage == null) {
            this.lastOrgyStage = new int[3];
            adjusted = true;
        }
        if (this.techs[0].getTooltip() == null) {
            for (int i4 = 0; i4 < this.techs.length; ++i4) {
                this.techs[i4].assignTooltip(i4, this);
            }
            adjusted = true;
        }
        if (this.getCast()[0] != null && this.getCast()[0].impregnated == null) {
            for (int i4 = 0; i4 < 3; ++i4) {
                if (this.getCast()[i4] != null) {
                    this.getCast()[i4].setFourthVulnerabilities();
                }
            }
            adjusted = true;
        }
        if (this.techs[19].name.equals("Augmented Thralls")) {
            this.techs[19].initialize(19, this);
            this.techs[19].assignTooltip(19, this);
        }
        if (this.repeatShift == null) {
            this.repeatShift = true;
            this.disableAdaptations = false;
            adjusted = true;
        }
        if (this.finalBattle == null) {
            this.finalBattle = false;
            for (int i4 = 0; i4 < 3; ++i4) {
                if (this.getCast()[i4] != null) {
                    this.getCast()[i4].alive = true;
                    this.getCast()[i4].hesitated = false;
                }
            }
            adjusted = true;
        }
        for (int i4 = 0; i4 < 3; ++i4) {
            if (this.getCast()[i4] != null && ((this.getCast()[i4].timesSlaughtered() > 0 && this.getCast()[i4].impregnationProgress == 0) || (this.getCast()[i4].timesFantasized() > 0 && this.getCast()[i4].hypnosisProgress == 0) || (this.getCast()[i4].timesDetonated() > 0 && this.getCast()[i4].drainProgress == 0) || (this.getCast()[i4].timesStripped() > 0 && this.getCast()[i4].parasitismProgress == 0))) {
                this.getCast()[i4].impregnationProgress = this.getCast()[i4].timesSlaughtered() * 30;
                this.getCast()[i4].hypnosisProgress = this.getCast()[i4].timesFantasized() * 20;
                this.getCast()[i4].drainProgress = this.getCast()[i4].timesDetonated() * 90;
                this.getCast()[i4].parasitismProgress = this.getCast()[i4].timesStripped() * 60;
            }
        }
        if (this.hardMode == null) {
            this.hardMode = false;
            adjusted = true;
        }
        if (this.version == null) {
            adjusted = true;
        }
        else if (!this.version.equals("17")) {
            adjusted = true;
        }
        final int vignettesThisVersion = 15;
        if (this.vignetteSeen == null || this.vignetteSeen.length < vignettesThisVersion || this.vignetteSeen[0] == null) {
            int currentLength = 0;
            if (this.vignetteSeen != null) {
                currentLength = this.vignetteSeen.length;
            }
            final Boolean[] newVignettes = new Boolean[vignettesThisVersion];
            for (int i5 = 0; i5 < vignettesThisVersion; ++i5) {
                if (i5 < currentLength && this.vignetteSeen[i5] != null) {
                    newVignettes[i5] = this.vignetteSeen[i5];
                }
                else {
                    newVignettes[i5] = false;
                }
            }
            this.vignetteSeen = newVignettes;
        }
        if (adjusted) {
            if (this.day > 1) {
                this.cheater = true;
                this.earlyCheat = true;
            }
            this.highScore = 0L;
            this.parScore = 0L;
            this.version = "17";
        }
    }
    
    public void copySettings(final JTextPane t, final WorldState w) {
        w.repairSave();
        if (!w.BACKGROUND.equals(this.BACKGROUND)) {
            this.toggleColors(t);
        }
        for (int switches = 0; w.getTextSize() != this.textSize && switches < 4; ++switches) {
            this.switchTextSize();
        }
        this.maleShift = w.getMaleShift();
        this.femaleShift = w.getFemaleShift();
        this.repeatShift = w.getRepeatShift();
        this.separator = w.getSeparator();
        this.portraits = w.portraits;
        if (!this.tickleOn.equals(w.tickle())) {
            this.toggleTickle();
        }
        this.save = w.save;
    }
    
    public void copyToggles(final WorldState w) {
        w.repairSave();
        if (w.getGenderBalance() != null) {
            this.trackGenderBalance(w.getGenderBalance());
        }
        this.setCommentaryRead(w.getCommentaryRead());
        this.setCommentaryWrite(w.getCommentaryWrite());
        this.earlyCheat = w.getEarlyCheat();
        this.hardMode = w.hardMode;
        this.eventOffset = w.eventOffset;
        this.clampStart = w.clampStart;
        this.clampPercent = w.clampPercent;
        this.downtimeMultiplier = w.downtimeMultiplier;
    }
    
    public int getFemaleShift() {
        return this.femaleShift;
    }
    
    public int getMaleShift() {
        return this.maleShift;
    }
    
    public boolean getRepeatShift() {
        return this.repeatShift;
    }
    
    public void changeFemaleShift() {
        if (this.femaleShift == 0) {
            this.femaleShift = 1;
        }
        else {
            this.femaleShift = 0;
        }
    }
    
    public void changeMaleShift() {
        ++this.maleShift;
        if (this.maleShift == 3) {
            this.maleShift = 0;
        }
    }
    
    public void changeRepeatShift() {
        this.repeatShift = !this.repeatShift;
    }
    
    public void toggleGenderRandomness() {
        if (this.genderBalance[0] == 0) {
            this.genderBalance[0] = 1;
            if (this.genderBalance[1] == 0 && this.genderBalance[2] == 0 && this.genderBalance[3] == 0) {
                this.genderBalance[1] = 3;
            }
        }
        else {
            if (this.genderBalance[1] == 0 && this.genderBalance[2] == 0 && this.genderBalance[3] == 0) {
                this.genderBalance[1] = 3;
            }
            final int maleThreshold = this.genderBalance[1];
            final int futaThreshold = this.genderBalance[1] + this.genderBalance[2];
            final int total = this.genderBalance[1] + this.genderBalance[2] + this.genderBalance[3];
            this.genderBalance = new int[4];
            for (int i = 1; i < 4; ++i) {
                final int test = (int)(Math.random() * total);
                if (test < maleThreshold) {
                    ++this.genderBalance[1];
                }
                else if (test < futaThreshold) {
                    ++this.genderBalance[2];
                }
                else {
                    ++this.genderBalance[3];
                }
            }
        }
        this.setGenders(this.genderBalance);
    }
    
    public void increaseGender(final int index) {
        ++this.genderBalance[index];
        if (this.genderBalance[1] + this.genderBalance[2] + this.genderBalance[3] == 3 || this.genderBalance[0] == 1) {
            this.setGenders(this.genderBalance);
        }
    }
    
    public void decreaseGender(final int index) {
        --this.genderBalance[index];
        if (this.genderBalance[1] + this.genderBalance[2] + this.genderBalance[3] == 3 || this.genderBalance[0] == 1) {
            this.setGenders(this.genderBalance);
        }
    }
    
    public int[] getGenderBalance() {
        return this.genderBalance;
    }
    
    public void trackGenderBalance(final int[] type) {
        this.genderBalance = type;
    }
    
    public void setGenders(final int[] type) {
        this.genderBalance = type;
        final int[] dupeArray = new int[4];
        for (int i = 0; i < 4; ++i) {
            dupeArray[i] = type[i];
        }
        if (type[0] == 0) {
            for (int i = 0; i < 3; ++i) {
                final int total = dupeArray[1] + dupeArray[2] + dupeArray[3];
                final int maleIndex = dupeArray[1];
                final int futaIndex = dupeArray[1] + dupeArray[2];
                final int test = (int)(Math.random() * total);
                if (test < maleIndex) {
                    this.genders[i] = "female";
                    --dupeArray[1];
                }
                else if (test < futaIndex) {
                    this.genders[i] = "male";
                    --dupeArray[2];
                }
                else {
                    this.genders[i] = "futanari";
                    --dupeArray[3];
                }
            }
        }
        else {
            if (this.genderBalance[1] == 0 && this.genderBalance[2] == 0 && this.genderBalance[3] == 0) {
                this.genderBalance[1] = 3;
            }
            final int maleThreshold = this.genderBalance[1];
            final int futaThreshold = this.genderBalance[1] + this.genderBalance[2];
            final int total2 = this.genderBalance[1] + this.genderBalance[2] + this.genderBalance[3];
            for (int j = 0; j < 3; ++j) {
                final int test = (int)(Math.random() * total2);
                if (test < maleThreshold) {
                    this.genders[j] = "female";
                }
                else if (test < futaThreshold) {
                    this.genders[j] = "male";
                }
                else {
                    this.genders[j] = "futanari";
                }
            }
        }
        if (this.cast[0] != null) {
            this.cast[0].setGender(this.genders[0]);
            this.cast[0].genName(this, this.nameSeed);
        }
    }
    
    public String[] getGenders() {
        return this.genders;
    }
    
    public int getTextSize() {
        return this.textSize;
    }
    
    public void switchTextSize() {
        if (this.textSize == 16) {
            this.textSize = 20;
        }
        else if (this.textSize == 20) {
            this.textSize = 24;
        }
        else if (this.textSize == 24) {
            this.textSize = 12;
        }
        else {
            this.textSize = 16;
        }
        for (int i = 0; i < 3; ++i) {
            if (this.cast[i] != null) {
                this.cast[i].setTextSize(this.textSize);
            }
        }
    }
    
    public void setParScore(final long newScore) {
        this.parScore = newScore;
    }
    
    public long getParScore() {
        return this.parScore;
    }
    
    public void setSaveTitle(final String s) {
        this.saveTitle = s;
    }
    
    public String getSaveTitle() {
        return this.saveTitle;
    }
    
    public String getCurrentComment() {
        return this.currentComment;
    }
    
    public void setCurrentComment(final String s) {
        this.currentComment = s;
    }
    
    public Boolean[][] getRecordedCommanders() {
        return this.recordedCommanders;
    }
    
    public void archiveCommander(final int day) {
        if (!this.cheater) {
            Boolean difference = false;
            if (this.recordedCommanders.length < day - 1) {
                difference = true;
            }
            else {
                for (int i = 0; i < this.bodyStatus.length; ++i) {
                    if (!this.bodyStatus[i].equals(this.recordedCommanders[day - 2][i])) {
                        difference = true;
                    }
                }
            }
            if (difference) {
                final Boolean[][] newRecordedCommanders = new Boolean[day - 1][this.bodyStatus.length];
                for (int j = 0; j < day - 2; ++j) {
                    for (int k = 0; k < this.bodyStatus.length; ++k) {
                        newRecordedCommanders[j][k] = this.recordedCommanders[j][k];
                    }
                }
                for (int l = 0; l < this.bodyStatus.length; ++l) {
                    newRecordedCommanders[day - 2][l] = this.bodyStatus[l];
                }
                this.recordedCommanders = newRecordedCommanders;
                this.onTrack = false;
            }
        }
    }
    
    public void nextAction(final int action) {
        Boolean newArray = false;
        if (this.actions.length > this.currentAction) {
            if (action != this.actions[this.currentAction]) {
                newArray = true;
                this.onTrack = false;
            }
        }
        else if (!this.tutorial) {
            newArray = true;
            this.onTrack = false;
        }
        if (newArray) {
            final int[] newActions = new int[this.currentAction + 1];
            for (int i = 0; i < this.currentAction; ++i) {
                newActions[i] = this.actions[i];
            }
            newActions[this.currentAction] = action;
            this.actions = newActions;
        }
        ++this.currentAction;
    }
    
    public int getCurrentAction() {
        return this.currentAction;
    }
    
    public int[] getActions() {
        return this.actions;
    }
    
    public String[] getCommentary() {
        return this.commentary;
    }
    
    public Boolean writePossible() {
        if (this.currentAction <= this.commentary.length && this.commentaryWrite) {
            return true;
        }
        return false;
    }
    
    public void readCommentary(final JTextPane t) {
        if (!this.tutorial) {
            if (this.commentaryRead && this.onTrack) {
                if (this.commentary.length > this.currentAction) {
                    this.grayAppend(t, "\n\n" + this.commentary[this.currentAction]);
                }
                else {
                    this.onTrack = false;
                }
            }
            else {
                this.onTrack = false;
            }
        }
    }
    
    public void truncateCommentary(final int lastAction) {
        if (!this.tutorial) {
            this.onTrack = false;
            final String[] newCommentary = new String[lastAction];
            final int[] newActions = new int[lastAction];
            for (int i = 0; i < lastAction; ++i) {
                if (this.commentary.length > i) {
                    newCommentary[i] = this.commentary[i];
                    newActions[i] = this.actions[i];
                }
                else {
                    i = lastAction;
                }
            }
            this.commentary = newCommentary;
        }
    }
    
    public void writeCommentary(final String s) {
        if (this.commentary.length > this.currentAction) {
            this.commentary[this.currentAction] = s;
        }
        else {
            final String[] newCommentary = new String[this.currentAction + 1];
            for (int i = 0; i < this.currentAction; ++i) {
                newCommentary[i] = this.commentary[i];
            }
            newCommentary[this.currentAction] = s;
            this.commentary = newCommentary;
        }
        this.currentComment = "";
    }
    
    public Boolean getCommentaryRead() {
        return this.commentaryRead;
    }
    
    public Boolean getCommentaryWrite() {
        return this.commentaryWrite;
    }
    
    public void setCommentaryRead(final Boolean setting) {
        this.commentaryRead = setting;
    }
    
    public void setCommentaryWrite(final Boolean setting) {
        this.commentaryWrite = setting;
    }
    
    public Boolean[] getCustomBooleans() {
        final Boolean[] allBooleans = new Boolean[15];
        for (int i = 0; i < 3; ++i) {
            allBooleans[i] = this.invertVVirg[i];
            allBooleans[i + 3] = this.invertCVirg[i];
            allBooleans[i + 6] = this.invertAVirg[i];
            allBooleans[i + 9] = this.invertModest[i];
            allBooleans[i + 12] = this.gaijinStatus[i];
        }
        return allBooleans;
    }
    
    public void setCustomBooleans(final Boolean[] allBooleans) {
        for (int i = 0; i < 3; ++i) {
            this.invertVVirg[i] = allBooleans[i];
            this.invertCVirg[i] = allBooleans[i + 3];
            this.invertAVirg[i] = allBooleans[i + 6];
            this.invertModest[i] = allBooleans[i + 9];
            this.gaijinStatus[i] = allBooleans[i + 12];
        }
    }
    
    public String[] getCustomStrings() {
        final String[] allStrings = new String[45];
        for (int i = 0; i < 3; ++i) {
            allStrings[i] = this.customNames[i];
            allStrings[i + 3] = this.customNames[i + 3];
            allStrings[i + 6] = this.customTop[i];
            allStrings[i + 9] = this.customTopAccess[i];
            allStrings[i + 12] = this.customBottom[i];
            allStrings[i + 15] = this.customBottomAccess[i];
            allStrings[i + 18] = this.customUnder[i];
            allStrings[i + 21] = this.customColor[i];
            allStrings[i + 24] = this.customAccessory[i];
            allStrings[i + 27] = this.customWeapons[i];
            allStrings[i + 30] = this.customWeaponTypes[i];
            allStrings[i + 33] = this.customAliases[i];
            allStrings[i + 36] = this.customTitles[i];
            allStrings[i + 39] = this.customIncantations[i];
            allStrings[i + 42] = this.customFeet[i];
        }
        return allStrings;
    }
    
    public void setCustomStrings(final String[] allStrings) {
        for (int i = 0; i < 3; ++i) {
            this.customNames[i] = allStrings[i];
            this.customNames[i + 3] = allStrings[i + 3];
            this.customTop[i] = allStrings[i + 6];
            this.customTopAccess[i] = allStrings[i + 9];
            this.customBottom[i] = allStrings[i + 12];
            this.customBottomAccess[i] = allStrings[i + 15];
            this.customUnder[i] = allStrings[i + 18];
            this.customColor[i] = allStrings[i + 21];
            this.customAccessory[i] = allStrings[i + 24];
            this.customWeapons[i] = allStrings[i + 27];
            this.customWeaponTypes[i] = allStrings[i + 30];
            this.customAliases[i] = allStrings[i + 33];
            this.customTitles[i] = allStrings[i + 36];
            this.customIncantations[i] = allStrings[i + 39];
            this.customFeet[i] = allStrings[i + 42];
        }
    }
    
    public Boolean[] getInvertVVirg() {
        return this.invertVVirg;
    }
    
    public Boolean[] getInvertCVirg() {
        return this.invertCVirg;
    }
    
    public Boolean[] getInvertAVirg() {
        return this.invertAVirg;
    }
    
    public Boolean[] getInvertModest() {
        return this.invertModest;
    }
    
    public void toggleColors(final JTextPane t) {
        if (this.BACKGROUND.equals(Color.WHITE)) {
            this.FOREGROUND = Color.WHITE;
            this.BACKGROUND = Color.BLACK;
            this.PURPLE = new Color(170, 70, 220);
            this.ORANGE = new Color(240, 150, 100);
            this.RED = new Color(220, 90, 90);
            this.GREEN = new Color(70, 170, 70);
            this.BLUE = new Color(100, 100, 255);
        }
        else {
            this.FOREGROUND = Color.BLACK;
            this.BACKGROUND = Color.WHITE;
            this.PURPLE = new Color(100, 0, 150);
            this.ORANGE = new Color(200, 100, 0);
            this.RED = new Color(180, 0, 0);
            this.GREEN = new Color(0, 110, 0);
            this.BLUE = new Color(0, 0, 230);
        }
        t.setBackground(this.BACKGROUND);
    }
    
    public Boolean isCheater() {
        return this.cheater;
    }
    
    public void setCheater() {
        this.cheater = true;
    }
    
    public void removeCheater() {
        this.cheater = false;
    }
    
    public void setHighScore(final long newScore) {
        this.highScore = newScore;
    }
    
    public long getHighScore() {
        return this.highScore;
    }
    
    public void initializeTips() {
        this.tips = new String[] { "The only randomized elements in this game are the initial personalities of the Chosen, some pieces of flavor text, and the order in which these tips are displayed.", "Upon completing the final battle and getting scored, you can restart from Day 1 against the same group of Chosen in order to try for a better result.", "As long as at least one of the Chosen is surrounded or captured, the battle can't end.", "Every time one of the Chosen is surrounded or captured, her defense level goes up by 2.", "The number of rounds one of the Chosen remains surrounded is equal to her opening level at the moment she's surrounded, regardless of her defense level.", "The number of rounds one of the Chosen remains captured by your Commander depends on the Commander's upgrades, regardless of her opening level or defense level.", "When a Commander without any special abilities captures one of the Chosen, the target is surrounded by Thralls, but the duration of the surrounding is calculated as normal for a Commander capture.", "When one of the Chosen is surrounded or captured after the extermination has already reached 100%, then she cannot be surrounded or captured again for the rest of the battle.", "When one of the Chosen uses \"Rally,\" all trauma inflicted on the team is decreased by a flat percentage until her next turn.", "Only one Chosen at a time can use \"Rally.\"", "When one of the Chosen uses \"Distract,\" all damage inflicted against surrounded Chosen is decreased by a flat percentage until her next turn.", "When multiple Chosen use \"Distract\" at the same time, their damage reduction percentages are added together to a maximum of 100% reduction.", "When \"Rally\" and \"Distract\" are active at once, both apply separately.  So, for example, if both are at 10%, surrounded Chosen take 90% circumstance damage and 81% trauma damage.", "Sometimes tormenting surrounded Chosen is less worthwhile than focusing on free Chosen whose circumstances are at higher levels.", "The traumas are FEAR, DISG, PAIN, and SHAM.  The circumstances are HATE, PLEA, INJU, and EXPO.", "When facing only a single Chosen, while she's captured by a Commander with a special ability, the player will have nothing useful to do each turn.", "Surrounded Chosen can only start using one countermeasure each turn.", "The first arrival of the second and third Chosen can only happen after a certain number of turns have happened during the playthrough.", "Breaking a Chosen's Major Vulnerability causes a confrontation between her and the Chosen with the corresponding Minor Vulnerability.  This confrontation will end in hostility unless the Minor Vulnerability has already been broken.", "During downtime, the Chosen prefer to perform activities that resolve their highest traumas.", "During downtime, broken vulnerabilities allow the Chosen to perform more sinful activities.", "During downtime, the Chosen prefer not to perform more sinful activities unless their trauma and angst are high enough to require it.", "During downtime, Chosen who care more about right and wrong are less likely to perform more sinful activities.", "During downtime, Chosen who like each other more are more likely to perform the same activity together.", "During downtime, Chosen who like each other more benefit more from doing the same activity together.", "When two Chosen perform the same downtime activity, they resolve more trauma by doing so, even if they dislike each other.  When all three Chosen perform the same downtime activity, this effect becomes very strong.", "Chosen who are more naive are easily convinced to join other Chosen on the downtime activities they want to do.", "Chosen who are more confident will arrive to their allies' defense in battle more quickly.", "Chosen who fight at a distance are better at biding their time, resulting in fewer rounds elapsing before their allies arrive to help them.", "Chosen who like each other more arrive to each other's defense more quickly in battle.", "During downtime, the Chosen can compromise on performing activities that none of them would perform on their own.", "Selectively corrupting one of the Chosen can make her want to perform actions that her allies aren't corrupt enough to join her on.", "The first step in corrupting one of the Chosen is generally to make her use sinful techniques to protect herself while surrounded.", "When captured by a Commander with a special ability, it is not possible for the Chosen to defend themselves.", "When the Thralls are instructed to torment a surrounded Chosen, they will continue to do so on their own until she escapes.", "Once the Chosen start using sinful methods to defend themselves, surrounding them will be less effective, but it will also be possible to extract more Evil Energy from them.", "A Chosen less inherently susceptible to a trauma will be more susceptible to the associated circumstance, and vice versa.", "Compassionate Chosen hate their enemies less but are more fearful for their allies.", "Cruel Chosen hate their enemies more but are less fearful for their allies.", "Innocent Chosen have less interest in sex but are more prone to getting grossed out and disgusted.", "Experienced Chosen have grown more accustomed to pleasure, but they're better at ignoring disgusting things.", "Prideful Chosen refuse to flinch away from pain, but they have the willpower to ignore being injured.", "Cowardly Chosen are careful to avoid pain, but they lack the willpower to ignore their injuries.", "Self-conscious Chosen feel more shame, but they're more careful to avoid getting stripped and exposed.", "Shameless Chosen care less about being humiliated, but they don't put much effort into avoiding getting stripped and exposed.", "After the evacuation has been completed, the extermination rate begins to increase exponentially.", "There are two types of damage: trauma and circumstance.", "Trauma inflicted during battle creates openings for the Chosen to be surrounded, but when one trauma is higher than the others, Chosen take less damage from the associated circumstance.", "Circumstances multiply the damage received by the Chosen (especially in the associated trauma), but they do not directly contribute to unresolved trauma.", "Chosen driven into a panic for their allies will stop listening to the hateful things said by their enemies.", "Chosen who hate their enemies will feel greater fear for what those enemies will do.", "Chosen overwhelmed by disgust will be less receptive to pleasure.", "Chosen overwhelmed by pleasure in battle will be disgusted by that fact.", "Chosen who are in pain will be more careful to avoid getting further injured.", "Chosen who are already injured will feel more pain from being attacked again.", "Chosen who are feeling ashamed will be more careful to avoid getting exposed.", "Chosen who are exposed will feel more shame from all sources.", "The protective powers of the Chosen depend on their pure hearts, so a Chosen consumed by hate is more vulnerable both emotionally and physically.", "The more pleasure one of the Chosen feels, the deeper her trauma will be engraved in her memory.", "As the Chosen are injured, they become less able to defend themselves from other abuses.", "When one Chosen is exposed and humiliated, it distracts and breaks the morale of the other Chosen on the battlefield.", "Every day, each Chosen's ANGST is increased by the trauma she hasn't successfully resolved yet.", "High ANGST makes the Chosen willing to perform sinful activities, and until it's resolved, the distraction makes them take more damage from all sources.", "Every doubling of ANGST increases the damage bonus by +1, so even a few hundred ANGST is much better than none at all.", "A Chosen's susceptibility to a damage type normally ranges from 0 to 100 based on personality.  The ANGST bonus is added to this value.", "A Chosen's susceptibility to a damage type ranges from 0 to 100 based on personality.  This base susceptibility to a trauma and to its associated circumstance normally adds up to 100, but corruption increases them both, potentially even over 100.", "More sinful actions produce a bit more Evil Energy, but they resolve trauma at an exponentially greater rate.", "The Chosen will only begin to use sinful methods to defend themselves if they expect to reach level 3 circumstance damage otherwise.", "Some sinful actions taken during battle will also damage their users.", "As the Chosen are corrupted, they will begin to use more sinful but also more effective versions of their abilities.", "Fearful Chosen are more vulnerable when their allies are surrounded or captured.", "Disgusted Chosen are always more vulnerable, but being grossed out won't generally create a major opening on its own.", "Chosen in pain are more vulnerable for awhile, but after they get surrounded, the adrenaline allows them to shake it off until the pain reaches the next level.", "Ashamed Chosen aren't any more vulnerable to being surrounded, but their efforts to retain their modesty mean that they'll remain surrounded for longer.", "Damage which currently contributes to the opening level is displayed in purple text.  Damage which does not is displayed in regular text.  Damage which is only partially contributing to the opening level is displayed in orange text.", "By using \"Regenerate\", one of the Chosen can remove a fraction of her current circumstance damage.  However, nothing done in battle can remove trauma damage that has already been dealt.", "By using \"Blast\", one of the Chosen can increase evacuation and extermination progress.  If evacuation is already complete, the progress that would be added there is wasted.", "The Chosen choose their actions in battle according to which actions would seem to be most useful at the moment and how effective they are at performing those actions.", "Taunting is more effective against self-conscious Chosen, especially those who have been humiliated in the past.", "Attacking is more effective against Chosen who refuse to back down from a fight, especially those who feel insecure about past failures", "Sliming is more effective against more naive Chosen, especially those who have come to associate battle with sexual pleasure.", "Threatening allies is more effective against more compassionate Chosen, especially those whose consciences aren't clean.", "It isn't possible to raise a circumstance by more than one level with a single instance of damage.  This limitation does not apply to trauma.", "Each of the actions the Chosen can perform in battle is linked with one of the four vulnerabilities.  The Chosen are better at performing actions associated with their greater vulnerabilities.", "Chosen who are surrounded or captured do not contribute to extermination progress until they escape.", "When a surrounded Chosen uses a tactic that decreases the effectiveness of Grind, Caress, Pummel, or Humiliate, the damage from that source is decreased to 3/5.  When both tactics against the source are used at once, the damage becomes 2/5.", "The main benefit of Suppressor-class upgrades is that they ignore defensive tactics.  Against Chosen who have not yet begun to use any defensive tactics, a Commander without Suppressor-class upgrades can actually more effective.", "When two of the Chosen have a hostile interaction with each other, Evil Energy is generated, especially when the interaction turns them from friends into enemies.", "Any action that deals circumstance damage also deals all four types of trauma damage, especially the one corresponding to the circumstance.", "An action's tooltip lists its damage types in descending order of how much is dealt.", "From a gameplay perspective, there are no differences between male, female, and futanari Chosen.", "It isn't possible for one of the Chosen to use \"Slaughter,\" \"Fantasize,\" or \"Striptease\" twice in a row.", "Even when \"Slaughter\" causes a surround duration to go below 0, it will never cause a surrounded Chosen to escape on the same turn.", "Because all circumstance damage is penalized by the highest level among the circumstance damage types, it's harder to raise other circumstance damage types after the first.", "When your Commander has no extra captures remaining, the extra capture depletion from Chosen using \"Detonate\" does nothing.", "\"Striptease\" decreases damage to surrounded Chosen in the short term, but the fact that it increases the user's EXPO level means that it can increase the overall damage taken during the battle.", "Even after the critical trauma level is reached, a third-tier Vulnerability is not actually broken until the Chosen uses the unlocked move for the first time.", "When two Chosen are targeted by the same defiler action, they both take greatly increased damage, but as soon as one of them escapes, the other does too." };
        if (this.tickleOn) {
            this.tips[14] = "The traumas are FEAR, DISG, TICK, and SHAM.  The circumstances are HATE, PLEA, ANTI, and EXPO.";
            this.tips[41] = "Prideful Chosen refuse to acknowledge that they're bothered by something as trivial as tickling, but they have the confidence to not overly dwell on anticipating what torments you have in store for them.";
            this.tips[42] = "Cowardly Chosen will always try to protect themselves, even from something as trivial as tickling, but it's easier to fill them with dreadful anticipation of what torments you have in store for them.";
            this.tips[53] = "Chosen flustered and distracted by tickling won't be able to spare as much thought toward anticipating what you'll do to them next.";
            this.tips[54] = "Chosen who have had their anticipation built up will react that much more strongly when you finally go all-out in tickling them.";
            this.tips[59] = "Because the Chosen are empowered by their own self-confidence, their anticipation of what you'll do to them will actually make them more vulnerable.";
            this.tips[72] = "Chosen distracted by tickling are more vulnerable for awhile, but after they get surrounded, they'll be more focused on escape and defense until they've been tickled some more.";
            this.tips[79] = "Poking is more effective against Chosen who refuse to protect themselves, especially those who feel insecure about past failures.";
        }
    }
    
    public void printTip(final JTextPane t) {
        this.append(t, "\n\nTip: " + this.tips[this.nextTip]);
        final int storage = this.nextTip;
        while (storage == this.nextTip) {
            this.nextTip = (int)(Math.random() * this.tips.length);
        }
    }
    
    public void scoreSummary(final JTextPane t) {
        long totalScore = 0L;
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        this.underlineAppend(t, "Final Score");
        this.append(t, "\n\nTotal ANGST (1 pt per 1000): ");
        final Chosen first = this.getCast()[0];
        final Chosen second = this.getCast()[1];
        final Chosen third = this.getCast()[2];
        final long angstBonus = this.getCast()[0].getANGST() / 1000L + this.getCast()[1].getANGST() / 1000L + this.getCast()[2].getANGST() / 1000L;
        this.append(t, String.valueOf(first.condensedFormat(this.getCast()[0].getANGST() / 1000L)) + " (" + this.getCast()[0].getMainName() + ") + " + second.condensedFormat(this.getCast()[1].getANGST() / 1000L) + " (" + this.getCast()[1].getMainName() + ") + " + third.condensedFormat(this.getCast()[2].getANGST() / 1000L) + " (" + this.getCast()[2].getMainName() + ") = " + first.condensedFormat(angstBonus) + " pts\n\nUnresolved Trauma (1 pt per 100): ");
        totalScore += angstBonus;
        final long firstTrauma = this.getCast()[0].getTotalFEAR() / 100L + this.getCast()[0].getTotalDISG() / 100L + this.getCast()[0].getTotalPAIN() / 100L + this.getCast()[0].getTotalSHAM() / 100L;
        final long secondTrauma = this.getCast()[1].getTotalFEAR() / 100L + this.getCast()[1].getTotalDISG() / 100L + this.getCast()[1].getTotalPAIN() / 100L + this.getCast()[1].getTotalSHAM() / 100L;
        final long thirdTrauma = this.getCast()[2].getTotalFEAR() / 100L + this.getCast()[2].getTotalDISG() / 100L + this.getCast()[2].getTotalPAIN() / 100L + this.getCast()[2].getTotalSHAM() / 100L;
        final long traumaBonus = firstTrauma + secondTrauma + thirdTrauma;
        this.append(t, String.valueOf(first.condensedFormat(firstTrauma)) + " (" + first.getMainName() + ") + " + second.condensedFormat(secondTrauma) + " (" + second.getMainName() + ") + " + third.condensedFormat(thirdTrauma) + " (" + third.getMainName() + ") x 10 = " + first.condensedFormat(traumaBonus) + " pts\n\nRemaining Evil Energy (500T pts per): ");
        totalScore += traumaBonus;
        final long EEMulti = 500000000000000L;
        final long EEBonus = EEMulti * this.evilEnergy;
        this.append(t, String.valueOf(first.condensedFormat(EEBonus)) + " pts\n");
        totalScore += EEBonus;
        long corruptionBonus = 0L;
        for (int i = 0; i < 3; ++i) {
            final Chosen c = this.getCast()[i];
            long cCorruption = 0L;
            this.append(t, "\n" + c.getMainName() + "'s Corruption: ");
            if (((!c.isVVirg() || c.isRuthless()) && c.vStart) || c.timesSlaughtered() > 0) {
                long added = 0L;
                if (c.isRuthless()) {
                    if (c.getMorality() > 66) {
                        final long amount = 100000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getMorality() > 33) {
                        final long amount = 40000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 20000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (!c.isVVirg()) {
                    if (c.getMorality() > 66) {
                        final long amount = 9900000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getMorality() > 33) {
                        final long amount = 3960000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1980000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.timesSlaughtered() > 0) {
                    if (c.getMorality() > 66) {
                        final long amount = 9990000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getMorality() > 33) {
                        final long amount = 3996000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1998000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.isImpregnated()) {
                    if (c.getMorality() > 66) {
                        final long amount = 99990000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getMorality() > 33) {
                        final long amount = 39996000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 19998000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                this.append(t, String.valueOf(c.condensedFormat(added)) + " (Morality)");
            }
            if (((!c.isCVirg() || c.isLustful()) && c.cStart) || c.timesFantasized() > 0) {
                if (cCorruption > 0L) {
                    this.append(t, " + ");
                }
                long added = 0L;
                if (c.isLustful()) {
                    if (c.getInnocence() > 66) {
                        final long amount = 100000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getInnocence() > 33) {
                        final long amount = 40000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 20000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (!c.isCVirg()) {
                    if (c.getInnocence() > 66) {
                        final long amount = 9900000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getInnocence() > 33) {
                        final long amount = 3960000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1980000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.timesFantasized() > 0) {
                    if (c.getInnocence() > 66) {
                        final long amount = 9990000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getInnocence() > 33) {
                        final long amount = 3996000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1998000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.isHypnotized()) {
                    if (c.getInnocence() > 66) {
                        final long amount = 99990000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getInnocence() > 33) {
                        final long amount = 39996000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 19998000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                this.append(t, String.valueOf(c.condensedFormat(added)) + " (Innocence)");
            }
            if (((!c.isAVirg() || c.isMeek()) && c.aStart) || c.timesDetonated() > 0) {
                if (cCorruption > 0L) {
                    this.append(t, " + ");
                }
                long added = 0L;
                if (c.isMeek()) {
                    if (c.getConfidence() > 66) {
                        final long amount = 100000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getConfidence() > 33) {
                        final long amount = 40000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 20000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (!c.isAVirg()) {
                    if (c.getConfidence() > 66) {
                        final long amount = 9900000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getConfidence() > 33) {
                        final long amount = 3960000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1980000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.timesDetonated() > 0) {
                    if (c.getConfidence() > 66) {
                        final long amount = 9990000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getConfidence() > 33) {
                        final long amount = 3996000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1998000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.isDrained()) {
                    if (c.getConfidence() > 66) {
                        final long amount = 99990000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getConfidence() > 33) {
                        final long amount = 39996000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 19998000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                this.append(t, String.valueOf(c.condensedFormat(added)) + " (Confidence)");
            }
            if (((!c.isModest() || c.isDebased()) && c.mStart) || c.timesStripped() > 0) {
                if (cCorruption > 0L) {
                    this.append(t, " + ");
                }
                long added = 0L;
                if (c.isDebased()) {
                    if (c.getDignity() > 66) {
                        final long amount = 100000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getDignity() > 33) {
                        final long amount = 40000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 20000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (!c.isModest()) {
                    if (c.getDignity() > 66) {
                        final long amount = 9900000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getDignity() > 33) {
                        final long amount = 3960000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1980000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.timesStripped() > 0) {
                    if (c.getDignity() > 66) {
                        final long amount = 9990000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getDignity() > 33) {
                        final long amount = 3996000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 1998000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                if (c.isParasitized()) {
                    if (c.getDignity() > 66) {
                        final long amount = 99990000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else if (c.getDignity() > 33) {
                        final long amount = 39996000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                    else {
                        final long amount = 19998000000000000L;
                        cCorruption += amount;
                        added += amount;
                    }
                }
                this.append(t, String.valueOf(c.condensedFormat(added)) + " (Dignity)");
            }
            if (cCorruption > 0L) {
                this.append(t, " = " + c.condensedFormat(cCorruption) + " pts");
            }
            else {
                this.append(t, "0 pts");
            }
            corruptionBonus += cCorruption;
        }
        totalScore += corruptionBonus;
        long enmityBonus = 0L;
        this.append(t, "\n\nEnmity Bonus: ");
        for (int j = 0; j < 2; ++j) {
            for (int k = j + 1; k < 3; ++k) {
                if (this.getRelationship(j, k) < 0) {
                    if (enmityBonus > 0L) {
                        this.append(t, " + ");
                    }
                    long added = 200000000000000000L;
                    if (this.getRelationship(j, k) == -4) {
                        added = 500000000000000000L;
                    }
                    this.append(t, String.valueOf(first.condensedFormat(added)) + " (" + this.getCast()[j].getMainName() + " vs. " + this.getCast()[k].getMainName() + ")");
                    enmityBonus += added;
                }
            }
        }
        if (enmityBonus > 0L) {
            this.append(t, " = " + first.condensedFormat(enmityBonus));
        }
        else {
            this.append(t, "0 pts");
        }
        totalScore += enmityBonus;
        long earlyFinishBonus = 0L;
        final long earlyFinishMultiplier = 150000000000000000L;
        if (this.day < 35) {
            earlyFinishBonus = (35L - this.day) * earlyFinishMultiplier;
        }
        totalScore += earlyFinishBonus;
        this.append(t, "\n\nEarly Finish Bonus (150P pts per day): " + this.getCast()[0].condensedFormat(earlyFinishBonus) + " pts\n\nVictory Bonus: ");
        int defeated = 0;
        int fallen = 0;
        for (int l = 0; l < 3; ++l) {
            if (this.getCast()[l].resolve <= 0) {
                ++fallen;
                ++defeated;
            }
            else if (!this.getCast()[l].alive) {
                ++defeated;
            }
        }
        long victoryBonus = 0L;
        if (defeated >= 2) {
            victoryBonus = 500000000000000000L;
        }
        totalScore += victoryBonus;
        this.append(t, String.valueOf(first.condensedFormat(victoryBonus)) + " pts\n\nFallen Chosen Bonus: ");
        final long fallenChosenBonus = 500000000000000000L * fallen;
        totalScore += fallenChosenBonus;
        this.append(t, String.valueOf(first.fixedFormat(fallenChosenBonus)) + " pts\n\nTotal:\n\n " + first.fixedFormat(angstBonus) + " (ANGST)\n+" + first.fixedFormat(traumaBonus) + " (Trauma)\n+" + first.fixedFormat(EEBonus) + " (Evil Energy)\n+" + first.fixedFormat(corruptionBonus) + " (Corruption)\n+" + first.fixedFormat(enmityBonus) + " (Enmity)\n+" + first.fixedFormat(earlyFinishBonus) + " (Early Finish)\n+" + first.fixedFormat(victoryBonus) + " (Victory)\n");
        this.underlineAppend(t, "+" + first.condensedFormat(fallenChosenBonus) + " (Fallen Chosen)");
        this.append(t, "\n " + first.fixedFormat(totalScore) + " pts\n\n");
        if (defeated >= 2) {
            this.append(t, "Congratulations on beating this development version of Corrupted Saviors!");
        }
        else {
            this.append(t, "Thank you for playing this development version of Corrupted Saviors!");
        }
        this.append(t, "  You may continue to play against this team in order to explore more of the corruption content, and a new button has been added to the shop which allows you to access some cheats!  ");
        if (totalScore > this.highScore) {
            this.highScore = totalScore;
        }
        try {
            String path = Project.class.getProtectionDomain().getCodeSource().getLocation().getPath();
            String fileName = "";
            for (int m = path.length() - 1; m >= 0; --m) {
                if (path.charAt(m) != '/') {
                    fileName = String.valueOf(path.charAt(m)) + fileName;
                }
                else {
                    m = -1;
                }
            }
            path = path.substring(0, path.length() - fileName.length() - 1);
            path = URLDecoder.decode(path, "UTF-8");
            path = path.replaceAll("file:/", "");
            path = path.replaceAll(String.valueOf(File.separator) + "u0020", String.valueOf(File.separator) + " ");
            final File saveLocation = new File(String.valueOf(path) + File.separator + "saves.sav");
            SaveData saves = null;
            if (saveLocation.exists()) {
                final ReadObject robj = new ReadObject();
                saves = robj.deserializeSaveData(String.valueOf(path) + File.separator + "saves.sav");
            }
            else {
                saves = new SaveData();
            }
            final WriteObject wobj = new WriteObject();
            final WorldState newWorld = new WorldState();
            newWorld.copyInitial(this);
            newWorld.setHighScore(this.highScore);
            final Chosen newChosen = new Chosen();
            newChosen.setNumber(0);
            newChosen.generate(newWorld);
            newWorld.addChosen(newChosen);
            newWorld.copySettings(t, this);
            newWorld.copyToggles(this);
            saves.endSave(newWorld, "New Game+");
            wobj.serializeSaveData(saves);
            this.append(t, "A new save file has been added in slot " + saves.getSaves().length + " which allows you to go back and start from Day 1 against this same group of Chosen.  You may also export this file from the shop menu in order to let others try to beat your score.  ");
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
        if (totalScore < 100000L) {
            this.append(t, "Try tormenting surrounded Chosen in order to apply circumstances that multiply the inflicted trauma!");
        }
        else if (totalScore < 1000000L) {
            this.append(t, "Try surrounding or capturing one of the Chosen just before the end of the battle in order to buy more time before the end of the day - and then doing the same to another Chosen when the first is about to escape!");
        }
        else if (totalScore < 10000000L) {
            this.append(t, "Try getting a few Commander upgrades, then aggressively spending your EE on the Commander in order to more quickly traumatize the Chosen to the point of committing greater sins!");
        }
        else {
            this.append(t, "Try for an even higher score!");
        }
    }
    
    public int[] getBreaks() {
        return this.pendingBreaks;
    }
    
    public void addBreak(final int type) {
        final int[] newBreaks = new int[this.pendingBreaks.length + 1];
        for (int i = 0; i < this.pendingBreaks.length; ++i) {
            newBreaks[i] = this.pendingBreaks[i];
        }
        newBreaks[newBreaks.length - 1] = type;
        this.pendingBreaks = newBreaks;
    }
    
    public void resolveBreak() {
        final int[] newBreaks = new int[this.pendingBreaks.length - 1];
        final int[] newResolved = new int[this.resolvedBreaks.length + 1];
        newResolved[newResolved.length - 1] = this.pendingBreaks[0];
        for (int i = 0; i < newBreaks.length; ++i) {
            newBreaks[i] = this.pendingBreaks[i + 1];
        }
        for (int i = 0; i < this.resolvedBreaks.length; ++i) {
            newResolved[i] = this.resolvedBreaks[i];
        }
        this.pendingBreaks = newBreaks;
        this.resolvedBreaks = newResolved;
    }
    
    public void resolveSpecificBreak(final int type) {
        final int[] newResolved = new int[this.resolvedBreaks.length + 1];
        newResolved[newResolved.length - 1] = type;
        for (int i = 0; i < this.resolvedBreaks.length; ++i) {
            newResolved[i] = this.resolvedBreaks[i];
        }
        this.resolvedBreaks = newResolved;
    }
    
    public void discardBreak() {
        final int[] newBreaks = new int[this.pendingBreaks.length - 1];
        for (int i = 0; i < newBreaks.length; ++i) {
            newBreaks[i] = this.pendingBreaks[i + 1];
        }
        this.pendingBreaks = newBreaks;
    }
    
    public Boolean isResolved(final int index) {
        for (int i = 0; i < this.resolvedBreaks.length; ++i) {
            if (this.resolvedBreaks[i] == index) {
                return true;
            }
        }
        return false;
    }
    
    public Boolean commanderFree() {
        Boolean conclusion = true;
        for (int i = 0; i < 3; ++i) {
            if (this.getCombatants()[i] != null && this.getCombatants()[i].isCaptured()) {
                conclusion = false;
            }
        }
        return conclusion;
    }
    
    public void applyCompletion() {
        int completionCost = 60;
        if (this.bodyStatus[26]) {
            completionCost = 0;
        }
        if (this.bodyStatus[18]) {
            this.evilEnergy -= completionCost;
            this.evilEnergy += 10;
            this.bodyStatus[18] = false;
        }
        else {
            this.evilEnergy -= completionCost;
        }
        this.bodyStatus[26] = true;
    }
    
    public void applyRelentlessness() {
        this.evilEnergy -= 10;
        this.bodyStatus[24] = true;
    }
    
    public void addCaptureFour() {
        this.evilEnergy -= 20;
        this.bodyStatus[23] = true;
    }
    
    public void applyParasitism() {
        this.bodyStatus[22] = true;
    }
    
    public void applyDrain() {
        this.bodyStatus[21] = true;
    }
    
    public void applyHypnosis() {
        this.bodyStatus[20] = true;
    }
    
    public void applyImpregnation() {
        this.bodyStatus[19] = true;
    }
    
    public void applyVersatility() {
        this.evilEnergy -= 5;
        this.bodyStatus[10] = true;
    }
    
    public void applySynthesis() {
        this.evilEnergy -= 10;
        this.bodyStatus[18] = true;
    }
    
    public void applyVanity() {
        this.evilEnergy -= 6;
        this.bodyStatus[14] = true;
    }
    
    public void applySpite() {
        this.evilEnergy -= 6;
        this.bodyStatus[13] = true;
    }
    
    public void applyDominance() {
        this.evilEnergy -= 6;
        this.bodyStatus[12] = true;
    }
    
    public void applyAmbition() {
        this.evilEnergy -= 6;
        this.bodyStatus[11] = true;
    }
    
    public void applyMania() {
        this.bodyStatus[6] = true;
    }
    
    public void applyAnger() {
        this.bodyStatus[5] = true;
    }
    
    public void applyLust() {
        this.bodyStatus[4] = true;
    }
    
    public void applyHunger() {
        this.bodyStatus[3] = true;
    }
    
    public void addCaptureOne() {
        this.evilEnergy -= 2;
        this.bodyStatus[8] = true;
    }
    
    public void addCaptureTwo() {
        this.evilEnergy -= 5;
        this.bodyStatus[16] = true;
    }
    
    public void addCaptureThree() {
        this.evilEnergy -= 10;
        this.bodyStatus[17] = true;
    }
    
    public void toggleAmbush() {
        this.bodyStatus[2] = !this.bodyStatus[2];
    }
    
    public void enhanceFive() {
        this.evilEnergy -= 30;
        this.bodyStatus[25] = true;
    }
    
    public void enhanceFour() {
        this.evilEnergy -= 2;
        this.bodyStatus[15] = true;
    }
    
    public void enhanceThree() {
        this.evilEnergy -= 2;
        this.bodyStatus[9] = true;
    }
    
    public void enhanceTwo() {
        --this.evilEnergy;
        this.bodyStatus[7] = true;
    }
    
    public void enhanceOne() {
        --this.evilEnergy;
        this.bodyStatus[1] = true;
    }
    
    public Boolean spendCapture() {
        --this.capturesPossible;
        if (this.capturesPossible > 0) {
            return true;
        }
        return false;
    }
    
    public int getCapturesPossible() {
        if (this.usedForsaken == null) {
            return this.capturesPossible;
        }
        if (this.usedForsaken.injured > 0) {
            return 0;
        }
        return 99;
    }
    
    public Boolean validLine(final int test) {
        if (test != this.lastLine && test != this.lastLastLine && test > 0) {
            return true;
        }
        return false;
    }
    
    public void chatter(final JTextPane t) {
        int attempts = 0;
        Chosen target;
        Chosen nextSpeaker = target = null;
        int nextLine = this.lastLine;
        while (attempts < 20 && !this.validLine(nextLine)) {
            ++attempts;
            while (nextSpeaker == null) {
                nextSpeaker = this.currentCombatants[(int)(Math.random() * 3.0)];
            }
            while (target == nextSpeaker || target == null) {
                target = this.currentCombatants[(int)(Math.random() * 3.0)];
            }
            if (target.isSurrounded() || target.isCaptured()) {
                if (!target.getViolence() && !target.getService() && !target.getBeg() && !target.getCover() && !target.isDefiled() && this.validLine(5)) {
                    nextLine = 5;
                }
                else if (target.getViolence() && this.validLine(6)) {
                    nextLine = 6;
                }
                else if (target.getService() && this.validLine(7)) {
                    nextLine = 7;
                }
                else if (target.getBeg() && this.validLine(8)) {
                    nextLine = 8;
                }
                else if (target.getCover() && this.validLine(9)) {
                    nextLine = 9;
                }
                else if (target.isInseminated() && this.validLine(18)) {
                    nextLine = 18;
                }
                else if (target.isOrgasming() && this.validLine(19)) {
                    nextLine = 19;
                }
                else if (target.isSodomized() && this.validLine(20)) {
                    nextLine = 20;
                }
                else if (target.isBroadcasted() && this.validLine(21)) {
                    nextLine = 21;
                }
            }
            else if (target.getLastAction() < 5 && this.validLine(target.getLastAction())) {
                nextLine = target.getLastAction();
            }
            if (this.getRelationship(nextSpeaker.getNumber(), target.getNumber()) >= 0) {
                if (nextLine == 1) {
                    if (nextSpeaker.getMoralityBreakage() < target.getMoralityBreakage()) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 2) {
                    if (nextSpeaker.getInnocenceBreakage() < target.getInnocenceBreakage()) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 3) {
                    if (nextSpeaker.getConfidenceBreakage() < target.getConfidenceBreakage()) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 4) {
                    if (nextSpeaker.getDignityBreakage() < target.getDignityBreakage()) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 6) {
                    if (nextSpeaker.getMoralityBreakage() < 1) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 7) {
                    if (nextSpeaker.getInnocenceBreakage() < 1) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 8) {
                    if (nextSpeaker.getConfidenceBreakage() < 1) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 9) {
                    if (nextSpeaker.getDignityBreakage() < 1) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 18) {
                    if (nextSpeaker.getMoralityBreakage() < 2) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 19) {
                    if (nextSpeaker.getInnocenceBreakage() < 2) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 20) {
                    if (nextSpeaker.getConfidenceBreakage() < 2) {
                        nextLine = this.lastLine;
                    }
                }
                else if (nextLine == 21 && nextSpeaker.getDignityBreakage() < 2) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 1 || nextLine == 6) {
                if (nextSpeaker.getMoralityBreakage() >= target.getMoralityBreakage()) {
                    nextLine = this.lastLine;
                }
                else if (nextLine == 6 && nextSpeaker.getMoralityBreakage() > 0) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 2 || nextLine == 7) {
                if (nextSpeaker.getInnocenceBreakage() >= target.getInnocenceBreakage()) {
                    nextLine = this.lastLine;
                }
                else if (nextLine == 7 && nextSpeaker.getInnocenceBreakage() > 0) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 3 || nextLine == 8) {
                if (nextSpeaker.getConfidenceBreakage() >= target.getConfidenceBreakage()) {
                    nextLine = this.lastLine;
                }
                else if (nextLine == 8 && nextSpeaker.getConfidenceBreakage() > 0) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 4 || nextLine == 9) {
                if (nextSpeaker.getDignityBreakage() >= target.getDignityBreakage()) {
                    nextLine = this.lastLine;
                }
                else if (nextLine == 9 && nextSpeaker.getDignityBreakage() > 0) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 18) {
                if (nextSpeaker.getMoralityBreakage() >= 2) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 19) {
                if (nextSpeaker.getInnocenceBreakage() >= 2) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 20) {
                if (nextSpeaker.getConfidenceBreakage() >= 2) {
                    nextLine = this.lastLine;
                }
            }
            else if (nextLine == 21 && nextSpeaker.getDignityBreakage() >= 2) {
                nextLine = this.lastLine;
            }
            if (!this.validLine(nextLine)) {
                if (target.getHATELevel() > nextSpeaker.getHATELevel() && target.getHATELevel() >= target.getPLEALevel() && target.getHATELevel() >= target.getINJULevel() && target.getHATELevel() >= target.getEXPOLevel() && this.validLine(10)) {
                    nextLine = 10;
                }
                else if (target.getPLEALevel() > nextSpeaker.getPLEALevel() && target.getPLEALevel() >= target.getHATELevel() && target.getPLEALevel() >= target.getINJULevel() && target.getPLEALevel() >= target.getEXPOLevel() && this.validLine(11)) {
                    nextLine = 11;
                }
                else if (target.getINJULevel() > nextSpeaker.getINJULevel() && target.getINJULevel() >= target.getHATELevel() && target.getINJULevel() >= target.getPLEALevel() && target.getINJULevel() >= target.getEXPOLevel() && this.validLine(12)) {
                    nextLine = 12;
                }
                else if (target.getEXPOLevel() > nextSpeaker.getEXPOLevel() && target.getEXPOLevel() >= target.getHATELevel() && target.getEXPOLevel() >= target.getPLEALevel() && target.getEXPOLevel() >= target.getINJULevel() && this.validLine(13)) {
                    nextLine = 13;
                }
            }
            if (!this.validLine(nextLine)) {
                if (nextSpeaker.getFEARLevel() > target.getFEARLevel() && nextSpeaker.getFEARLevel() >= nextSpeaker.getDISGLevel() && nextSpeaker.getFEARLevel() >= nextSpeaker.getPAINLevel() && nextSpeaker.getFEARLevel() >= nextSpeaker.getSHAMLevel() && this.validLine(14)) {
                    nextLine = 14;
                }
                else if (nextSpeaker.getSHAMLevel() > target.getSHAMLevel() && nextSpeaker.getSHAMLevel() >= nextSpeaker.getFEARLevel() && nextSpeaker.getSHAMLevel() >= nextSpeaker.getDISGLevel() && nextSpeaker.getSHAMLevel() >= nextSpeaker.getPAINLevel() && this.validLine(17)) {
                    nextLine = 17;
                    if (!target.isSurrounded() && !target.isCaptured()) {
                        continue;
                    }
                    nextLine = this.lastLine;
                }
                else if (nextSpeaker.getDISGLevel() > target.getDISGLevel() && nextSpeaker.getDISGLevel() >= nextSpeaker.getFEARLevel() && nextSpeaker.getDISGLevel() >= nextSpeaker.getPAINLevel() && nextSpeaker.getDISGLevel() >= nextSpeaker.getSHAMLevel() && this.validLine(15)) {
                    nextLine = 15;
                    if (!target.isSurrounded() && !target.isCaptured()) {
                        continue;
                    }
                    nextLine = this.lastLine;
                }
                else {
                    if (nextSpeaker.getPAINLevel() <= target.getPAINLevel() || nextSpeaker.getPAINLevel() < nextSpeaker.getFEARLevel() || nextSpeaker.getPAINLevel() < nextSpeaker.getDISGLevel() || nextSpeaker.getPAINLevel() < nextSpeaker.getSHAMLevel() || !this.validLine(16)) {
                        continue;
                    }
                    nextLine = 15;
                    if (!target.isSurrounded() && !target.isCaptured()) {
                        continue;
                    }
                    nextLine = this.lastLine;
                }
            }
        }
        if (nextSpeaker.isSurrounded() || nextSpeaker.isCaptured()) {
            nextLine = this.lastLine;
        }
        if (!nextSpeaker.isIntroduced() || !target.isIntroduced()) {
            nextLine = this.lastLine;
        }
        if (this.finalBattle && (!nextSpeaker.alive || !target.alive || nextSpeaker.resolve <= 0 || target.resolve <= 0)) {
            nextLine = this.lastLine;
        }
        if (this.validLine(nextLine)) {
            nextSpeaker.say(t, "\n\n\"");
            if (this.getRelationship(nextSpeaker.getNumber(), target.getNumber()) >= 0) {
                if (nextLine == 1) {
                    if (target.getMoralityBreakage() == 2) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.ANGER);
                        if (nextSpeaker.getMorality() > 66) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "They're bad guys, so you can go all out, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "Punish them, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "You're completely justified, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getMorality() > 33) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "Hooray!  Good job, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "The Thralls aren't innocent either, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "Best not to hold back, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "Yes!  Hurt them more, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Yes, " + target.getMainName() + "...  Make them suffer.");
                        }
                        else {
                            nextSpeaker.say(t, "Good, " + target.getMainName() + "!  The more they suffer now, the less they'll bother us later!");
                        }
                    }
                    else if (target.getMoralityBreakage() == 1) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.NEUTRAL);
                        if (nextSpeaker.getMorality() > 66) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "It's their fault for messing with you, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "Better in the long run to finish this quickly, " + target.getMainName() + ".  Even if it means being a little rough with them.");
                            }
                            else {
                                nextSpeaker.say(t, "You're well within acceptable limits of force, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getMorality() > 33) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "Your fighting style is reall cool, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "Just take care of them, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "Very efficient, " + target.getMainName() + "!");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "Nothing wrong with having some fun with them, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "You're so gentle with them, " + target.getMainName() + ".");
                        }
                        else {
                            nextSpeaker.say(t, "Eliminate them as quickly as possible, " + target.getMainName() + ".");
                        }
                    }
                    else {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.FOCUS);
                        if (nextSpeaker.getMorality() > 66) {
                            if (nextSpeaker.getConfidence() > 66) {
                                nextSpeaker.say(t, "Well done, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getConfidence() > 33) {
                                nextSpeaker.say(t, "You're actually pretty strong, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "I'm so glad you're fighting with us, " + target.getMainName() + "...");
                            }
                        }
                        else if (nextSpeaker.getMorality() > 33) {
                            if (nextSpeaker.getConfidence() > 66) {
                                nextSpeaker.say(t, "You're almost as strong as me, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getConfidence() > 33) {
                                nextSpeaker.say(t, "Great job, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "I wish I were as strong as you, " + target.getMainName() + "...");
                            }
                        }
                        else if (nextSpeaker.getConfidence() > 66) {
                            nextSpeaker.say(t, "Good, " + target.getMainName() + "!  You handle the small fry!");
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            nextSpeaker.say(t, "Not bad, " + target.getMainName() + ".");
                        }
                        else {
                            nextSpeaker.say(t, "How are you so good at this, " + target.getMainName() + "?");
                        }
                    }
                }
                else if (nextLine == 2) {
                    if (target.getInnocenceBreakage() == 2) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.JOY);
                        if (nextSpeaker.getInnocence() > 66) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "What's making you feel so good, " + target.getMainName() + "?");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "You look like you're feeling really good, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "Ah, " + target.getMainName() + "...  I wanna feel good too!");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "You do whatever you need to in order to get by, " + target.getMainName() + ".");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "You're really enjoying yourself, " + target.getMainName() + "...");
                            }
                            else {
                                nextSpeaker.say(t, "I'm a little envious, " + target.getMainName() + "...");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "There's no reason not to enjoy the way it feels, " + target.getMainName() + ".");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "Take this chance to enjoy yourself, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "The energy " + target.getMainName() + " is drawing is making me feel a bit amorous as well...");
                        }
                    }
                    else if (target.getInnocenceBreakage() == 1) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.JOY);
                        if (nextSpeaker.getInnocence() > 66) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "What's making you look so happy, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "You look really happy for some reason, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "I wish I was as happy as " + target.getMainName() + "...");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "You're looking better, " + target.getMainName() + ".  Happier, too.");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "It does feel good, doesn't it, " + target.getMainName() + "?");
                            }
                            else {
                                nextSpeaker.say(t, "I'm a little bit addicted to that feeling, too, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Just be happy, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "Might as well enjoy the feeling, " + target.getMainName() + ".");
                        }
                        else {
                            nextSpeaker.say(t, "It's an interesting side-effect, isn't it, " + target.getMainName() + "?");
                        }
                    }
                    else {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                        if (nextSpeaker.getInnocence() > 66) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "We'll hold them off, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "Are you feeling better, " + target.getMainName() + "?");
                            }
                            else {
                                nextSpeaker.say(t, "Hooray!  " + target.getMainName() + " is looking better!");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "Take your time, " + target.getMainName() + ".");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "How are you holding up, " + target.getMainName() + "?");
                            }
                            else {
                                nextSpeaker.say(t, "Alright, " + target.getMainName() + " is back in action!");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "It would be unwise to rush, " + target.getMainName() + ".");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "'s recovery will enhance our combat prowess significantly.");
                        }
                        else {
                            nextSpeaker.say(t, "Is your recovery going smoothly, " + target.getMainName() + "?");
                        }
                    }
                }
                else if (nextLine == 3) {
                    if (target.getConfidenceBreakage() == 2) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.SHAME);
                        if (nextSpeaker.getConfidence() > 66) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "I won't waste this chance, " + target.getMainName() + ".");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!?  What do you think you're doing!?");
                            }
                            else {
                                nextSpeaker.say(t, "No!  " + target.getMainName() + "!  Come back right now!");
                            }
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  Understood!");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!?  What are you doing!?");
                            }
                            else {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  Stop!  Come back!");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName().substring(0, 1)) + "-" + target.getMainName() + "...  I won't cry!");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you're going to get yourself killed!");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  N-No!");
                        }
                    }
                    else if (target.getConfidenceBreakage() == 1) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.NEUTRAL);
                        if (nextSpeaker.getConfidence() > 66) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "You've made a fine opening, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "You're pretty bold, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "Be less reckless, " + target.getMainName() + "!");
                            }
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "Thanks, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "It'll be hard to follow that up, " + target.getMainName() + "...");
                            }
                            else {
                                nextSpeaker.say(t, "Careful, " + target.getMainName() + "!");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Y-You're so brave, " + target.getMainName() + "...");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "W-Wow, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  A-Are you alright?");
                        }
                    }
                    else {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                        if (nextSpeaker.getConfidence() > 66) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "Impressive, " + target.getMainName() + ".");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "Keep it up, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "Looking good, " + target.getMainName() + "!");
                            }
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            if (nextSpeaker.getDignity() > 66) {
                                nextSpeaker.say(t, "I'll follow you anywhere, " + target.getMainName() + ".");
                            }
                            else if (nextSpeaker.getDignity() > 33) {
                                nextSpeaker.say(t, "I'm right behind you, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "Lead the way, " + target.getMainName() + "!");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Th-Thanks, " + target.getMainName() + ", I feel much better now.");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  I-I'm right behind you!");
                        }
                        else {
                            nextSpeaker.say(t, "D-Don't worry, " + target.getMainName() + ", I'm done panicking...");
                        }
                    }
                }
                else if (nextLine == 4) {
                    if (target.getDignityBreakage() == 2) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                        if (nextSpeaker.getDignity() > 66) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "You're so pretty, " + target.getMainName() + "...");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "The Thralls are entranced by you, " + target.getMainName() + "!");
                            }
                            else {
                                nextSpeaker.say(t, "Excellent tactic, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is... really sexy...");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "I can see why the Thralls are so distracted, " + target.getMainName() + "...");
                            }
                            else {
                                nextSpeaker.say(t, "Clever, " + target.getMainName() + "...");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  I wanna see more!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Those Thralls really want to fuck you, " + target.getMainName() + ".");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  I believe your tactic is working on me as well.");
                        }
                    }
                    else if (target.getDignityBreakage() == 1) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                        if (nextSpeaker.getDignity() > 66) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "You look wonderful, " + target.getMainName() + "!");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "The Thralls are completely captivated, " + target.getMainName() + ".");
                            }
                            else {
                                nextSpeaker.say(t, "Very effective, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is really amazing...");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "I need to be careful that I don't get distracted by " + target.getMainName() + " too...");
                            }
                            else {
                                nextSpeaker.say(t, "Good idea, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "I could watch " + target.getMainName() + " all day...");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "The Thralls look like they'd rather go after " + target.getMainName() + ".");
                        }
                        else {
                            nextSpeaker.say(t, "You're far too good at that, " + target.getMainName() + "...");
                        }
                    }
                    else {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                        if (nextSpeaker.getDignity() > 66) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "You're amazing, " + target.getMainName() + "...");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + " looks magnificent...");
                            }
                            else {
                                nextSpeaker.say(t, "Very heroic of you, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            if (nextSpeaker.getInnocence() > 66) {
                                nextSpeaker.say(t, "You're so cool, " + target.getMainName() + ".");
                            }
                            else if (nextSpeaker.getInnocence() > 33) {
                                nextSpeaker.say(t, "Stylish, " + target.getMainName() + ".");
                            }
                            else {
                                nextSpeaker.say(t, "You cut an impressive figure, " + target.getMainName() + ".");
                            }
                        }
                        else if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  Awesome!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Looking good, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "Well done, " + target.getMainName() + ".  The Thralls are completely distracted.");
                        }
                    }
                }
                else if (nextLine == 5) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    if (nextSpeaker.getConfidence() > 66) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "I'll save you, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Hold on, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "You must not give in, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "It'll be alright, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Don't give up, " + target.getMainName() + "...!");
                        }
                        else {
                            nextSpeaker.say(t, "This may be painful, " + target.getMainName() + "...!");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, "S-Someone help " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "H-How could I let them get " + target.getMainName() + "?");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  This isn't good...");
                    }
                }
                else if (nextLine == 6) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.ANGER);
                    if (nextSpeaker.getMorality() > 66) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "Fight back, " + target.getMainName() + "!  For justice!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Just get out of there, " + target.getMainName() + "!  I won't blame you for anything!");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  Even if you have to break some bones, it's worth it if you can help us end this sooner!");
                        }
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "Fight back, " + target.getMainName() + "!  I don't care what you have to do!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Just get out of there, " + target.getMainName() + "!  At any cost!");
                        }
                        else {
                            nextSpeaker.say(t, "There's no reason to show them any sympathy, " + target.getMainName() + ".");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, "Fight back, " + target.getMainName() + "!  Beat 'em up!");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "Hurt them as much as you have to, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, "Don't hold back, " + target.getMainName() + ".");
                    }
                }
                else if (nextLine == 7) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.JOY);
                    if (nextSpeaker.getInnocence() > 66) {
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "You're getting really good at that, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "The Thralls really love you, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "You're so lewd, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "There's nothing to be ashamed of, " + target.getMainName() + ".");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "Just finish them off as quickly as you can, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "Good!  Fuck their brains out, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "You're simply defeating them using unconventional means, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "It should be much easier to manage them after they ejaculate, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "Your technique is proving highly effective, " + target.getMainName() + ".");
                    }
                }
                else if (nextLine == 8) {
                    if (nextSpeaker.getConfidence() > 66) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.NEUTRAL);
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Yes, " + target.getMainName() + ", appeal to their conscience!");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "Just tell them what they want to hear, " + target.getMainName() + ".");
                        }
                        else {
                            nextSpeaker.say(t, "Your pride is less important than your safety, " + target.getMainName() + ".");
                        }
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.ANGER);
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "I hope this isn't too painful for you, " + target.getMainName() + "...");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is having a hard time...");
                        }
                        else {
                            nextSpeaker.say(t, "Just say whatever you have to in order to get them to back off, " + target.getMainName() + ".");
                        }
                    }
                    else {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "I'm glad that " + target.getMainName() + " isn't clinging to " + target.hisHer() + " pride...");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "It's hard, isn't it, " + target.getMainName() + "...?");
                        }
                        else {
                            nextSpeaker.say(t, "Just throw your pride away, " + target.getMainName() + "...");
                        }
                    }
                }
                else if (nextLine == 9) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.ANGER);
                    if (nextSpeaker.getDignity() > 66) {
                        if (nextSpeaker.getMorality() > 66) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is trying so hard...");
                        }
                        else if (nextSpeaker.getMorality() > 33) {
                            nextSpeaker.say(t, "The things they're doing to " + target.getMainName() + "...");
                        }
                        else {
                            nextSpeaker.say(t, "They'll pay for doing this to " + target.getMainName() + ".");
                        }
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        if (nextSpeaker.getMorality() > 66) {
                            nextSpeaker.say(t, "Be strong, " + target.getMainName() + "...!");
                        }
                        else if (nextSpeaker.getMorality() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is having a hard time...");
                        }
                        else {
                            nextSpeaker.say(t, "We'll get our revenge, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, "Stop staring at " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, "How can I help " + target.getMainName() + "!?");
                    }
                    else {
                        nextSpeaker.say(t, "I'll kill anyone that makes fun of " + target.getMainName() + "!");
                    }
                }
                else if (nextLine == 10) {
                    if (nextSpeaker.getMorality() > 66) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.SHAME);
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "I don't like it when you look so mad, " + target.getMainName() + "...");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Don't give in to the hatred, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "Not good.  If " + target.getMainName() + " lets " + target.himHer() + "self become consumed by hatred...");
                        }
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.NEUTRAL);
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "You're looking scary, " + target.getMainName() + "...");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "You have to stay sane, " + target.getMainName() + "...!");
                        }
                        else {
                            nextSpeaker.say(t, "Careful, " + target.getMainName() + ".  It will cause problems if you give in to your emotions.");
                        }
                    }
                    else {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "Ooh, the Demons made " + target.getMainName() + " mad...");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "You look like you're going crazy, " + target.getMainName() + ".");
                        }
                        else {
                            nextSpeaker.say(t, "I think you're understanding how I feel about the Demons now, " + target.getMainName() + ".");
                        }
                    }
                }
                else if (nextLine == 11) {
                    if (nextSpeaker.getInnocence() > 66) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FOCUS);
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Are you feeling sick, " + target.getMainName() + "?  Your face is red...");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is looking weird...");
                        }
                        else {
                            nextSpeaker.say(t, "You look really naughty, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Hold it together, " + target.getMainName() + "...");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is having trouble keeping " + target.hisHer() + " composure...");
                        }
                        else {
                            nextSpeaker.say(t, "You look like you're really turned on, " + target.getMainName() + ".");
                        }
                    }
                    else {
                        Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.SHAME);
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "You must resist the pleasure, " + target.getMainName() + "...");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is being overcome by lustful feelings...");
                        }
                        else {
                            nextSpeaker.say(t, "You're experiencing severe sexual arousal, " + target.getMainName() + ".");
                        }
                    }
                }
                else if (nextLine == 12) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    if (nextSpeaker.getConfidence() > 66) {
                        if (nextSpeaker.getMorality() > 66) {
                            nextSpeaker.say(t, "Be careful, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getMorality() > 33) {
                            nextSpeaker.say(t, "You're hurt, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "I'll kill them for hurting you like this, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        if (nextSpeaker.getMorality() > 66) {
                            if (this.tickleOn) {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  The way they're treating " + target.himHer() + "...");
                            }
                            else {
                                nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  Those wounds...");
                            }
                        }
                        else if (nextSpeaker.getMorality() > 33) {
                            nextSpeaker.say(t, "Are you alright, " + target.getMainName() + "?");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  Damn it...!");
                        }
                    }
                    else if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  I'm sorry I couldn't protect you...");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        if (this.tickleOn) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  A-Are you okay?");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  Y-You're bleeding!");
                        }
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  I wish I were stronger...!");
                    }
                }
                else if (nextLine == 13) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FOCUS);
                    if (nextSpeaker.getDignity() > 66) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is... a bit exposed...");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "I should try to distract people from looking at " + target.getMainName() + "...");
                        }
                        else {
                            nextSpeaker.say(t, "You look fine, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "Wow, look at " + target.getMainName() + "...");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "I wish I could do something for " + target.getMainName() + "...");
                        }
                        else {
                            nextSpeaker.say(t, "Don't worry about your appearance, " + target.getMainName() + ".");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " looks weird!");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "They're really having fun with " + target.getMainName() + "...");
                    }
                    else {
                        nextSpeaker.say(t, "Just try to focus on fighting, " + target.getMainName() + ".");
                    }
                }
                else if (nextLine == 14) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    if (nextSpeaker.getMorality() > 66) {
                        if (nextSpeaker.getConfidence() > 66) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", let me protect you!");
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", are you alright?");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", p-please be safe...!");
                        }
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        if (nextSpeaker.getConfidence() > 66) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", I won't the Demons hurt you!");
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            nextSpeaker.say(t, "I have to help " + target.getMainName() + "...");
                        }
                        else {
                            nextSpeaker.say(t, "Th-They're going to hurt " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "You'd better not hurt " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I'll stop them from hurting " + target.getMainName() + "... at any cost.");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  I'll punish them for threatening you...!");
                    }
                }
                else if (nextLine == 15) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.SHAME);
                    if (nextSpeaker.getInnocence() > 66) {
                        if (nextSpeaker.getConfidence() > 66) {
                            nextSpeaker.say(t, "I...  I can take anything they throw at me, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            nextSpeaker.say(t, "Got to be strong for " + target.getMainName() + "...!");
                        }
                        else {
                            nextSpeaker.say(t, "Make it stop, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        if (nextSpeaker.getConfidence() > 66) {
                            nextSpeaker.say(t, "I can deal with this much, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  I'm not doing so good...");
                        }
                        else {
                            nextSpeaker.say(t, "H-Help me, " + target.getMainName() + "!");
                        }
                    }
                    else if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "I am... capable of enduring this much abuse, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I am... nearing my limit, " + target.getMainName() + "...");
                    }
                    else {
                        nextSpeaker.say(t, "A-Assistance would be appreciated, " + target.getMainName() + "!");
                    }
                }
                else if (nextLine == 17) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    if (nextSpeaker.getDignity() > 66) {
                        if (nextSpeaker.getConfidence() > 66) {
                            nextSpeaker.say(t, "T-Trust me, " + target.getMainName() + ", I'm doing fine!");
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            nextSpeaker.say(t, "I must look terrible, " + target.getMainName() + "...");
                        }
                        else {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  Don't look!");
                        }
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        if (nextSpeaker.getConfidence() > 66) {
                            nextSpeaker.say(t, "You're embarrassing me in front of " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getConfidence() > 33) {
                            nextSpeaker.say(t, "I... I have to put on a strong face!  For " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "I'm messing up in front of " + target.getMainName() + "...");
                        }
                    }
                    else if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "I don't have anything to hide from " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I need to shake this off for " + target.getMainName() + "'s sake!");
                    }
                    else {
                        nextSpeaker.say(t, "I-I'm so pathetic, " + target.getMainName() + "...!");
                    }
                }
                else if (nextLine == 18) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                    if (nextSpeaker.getMorality() > 66) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "It's alright, " + target.getMainName() + ", getting raped doesn't make you a bad person!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "You resisted as best you could, " + target.getMainName() + "...");
                        }
                        else {
                            nextSpeaker.say(t, "I hope you don't blame yourself for this, " + target.getMainName() + "...");
                        }
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "Oh no, they're doing gross stuff to " + target.getMainName() + " now...");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "Damn, I couldn't stop them from raping " + target.getMainName() + "...");
                        }
                        else {
                            nextSpeaker.say(t, "Don't worry, " + target.getMainName() + ", you won't get pregnant.  Probably.");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, "It can actually feel kinda nice if you don't resist, " + target.getMainName() + "...");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "Just let it happen, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "I'd recommend that you stop trying to fight back, " + target.getMainName() + ".");
                    }
                }
                else if (nextLine == 19) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FOCUS);
                    if (nextSpeaker.getInnocence() > 66) {
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Don't be embarrassed about feeling good, " + target.getMainName() + "!");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "Ah, they're forcing " + target.getMainName() + " to feel good...");
                        }
                        else {
                            nextSpeaker.say(t, "Why not just let yourself feel good, " + target.getMainName() + "?");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "You don't have to force yourself not to cum, " + target.getMainName() + ".");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "Looks like they're forcing " + target.getMainName() + " to cum...");
                        }
                        else {
                            nextSpeaker.say(t, "You should stop trying not to cum, " + target.getMainName() + ".");
                        }
                    }
                    else if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "There's no shame in feeling the physiological orgasm response, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "It seems that " + target.getMainName() + " is being forced to orgasm.");
                    }
                    else {
                        nextSpeaker.say(t, "It is less painful when you cooperate, " + target.getMainName() + ".");
                    }
                }
                else if (nextLine == 20) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    if (nextSpeaker.getConfidence() > 66) {
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "Endure it, " + target.getMainName() + ".");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "Hold on, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "I can't help you this time, " + target.getMainName() + ".");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        if (nextSpeaker.getDignity() > 66) {
                            nextSpeaker.say(t, "You'll be alright, " + target.getMainName() + ".");
                        }
                        else if (nextSpeaker.getDignity() > 33) {
                            nextSpeaker.say(t, "I'm on my way, " + target.getMainName() + "!");
                        }
                        else {
                            nextSpeaker.say(t, "I know what you're going through, " + target.getMainName() + "...");
                        }
                    }
                    else if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "I know this isn't enough to break you, " + target.getMainName() + "...");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "I-I'll try to help, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, "I'm sorry I'm not strong enough to help, " + target.getMainName() + "...");
                    }
                }
                else if (nextLine == 21) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.NEUTRAL);
                    if (nextSpeaker.getDignity() > 66) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "I know it's embarrassing, " + target.getMainName() + ", but you'll be fine!");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  I wish we could stop everyone from seeing us like this...");
                        }
                        else {
                            nextSpeaker.say(t, "It's alright, " + target.getMainName() + ", people should be less interested in watching videos of your humiliation now that videos of mine are already out there.");
                        }
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        if (nextSpeaker.getInnocence() > 66) {
                            nextSpeaker.say(t, "It's really embarrassing, isn't it, " + target.getMainName() + "?");
                        }
                        else if (nextSpeaker.getInnocence() > 33) {
                            nextSpeaker.say(t, "The public may mock us now, " + target.getMainName() + ", but they'll be thanking us in the end.");
                        }
                        else {
                            nextSpeaker.say(t, "I'll find a way to cheer " + target.getMainName() + " up after we're done here...");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, "There's no reason to be embarrassed, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "The public may mock us, " + target.getMainName() + ", but it changes nothing.");
                    }
                    else {
                        nextSpeaker.say(t, "Perhaps I should let them film me some more in order to draw attention from " + target.getMainName() + "'s humiliation.");
                    }
                }
            }
            else if (nextLine == 1 || nextLine == 6) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getMorality() > 66) {
                    if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you're hurting too many people!");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "Stop, " + target.getMainName() + ", you're killing them!");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", they're not respnosible for their own actions!");
                    }
                }
                else if (nextSpeaker.getMorality() > 33) {
                    if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you're acting like a bad guy!");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "You need to hold back, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, "You're hurting more people than you're saving, " + target.getMainName() + ".");
                    }
                }
                else if (nextSpeaker.getInnocence() > 66) {
                    nextSpeaker.say(t, "You're way meaner than me, " + target.getMainName() + "!");
                }
                else if (nextSpeaker.getInnocence() > 33) {
                    nextSpeaker.say(t, "You were the evil one all along, " + target.getMainName() + ".");
                }
                else {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  You compensate for your cruelty by pretending to be righteous.");
                }
            }
            else if (nextLine == 2) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getInnocence() > 66) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "You're eating too much Demonic power, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "You should be careful with Demonic power, " + target.getMainName() + "...");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you shouldn't do that...");
                    }
                }
                else if (nextSpeaker.getInnocence() > 33) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", stop!  Are you trying to brainwash yourself!?");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you'll get brainwashed if you keep doing that!");
                    }
                    else {
                        nextSpeaker.say(t, "You're going to get brainwashed, " + target.getMainName() + "...");
                    }
                }
                else if (nextSpeaker.getConfidence() > 66) {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + "!  Show some willpower for once and stop taking in the Demonic energy!");
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    nextSpeaker.say(t, "You're getting addicted to the pleasure, " + target.getMainName() + ".");
                }
                else {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you fool...  Don't treat Demonic energy so lightly...");
                }
            }
            else if (nextLine == 3) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getConfidence() > 66) {
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", stop and think for a moment!");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", this is pointless!");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", have you gone insane!?");
                    }
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "Calm down, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "What are you hoping to accomplish, " + target.getMainName() + "?");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you masochist.");
                    }
                }
                else if (nextSpeaker.getDignity() > 66) {
                    nextSpeaker.say(t, "You're just acting on your emotions, " + target.getMainName() + "...");
                }
                else if (nextSpeaker.getDignity() > 33) {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you're beyond help...");
                }
                else {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you hotblooded idiot...");
                }
            }
            else if (nextLine == 4) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getDignity() > 66) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, "Show some modesty, " + target.getMainName() + "...");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, "You're making us look ridiculous, " + target.getMainName() + "...");
                    }
                    else {
                        nextSpeaker.say(t, "Think of my reputation as your associate, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getDignity() > 33) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, "That's just immoral, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  Making this about you...");
                    }
                    else {
                        nextSpeaker.say(t, "You look ridiculous, " + target.getMainName() + ".");
                    }
                }
                else if (nextSpeaker.getMorality() > 66) {
                    nextSpeaker.say(t, "Stop posing and fight, " + target.getMainName() + "!");
                }
                else if (nextSpeaker.getMorality() > 33) {
                    nextSpeaker.say(t, "What are you even trying to do, " + target.getMainName() + "?");
                }
                else {
                    nextSpeaker.say(t, "Stop pretending to be a hero, " + target.getMainName() + "!");
                }
            }
            else if (nextLine == 5) {
                if (nextSpeaker.getMorality() > 66) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.FEAR);
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "Don't you dare give in, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "Even if it's you, " + target.getMainName() + ", I'll try to help.");
                    }
                    else {
                        nextSpeaker.say(t, "I-I don't really want to see bad things happen to " + target.getMainName() + "...");
                    }
                }
                else if (nextSpeaker.getMorality() > 33) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "You're lucky that I'm here to save you, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "Can't you look after yourself, " + target.getMainName() + "?");
                    }
                    else {
                        nextSpeaker.say(t, "Don't think that you can rely on me to save you, " + target.getMainName() + "...");
                    }
                }
                else {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "You're holding me back, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I'm not saving you, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, "You're useless, " + target.getMainName() + "...");
                    }
                }
            }
            else if (nextLine == 7) {
                if (nextSpeaker.getInnocence() > 66) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.FOCUS);
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "You're such a pervert, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "You're just letting them do lewd things to you, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, "You look really funny, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getInnocence() > 33) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.JOY);
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "You're such a slut, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "Looks like you've given up, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "I kinda like seeing " + target.getMainName() + " humbled like this.");
                    }
                }
                else {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "It appears that you've given into your lusts, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "You're just encouraging them, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "That position suits you perfectly, " + target.getMainName() + ".");
                    }
                }
            }
            else if (nextLine == 8) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getConfidence() > 66) {
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "You've completely given up your pride, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "Pathetic, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, "You weren't fighting hard enough, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "You look ridiculous, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "Show some spine, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "You should take this to heart, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getDignity() > 66) {
                    nextSpeaker.say(t, "You were the weak one all along, " + target.getMainName() + "...!");
                }
                else if (nextSpeaker.getDignity() > 33) {
                    nextSpeaker.say(t, "I can't believe " + target.getMainName() + " ended up being so pathetic...");
                }
                else {
                    nextSpeaker.say(t, "I shouldn't be enjoying seeing " + target.getMainName() + " in this state so much...");
                }
            }
            else if (nextLine == 9) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getDignity() > 66) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", just stop fighting if you can't handle it...");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you aren't cut out for this.");
                    }
                    else {
                        nextSpeaker.say(t, "Aw, is it too much for " + target.getMainName() + "?");
                    }
                }
                else if (nextSpeaker.getDignity() > 33) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, "You can't just hide from it all, " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is practically just giving up...");
                    }
                    else {
                        nextSpeaker.say(t, "You look so pathetic, " + target.getMainName() + ".");
                    }
                }
                else if (nextSpeaker.getMorality() > 66) {
                    nextSpeaker.say(t, "This is what you get, " + target.getMainName() + ".");
                }
                else if (nextSpeaker.getMorality() > 33) {
                    nextSpeaker.say(t, "What did you think would happen, " + target.getMainName() + "?");
                }
                else {
                    nextSpeaker.say(t, "I like seeing you like this, " + target.getMainName() + ".");
                }
            }
            else if (nextLine == 10) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getMorality() > 66) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "You'd better not give in to hatred, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " really lets " + target.hisHer() + " hatred get the better of " + target.himHer() + ".");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is so full of hate...");
                    }
                }
                else if (nextSpeaker.getMorality() > 33) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "Come to your senses, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "You're losing it, " + target.getMainName() + "...");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is going crazy...");
                    }
                }
                else if (nextSpeaker.getConfidence() > 66) {
                    nextSpeaker.say(t, "Your mind is weak, " + target.getMainName() + "!");
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    nextSpeaker.say(t, "You're going to lose your power like that, " + target.getMainName() + ".");
                }
                else {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + "...  You weak-willed fool...");
                }
            }
            else if (nextLine == 11) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getInnocence() > 66) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", what's wrong with you!?");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "Stop looking so distracted, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " has " + target.hisHer() + " head in the clouds...");
                    }
                }
                else if (nextSpeaker.getInnocence() > 33) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "Stop getting turned on and just focus, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I can't believe you're actually getting off on this, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is such a deviant...");
                    }
                }
                else if (nextSpeaker.getConfidence() > 66) {
                    nextSpeaker.say(t, "Even someone like you should be able to resist sexual temptation in the middle of battle, " + target.getMainName() + "!");
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    nextSpeaker.say(t, "You must be very sexually repressed, " + target.getMainName() + ".");
                }
                else {
                    nextSpeaker.say(t, "How am I supposed to fight alongside sexual deviants like " + target.getMainName() + "?");
                }
            }
            else if (nextLine == 12) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getConfidence() > 66) {
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "How did you even get yourself hurt so quickly, " + target.getMainName() + "?");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "Your wounds aren't that bad, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "Just shake it off, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    if (nextSpeaker.getDignity() > 66) {
                        nextSpeaker.say(t, "You got hurt really quickly, " + target.getMainName() + "...");
                    }
                    else if (nextSpeaker.getDignity() > 33) {
                        nextSpeaker.say(t, "You're no help at all, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "Stop screwing up and getting hurt, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getDignity() > 66) {
                    nextSpeaker.say(t, "If you're going to get hurt so quickly, " + target.getMainName() + ", you should just stay home next time...");
                }
                else if (nextSpeaker.getDignity() > 33) {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is even weaker than I am...");
                }
                else {
                    nextSpeaker.say(t, "I'm so sick of " + target.getMainName() + "'s incompetence...!");
                }
            }
            else if (nextLine == 13) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getDignity() > 66) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "Stop making a scene, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "You look awful, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "I can concentrate with " + target.getMainName() + "'s foolishness...");
                    }
                }
                else if (nextSpeaker.getDignity() > 33) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "You're making us look foolish, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "How did you manage to get your clothes torn off so quickly, " + target.getMainName() + "?");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is so careless...");
                    }
                }
                else if (nextSpeaker.getConfidence() > 66) {
                    nextSpeaker.say(t, "What the hell happened to " + target.getMainName() + "!?");
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + " screwed up again.");
                }
                else {
                    nextSpeaker.say(t, "Y-You're distracting me, " + target.getMainName() + "...!");
                }
            }
            else if (nextLine == 14) {
                if (nextSpeaker.getMorality() > 66) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FEAR);
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "I won't let you get hurt, " + target.getMainName() + ", no matter how much you screw up!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I still worry about " + target.getMainName() + ", despite everything...");
                    }
                    else {
                        nextSpeaker.say(t, "I can't stop myself from caring about " + target.getMainName() + "...");
                    }
                }
                else if (nextSpeaker.getMorality() > 33) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "You'd better not make me rescue you, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I still worry about " + target.getMainName() + "... a little.");
                    }
                    else {
                        nextSpeaker.say(t, "I don't want " + target.getMainName() + " to get hurt... much...");
                    }
                }
                else {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "Damn that " + target.getMainName() + ", making me worry about " + target.himHer() + "...!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I guess it would be nice to have " + target.getMainName() + " in my debt...");
                    }
                    else {
                        nextSpeaker.say(t, "I guess I'll be in trouble if something happens to " + target.getMainName() + "...");
                    }
                }
            }
            else if (nextLine == 15) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                if (nextSpeaker.getInnocence() > 66) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", I order you to help me!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you're supposed to help me!");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " wouldn't abandon me, r-right...?");
                    }
                }
                else if (nextSpeaker.getInnocence() > 33) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "I-I can handle this on my own, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", do something!");
                    }
                    else {
                        nextSpeaker.say(t, "I don't want to rely on " + target.getMainName() + ", but...");
                    }
                }
                else if (nextSpeaker.getConfidence() > 66) {
                    nextSpeaker.say(t, "I... must learn to take care of myself... without " + target.getMainName() + "!");
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    nextSpeaker.say(t, "There must be a way to deal with this without relying on " + target.getMainName() + "...");
                }
                else {
                    nextSpeaker.say(t, "I really can't rely on " + target.getMainName() + "...");
                }
            }
            else if (nextLine == 17) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                if (nextSpeaker.getDignity() > 66) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "I'm doing perfectly fine, " + target.getMainName() + "!");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "I can deal with this myself, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "I-I'm not embarrassed at all, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getDignity() > 33) {
                    if (nextSpeaker.getConfidence() > 66) {
                        nextSpeaker.say(t, "What are you looking at, " + target.getMainName() + "?");
                    }
                    else if (nextSpeaker.getConfidence() > 33) {
                        nextSpeaker.say(t, "Just focus on the fight, " + target.getMainName() + "!");
                    }
                    else {
                        nextSpeaker.say(t, "D-Don't look at me, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getConfidence() > 66) {
                    nextSpeaker.say(t, "What are you laughing at, " + target.getMainName() + "!?");
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    nextSpeaker.say(t, "Are you smirking at me, " + target.getMainName() + "?");
                }
                else {
                    nextSpeaker.say(t, "I bet you're enjoying seeing me like this, " + target.getMainName() + "...");
                }
            }
            else if (nextLine == 18) {
                if (nextSpeaker.getMorality() > 66) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                    if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, "Why'd you let them rape you, " + target.getMainName() + "?");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "How can you let them defile you so easily, " + target.getMainName() + "?");
                    }
                    else {
                        nextSpeaker.say(t, "This is what you get for giving in to hatred, " + target.getMainName() + ".");
                    }
                }
                else if (nextSpeaker.getMorality() > 33) {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.ANGER);
                    if (nextSpeaker.getInnocence() > 66) {
                        if (target.getGender().equals("male")) {
                            nextSpeaker.say(t, "Silly Thralls, " + target.getMainName() + " can't be a mommy!");
                        }
                        else {
                            nextSpeaker.say(t, "Is " + target.getMainName() + " gonna become a mommy?");
                        }
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "Are you seriously having sex in the middle of battle, " + target.getMainName() + "?");
                    }
                    else {
                        nextSpeaker.say(t, "You let them break your Sexual Barrier?  " + target.getMainName() + ", you idiot...");
                    }
                }
                else {
                    Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.FOCUS);
                    if (nextSpeaker.getInnocence() > 66) {
                        nextSpeaker.say(t, "Hahah, they're doing naughty stuff with " + target.getMainName() + ".");
                    }
                    else if (nextSpeaker.getInnocence() > 33) {
                        nextSpeaker.say(t, "You make a good fleshlight, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "This is what you get for being so weak, " + target.getMainName() + ".");
                    }
                }
            }
            else if (nextLine == 19) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.ANGER);
                if (nextSpeaker.getInnocence() > 66) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", it's wrong to feel good from something like that!");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " must be a huge pervert to feel good from something like that.");
                    }
                    else {
                        nextSpeaker.say(t, "Hahah, " + target.getMainName() + ", you pervert, are you actually feeling good?");
                    }
                }
                else if (nextSpeaker.getInnocence() > 33) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, "You're cumming, " + target.getMainName() + "?  How can you live with the shame?");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, "I can't believe " + target.getMainName() + " is actually cumming.");
                    }
                    else {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", you slut, are you actually cumming?");
                    }
                }
                else if (nextSpeaker.getMorality() > 66) {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + ", do you really lack the willpower to contain your lust?");
                }
                else if (nextSpeaker.getMorality() > 33) {
                    nextSpeaker.say(t, String.valueOf(target.getMainName()) + " must be very weak-willed to allow " + target.himHer() + "self to orgasm here.");
                }
                else {
                    nextSpeaker.say(t, "Oh?  Wasn't enjoying that sort of thing supposed to be 'wrong', " + target.getMainName() + "?");
                }
            }
            else if (nextLine == 20) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getConfidence() > 66) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, "Sorry, " + target.getMainName() + ", but there are more deserving victims I need to save before I get around to you.");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        if (this.tickleOn) {
                            nextSpeaker.say(t, "Stop laughing, " + target.getMainName() + ", it's distracting.");
                        }
                        else {
                            nextSpeaker.say(t, "Stop screaming, " + target.getMainName() + ", it's distracting.");
                        }
                    }
                    else if (this.tickleOn) {
                        nextSpeaker.say(t, "Are you really so weak that tickling is enough to break you, " + target.getMainName() + "?");
                    }
                    else {
                        nextSpeaker.say(t, "Scream all you like, " + target.getMainName() + ", I'm still not going to help you.");
                    }
                }
                else if (nextSpeaker.getConfidence() > 33) {
                    if (nextSpeaker.getMorality() > 66) {
                        if (this.tickleOn) {
                            nextSpeaker.say(t, "Is it really that hard not to laugh when we're doing something like this, " + target.getMainName() + "?");
                        }
                        else {
                            nextSpeaker.say(t, "Is it really that painful, " + target.getMainName() + "?");
                        }
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, "Just be quiet, " + target.getMainName() + "...");
                    }
                    else {
                        nextSpeaker.say(t, "Heh, I might take a break from the fight to watch " + target.getMainName() + " get what's coming to " + target.himHer() + ".");
                    }
                }
                else if (nextSpeaker.getMorality() > 66) {
                    nextSpeaker.say(t, "Come on, " + target.getMainName() + ", there are people who are suffering a lot more than you...");
                }
                else if (nextSpeaker.getMorality() > 33) {
                    nextSpeaker.say(t, "Guess " + target.getMainName() + " wasn't so strong after all...");
                }
                else {
                    nextSpeaker.say(t, "Maybe now " + target.getMainName() + " will stop thinking " + target.heShe() + "'s so much better than everyone else...");
                }
            }
            else if (nextLine == 21) {
                Project.changePortrait(nextSpeaker.convertGender(), nextSpeaker.type, false, false, this, this.nameCombatants(), nextSpeaker.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.NEUTRAL);
                if (nextSpeaker.getDignity() > 66) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, "This is what you get for not paying attention to the state of your clothes, " + target.getMainName() + "...");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, "You're going to make the rest of us look bad by association, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "Your pathetic state only makes me look that much better, " + target.getMainName() + ".");
                    }
                }
                else if (nextSpeaker.getDignity() > 33) {
                    if (nextSpeaker.getMorality() > 66) {
                        nextSpeaker.say(t, String.valueOf(target.getMainName()) + " is going to make the people lose hope in us...");
                    }
                    else if (nextSpeaker.getMorality() > 33) {
                        nextSpeaker.say(t, "You're distracting me, " + target.getMainName() + ".");
                    }
                    else {
                        nextSpeaker.say(t, "Now everyone will see you for the failure you are, " + target.getMainName() + "!");
                    }
                }
                else if (nextSpeaker.getMorality() > 66) {
                    nextSpeaker.say(t, "This is what you get for caring so much about your public image, " + target.getMainName() + ".");
                }
                else if (nextSpeaker.getMorality() > 33) {
                    nextSpeaker.say(t, "I thought you were the type to try harder to keep your dignity, " + target.getMainName() + ".");
                }
                else {
                    nextSpeaker.say(t, "Hahahah, you look so pathetic, " + target.getMainName() + "!");
                }
            }
            nextSpeaker.say(t, "\"");
        }
        this.lastLastLine = this.lastLine;
        this.lastLine = nextLine;
    }
    
    public Boolean decrementArrival(final int index) {
        Boolean conclusion = false;
        final int[] arrivalTimer = this.arrivalTimer;
        arrivalTimer[index] -= 100;
        if (this.arrivalTimer[index] < 1) {
            conclusion = true;
        }
        return conclusion;
    }
    
    public void addToCombat(final Chosen c) {
        if (this.currentCombatants[1] == null) {
            this.currentCombatants[1] = c;
        }
        else {
            this.currentCombatants[2] = c;
        }
        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.FOCUS);
    }
    
    public int getTotalRounds() {
        return this.totalRounds;
    }
    
    public void incrementTotalRounds() {
        ++this.totalRounds;
    }
    
    public int getBattleRound() {
        return this.battleRound;
    }
    
    public void setBattleRound(final int newRound) {
        this.battleRound = newRound;
    }
    
    public void setCaptureTarget(final Chosen target) {
        this.nextCapture = target;
    }
    
    public Chosen getNextCapture() {
        return this.nextCapture;
    }
    
    public int getCaptureDuration() {
        return this.captureDuration;
    }
    
    public void incrementDay() {
        ++this.day;
    }
    
    public void clearCommander() {
        for (int i = 0; i < this.bodyStatus.length; ++i) {
            this.bodyStatus[i] = false;
        }
    }
    
    public int getCommanderValue() {
        int value = 1;
        if (this.bodyStatus[1]) {
            ++value;
        }
        if (this.bodyStatus[7]) {
            ++value;
        }
        if (this.bodyStatus[8]) {
            value += 2;
        }
        if (this.bodyStatus[9]) {
            value += 2;
        }
        if (this.bodyStatus[10]) {
            value += 5;
        }
        if (this.bodyStatus[11] || this.bodyStatus[12] || this.bodyStatus[13] || this.bodyStatus[14]) {
            value += 6;
        }
        if (this.bodyStatus[15]) {
            value += 2;
        }
        if (this.bodyStatus[16]) {
            value += 5;
        }
        if (this.bodyStatus[17]) {
            value += 10;
        }
        if (this.bodyStatus[18]) {
            value += 10;
        }
        if (this.bodyStatus[23]) {
            value += 20;
        }
        if (this.bodyStatus[24]) {
            value += 10;
        }
        if (this.bodyStatus[25]) {
            value += 30;
        }
        if (this.bodyStatus[26]) {
            value += 60;
        }
        return value;
    }
    
    public void printCommanderSummary(final JTextPane t, final Chosen c) {
        int suppressors = 0;
        if (this.bodyStatus[3]) {
            ++suppressors;
        }
        if (this.bodyStatus[4]) {
            ++suppressors;
        }
        if (this.bodyStatus[5]) {
            ++suppressors;
        }
        if (this.bodyStatus[6]) {
            ++suppressors;
        }
        Boolean defiler = false;
        if (this.bodyStatus[11] || this.bodyStatus[12] || this.bodyStatus[13] || this.bodyStatus[14]) {
            defiler = true;
        }
        Boolean punisher = false;
        if (this.bodyStatus[19] || this.bodyStatus[20] || this.bodyStatus[21] || this.bodyStatus[22]) {
            punisher = true;
        }
        int reportedDuration = 2;
        if (c == null && (this.techs[8].isOwned() || this.techs[9].isOwned() || this.techs[10].isOwned() || this.techs[11].isOwned() || this.techs[12].isOwned() || this.techs[13].isOwned() || this.techs[14].isOwned() || this.techs[15].isOwned())) {
            if (this.techs[8].isOwned()) {
                int durationCost = 0;
                this.append(t, "[X][X][");
                if (this.bodyStatus[1]) {
                    this.append(t, "X");
                }
                else {
                    durationCost = 1;
                    this.append(t, " ");
                }
                this.append(t, "]");
                if (this.techs[14].isOwned()) {
                    this.append(t, "[");
                    if (this.bodyStatus[7]) {
                        this.append(t, "X");
                    }
                    else {
                        this.append(t, " ");
                        if (durationCost == 0) {
                            durationCost = 1;
                        }
                    }
                    this.append(t, "]");
                    if (this.techs[20].isOwned()) {
                        this.append(t, "[");
                        if (this.bodyStatus[9]) {
                            this.append(t, "X");
                        }
                        else {
                            this.append(t, " ");
                            if (durationCost == 0) {
                                durationCost = 2;
                            }
                        }
                        this.append(t, "]");
                        if (this.techs[26].isOwned()) {
                            this.append(t, "[");
                            if (this.bodyStatus[15]) {
                                this.append(t, "X");
                            }
                            else {
                                this.append(t, " ");
                                if (durationCost == 0) {
                                    durationCost = 2;
                                }
                            }
                            this.append(t, "]");
                            if (this.techs[46].isOwned()) {
                                this.append(t, "[");
                                if (this.bodyStatus[25]) {
                                    this.append(t, "X  X");
                                }
                                else {
                                    this.append(t, "    ");
                                    if (durationCost == 0) {
                                        durationCost = 30;
                                    }
                                }
                                this.append(t, "]");
                            }
                        }
                    }
                }
                this.append(t, " Duration");
                if (durationCost == 30) {
                    this.append(t, " (Next two: " + durationCost + " EE)");
                }
                else if (durationCost > 0) {
                    this.append(t, " (Next: " + durationCost + " EE)");
                }
                this.append(t, "\n");
            }
            if (this.techs[15].isOwned()) {
                int captureCost = 0;
                this.append(t, "[");
                if (this.bodyStatus[8]) {
                    this.append(t, "X");
                }
                else {
                    this.append(t, " ");
                    captureCost = 2;
                }
                this.append(t, "]");
                if (this.techs[27].isOwned()) {
                    this.append(t, "[");
                    if (this.bodyStatus[16]) {
                        this.append(t, "X");
                    }
                    else {
                        this.append(t, " ");
                        if (captureCost == 0) {
                            captureCost = 5;
                        }
                    }
                    this.append(t, "]");
                    if (this.techs[32].isOwned()) {
                        this.append(t, "[");
                        if (this.bodyStatus[17]) {
                            this.append(t, "X");
                        }
                        else {
                            this.append(t, " ");
                            if (captureCost == 0) {
                                captureCost = 10;
                            }
                        }
                        this.append(t, "]");
                        if (this.techs[38].isOwned()) {
                            this.append(t, "[");
                            if (this.bodyStatus[23]) {
                                this.append(t, "X");
                            }
                            else {
                                this.append(t, " ");
                                if (captureCost == 0) {
                                    captureCost = 20;
                                }
                            }
                            this.append(t, "]");
                        }
                    }
                }
                this.append(t, " Extra Captures");
                if (captureCost > 0) {
                    this.append(t, " (Next: " + captureCost + " EE)");
                }
                this.append(t, "\n");
            }
            if (this.techs[9].isOwned()) {
                this.append(t, "[");
                if (this.bodyStatus[2]) {
                    this.append(t, " ");
                }
                else {
                    this.append(t, "X");
                }
                this.append(t, "] Ambush (free)\n");
            }
            if (this.techs[39].isOwned()) {
                this.append(t, "[");
                if (this.bodyStatus[24]) {
                    this.append(t, "X");
                }
                else {
                    this.append(t, " ");
                }
                this.append(t, "] Flight");
                if (!this.bodyStatus[24]) {
                    this.append(t, " (Cost: 10 EE)");
                }
                this.append(t, "\n");
            }
            if (this.techs[10].isOwned() || this.techs[11].isOwned() || this.techs[12].isOwned() || this.techs[13].isOwned()) {
                this.append(t, "Suppressor: ");
                if (suppressors == 1) {
                    if (this.bodyStatus[3]) {
                        this.append(t, "Hunger [HATE]");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "Lust [PLEA]");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "Anger [ANTI]");
                        }
                        else {
                            this.append(t, "Anger [INJU]");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "Mania [EXPO]");
                    }
                    if (this.techs[21].isOwned() && !defiler) {
                        this.append(t, " (Next: 5 EE)");
                    }
                }
                else if (suppressors == 2) {
                    String first = "";
                    String second = "";
                    if (this.bodyStatus[3]) {
                        first = "Hunger [HATE]";
                    }
                    if (this.bodyStatus[4]) {
                        final String status = "Lust [PLEA]";
                        if (first.length() > 0) {
                            second = status;
                        }
                        else {
                            first = status;
                        }
                    }
                    if (this.bodyStatus[5]) {
                        String status = "Anger [INJU]";
                        if (this.tickleOn) {
                            status = "Anger [ANTI]";
                        }
                        if (first.length() > 0) {
                            second = status;
                        }
                        else {
                            first = status;
                        }
                    }
                    if (this.bodyStatus[6]) {
                        second = "Mania [EXPO]";
                    }
                    this.append(t, String.valueOf(first) + ", " + second);
                }
                else if (punisher && this.techs[47].isOwned()) {
                    if (defiler) {
                        this.append(t, "None (REQUIRED)");
                    }
                    else {
                        this.append(t, "None (Cost: 60 EE plus 6 EE for Defiler)");
                    }
                }
                else if (defiler) {
                    if (this.techs[33].isOwned()) {
                        this.append(t, "None (Cost: 10 EE)");
                    }
                    else {
                        this.append(t, "(LOCKED)");
                    }
                }
                else if (punisher) {
                    this.append(t, "(LOCKED)");
                }
                else {
                    this.append(t, "None (free)");
                }
                this.append(t, "\n");
            }
            if (this.techs[22].isOwned() || this.techs[23].isOwned() || this.techs[24].isOwned() || this.techs[25].isOwned()) {
                this.append(t, "Defiler: ");
                if (punisher && this.techs[47].isOwned() && !defiler) {
                    if (suppressors == 1) {
                        this.append(t, "None (REQUIRED: 6 EE)");
                    }
                    else {
                        this.append(t, "None (Cost: 66 EE)");
                    }
                }
                else if (suppressors == 2 || (punisher && !this.techs[47].isOwned())) {
                    this.append(t, "(LOCKED)");
                }
                else if (suppressors == 1 && !defiler) {
                    if (this.techs[33].isOwned()) {
                        this.append(t, "None (Cost: 16 EE)");
                    }
                    else {
                        this.append(t, "(LOCKED)");
                    }
                }
                else if (!defiler) {
                    this.append(t, "None (Cost: 6 EE)");
                }
                else if (this.bodyStatus[11]) {
                    this.append(t, "Ambition [HATE, PLEA]");
                }
                else if (this.bodyStatus[12]) {
                    if (this.tickleOn) {
                        this.append(t, "Dominance [PLEA, ANTI]");
                    }
                    else {
                        this.append(t, "Dominance [PLEA, INJU]");
                    }
                }
                else if (this.bodyStatus[13]) {
                    if (this.tickleOn) {
                        this.append(t, "Spite [ANTI, EXPO]");
                    }
                    else {
                        this.append(t, "Spite [INJU, EXPO]");
                    }
                }
                else if (this.bodyStatus[14]) {
                    this.append(t, "Vanity [EXPO, HATE]");
                }
                this.append(t, "\n");
            }
            if (this.techs[34].isOwned() || this.techs[35].isOwned() || this.techs[36].isOwned() || this.techs[37].isOwned()) {
                this.append(t, "Punisher: ");
                if ((suppressors > 0 || defiler) && !punisher) {
                    if (this.techs[47].isOwned()) {
                        if (defiler && suppressors > 0) {
                            this.append(t, "None (Cost: 50 EE)");
                        }
                        else if (defiler) {
                            this.append(t, "None (Cost: 60 EE)");
                        }
                        else {
                            this.append(t, "None (Cost: 60 EE plus 6 EE for Defiler)");
                        }
                    }
                    else {
                        this.append(t, "(LOCKED)");
                    }
                }
                else if (this.bodyStatus[19]) {
                    this.append(t, "Impregnation [HATE]");
                }
                else if (this.bodyStatus[20]) {
                    this.append(t, "Hypnosis [PLEA]");
                }
                else if (this.bodyStatus[21]) {
                    this.append(t, "Drain ");
                    if (this.tickleOn) {
                        this.append(t, "[ANTI]");
                    }
                    else {
                        this.append(t, "[INJU]");
                    }
                }
                else if (this.bodyStatus[22]) {
                    this.append(t, "Parasitism [EXPO]");
                }
                else {
                    this.append(t, "None (free)");
                }
                this.append(t, "\n");
            }
            this.append(t, "\n");
            if (this.bodyStatus[26]) {
                if (this.bodyStatus[21]) {
                    if (this.bodyStatus[11]) {
                        this.append(t, "Your Commander is a bestial Demon with an enormous cock which ");
                    }
                    else if (this.bodyStatus[12]) {
                        this.append(t, "Your Commander is a shambling mass which uses tentacles to pull victims into an internal chamber filled which fluid which has an aphrodisiac effect and also ");
                    }
                    else if (this.bodyStatus[13]) {
                        this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon whose mighty grasp ");
                    }
                    else if (this.bodyStatus[14]) {
                        this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles which both hijacks communications infrastructure and ");
                    }
                    this.append(t, "drains the vital energy of the Chosen.  It attempts to drain enough energy to cause unconsciousness in order to make it easier to ");
                    if (this.bodyStatus[3]) {
                        this.append(t, "rape them, exploiting their anger at the violation after they wake up to weaken their powers even further.");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "make them repeatedly orgasm, ensuring that their bodies remember your domination even if their minds don't.");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "tickle them, so that the stimulation hits them all at once after they wake up and renders them helpless with laughter.");
                        }
                        else {
                            this.append(t, "mangle their bodies.");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "tear off their clothes and force them into embarrassing positions for the watching crowd.");
                    }
                    this.append(t, "  Your Commander ");
                }
                else if (this.bodyStatus[22]) {
                    this.append(t, "Your Commander is a mostly-transparent cloud which drifts across the battlefield until it comes into contact with one of the Chosen.  After flowing into its targets, it can merge with and influence the clothes created by their transformations.  It's especially proficient at ");
                    if (this.bodyStatus[11]) {
                        this.append(t, "creating phallic protrusions on the inside of the clothing to penetrate them as they try to fight");
                    }
                    else if (this.bodyStatus[12]) {
                        this.append(t, "creating small, nimble tentacles on the inside of the clothing which stimulate them as they try to fight");
                    }
                    else if (this.bodyStatus[13]) {
                        if (this.tickleOn) {
                            this.append(t, "tickling its wearers as they try to fight");
                        }
                        else {
                            this.append(t, "painfully binding and torturing its wearers");
                        }
                    }
                    else if (this.bodyStatus[14]) {
                        this.append(t, "forcing its wearers into humiliating positions that expose everything");
                    }
                    if (this.bodyStatus[3]) {
                        this.append(t, ", provoking their rage with the deep violation.  ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, ", training them to enjoy the abuse.  ");
                    }
                    else if (this.bodyStatus[5]) {
                        this.append(t, ", exhausting and weakening them.  ");
                    }
                    else {
                        this.append(t, ", ensuring that everyone can see the effect it's having on them.  ");
                    }
                    this.append(t, "Your Commander ");
                }
                else if (this.bodyStatus[11]) {
                    this.append(t, "Your Commander is a huge Demon which prowls about on all fours with a foot-long flared penis slung under its massive body.  Its ejaculate ");
                    if (this.bodyStatus[19]) {
                        this.append(t, "is extremely potent, capable of impregnating even one of the Chosen provided that their soul's resistance to corruption has been worn down enough.  ");
                    }
                    else {
                        this.append(t, "acts as a strong neurotoxin, putting its victims into a hypnotically suggestible state.  ");
                    }
                    if (this.bodyStatus[3]) {
                        this.append(t, "The body's humanoid face and mouth allow it to taunt and provoke the Chosen even as it violates them.  ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "The body's underside is lined with tentacles which stimulate its victims at the same time.  ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "An extra pair of arms sprouting from the sides of the body serve to let you tickle your victims to break their resistance as you fill them up.  ");
                        }
                        else {
                            this.append(t, "The penis is forked and covered in protrusions which make penetration an especially uncomfortable ordeal.  ");
                        }
                    }
                    else {
                        this.append(t, "The body itself is made of a transparent, amorphous, clothes-dissolving substance designed for maximum humiliation of its victims.  ");
                    }
                    this.append(t, "Your Commander ");
                }
                else if (this.bodyStatus[12]) {
                    this.append(t, "Your Commander is a huge, shambling mass which uses long tentacles to pull its prey into an internal chamber full of fluid.  This fluid has aphrodisiac effects, but more importantly, ");
                    if (this.bodyStatus[19]) {
                        this.append(t, "it's filled with your seed, putting even the Chosen at risk of becoming impregnated while they swim inside.  ");
                    }
                    else if (this.bodyStatus[20]) {
                        this.append(t, "it puts those influenced by it into a mental state where they're highly susceptible to hypnotic suggestion.  ");
                    }
                    if (this.bodyStatus[3]) {
                        this.append(t, "Meanwhile, the tentacles inside the chamber will try to squirm their way into every orifice in order to violate them even more deeply.  ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "In order to give the fluid time to work, the tentacles inside the chamber try to inflict so much pleasure that the target's can't even think of escape.  ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "Any attempts to escape are sabotaged by the tickling of the tentacles inside the chamber.  ");
                        }
                        else {
                            this.append(t, "In order to make it impossible to escape, the tentacles inside the chamber are brutal in their efforts to immobilize and penetrate the Chosen, anchoring them in place.  ");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "The fluid also dissolves clothing, and the body is transparent, making capture an especially humiliating ordeal.  ");
                    }
                    this.append(t, "Your Commander ");
                }
                else if (this.bodyStatus[13]) {
                    this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon capable of restraining its prey and inflicting various tortures and humiliations.  ");
                    if (this.bodyStatus[19]) {
                        this.append(t, "After immobilizing its victims, it tries to penetrate them with its enormous cock, ejaculating a super-potent seed with the potential to impregnate even one of the Chosen.  ");
                    }
                    else if (this.bodyStatus[20]) {
                        this.append(t, "Its imposing size serves to distract from its true weapon - its cloud of mind-influencing hypnotic spores which quickly take effect while its victims are immobilized.  ");
                    }
                    if (this.bodyStatus[3]) {
                        this.append(t, "In place of arms, its torso is covered in mouths whose long tongues are incredibly flexible and powerful.  ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "It many hands are nimble enough to stimulate their erogenous zones at the same time, forcing them to climax.  ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "Its many hands are nimble enough to tickle their most sensitive places at the same time, forcing out unwilling laughter.  ");
                        }
                        else {
                            this.append(t, "Its many hands are put to work pummeling them at the same time, making it even more difficult to resist.  ");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "It has countless powerful arms and its skin is covered in clothes-dissolving slime.  ");
                    }
                    this.append(t, "Your Commander ");
                }
                else if (this.bodyStatus[14]) {
                    this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles capable of hijacking communications infrastructure and using it to show unsuspecting people footage of how it torments its prey.  It entices viewers ");
                    if (this.bodyStatus[19]) {
                        this.append(t, "by offering the rare opportunity to watch as the Chosen are impregnated by the reservoir of extremely potent artificial seed stored inside.  ");
                    }
                    else if (this.bodyStatus[20]) {
                        this.append(t, "by subjecting its victims to hypnotic sounds and imagery, compelling them to seek out a few lucky audience members and service them after the battle.  ");
                    }
                    if (this.bodyStatus[3]) {
                        this.append(t, "In turn, the viewers' reactions are shown to the victims in order to make them resent the rest of humanity.  ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "The humiliation is enhanced by the countless sex toys integrated into the body, capable of forcing out orgasms from the unwilling.  ");
                    }
                    else if (this.bodyStatus[5]) {
                        this.append(t, "In order to punish and deter any attempts to resist, various ");
                        if (this.tickleOn) {
                            this.append(t, "tickle ");
                        }
                        this.append(t, "torture implements are integrated into the body.  ");
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "Various specialized diagnostic devices are integrated into the body in order to show the viewers exactly how the victim's violation is progressing.  ");
                    }
                    this.append(t, "Your Commander ");
                }
            }
            else if (this.bodyStatus[19]) {
                this.append(t, "Your Commander is a regular-sized humanoid Demon whose only distinguishing feature is its abnormally large genitals, capable of delivering extra-potent seed into the bodies of the Chosen.  It ");
            }
            else if (this.bodyStatus[20]) {
                this.append(t, "Your Commander is a large, dome-shaped, hollow Demon which can engulf the Chosen, subjecting them to hypnotic patterns and sounds in order to manipulate their mental state.  It ");
            }
            else if (this.bodyStatus[21]) {
                this.append(t, "Your Commander is a chaotic mass of tentacles which absorb the psychic energy of anything they come into contact with, especially if the target isn't resisting.  It ");
            }
            else if (this.bodyStatus[22]) {
                this.append(t, "Your Commander is a mostly-transparent cloud which drifts across the battlefield until it comes into contact with a suitable host.  After flowing into its targets, it can merge with and influence the psychic energy within them.  Your Commander ");
            }
            else if (this.bodyStatus[18]) {
                if (this.bodyStatus[11]) {
                    if (this.bodyStatus[3]) {
                        this.append(t, "Your Commander is a huge, Sphinx-like Demon, a beast with a human face, which prowls about on all fours.  Capable of speaking to the Chosen, it taunts them in order to pollute their minds with hateful feelings so that their defenses weaken enough to let it fuck them with its foot-long flared penis.  It ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "Your Commander is a huge Demon which prowls about on all fours, its underside lined with tentacles that capture and stimulate the Chosen in order to prepare them to be fucked by its foot-long flared penis.  Your Commander ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "Your Commander is a huge Demon which prowls about on six legs, the middle pair ending in nimble claws meant for further stimulating and tormenting captured prey.  Slung under its body is a foot-long flared penis.  Your Commander ");
                        }
                        else {
                            this.append(t, "Your Commander is a huge Demon which prowls about on all fours.  Slung under its body is an enormous double penis, each shaft almost two feet long and covered in rough barbs which inflict as much pain as pleasure.  It ");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "Your Commander is a huge Demon made of transparent, clothes-dissolving slime.  It pounces on Chosen and then rapes them with a huge pseudopod, its see-through nature ensuring that spectators can see every humiliating detail.  Your Commander ");
                    }
                }
                else if (this.bodyStatus[12]) {
                    if (this.bodyStatus[3]) {
                        this.append(t, "Your Commander is a huge, shambling mass which uses long tentacles to pull its prey into an internal chamber full of hallucinogenic aphrodisiac and smaller pleasure-inducing tentacles.  The potent fluid allows you to form a psychic link with the captives' minds, inducing hateful thoughts in order to break their Sexual Barriers.  Your Commander ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "Your Commander is a huge, shambling mass which uses long tentacles to pull its prey into an internal chamber full of mind-breakingly powerful aphrodisiac and advanced pleasure-inducing tentacles.  It ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "Your Commander is a huge, shambling mass which uses long tentacles to pull its prey into an internal chamber full of aphrodisiac and smaller tentacles specialized to mercilessly tickle its victims even as it forces them to cum.  Your Commander ");
                        }
                        else {
                            this.append(t, "Your Commander is a huge, shambling mass which uses long tentacles to pull its prey into an internal chamber full of aphrodisiac and smaller tentacles shaped like various torture implements to induce mind-breaking pleasure and pain.  It ");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "Your Commander is a huge, shambling mass made of transparent slime.  It's capable of shaping itself into powerful pseudopods in order to capture and pull the Chosen inside, and its body contains substances that dissolve clothes and induce sexual pleasure.  Your Commander ");
                    }
                }
                else if (this.bodyStatus[13]) {
                    if (this.bodyStatus[3]) {
                        this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon covered in mouths that constantly gibber madness, conveying your hateful thoughts.  Their teeth inflict painful bites, and their tongues constantly writhe in search of orifices to violate.  Your Commander ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon with countless nimble arms that are capable of restraining your prey and inflicting various humiliations and tortures in addition to more pleasurable stimualations.  It ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon with countless arms and fine-pointed claws capable of precisely tickling every single vulnerable spot of its victims' bodies at once.  It ");
                        }
                        else {
                            this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon with several bestial arms equipped with razor-sharp claws capable of restraining your prey and inflicting various tortures and humiliations.  It ");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon with several extra muscular arms capable of restraining its prey and inflicting various tortures and humiliations.  It's aided in its task by the fact that its skin is coated in clothes-dissolving slime.  Your Commander ");
                    }
                }
                else if (this.bodyStatus[14]) {
                    if (this.bodyStatus[3]) {
                        this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles capable of hijacking communications infrastructure and using it to show unsuspecting people footage of how it torments its prey.  At the same time, it uses advanced technology to allow the audience to take part in the violation.  Your Commander ");
                    }
                    else if (this.bodyStatus[4]) {
                        this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles capable of hijacking communications infrastructure and using it to show unsuspecting people footage of how it torments its prey.  It's equipped with vibrators and other sex toys for maximum humiliation.  Your Commander ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles capable of hijacking communications infrastructure and using it to show unsuspecting people footage of how it torments its prey.  It's equipped with various tickle torture implements in order to emphasize its captives' helplessness.  Your Commander ");
                        }
                        else {
                            this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles capable of hijacking communications infrastructure and using it to show unsuspecting people footage of how it torments its prey.  It's equipped with weapons and torture implements in order to emphasize its captives' helplessness.  Your Commander ");
                        }
                    }
                    else {
                        this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles capable of hijacking communications infrastructure and using it to show unsuspecting people footage of how it torments its prey.  It's equipped with various clothes-destroying implements and high-quality cameras in order to prioritize exposing and humiliating its captives as efficiently as possible.  Your Commander ");
                    }
                }
            }
            else if (defiler) {
                if (this.bodyStatus[11]) {
                    this.append(t, "Your Commander is a huge Demon which prowls about on all fours with a foot-long flared penis slung under its massive body.  It ");
                }
                else if (this.bodyStatus[12]) {
                    this.append(t, "Your Commander is a huge, shambling mass which uses long tentacles to pull its prey into an internal chamber full of aphrodisiac and smaller pleasure-inducing tentacles.  It ");
                }
                else if (this.bodyStatus[13]) {
                    this.append(t, "Your Commander is a huge, vaguely-humanoid titan of a Demon with several extra muscular arms capable of restraining its prey and inflicting various tortures and humiliations.  It ");
                }
                else if (this.bodyStatus[14]) {
                    this.append(t, "Your Commander is a huge, biomechanical Demon with electrified tentacles capable of hijacking communications infrastructure and using it to show unsuspecting people footage of how it torments its prey.  It ");
                }
            }
            else if (suppressors == 0) {
                this.append(t, "Your Commander is a humanoid Demon whose only exceptional feature is its ability to act as a body for your incorporeal form.  It ");
            }
            else if (suppressors == 1) {
                if (this.bodyStatus[3]) {
                    this.append(t, "Your Commander is an oversized humanoid Demon covered with gaping mouths which allow you to speak your hateful will directly to the Chosen.  It ");
                }
                else if (this.bodyStatus[4]) {
                    this.append(t, "Your Commander is an oversized humanoid Demon covered with various tentacles which seek out the most sensitive places on captured Chosen and force pleasure upon them.  It ");
                }
                else if (this.bodyStatus[5]) {
                    if (this.tickleOn) {
                        this.append(t, "Your Commander is an oversized humanoid Demon with disproportionately large muscles which can pin the Chosen and hold them still enough to tickle them with brutal efficiency.  It ");
                    }
                    else {
                        this.append(t, "Your Commander is an oversized humanoid Demon with disproportionately large muscles which can deal grievous injuries even to the supernaturally-durable bodies of the Chosen.  It ");
                    }
                }
                else if (this.bodyStatus[6]) {
                    this.append(t, "Your Commander is an oversized humanoid Demon with various human tools embedded in its body for the purpose of exposing the Chosen.  It ");
                }
            }
            else if (suppressors == 2) {
                if (this.bodyStatus[3]) {
                    this.append(t, "Your Commander is a giant humanoid Demon whose body is covered in gaping mouths which allow you to speak your hateful will directly to the Chosen.  ");
                    if (this.bodyStatus[4]) {
                        this.append(t, "Their tongues function as tentacles, capable of working their way under the Chosen's clothes and stimulating their erogenous zones.  ");
                    }
                    else if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "They drip with saliva that acts as a powerful drug, weakening and confusing their victims.  ");
                        }
                        else {
                            this.append(t, "They're filled with razor-sharp teeth for chewing on their victims, injuring and further aggravating them.  ");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "They drip with acidic saliva, and while this substance lacks the potency to injure the Chosen themselves, it will dissolve and weaken their clothes.  ");
                    }
                }
                else if (this.bodyStatus[4]) {
                    this.append(t, "Your Commander is a giant humanoid Demon covered with various tentacles which seek out the most sensitive places on captured Chosen and force pleasure upon them.  ");
                    if (this.bodyStatus[5]) {
                        if (this.tickleOn) {
                            this.append(t, "They're filled with a specialized slime which acts as a powerful drug for weakening and confusing the Chosen.  ");
                        }
                        else {
                            this.append(t, "Some are small and nimble, but others are thick and incredibly strong, capable of punching through solid brick and twisting steel beams apart.  ");
                        }
                    }
                    else if (this.bodyStatus[6]) {
                        this.append(t, "They secrete an acidic fluid, and while this substance lacks the potency to injure the Chosen themselves, it will dissolve and weaken their clothes.  ");
                    }
                }
                else if (this.tickleOn) {
                    this.append(t, "Your Commander is a giant humanoid Demon with various human tools embedded in its body.  Some are specialized for clothes removal, while the others are used to deliver a potent cocktail of psychoactive drugs which can weaken and disorient even the Chosen.  ");
                }
                else {
                    this.append(t, "Your Commander is a giant humanoid Demon with various human tools embedded in its body.  These tools include tanks of acid, spinning saws, chains, guns, and even flamethrowers.  They have been magically reinforced to deal significant damage to both the Chosen and their clothes.  ");
                }
                this.append(t, "The Commander ");
            }
        }
        else {
            this.append(t, "Your Commander ");
        }
        if (this.bodyStatus[2]) {
            this.append(t, "will accompany your Demons ");
            if (c != null) {
                this.append(t, "on their attack against " + c.getMainName() + " ");
            }
            this.append(t, "and lie in wait, ");
        }
        else {
            this.append(t, "will lead your Demons into combat, ");
        }
        this.append(t, "allowing you to ambush ");
        if (c == null || this.bodyStatus[2]) {
            this.append(t, "your target and capture her");
        }
        else {
            this.append(t, String.valueOf(c.getMainName()) + " and capture " + c.himHer());
        }
        if (this.bodyStatus[25]) {
            reportedDuration += 6;
        }
        else if (this.bodyStatus[15]) {
            reportedDuration += 4;
        }
        else if (this.bodyStatus[9]) {
            reportedDuration += 3;
        }
        else if (this.bodyStatus[7]) {
            reportedDuration += 2;
        }
        else if (this.bodyStatus[1]) {
            ++reportedDuration;
        }
        if (reportedDuration == 2) {
            this.append(t, " for two rounds");
        }
        else if (reportedDuration == 3) {
            this.append(t, " for three rounds");
        }
        else if (reportedDuration == 4) {
            this.append(t, " for four rounds");
        }
        else if (reportedDuration == 5) {
            this.append(t, " for five rounds");
        }
        else if (reportedDuration == 6) {
            this.append(t, " for six rounds");
        }
        else if (reportedDuration == 8) {
            this.append(t, " for eight rounds");
        }
        if (this.bodyStatus[2]) {
            this.append(t, " once you give the order");
            if (this.bodyStatus[23]) {
                this.append(t, ", up to five times");
            }
            else if (this.bodyStatus[17]) {
                this.append(t, ", up to four times");
            }
            else if (this.bodyStatus[16]) {
                this.append(t, ", up to three times");
            }
            else if (this.bodyStatus[8]) {
                this.append(t, ", up to twice");
            }
            if (this.bodyStatus[24]) {
                this.append(t, ", even against a flying target");
            }
        }
        else {
            this.append(t, " at the start of battle");
            if (this.bodyStatus[23]) {
                this.append(t, ", and then four more times whenever you give the order");
            }
            else if (this.bodyStatus[17]) {
                this.append(t, ", and then three more times whenever you give the order");
            }
            else if (this.bodyStatus[16]) {
                this.append(t, ", and then two more times whenever you give the order");
            }
            else if (this.bodyStatus[8]) {
                this.append(t, ", and then one more time once you give the order");
            }
            if (this.bodyStatus[24]) {
                this.append(t, ", even against a flying target");
            }
        }
        if (c == null) {
            this.append(t, ".  It is worth " + this.getCommanderValue() + " Evil Energy.  You have " + this.evilEnergy + " Evil Energy remaining.");
        }
        else if (this.bodyStatus[26]) {
            int types = 2;
            final String[] damages = new String[4];
            if (this.bodyStatus[19]) {
                damages[0] = "HATE";
            }
            else if (this.bodyStatus[20]) {
                damages[0] = "PLEA";
            }
            else if (this.bodyStatus[21]) {
                if (this.tickle()) {
                    damages[0] = "ANTI";
                }
                else {
                    damages[0] = "INJU";
                }
            }
            else if (this.bodyStatus[22]) {
                damages[0] = "EXPO";
            }
            if (this.bodyStatus[11]) {
                damages[1] = "HATE";
                damages[2] = "PLEA";
            }
            else if (this.bodyStatus[12]) {
                damages[1] = "PLEA";
                if (this.tickle()) {
                    damages[2] = "ANTI";
                }
                else {
                    damages[2] = "INJU";
                }
            }
            else if (this.bodyStatus[13]) {
                if (this.tickleOn) {
                    damages[1] = "ANTI";
                }
                else {
                    damages[1] = "INJU";
                }
                damages[2] = "EXPO";
            }
            else if (this.bodyStatus[14]) {
                damages[1] = "EXPO";
                damages[2] = "HATE";
            }
            if (this.bodyStatus[3]) {
                damages[3] = "HATE";
            }
            else if (this.bodyStatus[4]) {
                damages[3] = "PLEA";
            }
            else if (this.bodyStatus[5]) {
                if (this.tickleOn) {
                    damages[3] = "ANTI";
                }
                else {
                    damages[3] = "INJU";
                }
            }
            else if (this.bodyStatus[6]) {
                damages[3] = "EXPO";
            }
            if (!damages[1].equals(damages[0]) && !damages[2].equals(damages[0])) {
                ++types;
            }
            if (!damages[3].equals(damages[0]) && !damages[3].equals(damages[1]) && !damages[3].equals(damages[2])) {
                ++types;
            }
            if (types == 2) {
                this.append(t, ", inflicting the highest possible levels of " + damages[0] + " and ");
                if (damages[0].equals(damages[1])) {
                    this.append(t, damages[2]);
                }
                else {
                    this.append(t, damages[1]);
                }
            }
            else if (types == 3) {
                this.append(t, ", inflicting excessive levels of " + damages[0] + ", ");
                if (damages[0].equals(damages[1])) {
                    this.append(t, String.valueOf(damages[3]) + ", and " + damages[2]);
                }
                else if (damages[0].equals(damages[2])) {
                    this.append(t, String.valueOf(damages[1]) + ", and " + damages[3]);
                }
                else if (damages[0].equals(damages[3]) || damages[1].equals(damages[3])) {
                    this.append(t, String.valueOf(damages[1]) + ", and " + damages[2]);
                }
                else {
                    this.append(t, String.valueOf(damages[2]) + ", and " + damages[1]);
                }
            }
            else {
                this.append(t, ", inflicting supreme levels of " + damages[0] + ", " + damages[1] + ", " + damages[3] + ", and " + damages[2]);
            }
            if (this.bodyStatus[11]) {
                this.append(t, ", causing tier-2 Morality Break when the target's HATE is at least 10k");
            }
            else if (this.bodyStatus[12]) {
                this.append(t, ", causing tier-2 Innocence Break when the target's PLEA is at least 10k");
            }
            else if (this.bodyStatus[13]) {
                this.append(t, ", causing tier-2 Confidence Break when the target's ");
                if (this.tickleOn) {
                    this.append(t, "ANTI");
                }
                else {
                    this.append(t, "INJU");
                }
                this.append(t, " is at least 10k");
            }
            else if (this.bodyStatus[14]) {
                this.append(t, ", causing tier-2 Dignity Break when the target's EXPO is at least 10k");
            }
            this.append(t, ", and causing Total ");
            if (this.bodyStatus[19]) {
                this.append(t, "Morality Break when the target's Impregnation");
            }
            else if (this.bodyStatus[20]) {
                this.append(t, "Innocence Break when the target's Hypnosis");
            }
            else if (this.bodyStatus[21]) {
                this.append(t, "Confidence Break when the target's Drain");
            }
            else if (this.bodyStatus[22]) {
                this.append(t, "Dignity Break when the target's Parasitism");
            }
            this.append(t, " effectiveness is high enough.");
        }
        else if (this.bodyStatus[19]) {
            this.append(t, ", inflicting extreme levels of HATE and FEAR, and causing Total Morality Break when the target's Impregnation effectiveness is high enough.");
        }
        else if (this.bodyStatus[20]) {
            this.append(t, ", inflicting extreme levels of PLEA and DISG, and causing Total Innocence Break when the target's Hypnosis effectiveness is high enough.");
        }
        else if (this.bodyStatus[21]) {
            this.append(t, ", inflicting extreme levels of ");
            if (this.tickleOn) {
                this.append(t, "ANTI and TICK");
            }
            else {
                this.append(t, "INJU and PAIN");
            }
            this.append(t, ", and causing Total Confidence Break when the target's Drain effectiveness is high enough.");
        }
        else if (this.bodyStatus[22]) {
            this.append(t, ", inflicting extreme levels of EXPO and SHAM, and causing Total Dignity Break when the target's Parasitism effectiveness is high enough.");
        }
        else if (this.bodyStatus[18]) {
            final String[] damages2 = new String[3];
            String breakType = "";
            if (this.bodyStatus[3]) {
                damages2[1] = "HATE";
            }
            else if (this.bodyStatus[4]) {
                damages2[1] = "PLEA";
            }
            else if (this.bodyStatus[5]) {
                if (this.tickleOn) {
                    damages2[1] = "ANTI";
                }
                else {
                    damages2[1] = "INJU";
                }
            }
            else if (this.bodyStatus[6]) {
                damages2[1] = "EXPO";
            }
            if (this.bodyStatus[11]) {
                damages2[0] = "HATE";
                damages2[2] = "PLEA";
                breakType = "Morality Break above 10k HATE";
            }
            else if (this.bodyStatus[12]) {
                damages2[0] = "PLEA";
                if (this.tickleOn) {
                    damages2[2] = "ANTI";
                }
                else {
                    damages2[2] = "INJU";
                }
                breakType = "Innocence Break above 10k PLEA";
            }
            else if (this.bodyStatus[13]) {
                if (this.tickleOn) {
                    damages2[0] = "ANTI";
                }
                else {
                    damages2[0] = "INJU";
                }
                damages2[2] = "EXPO";
                if (this.tickleOn) {
                    breakType = "Confidence Break above 10k ANTI";
                }
                else {
                    breakType = "Confidence Break above 10k INJU";
                }
            }
            else if (this.bodyStatus[14]) {
                damages2[0] = "EXPO";
                damages2[2] = "HATE";
                breakType = "Dignity Break above 10k EXPO";
            }
            if (damages2[0].equals(damages2[1])) {
                this.append(t, ", inflicting overwhelming levels of " + damages2[2] + ", even higher levels of " + damages2[0] + ", and potentially causing " + breakType + ".");
            }
            else if (damages2[2].equals(damages2[1])) {
                this.append(t, ", inflicting overwhelming levels of " + damages2[2] + " and " + damages2[0] + ", and potentially causing " + breakType + ".");
            }
            else {
                this.append(t, ", inflicting overwhelming levels of " + damages2[0] + ", " + damages2[1] + ", and " + damages2[2] + ", and potentially causing " + breakType + ".");
            }
        }
        else if (defiler) {
            if (this.bodyStatus[11]) {
                this.append(t, ", inflicting overwhelming levels of HATE and PLEA, and potentially causing Morality Break above 10k HATE.");
            }
            else if (this.bodyStatus[12]) {
                if (this.tickleOn) {
                    this.append(t, ", inflicting overwhelming levels of PLEA and ANTI, and potentially causing Innocence Break above 10k PLEA.");
                }
                else {
                    this.append(t, ", inflicting overwhelming levels of PLEA and INJU, and potentially causing Innocence Break above 10k PLEA.");
                }
            }
            else if (this.bodyStatus[13]) {
                if (this.tickleOn) {
                    this.append(t, ", inflicting overwhelming levels of ANTI and EXPO, and potentially causing Confidence Break above 10k ANTI.");
                }
                else {
                    this.append(t, ", inflicting overwhelming levels of INJU and EXPO, and potentially causing Confidence Break above 10k INJU.");
                }
            }
            else if (this.bodyStatus[14]) {
                this.append(t, ", inflicting overwhelming levels of EXPO and HATE, and potentially causing Dignity Break above 10k EXPO.");
            }
        }
        else if (suppressors == 0) {
            this.append(t, ", giving your Thralls a chance to torment " + c.himHer() + ".");
        }
        else {
            int place = 0;
            String[] damages = new String[2];
            if (suppressors == 2) {
                damages = new String[4];
            }
            if (this.bodyStatus[3]) {
                damages[place] = "FEAR";
                ++place;
                damages[place] = "HATE";
                ++place;
            }
            if (this.bodyStatus[4]) {
                damages[place] = "DISG";
                ++place;
                damages[place] = "PLEA";
                ++place;
            }
            if (this.bodyStatus[5]) {
                if (this.tickleOn) {
                    damages[place] = "TICK";
                    ++place;
                    damages[place] = "ANTI";
                    ++place;
                }
                else {
                    damages[place] = "PAIN";
                    ++place;
                    damages[place] = "INJU";
                    ++place;
                }
            }
            if (this.bodyStatus[6]) {
                damages[place] = "SHAM";
                ++place;
                damages[place] = "EXPO";
                ++place;
            }
            if (suppressors == 2) {
                this.append(t, ", inflicting high levels of " + damages[0] + ", " + damages[2] + ", " + damages[1] + ", and " + damages[3] + ".");
            }
            else {
                this.append(t, ", inflicting high levels of " + damages[0] + " and " + damages[1] + ".");
            }
        }
    }
    
    public void newCommander() {
        this.bodyStatus[0] = true;
        for (int i = 1; i < this.bodyStatus.length; ++i) {
            if (i != 2) {
                this.bodyStatus[i] = false;
            }
        }
    }
    
    public Boolean[] getBodyStatus() {
        return this.bodyStatus;
    }
    
    public int getEvilEnergy() {
        return this.evilEnergy;
    }
    
    public Tech[] getTechs() {
        return this.techs;
    }
    
    public int getDay() {
        return this.day;
    }
    
    public void setDay(final int newDay) {
        this.day = newDay;
    }
    
    public void printGroupTutorial(final JTextPane t) {
        this.append(t, this.groupTutorial);
        this.groupTutorial = "";
    }
    
    public void printShopTutorial(final JTextPane t) {
        this.append(t, this.shopTutorial);
        this.shopTutorial = "";
    }
    
    public void addEnergy(final int amount) {
        this.evilEnergy += amount;
    }
    
    public Boolean upgradedCommander() {
        if (!this.bodyStatus[3] && !this.bodyStatus[4] && !this.bodyStatus[5] && !this.bodyStatus[6] && !this.bodyStatus[11] && !this.bodyStatus[12] && !this.bodyStatus[13] && !this.bodyStatus[14] && !this.bodyStatus[19] && !this.bodyStatus[20] && !this.bodyStatus[21] && !this.bodyStatus[22] && this.usedForsaken == null) {
            return false;
        }
        return true;
    }
    
    public void newCombat(final WorldState w, final Chosen[] c) {
        this.evacNotice = false;
        this.currentCombatants = c;
        Project.changePortrait(c[0].convertGender(), c[0].type, false, false, this, this.nameCombatants(), 0, Project.Emotion.NEUTRAL, Project.Emotion.FOCUS);
        if (this.usedForsaken != null) {
            this.usedForsaken.injured = 0;
        }
        this.battleRound = 1;
        this.evacuationProgress = 0;
        this.evacuationComplete = 100;
        if (w.getTechs()[1].isOwned()) {
            this.evacuationComplete += 20;
        }
        if (w.getTechs()[4].isOwned()) {
            this.evacuationComplete += 20;
        }
        if (w.getTechs()[16].isOwned()) {
            this.evacuationComplete += 20;
        }
        if (w.getTechs()[28].isOwned()) {
            this.evacuationComplete += 40;
        }
        this.exterminationProgress = 0;
        this.exterminationComplete = 100;
        if (w.getTechs()[2].isOwned()) {
            this.exterminationComplete += 40;
        }
        if (w.getTechs()[5].isOwned()) {
            this.exterminationComplete += 60;
        }
        if (w.getTechs()[17].isOwned()) {
            this.exterminationComplete += 100;
        }
        if (w.getTechs()[29].isOwned()) {
            this.exterminationComplete += 200;
        }
        this.exterminationMultiplier = 100;
        this.captureDuration = 2;
        if (this.bodyStatus[25]) {
            this.captureDuration = 8;
        }
        else if (this.bodyStatus[15]) {
            this.captureDuration = 6;
        }
        else if (this.bodyStatus[9]) {
            this.captureDuration = 5;
        }
        else if (this.bodyStatus[7]) {
            this.captureDuration = 4;
        }
        else if (this.bodyStatus[1]) {
            this.captureDuration = 3;
        }
        else {
            this.captureDuration = 2;
        }
        this.capturesPossible = 0;
        if (this.bodyStatus[2] || this.upgradedCommander() || (this.techs[31].isOwned() && this.bodyStatus[0])) {
            ++this.capturesPossible;
        }
        if (this.bodyStatus[23]) {
            this.capturesPossible += 4;
        }
        else if (this.bodyStatus[17]) {
            this.capturesPossible += 3;
        }
        else if (this.bodyStatus[16]) {
            this.capturesPossible += 2;
        }
        else if (this.bodyStatus[8]) {
            ++this.capturesPossible;
        }
        this.nextCapture = null;
        this.nextSurround = null;
        this.barrierMulti = 10000L;
        this.rallyBonus = new int[3];
        this.distractBonus = new int[3];
        this.arrivalTimer = new int[3];
        for (int i = 0; i < 3; ++i) {
            this.arrivalTimer[i] = 600 - c[0].getDignity() * 2;
            if (w.getCast()[i] != null) {
                this.arrivalTimer[i] = this.getArrivalTime(c[0], this.getCast()[i]);
                w.getCast()[i].betraying = false;
            }
        }
        if (this.day == 50 - this.eventOffset * 3 || this.techs[48].isOwned()) {
            this.finalBattle = true;
            for (int i = 0; i < 3; ++i) {
                w.getCast()[i].initializeFinalBattle(this);
            }
        }
    }
    
    public int getArrivalTime(final Chosen target, final Chosen other) {
        int time = 600 - target.dignity * 2;
        time = time * (250 - other.confidence) / 200;
        final int analysis = this.getRelationship(target.number, other.number);
        if (analysis == 1) {
            time = time * 9 / 10;
        }
        else if (analysis == 2) {
            time = time * 6 / 7;
        }
        else if (analysis == 4) {
            time = time * 4 / 5;
        }
        else if (analysis == -2) {
            time = time * 7 / 6;
        }
        else if (analysis == -4) {
            time = time * 5 / 4;
        }
        return time;
    }
    
    public int[] getArrivalTimer() {
        return this.arrivalTimer;
    }
    
    public Chosen[] getCast() {
        return this.cast;
    }
    
    public void addChosen(final Chosen c) {
        if (this.cast[0] == null) {
            (this.cast[0] = c).setNumber(0);
        }
        else if (this.cast[1] == null) {
            (this.cast[1] = c).setNumber(1);
        }
        else if (this.cast[2] == null) {
            (this.cast[2] = c).setNumber(2);
        }
    }
    
    public void append(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.FOREGROUND);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.FOREGROUND, false);
    }
    
    public void purpleAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.PURPLE);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.PURPLE, false);
    }
    
    public void orangeAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.ORANGE);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.ORANGE, false);
    }
    
    public void grayAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, Color.GRAY);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, Color.GRAY, false);
    }
    
    public void underlineAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.FOREGROUND);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        StyleConstants.setUnderline(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.FOREGROUND, true);
    }
    
    public void redAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.RED);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.RED, false);
    }
    
    public void greenAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.GREEN);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.GREEN, false);
    }
    
    public void blueAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.BLUE);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.BLUE, false);
    }
    
    public void inverseAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.BACKGROUND);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBackground(keyWord, this.FOREGROUND);
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.FOREGROUND, false);
    }
    
    public void tierTwoAppend(final JTextPane t, final String s) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, this.BACKGROUND);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBackground(keyWord, this.RED);
        StyleConstants.setBold(keyWord, true);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
        this.save.addLine(s, this.FOREGROUND, false);
    }
    
    public void flexibleAppend(final JTextPane t, final String s, final Color usedColor, final Boolean underline) {
        final StyledDocument doc = t.getStyledDocument();
        final SimpleAttributeSet keyWord = new SimpleAttributeSet();
        StyleConstants.setFontSize(keyWord, this.textSize);
        StyleConstants.setForeground(keyWord, usedColor);
        StyleConstants.setFontFamily(keyWord, "DialogInput");
        StyleConstants.setBold(keyWord, true);
        StyleConstants.setUnderline(keyWord, underline);
        try {
            doc.insertString(doc.getLength(), s, keyWord);
        }
        catch (Exception e) {
            System.out.println(e);
        }
        t.setCaretPosition(t.getDocument().getLength());
    }
    
    public void copyInitial(final WorldState w) {
        this.loopChosen = w.loopChosen;
        this.day = 1;
        this.initializeTips();
        this.nameSeed = w.getNameSeed();
        this.genders = w.getGenders();
        for (int i = 0; i < this.techs.length; ++i) {
            (this.techs[i] = new Tech()).initialize(i, this);
            this.techs[i].assignTooltip(i, this);
        }
        for (int i = 0; i < this.bodyStatus.length; ++i) {
            this.bodyStatus[i] = false;
        }
        this.shopTutorial = "\n\nAs the Chosen are traumatized in battle, they give in to their own weakness and turn their backs on their duty.  As their trauma grows greater, so too do their transgressions.  And the greater their transgressions, the more powerful the Demons become!  Spend this Evil Energy to increase your abilities, and use those abilities to make the Chosen fall even further!";
        this.groupTutorial = "\n\nThere is weakness in numbers.  A rival can become an enemy, and a friend is just a burden.  The Chosen will grow closer as they're corrupted.  Turn those feelings to your own ends and use the Chosen against each other!";
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                this.friendship[i][j] = 0;
                this.friction[i][j] = 0;
                this.remaining[i][j] = 0;
            }
        }
        this.statSeed = w.getStatSeed();
        for (int i = 0; i < this.groupScenes.length; ++i) {
            this.groupScenes[i] = false;
        }
        this.setCustomStrings(w.getCustomStrings());
        this.setCustomBooleans(w.getCustomBooleans());
        this.recordedCommanders = w.getRecordedCommanders();
        this.commentary = w.getCommentary();
        this.actions = w.getActions();
    }
    
    public void tutorialInit() {
        this.nameSeed[0] = 0;
        this.nameSeed[1] = 0;
        this.nameSeed[2] = 2;
        this.nameSeed[3] = 2;
        this.nameSeed[4] = 4;
        this.nameSeed[5] = 4;
        for (int i = 0; i < this.techs.length; ++i) {
            (this.techs[i] = new Tech()).initialize(i, this);
            this.techs[i].assignTooltip(i, this);
        }
        this.techs[0].buy(this);
        this.techs[1].buy(this);
        this.techs[2].buy(this);
        this.techs[3].buy(this);
        this.techs[4].buy(this);
        this.techs[5].buy(this);
        this.techs[6].buy(this);
        this.techs[7].buy(this);
        this.techs[8].buy(this);
        this.techs[9].buy(this);
        this.techs[13].buy(this);
        for (int i = 0; i < this.bodyStatus.length; ++i) {
            this.bodyStatus[i] = false;
        }
        this.bodyStatus[0] = true;
        this.bodyStatus[1] = true;
        this.bodyStatus[2] = true;
        this.bodyStatus[6] = true;
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                this.friendship[i][j] = 0;
                this.friction[i][j] = 0;
                this.remaining[i][j] = 0;
            }
        }
        this.statSeed[0] = 75;
        this.statSeed[1] = 50;
        this.statSeed[2] = 25;
        this.statSeed[3] = 55;
        this.statSeed[4] = 25;
        this.statSeed[5] = 90;
        this.statSeed[6] = 50;
        this.statSeed[7] = 5;
        this.statSeed[8] = 45;
        this.statSeed[9] = 10;
        this.statSeed[10] = 75;
        this.statSeed[11] = 70;
        for (int i = 0; i < 3; ++i) {
            final Chosen c = new Chosen();
            c.generate(this);
            (this.cast[i] = c).setSomeAngst();
        }
        this.tutorial = true;
        this.onTrack = true;
    }
    
    public void initialize() {
        this.initializeTips();
        for (int i = 0; i < 6; ++i) {
            Boolean proceed = false;
            while (!proceed) {
                this.nameSeed[i] = (int)(Math.random() * 26.0);
                proceed = true;
                for (int j = 0; j < i; ++j) {
                    if (this.nameSeed[i] == this.nameSeed[j]) {
                        proceed = false;
                    }
                }
            }
        }
        for (int i = 0; i < this.techs.length; ++i) {
            (this.techs[i] = new Tech()).initialize(i, this);
            this.techs[i].assignTooltip(i, this);
        }
        for (int i = 0; i < this.bodyStatus.length; ++i) {
            this.bodyStatus[i] = false;
        }
        this.shopTutorial = "\n\nAs the Chosen are traumatized in battle, they give in to their own weakness and turn their backs on their duty.  As their trauma grows greater, so too do their transgressions.  And the greater their transgressions, the more powerful the Demons become!  Spend this Evil Energy to increase your abilities, and use those abilities to make the Chosen fall even further!";
        this.groupTutorial = "\n\nThere is weakness in numbers.  A rival can become an enemy, and a friend is just a burden.  The Chosen will grow closer as they're corrupted.  Turn those feelings to your own ends and use the Chosen against each other!";
        for (int i = 0; i < 3; ++i) {
            for (int k = 0; k < 3; ++k) {
                this.friendship[i][k] = 0;
                this.friction[i][k] = 0;
                this.remaining[i][k] = 0;
            }
        }
        if (this.campaign) {
            Boolean twoHigh = false;
            Boolean twoMid = false;
            Boolean twoLow = false;
            Boolean morHigh = false;
            Boolean morMid = false;
            Boolean morLow = false;
            Boolean innHigh = false;
            Boolean innMid = false;
            Boolean innLow = false;
            Boolean conHigh = false;
            Boolean conMid = false;
            Boolean conLow = false;
            Boolean digHigh = false;
            Boolean digMid = false;
            Boolean digLow = false;
            for (int l = 0; l < 3; ++l) {
                final Chosen[] candidates = new Chosen[this.returning.length + this.campaignCustom.length];
                Chosen[] valid = new Chosen[0];
                for (int m = 0; m < this.returning.length; ++m) {
                    candidates[m] = this.returning[m];
                }
                for (int m = 0; m < this.campaignCustom.length; ++m) {
                    candidates[m + this.returning.length] = this.campaignCustom[m];
                }
                for (int m = 0; m < candidates.length; ++m) {
                    Boolean compatible = true;
                    if (candidates[m].morality > 66 && morHigh) {
                        compatible = false;
                    }
                    if (candidates[m].morality > 33 && candidates[m].morality < 67 && morMid) {
                        compatible = false;
                    }
                    if (candidates[m].morality < 34 && morLow) {
                        compatible = false;
                    }
                    if (candidates[m].innocence > 66) {
                        if (innHigh) {
                            compatible = false;
                        }
                        if (candidates[m].morality > 66 && twoHigh) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].innocence > 33 && candidates[m].innocence < 67) {
                        if (innMid) {
                            compatible = false;
                        }
                        if (candidates[m].morality > 33 && candidates[m].morality < 67 && twoMid) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].innocence < 34) {
                        if (innLow) {
                            compatible = false;
                        }
                        if (candidates[m].morality < 34 && twoLow) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].confidence > 66) {
                        if (conHigh) {
                            compatible = false;
                        }
                        if ((candidates[m].morality > 66 || candidates[m].innocence > 66) && twoHigh) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].confidence > 33 && candidates[m].confidence < 67) {
                        if (conMid) {
                            compatible = false;
                        }
                        if (((candidates[m].morality > 33 && candidates[m].morality < 67) || (candidates[m].innocence > 33 && candidates[m].innocence < 67)) && twoMid) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].confidence < 34) {
                        if (conLow) {
                            compatible = false;
                        }
                        if ((candidates[m].morality < 34 || candidates[m].innocence < 34) && twoLow) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].dignity > 66) {
                        if (digHigh) {
                            compatible = false;
                        }
                        if ((candidates[m].morality > 66 || candidates[m].innocence > 66 || candidates[m].confidence > 66) && twoHigh) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].dignity > 33 && candidates[m].dignity < 67) {
                        if (digMid) {
                            compatible = false;
                        }
                        if (((candidates[m].morality > 33 && candidates[m].morality < 67) || (candidates[m].innocence > 33 && candidates[m].innocence < 67) || (candidates[m].confidence > 33 && candidates[m].confidence < 67)) && twoMid) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].dignity < 34) {
                        if (digLow) {
                            compatible = false;
                        }
                        if ((candidates[m].morality < 34 || candidates[m].innocence < 34 || candidates[m].confidence < 34) && twoLow) {
                            compatible = false;
                        }
                    }
                    if (candidates[m].type != this.types[2 - l] && (candidates[m].type != null || this.types[2 - l] != Chosen.Species.SUPERIOR)) {
                        compatible = false;
                    }
                    if (candidates[m].lastLoop > this.loops - 2 && m < this.returning.length) {
                        compatible = false;
                    }
                    if (compatible) {
                        final Chosen[] newValid = new Chosen[valid.length + 1];
                        for (int k2 = 0; k2 < valid.length; ++k2) {
                            newValid[k2] = valid[k2];
                        }
                        newValid[newValid.length - 1] = candidates[m];
                        valid = newValid;
                    }
                }
                if (valid.length > 0) {
                    final int picked = (int)(this.campaignRand.nextDouble() * valid.length);
                    this.loopChosen[l] = valid[picked];
                    int index = 0;
                    for (int j2 = 0; j2 < candidates.length; ++j2) {
                        if (candidates[j2].equals(valid[picked])) {
                            index = j2;
                        }
                    }
                    if (index < this.returning.length) {
                        final Chosen[] newReturning = new Chosen[this.returning.length - 1];
                        for (int j3 = 0; j3 < this.returning.length && newReturning.length > 0; ++j3) {
                            if (j3 < index) {
                                newReturning[j3] = this.returning[j3];
                            }
                            else if (j3 > index) {
                                newReturning[j3 - 1] = this.returning[j3];
                            }
                        }
                        this.returning = newReturning;
                    }
                    else {
                        final Chosen[] newCustom = new Chosen[this.campaignCustom.length - 1];
                        for (int j3 = 0; j3 < this.campaignCustom.length && newCustom.length > 0; ++j3) {
                            if (j3 < index - this.returning.length) {
                                newCustom[j3] = this.campaignCustom[j3];
                            }
                            else if (j3 > index - this.returning.length) {
                                newCustom[j3 - 1] = this.campaignCustom[j3];
                            }
                        }
                        this.campaignCustom = newCustom;
                    }
                }
                else {
                    Boolean compatible2 = false;
                    while (!compatible2) {
                        compatible2 = true;
                        final int[] stats = new int[4];
                        int highCount = 0;
                        int midCount = 0;
                        int lowCount = 0;
                        for (int j4 = 0; j4 < 4; ++j4) {
                            stats[j4] = (int)(this.campaignRand.nextDouble() * 101.0);
                            if (stats[j4] > 66) {
                                ++highCount;
                            }
                            else if (stats[j4] > 33) {
                                ++midCount;
                            }
                            else {
                                ++lowCount;
                            }
                        }
                        if (highCount == 0 || midCount == 0 || lowCount == 0) {
                            compatible2 = false;
                        }
                        if ((highCount == 2 && twoHigh) || (midCount == 2 && twoMid) || (lowCount == 2 && twoLow)) {
                            compatible2 = false;
                        }
                        if (stats[0] > 66) {
                            if (morHigh) {
                                compatible2 = false;
                            }
                        }
                        else if (stats[0] > 33) {
                            if (morMid) {
                                compatible2 = false;
                            }
                        }
                        else if (morLow) {
                            compatible2 = false;
                        }
                        if (stats[1] > 66) {
                            if (innHigh) {
                                compatible2 = false;
                            }
                        }
                        else if (stats[1] > 33) {
                            if (innMid) {
                                compatible2 = false;
                            }
                        }
                        else if (innLow) {
                            compatible2 = false;
                        }
                        if (stats[2] > 66) {
                            if (conHigh) {
                                compatible2 = false;
                            }
                        }
                        else if (stats[2] > 33) {
                            if (conMid) {
                                compatible2 = false;
                            }
                        }
                        else if (conLow) {
                            compatible2 = false;
                        }
                        if (stats[3] > 66) {
                            if (digHigh) {
                                compatible2 = false;
                            }
                        }
                        else if (stats[3] > 33) {
                            if (digMid) {
                                compatible2 = false;
                            }
                        }
                        else if (digLow) {
                            compatible2 = false;
                        }
                        if (l == 1) {
                            if (this.determineVVirg(stats[0], stats[1], stats[2], stats[3]) && this.determineCVirg(stats[0], stats[1], stats[2], stats[3]) && this.determineAVirg(stats[0], stats[1], stats[2], stats[3]) && this.determineModest(stats[0], stats[1], stats[2], stats[3])) {
                                if (this.loopChosen[0].vVirg && this.loopChosen[0].cVirg && this.loopChosen[0].aVirg && this.loopChosen[0].modest) {
                                    compatible2 = false;
                                }
                            }
                            else if (!this.loopChosen[0].vVirg || !this.loopChosen[0].cVirg || !this.loopChosen[0].aVirg || !this.loopChosen[0].modest) {
                                compatible2 = false;
                            }
                        }
                        if (compatible2) {
                            final Chosen c = new Chosen();
                            c.world = this;
                            c.type = this.types[2 - l];
                            int femaleQuota = this.getGenderBalance()[1];
                            int maleQuota = this.getGenderBalance()[2];
                            int futaQuota = this.getGenderBalance()[3];
                            if (this.getGenderBalance()[0] == 0) {
                                for (int j5 = 0; j5 < l; ++j5) {
                                    if (this.loopChosen[j5] != null) {
                                        if (this.loopChosen[j5].gender.equals("female")) {
                                            --femaleQuota;
                                        }
                                        if (this.loopChosen[j5].gender.equals("male")) {
                                            --maleQuota;
                                        }
                                        if (this.loopChosen[j5].gender.equals("futanari")) {
                                            --futaQuota;
                                        }
                                    }
                                }
                            }
                            if (femaleQuota < 0) {
                                femaleQuota = 0;
                            }
                            if (maleQuota < 0) {
                                maleQuota = 0;
                            }
                            if (futaQuota < 0) {
                                futaQuota = 0;
                            }
                            if (femaleQuota + futaQuota + maleQuota > 0) {
                                final int choice = (int)(Math.random() * (femaleQuota + futaQuota + maleQuota));
                                if (choice < femaleQuota) {
                                    c.gender = "female";
                                }
                                else if (choice < femaleQuota + maleQuota) {
                                    c.gender = "male";
                                }
                                else {
                                    c.gender = "futanari";
                                }
                            }
                            else {
                                c.gender = "female";
                            }
                            c.originalGender = c.gender;
                            Boolean uniqueName = false;
                            while (!uniqueName) {
                                uniqueName = true;
                                final Chosen chosen = c;
                                final int[] seed = new int[6];
                                seed[0] = (int)(Math.random() * 26.0);
                                seed[1] = (int)(Math.random() * 26.0);
                                final String[] names = chosen.genName(this, seed);
                                for (int j6 = 0; j6 < l; ++j6) {
                                    if (this.loopChosen[j6].givenName.equals(names[1]) || this.loopChosen[j6].familyName.equals(names[0])) {
                                        uniqueName = false;
                                    }
                                }
                                if (uniqueName) {
                                    c.givenName = names[1];
                                    c.familyName = names[0];
                                }
                            }
                            c.morality = stats[0];
                            c.innocence = stats[1];
                            c.confidence = stats[2];
                            c.dignity = stats[3];
                            if (c.morality > 66) {
                                c.textColor = new Color(0, 0, 230);
                                c.darkColor = new Color(100, 100, 255);
                            }
                            else if (c.morality > 33) {
                                c.textColor = new Color(0, 110, 0);
                                c.darkColor = new Color(70, 170, 70);
                            }
                            else {
                                c.textColor = new Color(180, 0, 0);
                                c.darkColor = new Color(220, 90, 90);
                            }
                            if (!this.determineVVirg(stats[0], stats[1], stats[2], stats[3])) {
                                c.vVirg = false;
                                c.vStart = false;
                                c.ruthless = true;
                                c.vTaker = 0;
                            }
                            if (!this.determineCVirg(stats[0], stats[1], stats[2], stats[3])) {
                                c.cVirg = false;
                                c.cStart = false;
                                c.lustful = true;
                                c.cTaker = 0;
                            }
                            if (!this.determineAVirg(stats[0], stats[1], stats[2], stats[3])) {
                                c.aVirg = false;
                                c.aStart = false;
                                c.meek = true;
                                c.aTaker = 0;
                            }
                            if (!this.determineModest(stats[0], stats[1], stats[2], stats[3])) {
                                c.modest = false;
                                c.mStart = false;
                                c.debased = true;
                                c.mTaker = 0;
                            }
                            c.incantation = c.genIncantation(stats[0], stats[3]);
                            c.adjectiveName = c.genAdjectiveName(stats[1], stats[2]);
                            c.nounName = c.genNounName(stats[0], stats[1]);
                            c.mainName = c.genMainName(stats[0], stats[1], stats[2], stats[3]);
                            final String[] cosmetics = this.pickCosmetics(stats[0], stats[1], stats[2], stats[3]);
                            c.topCover = cosmetics[0];
                            c.topAccess = cosmetics[1];
                            c.bottomCover = cosmetics[2];
                            c.bottomAccess = cosmetics[3];
                            c.feetType = cosmetics[9];
                            c.underType = cosmetics[4];
                            c.color = cosmetics[5];
                            c.accessory = cosmetics[6];
                            c.weapon = cosmetics[7];
                            c.customWeaponType = cosmetics[8];
                            if (c.morality > 66) {
                                c.bonusHATE = true;
                            }
                            if (c.innocence > 66) {
                                c.bonusPLEA = true;
                            }
                            if (c.confidence > 66) {
                                c.bonusINJU = true;
                            }
                            if (c.dignity > 66) {
                                c.bonusEXPO = true;
                            }
                            this.loopChosen[l] = c;
                        }
                    }
                }
                if (this.loopChosen[l].morality > 66) {
                    morHigh = true;
                }
                else if (this.loopChosen[l].morality > 33) {
                    morMid = true;
                }
                else {
                    morLow = true;
                }
                if (this.loopChosen[l].innocence > 66) {
                    innHigh = true;
                    if (this.loopChosen[l].morality > 66) {
                        twoHigh = true;
                    }
                }
                else if (this.loopChosen[l].innocence > 33) {
                    innMid = true;
                    if (this.loopChosen[l].morality > 33 && this.loopChosen[l].morality < 67) {
                        twoMid = true;
                    }
                }
                else {
                    innLow = true;
                    if (this.loopChosen[l].morality < 34) {
                        twoLow = true;
                    }
                }
                if (this.loopChosen[l].confidence > 66) {
                    conHigh = true;
                    if (this.loopChosen[l].morality > 66 || this.loopChosen[l].innocence > 66) {
                        twoHigh = true;
                    }
                }
                else if (this.loopChosen[l].confidence > 33) {
                    conMid = true;
                    if ((this.loopChosen[l].morality > 33 && this.loopChosen[l].morality < 67) || (this.loopChosen[l].innocence > 33 && this.loopChosen[l].innocence < 67)) {
                        twoMid = true;
                    }
                }
                else {
                    conLow = true;
                    if (this.loopChosen[l].morality < 34 || this.loopChosen[l].innocence < 34) {
                        twoLow = true;
                    }
                }
                if (this.loopChosen[l].dignity > 66) {
                    digHigh = true;
                    if (this.loopChosen[l].morality > 66 || this.loopChosen[l].innocence > 66 || this.loopChosen[l].confidence > 66) {
                        twoHigh = true;
                    }
                }
                else if (this.loopChosen[l].dignity > 33) {
                    digMid = true;
                    if ((this.loopChosen[l].morality > 33 && this.loopChosen[l].morality < 67) || (this.loopChosen[l].innocence > 33 && this.loopChosen[l].innocence < 67) || (this.loopChosen[l].confidence > 33 && this.loopChosen[l].confidence < 67)) {
                        twoMid = true;
                    }
                }
                else {
                    digLow = true;
                    if (this.loopChosen[l].morality < 34 || this.loopChosen[l].innocence < 34 || this.loopChosen[l].confidence < 34) {
                        twoLow = true;
                    }
                }
            }
            final Chosen storage = this.loopChosen[0];
            this.loopChosen[0] = this.loopChosen[2];
            this.loopChosen[2] = storage;
            for (int i2 = 0; i2 < 3; ++i2) {
                this.genders[i2] = this.loopChosen[i2].gender;
            }
        }
        else {
            for (Boolean goodStats = false; !goodStats; goodStats = false) {
                goodStats = true;
                for (int i3 = 0; i3 < this.statSeed.length; ++i3) {
                    if (this.campaign) {
                        this.statSeed[i3] = (int)(this.campaignRand.nextDouble() * 101.0);
                    }
                    else {
                        this.statSeed[i3] = (int)(Math.random() * 101.0);
                    }
                }
                if (!this.legalSpread(this.statSeed, false)) {
                    goodStats = false;
                }
                Boolean pureTarget = false;
                Boolean corruptTarget = false;
                for (int i4 = 0; i4 < 3; ++i4) {
                    if (this.determinePurity(this.statSeed[i4 * 4], this.statSeed[1 + i4 * 4], this.statSeed[2 + i4 * 4], this.statSeed[3 + i4 * 4])) {
                        pureTarget = true;
                    }
                    else {
                        corruptTarget = true;
                    }
                }
                if (!pureTarget || !corruptTarget) {}
            }
        }
        for (int i = 0; i < this.groupScenes.length; ++i) {
            this.groupScenes[i] = false;
        }
        this.vignetteSeen = new Boolean[15];
        for (int i = 0; i < 15; ++i) {
            this.vignetteSeen[i] = false;
        }
    }
    
    public Boolean legalSpread(final int[] statSeed, final Boolean customized) {
        Boolean goodStats = true;
        for (int i = 0; i < 4; ++i) {
            int first = statSeed[i] / 33 + ((statSeed[i] % 33 != 0) ? 1 : 0);
            if (first < 1) {
                first = 1;
            }
            else if (first > 3) {
                first = 3;
            }
            int second = statSeed[i + 4] / 33 + ((statSeed[i + 4] % 33 != 0) ? 1 : 0);
            if (second < 1) {
                second = 1;
            }
            else if (second > 3) {
                second = 3;
            }
            int third = statSeed[i + 8] / 33 + ((statSeed[i + 8] % 33 != 0) ? 1 : 0);
            if (third < 1) {
                third = 1;
            }
            else if (third > 3) {
                third = 3;
            }
            if (first == second || first == third || second == third) {
                goodStats = false;
            }
        }
        for (int i = 0; i < 4 && !customized; ++i) {
            int first = statSeed[i] / 25 + ((statSeed[i] % 25 != 0) ? 1 : 0);
            if (first < 1) {
                first = 1;
            }
            int second = statSeed[i + 4] / 25 + ((statSeed[i + 4] % 25 != 0) ? 1 : 0);
            if (second < 1) {
                second = 1;
            }
            int third = statSeed[i + 8] / 25 + ((statSeed[i + 8] % 25 != 0) ? 1 : 0);
            if (third < 1) {
                third = 1;
            }
            if (first == second || first == third || second == third) {
                goodStats = false;
            }
        }
        Boolean extremeLow = false;
        Boolean extremeHigh = false;
        Boolean midValue = false;
        for (int j = 0; j < 4; ++j) {
            if (statSeed[j] > 66) {
                extremeHigh = true;
            }
            else if (statSeed[j] < 34) {
                extremeLow = true;
            }
            else {
                midValue = true;
            }
        }
        if (!extremeLow || !extremeHigh || !midValue) {
            goodStats = false;
        }
        extremeLow = false;
        extremeHigh = false;
        midValue = false;
        for (int j = 4; j < 8; ++j) {
            if (statSeed[j] > 66) {
                extremeHigh = true;
            }
            else if (statSeed[j] < 34) {
                extremeLow = true;
            }
            else {
                midValue = true;
            }
        }
        if (!extremeLow || !extremeHigh || !midValue) {
            goodStats = false;
        }
        extremeLow = false;
        extremeHigh = false;
        midValue = false;
        for (int j = 8; j < 12; ++j) {
            if (statSeed[j] > 66) {
                extremeHigh = true;
            }
            else if (statSeed[j] < 34) {
                extremeLow = true;
            }
            else {
                midValue = true;
            }
        }
        if (!extremeLow || !extremeHigh || !midValue) {
            goodStats = false;
        }
        return goodStats;
    }
    
    public Boolean determineVVirg(final int morality, final int innocence, final int confidence, final int dignity) {
        if (morality + confidence - innocence - 20 < 0 && morality < 34) {
            return false;
        }
        return true;
    }
    
    public Boolean determineCVirg(final int morality, final int innocence, final int confidence, final int dignity) {
        if (innocence + dignity - morality - 20 < 0 && innocence < 34) {
            return false;
        }
        return true;
    }
    
    public Boolean determineAVirg(final int morality, final int innocence, final int confidence, final int dignity) {
        if (confidence + innocence - dignity - 20 < 0 && confidence < 34) {
            return false;
        }
        return true;
    }
    
    public Boolean determineModest(final int morality, final int innocence, final int confidence, final int dignity) {
        if (morality + dignity - confidence - 20 < 0 && dignity < 34) {
            return false;
        }
        return true;
    }
    
    public Boolean determinePurity(final int morality, final int innocence, final int confidence, final int dignity) {
        if (this.determineVVirg(morality, innocence, confidence, dignity) && this.determineCVirg(morality, innocence, confidence, dignity) && this.determineAVirg(morality, innocence, confidence, dignity) && this.determineModest(morality, innocence, confidence, dignity)) {
            return true;
        }
        return false;
    }
    
    public int[] getNameSeed() {
        return this.nameSeed;
    }
    
    public int[] getStatSeed() {
        return this.statSeed;
    }
    
    public Chosen[] getCombatants() {
        return this.currentCombatants;
    }
    
    public boolean incrementThreatened() {
        return this.totalThreatened++ == 0;
    }
    
    public boolean incrementSlimed() {
        return this.totalSlimed++ == 0;
    }
    
    public boolean incrementAttacked() {
        return this.totalAttacked++ == 0;
    }
    
    public boolean incrementTaunted() {
        return this.totalTaunted++ == 0;
    }
    
    public boolean evacComplete() {
        return this.evacuationProgress >= this.evacuationComplete;
    }
    
    public String getEvacStatus(final Boolean bar) {
        final int percentage = this.evacuationProgress * 100 / this.evacuationComplete;
        String result = String.valueOf(this.evacuationProgress) + "/" + this.evacuationComplete + " (" + percentage + "%)";
        if (bar) {
            for (int charCount = result.length(); charCount < 17; ++charCount, result = String.valueOf(result) + " ") {}
            result = String.valueOf(result) + "[";
            final int base = 20;
            int possible = 0;
            for (int i = 0; i < 3; ++i) {
                if (this.getCombatants()[i] != null && !this.currentCombatants[i].isSurrounded() && !this.currentCombatants[i].isCaptured()) {
                    possible += this.currentCombatants[i].FEARMulti() / 12;
                }
            }
            for (int i = 1; i < 21; ++i) {
                if (this.evacuationProgress * 20 >= this.evacuationComplete * i) {
                    result = String.valueOf(result) + "#";
                }
                else if ((this.evacuationProgress + base) * 20 >= this.evacuationComplete * i) {
                    result = String.valueOf(result) + "=";
                }
                else if ((this.evacuationProgress + base + possible) * 20 >= this.evacuationComplete * i) {
                    result = String.valueOf(result) + "-";
                }
                else {
                    result = String.valueOf(result) + " ";
                }
            }
            result = String.valueOf(result) + "]";
        }
        return result;
    }
    
    public String getExterminationStatus(final Boolean bar) {
        final int percentage = this.exterminationProgress * 100 / this.exterminationComplete;
        String result = String.valueOf(this.exterminationProgress) + "/" + this.exterminationComplete + " (" + percentage + "%)";
        if (bar) {
            for (int charCount = result.length(); charCount < 14; ++charCount, result = String.valueOf(result) + " ") {}
            result = String.valueOf(result) + "[";
            int base = 0;
            int possible = 0;
            for (int i = 0; i < 3; ++i) {
                if (this.getCombatants()[i] != null) {
                    if (!this.currentCombatants[i].isSurrounded() && !this.currentCombatants[i].isCaptured()) {
                        Boolean contribute = true;
                        if (this.finalBattle && (!this.currentCombatants[i].alive || this.currentCombatants[i].resolve <= 0)) {
                            contribute = false;
                        }
                        if (contribute) {
                            base += this.exterminationPerChosen * this.exterminationMultiplier / 100;
                            possible += this.currentCombatants[i].FEARMulti() / 12;
                        }
                    }
                    else if (this.currentCombatants[i].getSurroundDuration() == 1 || (this.currentCombatants[i].isCaptured() && (this.currentCombatants[i].getCaptureProgression() == this.captureDuration || (this.currentCombatants[i].timesDetonated() > 0 && this.currentCombatants[i].getCaptureProgression() + this.currentCombatants[i].getINJULevel() + 1 >= this.captureDuration)))) {
                        base += this.exterminationPerChosen * this.exterminationMultiplier / 100;
                    }
                }
            }
            for (int i = 1; i < 21; ++i) {
                if (this.exterminationProgress * 20 >= this.exterminationComplete * i) {
                    result = String.valueOf(result) + "#";
                }
                else if ((this.exterminationProgress + base) * 20 >= this.exterminationComplete * i) {
                    result = String.valueOf(result) + "=";
                }
                else if ((this.exterminationProgress + base + possible) * 20 >= this.exterminationComplete * i) {
                    result = String.valueOf(result) + "-";
                }
                else {
                    result = String.valueOf(result) + " ";
                }
            }
            result = String.valueOf(result) + "]";
        }
        return result;
    }
    
    public void setRallyBonus(final int amount, final int initiative) {
        this.rallyBonus[initiative] = amount;
    }
    
    public int getRallyBonus() {
        return this.rallyBonus[0] + this.rallyBonus[1] + this.rallyBonus[2];
    }
    
    public void setDistractBonus(final long amount, final int initiative) {
        this.distractBonus[initiative] = (int)amount;
    }
    
    public int getDistractBonus() {
        int total = this.distractBonus[0] + this.distractBonus[1] + this.distractBonus[2];
        if (total > 250) {
            total = 250;
        }
        return total;
    }
    
    public void clearBonus(final int index) {
        this.rallyBonus[index] = 0;
        this.distractBonus[index] = 0;
    }
    
    public boolean progressEvacuation(final int amount) {
        this.evacuationProgress += amount;
        if (this.evacuationProgress < this.evacuationComplete) {
            return false;
        }
        this.evacuationProgress = this.evacuationComplete;
        return true;
    }
    
    public boolean progressExtermination(final int amount) {
        this.exterminationProgress += amount;
        if (this.exterminationProgress < this.exterminationComplete) {
            return false;
        }
        this.exterminationProgress = this.exterminationComplete;
        return true;
    }
    
    public boolean endTurn(final JTextPane t) {
        ++this.battleRound;
        ++this.totalRounds;
        if (this.usedForsaken != null && this.usedForsaken.injured > 0) {
            final Forsaken usedForsaken = this.usedForsaken;
            --usedForsaken.injured;
        }
        if (this.evacuationProgress < this.evacuationComplete && this.progressEvacuation(this.evacuationPerTurn)) {
            this.evacNotice = true;
        }
        Boolean haltEnding = false;
        Chosen trappedChosen = null;
        for (int i = 0; i < 3; ++i) {
            if (this.getCombatants()[i] != null) {
                this.getCombatants()[i].updateSurround();
                if (!this.getCombatants()[i].isSurrounded() && !this.getCombatants()[i].isCaptured()) {
                    Boolean contribute = true;
                    if (this.finalBattle && (!this.getCombatants()[i].alive || this.getCombatants()[i].resolve <= 0)) {
                        contribute = false;
                    }
                    if (contribute) {
                        this.progressExtermination(this.exterminationPerChosen * this.exterminationMultiplier / 100);
                    }
                }
                else {
                    haltEnding = true;
                    trappedChosen = this.getCombatants()[i];
                }
            }
        }
        if ((this.exterminationProgress < this.exterminationComplete || haltEnding) && this.getTechs()[18].isOwned()) {
            this.readyToEnd = false;
        }
        if ((this.exterminationProgress < this.exterminationComplete || haltEnding || (this.getTechs()[18].isOwned() && !this.readyToEnd)) && this.exterminationProgress >= 0) {
            if (this.evacuationProgress >= this.evacuationComplete) {
                Chosen c = null;
                Boolean allGrabbed = true;
                if (this.getCombatants()[0] != null) {
                    if (this.getCombatants()[0].isSurrounded() || this.getCombatants()[0].isCaptured() || (this.finalBattle && (!this.getCombatants()[0].alive || this.getCombatants()[0].resolve <= 0))) {
                        if (this.getCombatants()[1] != null) {
                            if (this.getCombatants()[1].isSurrounded() || this.getCombatants()[1].isCaptured() || (this.finalBattle && (!this.getCombatants()[1].alive || this.getCombatants()[1].resolve <= 0))) {
                                if (this.getCombatants()[2] != null && !this.getCombatants()[2].isSurrounded() && !this.getCombatants()[2].isCaptured() && (!this.finalBattle || (this.getCombatants()[2].alive && this.getCombatants()[2].resolve > 0))) {
                                    allGrabbed = false;
                                }
                            }
                            else {
                                allGrabbed = false;
                            }
                        }
                    }
                    else {
                        allGrabbed = false;
                    }
                }
                if (allGrabbed) {
                    if (this.exterminationProgress < this.exterminationComplete) {
                        this.exterminationMultiplier = this.exterminationMultiplier * 3 / 2;
                    }
                }
                else if (this.exterminationProgress >= this.exterminationComplete) {
                    Boolean allFree = true;
                    if (this.getCombatants()[0].isSurrounded() || this.getCombatants()[0].isCaptured()) {
                        allFree = false;
                    }
                    else if (this.getCombatants()[1] != null) {
                        if (this.getCombatants()[1].isSurrounded() || this.getCombatants()[1].isCaptured()) {
                            allFree = false;
                        }
                        else if (this.getCombatants()[2] != null && (this.getCombatants()[2].isSurrounded() || this.getCombatants()[2].isCaptured())) {
                            allFree = false;
                        }
                    }
                    if (allFree) {
                        this.readyToEnd = true;
                        int defeated = 0;
                        Chosen survivor = null;
                        for (int j = 0; j < 3; ++j) {
                            if (this.finalBattle) {
                                if (!this.getCast()[j].alive || this.getCast()[j].resolve <= 0) {
                                    ++defeated;
                                }
                                else {
                                    survivor = this.getCast()[j];
                                }
                            }
                        }
                    }
                    else if (this.finalBattle) {
                        Chosen killer1 = null;
                        Chosen killer2 = null;
                        Chosen victim1 = null;
                        Chosen victim2 = null;
                        for (int k = 0; k < 3; ++k) {
                            if (this.getCast()[k].isSurrounded() || this.getCast()[k].isCaptured()) {
                                if (victim1 == null) {
                                    victim1 = this.getCast()[k];
                                }
                                else {
                                    victim2 = this.getCast()[k];
                                }
                            }
                            else if (this.getCast()[k].alive && this.getCast()[k].resolve > 0) {
                                if (killer1 == null) {
                                    killer1 = this.getCast()[k];
                                }
                                else {
                                    killer2 = this.getCast()[k];
                                }
                            }
                        }
                        int duration1 = 0;
                        if (victim1.isSurrounded()) {
                            duration1 = victim1.getSurroundDuration();
                        }
                        else {
                            duration1 = this.captureDuration - victim1.captureProgression;
                            if (victim1.timesDetonated() > 0) {
                                duration1 -= victim1.getINJULevel();
                            }
                        }
                        int duration2 = 0;
                        if (victim2 != null) {
                            if (victim2.isSurrounded()) {
                                duration2 = victim2.getSurroundDuration();
                            }
                            else {
                                duration2 = this.captureDuration - victim1.captureProgression;
                                if (victim2.timesDetonated() > 0) {
                                    duration2 -= victim2.getINJULevel();
                                }
                            }
                        }
                        if (duration1 >= 2 || duration2 >= 2) {
                            if (victim2 != null && duration2 < 2) {
                                victim2 = null;
                            }
                            if (victim2 != null && duration1 < 2) {
                                victim1 = victim2;
                                duration1 = duration2;
                                victim2 = null;
                            }
                            this.readyToEnd = true;
                            if (victim2 != null) {
                                if (this.getRelationship(killer1.getNumber(), victim1.getNumber()) == -4 || victim1.isImpregnated() || victim1.isHypnotized() || victim1.isDrained() || victim1.isParasitized() || victim1.temptReq < 100000L || victim1.resolve < 50) {
                                    if (this.getRelationship(killer1.getNumber(), victim2.getNumber()) == -4 || victim2.isImpregnated() || victim2.isHypnotized() || victim2.isDrained() || victim2.isParasitized() || victim2.temptReq < 100000L || victim2.resolve < 50) {
                                        if (this.getTechs()[40].isOwned() && !killer1.hesitated && (this.getRelationship(killer1.getNumber(), victim1.getNumber()) == 4 || this.getRelationship(killer1.getNumber(), victim2.getNumber()) == 4) && this.getRelationship(killer1.getNumber(), victim1.getNumber()) == 4) {
                                            this.getRelationship(killer1.getNumber(), victim2.getNumber());
                                        }
                                    }
                                    else if (duration2 > duration1) {
                                        this.readyToEnd = false;
                                    }
                                    else if (this.getTechs()[40].isOwned() && !killer1.hesitated) {
                                        this.getRelationship(killer1.getNumber(), victim1.getNumber());
                                    }
                                }
                                else if (this.getRelationship(killer1.getNumber(), victim2.getNumber()) == -4 || victim2.isImpregnated() || victim2.isHypnotized() || victim2.isDrained() || victim2.isParasitized() || victim2.temptReq < 100000L || victim2.resolve < 50) {
                                    if (duration1 > duration2) {
                                        this.readyToEnd = false;
                                    }
                                    else if (this.getTechs()[40].isOwned() && !killer1.hesitated) {
                                        this.getRelationship(killer1.getNumber(), victim2.getNumber());
                                    }
                                }
                                else {
                                    this.readyToEnd = false;
                                }
                            }
                            else if (killer2 != null) {
                                if (victim1.isImpregnated() || victim1.isHypnotized() || victim1.isDrained() || victim1.isParasitized() || victim1.temptReq < 100000L || victim1.resolve < 50) {
                                    if (this.getTechs()[40].isOwned()) {
                                        if (this.getRelationship(killer1.getNumber(), victim1.getNumber()) == 4 && !killer1.hesitated) {
                                            if (this.getRelationship(killer2.getNumber(), victim1.getNumber()) == 4) {
                                                killer2.hesitated;
                                            }
                                        }
                                        else if (this.getRelationship(killer2.getNumber(), victim1.getNumber()) == 4) {
                                            killer2.hesitated;
                                        }
                                    }
                                }
                                else if (this.getRelationship(killer1.getNumber(), victim1.getNumber()) == -4) {
                                    this.getRelationship(killer2.getNumber(), victim1.getNumber());
                                }
                                else if (this.getRelationship(killer2.getNumber(), victim1.getNumber()) != -4) {
                                    this.readyToEnd = false;
                                }
                            }
                            else if (this.getRelationship(killer1.getNumber(), victim1.getNumber()) == -4 || victim1.isImpregnated() || victim1.isHypnotized() || victim1.isDrained() || victim1.isParasitized() || victim1.temptReq < 100000L || victim1.resolve < 50) {
                                if (this.getTechs()[40].isOwned() && !killer1.hesitated) {
                                    this.getRelationship(killer1.getNumber(), victim1.getNumber());
                                }
                            }
                            else {
                                this.readyToEnd = false;
                            }
                        }
                    }
                    else {
                        while (c == null) {
                            c = this.getCombatants()[(int)(Math.random() * 3.0)];
                            if (c != null && (c.isSurrounded() || c.isCaptured())) {
                                c = null;
                            }
                        }
                    }
                    if (this.exterminationProgress < this.exterminationComplete) {
                        this.exterminationMultiplier = this.exterminationMultiplier * 3 / 2;
                    }
                }
                else {
                    while (c == null) {
                        c = this.getCombatants()[(int)(Math.random() * 3.0)];
                        if (c != null && (c.isSurrounded() || c.isCaptured())) {
                            c = null;
                        }
                    }
                    Boolean plural = false;
                    if (this.getCombatants()[1] != null) {
                        plural = true;
                    }
                    if (this.exterminationMultiplier == 100) {
                        plural;
                    }
                    else if (this.exterminationMultiplier == 150 || this.exterminationMultiplier == 225 || this.exterminationMultiplier == 337 || this.exterminationMultiplier != 505) {}
                    if (this.exterminationMultiplier * 3 / 2 > this.exterminationMultiplier) {
                        this.exterminationMultiplier = this.exterminationMultiplier * 3 / 2;
                    }
                    final Chosen chosen = this.cast[1];
                }
            }
            return false;
        }
        return true;
    }
    
    public void setSurroundTarget(final Chosen c) {
        this.nextSurround = c;
    }
    
    public Chosen getSurroundTarget() {
        return this.nextSurround;
    }
    
    public Chosen getCaptureTarget() {
        return this.nextCapture;
    }
    
    public void primeRemaining(final int first, final int second) {
        final int[] array = this.remaining[first];
        array[second] += 49;
        final int[] array2 = this.remaining[second];
        array2[first] += 49;
    }
    
    public void addFriendship(final int first, final int second, final int amount) {
        final int[] array = this.friendship[first];
        array[second] += amount;
        final int[] array2 = this.friendship[second];
        array2[first] += amount;
        final int[] array3 = this.remaining[first];
        array3[second] -= amount;
        final int[] array4 = this.remaining[second];
        array4[first] -= amount;
        if (this.remaining[first][second] == 0 && this.getRelationship(first, second) == 1) {
            final int[] array5 = this.friendship[first];
            ++array5[second];
            final int[] array6 = this.friendship[second];
            ++array6[first];
        }
    }
    
    public void addFriction(final int first, final int second, final int amount) {
        final int[] array = this.friction[first];
        array[second] += amount;
        final int[] array2 = this.friction[second];
        array2[first] += amount;
        final int[] array3 = this.remaining[first];
        array3[second] -= amount;
        final int[] array4 = this.remaining[second];
        array4[first] -= amount;
        if (this.remaining[first][second] == 0 && this.getRelationship(first, second) == 1) {
            final int[] array5 = this.friendship[first];
            ++array5[second];
            final int[] array6 = this.friendship[second];
            ++array6[first];
        }
    }
    
    public int getRelationship(final int first, final int second) {
        int value = 0;
        final int difference = this.friendship[first][second] - this.friction[first][second];
        final int undecided = this.remaining[first][second];
        if (this.friendship[first][second] == 0 && this.friction[first][second] == 0) {
            value = 0;
        }
        else if (difference == 0) {
            value = 1;
        }
        else if (difference > 0 && difference < undecided) {
            value = 2;
        }
        else if (difference < 0 && 0 - difference < undecided) {
            value = -2;
        }
        else if (difference > 0) {
            value = 4;
        }
        else {
            value = -4;
        }
        return value;
    }
    
    public Boolean tutorialResponse() {
        if (this.onTrack) {
            return this.tutorial;
        }
        return false;
    }
    
    public Boolean isTutorial() {
        return this.tutorial;
    }
    
    public void endTutorial() {
        this.onTrack = false;
    }
    
    public void freshCustom(final JTextPane t, final JPanel p, final JFrame f) {
        this.initializeTips();
        for (int i = 0; i < 6; ++i) {
            Boolean proceed = false;
            while (!proceed) {
                this.nameSeed[i] = (int)(Math.random() * 26.0);
                proceed = true;
                for (int j = 0; j < i; ++j) {
                    if (this.nameSeed[i] == this.nameSeed[j]) {
                        proceed = false;
                    }
                }
            }
        }
        for (int i = 0; i < this.techs.length; ++i) {
            (this.techs[i] = new Tech()).initialize(i, this);
            this.techs[i].assignTooltip(i, this);
        }
        for (int i = 0; i < this.bodyStatus.length; ++i) {
            this.bodyStatus[i] = false;
        }
        this.shopTutorial = "\n\nAs the Chosen are traumatized in battle, they give in to their own weakness and turn their backs on their duty.  As their trauma grows greater, so too do their transgressions.  And the greater their transgressions, the more powerful the Demons become!  Spend this Evil Energy to increase your abilities, and use those abilities to make the Chosen fall even further!";
        this.groupTutorial = "\n\nThere is weakness in numbers.  A rival can become an enemy, and a friend is just a burden.  The Chosen will grow closer as they're corrupted.  Turn those feelings to your own ends and use the Chosen against each other!";
        for (int i = 0; i < 3; ++i) {
            for (int k = 0; k < 3; ++k) {
                this.friendship[i][k] = 0;
                this.friction[i][k] = 0;
                this.remaining[i][k] = 0;
            }
        }
        for (int i = 0; i < this.groupScenes.length; ++i) {
            this.groupScenes[i] = false;
        }
        this.nameGen(t, p, f);
    }
    
    public void nameGen(final JTextPane t, final JPanel p, final JFrame f) {
        p.removeAll();
        final Chosen dummy = new Chosen();
        dummy.setNumber(0);
        if (this.customNames[0] == null) {
            this.customNames[0] = dummy.genName(this, this.nameSeed)[0];
            this.customNames[1] = dummy.genName(this, this.nameSeed)[1];
        }
        dummy.setNumber(1);
        if (this.customNames[2] == null) {
            this.customNames[2] = dummy.genName(this, this.nameSeed)[0];
            this.customNames[3] = dummy.genName(this, this.nameSeed)[1];
        }
        dummy.setNumber(2);
        if (this.customNames[4] == null) {
            this.customNames[4] = dummy.genName(this, this.nameSeed)[0];
            this.customNames[5] = dummy.genName(this, this.nameSeed)[1];
        }
        this.append(t, "\n\n" + this.separator + "\n\nGenerating a custom team of Chosen.  Their real names are (in order of appearance):\n\n");
        if (this.gaijinStatus[0]) {
            this.append(t, this.customNames[0]);
            if (this.customNames[1].length() > 0) {
                this.append(t, " " + this.customNames[1]);
            }
        }
        else {
            if (this.customNames[1].length() > 0) {
                this.append(t, String.valueOf(this.customNames[1]) + " ");
            }
            this.append(t, this.customNames[0]);
        }
        if (this.genderBalance[0] != 0 || (this.genderBalance[1] != 3 && this.genderBalance[2] != 3 && this.genderBalance[3] != 3)) {
            this.append(t, " (" + this.genders[0] + ")");
        }
        this.append(t, "\n");
        if (this.gaijinStatus[1]) {
            this.append(t, this.customNames[2]);
            if (this.customNames[3].length() > 0) {
                this.append(t, " " + this.customNames[3]);
            }
        }
        else {
            if (this.customNames[3].length() > 0) {
                this.append(t, String.valueOf(this.customNames[3]) + " ");
            }
            this.append(t, this.customNames[2]);
        }
        if (this.genderBalance[0] != 0 || (this.genderBalance[1] != 3 && this.genderBalance[2] != 3 && this.genderBalance[3] != 3)) {
            this.append(t, " (" + this.genders[1] + ")");
        }
        this.append(t, "\n");
        if (this.gaijinStatus[2]) {
            this.append(t, this.customNames[4]);
            if (this.customNames[5].length() > 0) {
                this.append(t, " " + this.customNames[5]);
            }
        }
        else {
            if (this.customNames[5].length() > 0) {
                this.append(t, String.valueOf(this.customNames[5]) + " ");
            }
            this.append(t, this.customNames[4]);
        }
        if (this.genderBalance[0] != 0 || (this.genderBalance[1] != 3 && this.genderBalance[2] != 3 && this.genderBalance[3] != 3)) {
            this.append(t, " (" + this.genders[2] + ")");
        }
        this.append(t, "\n\nPick which one's name you'd like to change.  When you're done, either continue to the personality questionaire or allow the game to generate a random set of personalities as normal.");
        for (int i = 0; i < 3; ++i) {
            final int thisChosen = i;
            final JButton Change = new JButton(this.customNames[2 * i]);
            Change.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    p.removeAll();
                    String hisHer = "her";
                    String himHer = "her";
                    String heShe = "she";
                    if (WorldState.this.genders[thisChosen].equals("male")) {
                        hisHer = "his";
                        himHer = "him";
                        heShe = "he";
                    }
                    String input = JOptionPane.showInputDialog("What is " + hisHer + " family surname?  Leave blank to have " + himHer + " lack a surname.");
                    if (input == null) {
                        WorldState.this.customNames[thisChosen * 2 + 1] = "";
                    }
                    else {
                        WorldState.this.customNames[thisChosen * 2 + 1] = input;
                    }
                    input = JOptionPane.showInputDialog("And what name was " + heShe + " given at birth?  Leave blank to keep the current choice (" + WorldState.this.customNames[thisChosen * 2] + ").");
                    if (input != null && input.length() > 0) {
                        WorldState.this.customNames[thisChosen * 2] = input;
                    }
                    if (WorldState.this.customNames[thisChosen * 2 + 1].length() > 0) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nDoes " + heShe + " use Eastern name order (" + WorldState.this.customNames[thisChosen * 2 + 1] + " " + WorldState.this.customNames[thisChosen * 2] + ") or Western name order (" + WorldState.this.customNames[thisChosen * 2] + " " + WorldState.this.customNames[thisChosen * 2 + 1] + ")?");
                        final JButton Eastern = new JButton("Eastern");
                        Eastern.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(final ActionEvent e) {
                                WorldState.this.gaijinStatus[thisChosen] = false;
                                WorldState.this.nameGen(t, p, f);
                            }
                        });
                        p.add(Eastern);
                        final JButton Western = new JButton("Western");
                        Western.addActionListener(new ActionListener() {
                            @Override
                            public void actionPerformed(final ActionEvent e) {
                                WorldState.this.gaijinStatus[thisChosen] = true;
                                WorldState.this.nameGen(t, p, f);
                            }
                        });
                        p.add(Western);
                        p.validate();
                        p.repaint();
                    }
                    else {
                        WorldState.this.nameGen(t, p, f);
                    }
                }
            });
            p.add(Change);
        }
        final JButton Continue = new JButton("Continue");
        Continue.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.personalityGen(t, p, f, 0);
            }
        });
        p.add(Continue);
        final JButton Randomize = new JButton("Full Random");
        Randomize.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                for (int i = 0; i < 24; ++i) {
                    WorldState.this.quizAnswers[i] = null;
                }
                for (Boolean goodStats = false; !goodStats; goodStats = false) {
                    goodStats = true;
                    for (int j = 0; j < WorldState.this.statSeed.length; ++j) {
                        WorldState.this.statSeed[j] = (int)(Math.random() * 101.0);
                    }
                    if (!WorldState.this.legalSpread(WorldState.this.statSeed, false)) {
                        goodStats = false;
                    }
                    Boolean pureTarget = false;
                    Boolean corruptTarget = false;
                    for (int k = 0; k < 3; ++k) {
                        if (WorldState.this.determinePurity(WorldState.this.statSeed[k * 4], WorldState.this.statSeed[1 + k * 4], WorldState.this.statSeed[2 + k * 4], WorldState.this.statSeed[3 + k * 4])) {
                            pureTarget = true;
                        }
                        else {
                            corruptTarget = true;
                        }
                    }
                    if (!pureTarget || !corruptTarget) {}
                }
                WorldState.this.newVulnerabilities(t, p, f);
            }
        });
        p.add(Randomize);
        final WorldState w = this;
        final JButton Quit = new JButton("Quit");
        Quit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                p.removeAll();
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nReally quit?  All customization of this team will be lost.");
                final JButton ReallyQuit = new JButton("Quit");
                ReallyQuit.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        final WorldState x = new WorldState();
                        x.copySettings(t, w);
                        x.copyToggles(w);
                        Project.IntroOne(t, p, f, x);
                    }
                });
                p.add(ReallyQuit);
                final JButton Back = new JButton("Cancel");
                Back.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.nameGen(t, p, f);
                    }
                });
                p.add(Back);
                p.validate();
                p.repaint();
            }
        });
        p.add(Quit);
        p.validate();
        p.repaint();
    }
    
    public void personalityGen(final JTextPane t, final JPanel p, final JFrame f, final int progress) {
        p.removeAll();
        this.append(t, "\n\n" + this.separator + "\n\n");
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 8; ++j) {
                this.personalityWeights[progress][i][j] = 0;
            }
        }
        int[] questionImpact = new int[5];
        if (progress == 0) {
            this.append(t, "This segment takes the form of a series of questions about which of the Chosen fits a given description best.  If the question doesn't have a clear answer, then select 'Pass'.\n\nThis system will try to produce a set of three contrasting personalities, so if two of them seem to share a trait, it will pick one to exhibit the trait more strongly than the other.  It isn't possible for it to generate two Chosen with the same personality.\n\nQuestion 1: Which of them has the most faith in humanity?");
            final int[] array = new int[8];
            array[array[0] = 1] = 1;
            questionImpact = array;
        }
        else if (progress == 1) {
            this.append(t, "Question 2: Who is the first to jump into harm's way when people are in danger?");
            final int[] array2 = new int[8];
            array2[2] = (array2[0] = 1);
            questionImpact = array2;
        }
        else if (progress == 2) {
            this.append(t, "Question 3: Who puts the most effort into inspiring hope in others?");
            questionImpact = new int[] { 1, 0, 0, 1, 0, 0, 0, 0 };
        }
        else if (progress == 3) {
            this.append(t, "Question 4: Who is the most headstrong?");
            final int[] array3 = new int[8];
            array3[2] = (array3[1] = 1);
            questionImpact = array3;
        }
        else if (progress == 4) {
            this.append(t, "Question 5: Who tries the hardest to look cool?");
            questionImpact = new int[] { 0, 1, 0, 1, 0, 0, 0, 0 };
        }
        else if (progress == 5) {
            this.append(t, "Question 6: Who is the most prideful?");
            questionImpact = new int[] { 0, 0, 1, 1, 0, 0, 0, 0 };
        }
        else if (progress == 6) {
            this.append(t, "Question 7: Who thinks the most about what good and evil actually are?");
            questionImpact = new int[] { 1, 0, 0, 0, 0, 1, 0, 0 };
        }
        else if (progress == 7) {
            this.append(t, "Question 8: Who cares the most about improving herself?");
            questionImpact = new int[] { 1, 0, 0, 0, 0, 0, 1, 0 };
        }
        else if (progress == 8) {
            this.append(t, "Question 9: Who is the most willing to tolerate humiliation?");
            questionImpact = new int[] { 1, 0, 0, 0, 0, 0, 0, 1 };
        }
        else if (progress == 9) {
            this.append(t, "Question 10: Who has the weakest willpower?");
            questionImpact = new int[] { 0, 1, 0, 0, 0, 0, 1, 0 };
        }
        else if (progress == 10) {
            this.append(t, "Question 11: Who finds it most difficult to lie?");
            questionImpact = new int[] { 0, 1, 0, 0, 0, 0, 0, 1 };
        }
        else if (progress == 11) {
            this.append(t, "Question 12: Who cares the least what people think of her?");
            questionImpact = new int[] { 0, 0, 1, 0, 0, 0, 0, 1 };
        }
        else if (progress == 12) {
            this.append(t, "Question 13: Who is the most self-centered?");
            questionImpact = new int[] { 0, 1, 0, 0, 1, 0, 0, 0 };
        }
        else if (progress == 13) {
            this.append(t, "Question 14: Who is the most violent?");
            questionImpact = new int[] { 0, 0, 1, 0, 1, 0, 0, 0 };
        }
        else if (progress == 14) {
            this.append(t, "Question 15: Who is least likely to admit her own faults?");
            questionImpact = new int[] { 0, 0, 0, 1, 1, 0, 0, 0 };
        }
        else if (progress == 15) {
            this.append(t, "Question 16: Who is the best at remaining calm and rational despite distractions?");
            questionImpact = new int[] { 0, 0, 1, 0, 0, 1, 0, 0 };
        }
        else if (progress == 16) {
            this.append(t, "Question 17: Who is the best at reading a social situation?");
            questionImpact = new int[] { 0, 0, 0, 1, 0, 1, 0, 0 };
        }
        else if (progress == 17) {
            this.append(t, "Question 18: Who is the most embarrassed by sexual matters?");
            questionImpact = new int[] { 0, 0, 0, 1, 0, 0, 1, 0 };
        }
        else if (progress == 18) {
            this.append(t, "Question 19: Who is bothered the least when she sees other people suffer?");
            questionImpact = new int[] { 0, 0, 0, 0, 1, 1, 0, 0 };
        }
        else if (progress == 19) {
            this.append(t, "Question 20: Who spends the most time worrying about her own safety?");
            questionImpact = new int[] { 0, 0, 0, 0, 1, 0, 1, 0 };
        }
        else if (progress == 20) {
            this.append(t, "Question 21: Who says the most hurtful things?");
            questionImpact = new int[] { 0, 0, 0, 0, 1, 0, 0, 1 };
        }
        else if (progress == 21) {
            this.append(t, "Question 22: Who is the most pessimistic about her chances of winning?");
            questionImpact = new int[] { 0, 0, 0, 0, 0, 1, 1, 0 };
        }
        else if (progress == 22) {
            this.append(t, "Question 23: Who finds it most difficult to relate to regular people?");
            questionImpact = new int[] { 0, 0, 0, 0, 0, 1, 0, 1 };
        }
        else if (progress == 23) {
            this.append(t, "Question 24: Who is most willing to ask for help?");
            questionImpact = new int[] { 0, 0, 0, 0, 0, 0, 1, 1 };
        }
        if (this.quizAnswers[progress] != null) {
            this.append(t, "  (Previous answer: " + this.quizAnswers[progress] + ".)");
        }
        for (int k = 0; k < 3; ++k) {
            final int[] finalImpact = questionImpact;
            final int thisChosen = k;
            final JButton Pick = new JButton(this.customNames[k * 2]);
            Pick.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    WorldState.this.personalityWeights[progress][thisChosen] = finalImpact;
                    WorldState.this.quizAnswers[progress] = WorldState.this.customNames[thisChosen * 2];
                    if (progress < 23) {
                        WorldState.this.personalityGen(t, p, f, progress + 1);
                    }
                    else {
                        WorldState.this.determineStats(t, p, f);
                    }
                }
            });
            p.add(Pick);
        }
        final JButton Pass = new JButton("Pass");
        Pass.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.quizAnswers[progress] = "pass";
                if (progress < 23) {
                    WorldState.this.personalityGen(t, p, f, progress + 1);
                }
                else {
                    WorldState.this.determineStats(t, p, f);
                }
            }
        });
        p.add(Pass);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                if (progress > 0) {
                    WorldState.this.personalityGen(t, p, f, progress - 1);
                }
                else {
                    WorldState.this.nameGen(t, p, f);
                }
            }
        });
        p.add(Back);
        final JButton Quit = new JButton("Quit");
        final WorldState w = this;
        Quit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                p.removeAll();
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nReally quit?  All customization of this team will be lost.");
                final JButton ReallyQuit = new JButton("Quit");
                ReallyQuit.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        final WorldState x = new WorldState();
                        x.copySettings(t, w);
                        x.copyToggles(w);
                        Project.IntroOne(t, p, f, x);
                    }
                });
                p.add(ReallyQuit);
                final JButton Back = new JButton("Cancel");
                Back.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.personalityGen(t, p, f, progress);
                    }
                });
                p.add(Back);
                p.validate();
                p.repaint();
            }
        });
        p.add(Quit);
        p.validate();
        p.repaint();
    }
    
    public void determineStats(final JTextPane t, final JPanel p, final JFrame f) {
        final int[][] certainties = new int[3][4];
        final int[][] ranges = new int[3][4];
        final int[][] flexibilities = new int[3][4];
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 4; ++j) {
                for (int k = 0; k < 24; ++k) {
                    final int[] array = certainties[i];
                    final int n2 = j;
                    array[n2] += this.personalityWeights[k][i][j] + this.personalityWeights[k][i][j + 4];
                    final int[] array2 = ranges[i];
                    final int n3 = j;
                    array2[n3] += this.personalityWeights[k][i][j] - this.personalityWeights[k][i][j + 4];
                }
            }
        }
        final int[] mostCertain = new int[4];
        for (int j = 0; j < 4; ++j) {
            int highestCertainty = 0;
            for (int l = 0; l < 3; ++l) {
                if (certainties[l][j] > highestCertainty) {
                    mostCertain[j] = l;
                    highestCertainty = certainties[l][j];
                }
            }
            int absoluteRange = ranges[mostCertain[j]][j];
            if (absoluteRange < 0) {
                absoluteRange = -absoluteRange;
            }
            int margin = 0;
            if (absoluteRange != certainties[mostCertain[j]][j]) {
                final int multiplier = 100 * (certainties[mostCertain[j]][j] + absoluteRange) / (certainties[mostCertain[j]][j] - absoluteRange);
                if (absoluteRange * multiplier / 20 > 50) {
                    int sign = 1;
                    if (ranges[mostCertain[j]][j] < 0) {
                        sign = -1;
                    }
                    if (certainties[mostCertain[j]][j] == 8) {
                        margin = 40;
                    }
                    if (certainties[mostCertain[j]][j] == 7) {
                        margin = 49;
                    }
                    else if (certainties[mostCertain[j]][j] == 6) {
                        margin = 43;
                    }
                    else if (certainties[mostCertain[j]][j] == 5) {
                        margin = 45;
                    }
                    margin *= sign;
                }
                else {
                    margin = ranges[mostCertain[j]][j] * multiplier / 20;
                }
            }
            else {
                int multiplier = 1;
                if (ranges[mostCertain[j]][j] < 0) {
                    multiplier = -1;
                }
                if (certainties[mostCertain[j]][j] == 6) {
                    margin = 50;
                }
                else if (certainties[mostCertain[j]][j] == 5) {
                    margin = 48;
                }
                else if (certainties[mostCertain[j]][j] == 4) {
                    margin = 47;
                }
                else if (certainties[mostCertain[j]][j] == 3) {
                    margin = 35;
                }
                else if (certainties[mostCertain[j]][j] == 2) {
                    margin = 28;
                }
                else if (certainties[mostCertain[j]][j] == 1) {
                    margin = 13;
                }
                else {
                    margin = 0;
                }
                margin *= multiplier;
            }
            final int baseValue = 50 + margin;
            this.statSeed[mostCertain[j] * 4 + j] = baseValue;
            int[] otherValues = new int[2];
            if (mostCertain[j] == 0) {
                otherValues = new int[] { 1, 2 };
            }
            else if (mostCertain[j] == 1) {
                otherValues = new int[] { 0, 2 };
            }
            else {
                otherValues = new int[] { 0, 1 };
            }
            if (baseValue > 66) {
                int middle;
                int low;
                if (ranges[otherValues[0]][j] >= ranges[otherValues[1]][j]) {
                    middle = otherValues[0];
                    low = otherValues[1];
                }
                else {
                    middle = otherValues[1];
                    low = otherValues[0];
                }
                this.statSeed[middle * 4 + j] = 50 + ranges[middle][j] * 4;
                if (this.statSeed[middle * 4 + j] > 66) {
                    this.statSeed[middle * 4 + j] = 66;
                }
                else if (this.statSeed[middle * 4 + j] < 34) {
                    this.statSeed[middle * 4 + j] = 34;
                }
                this.statSeed[low * 4 + j] = 30 + ranges[low][j] * 5;
                if (this.statSeed[low * 4 + j] > 33) {
                    this.statSeed[low * 4 + j] = 33;
                }
            }
            else if (baseValue > 33) {
                int low;
                int high;
                if (ranges[otherValues[0]][j] >= ranges[otherValues[1]][j]) {
                    high = otherValues[0];
                    low = otherValues[1];
                }
                else {
                    high = otherValues[1];
                    low = otherValues[0];
                }
                this.statSeed[high * 4 + j] = 70 + ranges[high][j] * 5;
                if (this.statSeed[high * 4 + j] < 67) {
                    this.statSeed[high * 4 + j] = 67;
                }
                this.statSeed[low * 4 + j] = 30 + ranges[low][j] * 5;
                if (this.statSeed[low * 4 + j] > 33) {
                    this.statSeed[low * 4 + j] = 33;
                }
            }
            else {
                int high;
                int middle2;
                if (ranges[otherValues[0]][j] >= ranges[otherValues[1]][j]) {
                    high = otherValues[0];
                    middle2 = otherValues[1];
                }
                else {
                    high = otherValues[1];
                    middle2 = otherValues[0];
                }
                this.statSeed[high * 4 + j] = 70 + ranges[high][j] * 5;
                if (this.statSeed[high * 4 + j] < 67) {
                    this.statSeed[high * 4 + j] = 67;
                }
                this.statSeed[middle2 * 4 + j] = 50 + ranges[middle2][j] * 4;
                if (this.statSeed[middle2 * 4 + j] > 66) {
                    this.statSeed[middle2 * 4 + j] = 66;
                }
                else if (this.statSeed[middle2 * 4 + j] < 34) {
                    this.statSeed[middle2 * 4 + j] = 34;
                }
            }
            for (int m = 0; m < 3; ++m) {
                if (m != mostCertain[j]) {
                    flexibilities[m][j] = highestCertainty - certainties[m][j];
                }
            }
        }
        int attempts;
        for (attempts = 0; !this.legalSpread(this.statSeed, true) && attempts < 1000; ++attempts) {
            final int[][] counts = new int[3][3];
            for (int l = 0; l < 3; ++l) {
                for (int j2 = 0; j2 < 4; ++j2) {
                    if (this.statSeed[l * 4 + j2] > 66) {
                        final int[] array3 = counts[l];
                        final int n4 = 0;
                        ++array3[n4];
                    }
                    else if (this.statSeed[l * 4 + j2] > 33) {
                        final int[] array4 = counts[l];
                        final int n5 = 1;
                        ++array4[n5];
                    }
                    else {
                        final int[] array5 = counts[l];
                        final int n6 = 2;
                        ++array5[n6];
                    }
                }
                for (int j2 = 0; j2 < 4; ++j2) {
                    if (flexibilities[l][j2] == 0) {
                        final int[] array6 = flexibilities[l];
                        final int n7 = j2;
                        ++array6[n7];
                    }
                }
            }
            for (int m2 = 0; m2 < 3; ++m2) {
                int n = m2 + 1;
                if (n == 3) {
                    n = 0;
                }
                int q = m2 - 1;
                if (q < 0) {
                    q = 2;
                }
                Boolean tradeHigherForLower = false;
                int tradeUpperRange = 0;
                int tradeLowerRange = 1;
                int tradeRangeIndex = -1;
                if (counts[m2][0] > 2) {
                    tradeHigherForLower = true;
                    tradeUpperRange = 66;
                    tradeLowerRange = 34;
                    tradeRangeIndex = 1;
                }
                else if (counts[m2][2] > 2) {
                    tradeHigherForLower = false;
                    tradeUpperRange = 66;
                    tradeLowerRange = 34;
                    tradeRangeIndex = 1;
                }
                else if (counts[m2][1] > 2) {
                    if (counts[m2][0] == 1) {
                        tradeHigherForLower = true;
                        tradeUpperRange = 33;
                        tradeLowerRange = 0;
                        tradeRangeIndex = 2;
                    }
                    else {
                        tradeHigherForLower = false;
                        tradeUpperRange = 100;
                        tradeLowerRange = 67;
                        tradeRangeIndex = 0;
                    }
                }
                else if (counts[m2][0] == 0) {
                    tradeHigherForLower = false;
                    tradeUpperRange = 100;
                    tradeLowerRange = 67;
                    tradeRangeIndex = 0;
                }
                else if (counts[m2][2] == 0) {
                    tradeHigherForLower = true;
                    tradeUpperRange = 33;
                    tradeLowerRange = 0;
                    tradeRangeIndex = 2;
                }
                else if (counts[m2][1] == 0) {
                    int highOpportunities = 0;
                    int lowOpportunities = 0;
                    for (int j3 = 0; j3 < 4; ++j3) {
                        if (this.statSeed[m2 * 4 + j3] > 66) {
                            if (counts[n][1] > 1 && this.statSeed[n * 4 + j3] > 33 && this.statSeed[n * 4 + j3] < 67) {
                                highOpportunities += flexibilities[m2][j3] * flexibilities[n][j3];
                            }
                            if (counts[q][1] > 1 && this.statSeed[q * 4 + j3] > 33 && this.statSeed[q * 4 + j3] < 67) {
                                highOpportunities += flexibilities[m2][j3] * flexibilities[q][j3];
                            }
                        }
                        else {
                            if (counts[n][1] > 1 && this.statSeed[n * 4 + j3] > 33 && this.statSeed[n * 4 + j3] < 67) {
                                lowOpportunities += flexibilities[m2][j3] * flexibilities[n][j3];
                            }
                            if (counts[q][1] > 1 && this.statSeed[q * 4 + j3] > 33 && this.statSeed[q * 4 + j3] < 67) {
                                lowOpportunities += flexibilities[m2][j3] * flexibilities[q][j3];
                            }
                        }
                    }
                    if (highOpportunities >= lowOpportunities) {
                        tradeHigherForLower = true;
                    }
                    else {
                        tradeHigherForLower = false;
                    }
                    tradeUpperRange = 66;
                    tradeLowerRange = 34;
                    tradeRangeIndex = 1;
                }
                int traded = -1;
                int subject = 0;
                if (tradeRangeIndex >= 0) {
                    if (counts[n][tradeRangeIndex] > counts[q][tradeRangeIndex]) {
                        subject = n;
                    }
                    else if (counts[n][tradeRangeIndex] < counts[q][tradeRangeIndex]) {
                        subject = q;
                    }
                    else {
                        int highestSum = 0;
                        for (int j4 = 0; j4 < 4; ++j4) {
                            Boolean legalTrade = false;
                            if (tradeHigherForLower) {
                                if (tradeRangeIndex == 1) {
                                    if (this.statSeed[m2 * 4 + j4] > 66) {
                                        legalTrade = true;
                                    }
                                }
                                else if (this.statSeed[m2 * 4 + j4] < 67) {
                                    legalTrade = true;
                                }
                            }
                            else if (tradeRangeIndex == 0) {
                                if (this.statSeed[m2 * 4 + j4] > 33) {
                                    legalTrade = true;
                                }
                            }
                            else if (this.statSeed[m2 * 4 + j4] < 34) {
                                legalTrade = true;
                            }
                            if (flexibilities[m2][j4] + flexibilities[n][j4] > highestSum && legalTrade && this.statSeed[n * 4 + j4] >= tradeLowerRange && this.statSeed[n * 4 + j4] <= tradeUpperRange) {
                                highestSum = flexibilities[m2][j4] + flexibilities[n][j4];
                                traded = j4;
                                subject = n;
                            }
                            if (flexibilities[m2][j4] + flexibilities[q][j4] > highestSum && legalTrade && this.statSeed[q * 4 + j4] >= tradeLowerRange && this.statSeed[q * 4 + j4] <= tradeUpperRange) {
                                highestSum = flexibilities[m2][j4] + flexibilities[q][j4];
                                traded = j4;
                                subject = q;
                            }
                        }
                    }
                    if (traded < 0) {
                        int highestSum = 0;
                        for (int j4 = 0; j4 < 4; ++j4) {
                            Boolean legalTrade = false;
                            if (this.statSeed[subject * 4 + j4] >= tradeLowerRange && this.statSeed[subject * 4 + j4] <= tradeUpperRange) {
                                if (tradeHigherForLower) {
                                    if (tradeRangeIndex == 1) {
                                        if (this.statSeed[m2 * 4 + j4] > 66) {
                                            legalTrade = true;
                                        }
                                    }
                                    else if (this.statSeed[m2 * 4 + j4] < 67) {
                                        legalTrade = true;
                                    }
                                }
                                else if (tradeRangeIndex == 0) {
                                    if (this.statSeed[m2 * 4 + j4] > 33) {
                                        legalTrade = true;
                                    }
                                }
                                else if (this.statSeed[m2 * 4 + j4] < 34) {
                                    legalTrade = true;
                                }
                            }
                            if (flexibilities[m2][j4] + flexibilities[subject][j4] > highestSum && legalTrade) {
                                highestSum = flexibilities[m2][j4] + flexibilities[subject][j4];
                                traded = j4;
                            }
                        }
                    }
                    if (traded >= 0) {
                        if (tradeHigherForLower) {
                            this.statSeed[m2 * 4 + traded] = tradeUpperRange + 2 - flexibilities[m2][traded] * 2;
                            this.statSeed[subject * 4 + traded] = tradeUpperRange + flexibilities[subject][traded] * 2;
                        }
                        else {
                            this.statSeed[m2 * 4 + traded] = tradeLowerRange - 2 + flexibilities[m2][traded] * 2;
                            this.statSeed[subject * 4 + traded] = tradeLowerRange - flexibilities[subject][traded] * 2;
                        }
                    }
                    m2 = 3;
                }
            }
        }
        if (attempts >= 1000) {
            this.append(t, "\n\n" + this.separator + "\n\n");
            this.append(t, "Generation failed.\n\n");
            Project.IntroOne(t, p, f, new WorldState());
        }
        else {
            this.newVulnerabilities(t, p, f);
        }
    }
    
    public void newVulnerabilities(final JTextPane t, final JPanel p, final JFrame f) {
        p.removeAll();
        this.invertVVirg = new Boolean[] { false, false, false };
        this.invertCVirg = new Boolean[] { false, false, false };
        this.invertAVirg = new Boolean[] { false, false, false };
        this.invertModest = new Boolean[] { false, false, false };
        this.append(t, "\n\n" + this.separator + "\n\nPersonalities generated.  ");
        this.vulnerabilityMenu(t, p, f, false);
    }
    
    public void vulnerabilityMenu(final JTextPane t, final JPanel p, final JFrame f, final Boolean shown) {
        p.removeAll();
        final Boolean[][] allPurities = new Boolean[3][4];
        for (int i = 0; i < 3; ++i) {
            final int[] stats = { this.statSeed[i * 4], this.statSeed[i * 4 + 1], this.statSeed[i * 4 + 2], this.statSeed[i * 4 + 3] };
            allPurities[i][0] = (this.invertVVirg[i] != this.determineVVirg(stats[0], stats[1], stats[2], stats[3]));
            allPurities[i][1] = (this.invertCVirg[i] != this.determineCVirg(stats[0], stats[1], stats[2], stats[3]));
            allPurities[i][2] = (this.invertAVirg[i] != this.determineAVirg(stats[0], stats[1], stats[2], stats[3]));
            allPurities[i][3] = (this.invertModest[i] != this.determineModest(stats[0], stats[1], stats[2], stats[3]));
        }
        this.append(t, "If you like, you can review the Vulnerabilities of the team you've created here, and you may determine whether they start broken or not.  The Chosen take more damage of types associated with broken Vulnerabilities, but breaking Vulnerabilities during play grants bonus Evil Energy and can cause tension within the team.");
        if (shown) {
            this.append(t, "  Click 'Continue' once you're done.");
            for (int i = 0; i < 3; ++i) {
                this.append(t, "\n\n" + this.customNames[i * 2]);
                for (int j = 0; j < 4; ++j) {
                    String type = "Morality";
                    if (j == 1) {
                        type = "Innocence";
                    }
                    else if (j == 2) {
                        type = "Confidence";
                    }
                    else if (j == 3) {
                        type = "Dignity";
                    }
                    if (this.statSeed[i * 4 + j] > 66) {
                        this.blueAppend(t, "\n" + type + ": Core");
                    }
                    else if (this.statSeed[i * 4 + j] > 33) {
                        this.greenAppend(t, "\n" + type + ": Significant");
                    }
                    else {
                        this.redAppend(t, "\n" + type + ": Minor");
                    }
                    if (!allPurities[i][j]) {
                        this.redAppend(t, " (BROKEN)");
                    }
                }
            }
        }
        else {
            this.append(t, "  The Vulnerabilities are presently hidden so that players who wish to avoid being spoiled can face the team blind.  Click 'Show All' to reveal them, or click on one of the names to view and break the Vulnerabilities of that Chosen in particular.");
            this.append(t, "  Click 'Continue' once you're done.");
        }
        for (int i = 0; i < 3; ++i) {
            final int thisChosen = i;
            final JButton ThisOne = new JButton(this.customNames[thisChosen * 2]);
            ThisOne.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    WorldState.this.reviewVulnerabilities(t, p, f, shown, thisChosen, 0);
                }
            });
            p.add(ThisOne);
        }
        final JButton ShowAll = new JButton("Show All");
        if (shown) {
            ShowAll.setText("Hide All");
        }
        ShowAll.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                WorldState.this.vulnerabilityMenu(t, p, f, !shown);
            }
        });
        p.add(ShowAll);
        final JButton Continue = new JButton("Continue");
        Continue.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.newCosmetics(t, p, f);
            }
        });
        p.add(Continue);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                p.removeAll();
                final Boolean toQuiz = WorldState.this.quizAnswers[23] != null;
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nReally go back to ");
                if (toQuiz) {
                    WorldState.this.append(t, "the personality quiz");
                }
                else {
                    WorldState.this.append(t, "name settings");
                }
                WorldState.this.append(t, "?  The Vulnerability adjustments set on this screen will be reset.");
                final JButton ReallyQuit = new JButton("Back");
                ReallyQuit.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        if (toQuiz) {
                            WorldState.this.personalityGen(t, p, f, 23);
                        }
                        else {
                            WorldState.this.nameGen(t, p, f);
                        }
                    }
                });
                p.add(ReallyQuit);
                final JButton Back = new JButton("Cancel");
                Back.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        WorldState.this.vulnerabilityMenu(t, p, f, shown);
                    }
                });
                p.add(Back);
                p.validate();
                p.repaint();
            }
        });
        p.add(Back);
        final WorldState w = this;
        final JButton Quit = new JButton("Quit");
        Quit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                p.removeAll();
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nReally quit?  All customization of this team will be lost.");
                final JButton ReallyQuit = new JButton("Quit");
                ReallyQuit.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        final WorldState x = new WorldState();
                        x.copySettings(t, w);
                        x.copyToggles(w);
                        Project.IntroOne(t, p, f, x);
                    }
                });
                p.add(ReallyQuit);
                final JButton Back = new JButton("Cancel");
                Back.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        WorldState.this.vulnerabilityMenu(t, p, f, shown);
                    }
                });
                p.add(Back);
                p.validate();
                p.repaint();
            }
        });
        p.add(Quit);
        p.validate();
        p.repaint();
    }
    
    public void reviewVulnerabilities(final JTextPane t, final JPanel p, final JFrame f, final Boolean shown, final int id, final int progress) {
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[id].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        p.removeAll();
        this.append(t, "\n\n" + this.separator + "\n\n");
        final Boolean[][] allPurities = new Boolean[3][4];
        for (int i = 0; i < 3; ++i) {
            final int[] stats = { this.statSeed[i * 4], this.statSeed[i * 4 + 1], this.statSeed[i * 4 + 2], this.statSeed[i * 4 + 3] };
            allPurities[i][0] = (this.invertVVirg[i] != this.determineVVirg(stats[0], stats[1], stats[2], stats[3]));
            allPurities[i][1] = (this.invertCVirg[i] != this.determineCVirg(stats[0], stats[1], stats[2], stats[3]));
            allPurities[i][2] = (this.invertAVirg[i] != this.determineAVirg(stats[0], stats[1], stats[2], stats[3]));
            allPurities[i][3] = (this.invertModest[i] != this.determineModest(stats[0], stats[1], stats[2], stats[3]));
        }
        if (progress == 0) {
            if (this.statSeed[id * 4] > 66) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + "'s sense of Morality is a ");
                this.blueAppend(t, "Core");
                this.append(t, " part of " + hisHer + " identity");
            }
            else if (this.statSeed[id * 4] > 33) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + "'s Morality is a ");
                this.greenAppend(t, "Significant");
                this.append(t, " component of " + hisHer + " personality");
            }
            if (this.statSeed[id * 4] > 33) {
                if (this.genders[id].equals("male")) {
                    this.append(t, ", so " + heShe + " wouldn't normally engage in 'immoral' activities like violence and sex with other men.  ");
                }
                else {
                    this.append(t, ", so " + heShe + " wouldn't normally engage in 'immoral' activities like violence and promiscuity.  ");
                }
                if (allPurities[id][0]) {
                    this.append(t, "If this Vulnerability is broken, it means " + heShe + " has already been raped by the time the game starts.");
                }
                else {
                    this.append(t, "However, " + heShe + " is set to have already been raped before the game starts.");
                }
            }
            else {
                this.append(t, "Morality is only a ");
                this.redAppend(t, "Minor");
                this.append(t, " concern for " + this.customNames[id * 2] + ", ");
                if (allPurities[id][0]) {
                    if (this.genders[id].equals("male")) {
                        this.append(t, "but " + heShe + " hasn't gotten curious enough to try having sex with other men yet.  Break this Vulnerability to change that.");
                    }
                    else {
                        this.append(t, "but " + heShe + " hasn't gotten around to having sex yet.  Break this Vulnerability to change that.");
                    }
                }
                else if (this.genders[id].equals("male")) {
                    this.append(t, "so " + heShe + " has seen no reason to avoid having sex with other men.  Restore this Vulnerability to have " + himHer + " start as an anal virgin instead.");
                }
                else {
                    this.append(t, "so " + heShe + " has seen no reason to avoid having sex.  Restore this Vulnerability to have " + himHer + " start as a virgin instead.");
                }
            }
        }
        else if (progress == 1) {
            if (this.statSeed[id * 4 + 1] > 66) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + "'s Innocence is a ");
                this.blueAppend(t, "Core");
                this.append(t, " part of " + hisHer + " identity");
            }
            else if (this.statSeed[id * 4 + 1] > 33) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + " has retained ");
                this.greenAppend(t, "Significant");
                this.append(t, " Innocence regarding sexual matters");
            }
            if (this.statSeed[id * 4 + 1] > 33) {
                this.append(t, ", so " + heShe + " wouldn't normally have any idea how good it can feel to be forced to cum during battle.  ");
                if (allPurities[id][1]) {
                    this.append(t, "If this Vulnerability is broken, it means " + heShe + " has already become addicted to this feeling.");
                }
                else {
                    this.append(t, "However, " + heShe + " is set to have already become addicted to this feeling when the game starts.");
                }
            }
            else {
                this.append(t, String.valueOf(this.customNames[id * 2]) + " has retained only a ");
                this.redAppend(t, "Minor");
                this.append(t, " amount of Innocence");
                if (allPurities[id][1]) {
                    this.append(t, ", but " + heShe + "'s still sane enough to hold back from cumming during battle.  Break this Vulnerability to change that.");
                }
                else {
                    this.append(t, ", so " + heShe + " happily allows " + himHer + "self to cum during battle.  Restore this Vulnerability to have " + himHer + " start out with some restraint.");
                }
            }
        }
        else if (progress == 2) {
            if (this.statSeed[id * 4 + 2] > 66) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + "'s Confidence is a ");
                this.blueAppend(t, "Core");
                this.append(t, " part of " + hisHer + " identity");
            }
            else if (this.statSeed[id * 4 + 2] > 33) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + " has a ");
                this.greenAppend(t, "Significant");
                this.append(t, " amount of Confidence");
            }
            if (this.statSeed[id * 4 + 2] > 33) {
                this.append(t, " because of " + hisHer + " past victories against the Demons.  ");
                if (allPurities[id][2]) {
                    this.append(t, "If this Vulnerability is broken, it means " + heShe + " has suffered a crushing defeat and been tortured before.");
                }
                else {
                    this.append(t, "However, " + heShe + " is set to have already had " + hisHer + " self-image shaken by being defeated and tortured recently.");
                }
            }
            else {
                this.append(t, String.valueOf(this.customNames[id * 2]) + " has only a ");
                this.redAppend(t, "Minor");
                this.append(t, " amount of Confidence left");
                if (allPurities[id][2]) {
                    this.append(t, ", but this is due purely to " + hisHer + " weak personality.  Break this Vulnerability to have " + hisHer + " self-esteem damaged by a recent capture and torture.");
                }
                else {
                    this.append(t, ", largely because of " + hisHer + " recent defeat and torture at the hands of the Demons.  Restore this Vulnerability to erase this event and let " + himHer + " start out with at least a little bit of hope.");
                }
            }
        }
        else if (progress == 3) {
            if (this.statSeed[id * 4 + 3] > 66) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + "'s need for Dignity is a ");
                this.blueAppend(t, "Core");
                this.append(t, " part of " + hisHer + " identity");
            }
            else if (this.statSeed[id * 4 + 3] > 33) {
                this.append(t, String.valueOf(this.customNames[id * 2]) + " maintains a ");
                this.greenAppend(t, "Significant");
                this.append(t, " amount of Dignity");
            }
            if (this.statSeed[id * 4 + 3] > 33) {
                this.append(t, ", wanting to be viewed as a mighty, unassailable warrior.  ");
                if (allPurities[id][3]) {
                    this.append(t, "If this Vulnerability is broken, it means " + heShe + " has been stripped and had " + hisHer + " humiliation broadcast to the world.");
                }
                else {
                    this.append(t, "However, " + heShe + " is set to have already had " + hisHer + " public image damaged by being stripped during battle and having the footage broadcast to the world.");
                }
            }
            else {
                this.append(t, String.valueOf(this.customNames[id * 2]) + " has only a ");
                this.redAppend(t, "Minor");
                this.append(t, " interest in retaining " + hisHer + " dignity");
                if (allPurities[id][3]) {
                    this.append(t, ", but " + heShe + " has managed to avoid any public humiliation so far, mostly through pure luck.  Break this Vulnerability to have footage of " + hisHer + " defeat and stripping be broadcast to the world.");
                }
                else {
                    this.append(t, ", and as a result, " + heShe + " hasn't managed to stop footage of " + hisHer + " defeat and stripping from being spread across the world.  Restore this Vulnerability to make it so that " + heShe + " hasn't yet been captured in such a shameful state.");
                }
            }
        }
        final JButton Toggle = new JButton("Break");
        if (!allPurities[id][progress]) {
            Toggle.setText("Restore");
        }
        Toggle.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                if (progress == 0) {
                    WorldState.this.invertVVirg[id] = !WorldState.this.invertVVirg[id];
                }
                else if (progress == 1) {
                    WorldState.this.invertCVirg[id] = !WorldState.this.invertCVirg[id];
                }
                else if (progress == 2) {
                    WorldState.this.invertAVirg[id] = !WorldState.this.invertAVirg[id];
                }
                else if (progress == 3) {
                    WorldState.this.invertModest[id] = !WorldState.this.invertModest[id];
                }
                if (progress < 3) {
                    WorldState.this.reviewVulnerabilities(t, p, f, shown, id, progress + 1);
                }
                else {
                    WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                    WorldState.this.vulnerabilityMenu(t, p, f, shown);
                }
            }
        });
        p.add(Toggle);
        final JButton Continue = new JButton("Continue");
        Continue.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                if (progress < 3) {
                    WorldState.this.reviewVulnerabilities(t, p, f, shown, id, progress + 1);
                }
                else {
                    WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                    WorldState.this.vulnerabilityMenu(t, p, f, shown);
                }
            }
        });
        p.add(Continue);
        p.validate();
        p.repaint();
    }
    
    public void newCosmetics(final JTextPane t, final JPanel p, final JFrame f) {
        this.customTop = new String[] { "", "", "" };
        this.customTopAccess = new String[] { "", "", "" };
        this.customBottom = new String[] { "", "", "" };
        this.customBottomAccess = new String[] { "", "", "" };
        this.customUnder = new String[] { "", "", "" };
        this.customColor = new String[] { "", "", "" };
        this.customAccessory = new String[] { "", "", "" };
        this.customWeapons = new String[] { "", "", "" };
        this.customWeaponTypes = new String[] { "", "", "" };
        this.append(t, "\n\n" + this.separator + "\n\n");
        this.cosmeticsGen(t, p, f);
    }
    
    public String[] pickCosmetics(final int morality, final int innocence, final int confidence, final int dignity) {
        final String[] cosmetics = new String[10];
        String topCover = "";
        String topAccess = "";
        String bottomCover = "";
        String bottomAccess = "";
        String underType = "";
        String color = "";
        String accessory = "";
        String weapon = "";
        final String customWeaponType = "";
        String feetType = "";
        if (innocence > 75) {
            if (morality > 25) {
                topCover = "bodice";
                topAccess = "down";
                bottomCover = "skirt";
                bottomAccess = "up";
            }
            else {
                topCover = "cloak";
                topAccess = "up";
                bottomCover = "cloak";
                bottomAccess = "up";
            }
            if (dignity > 25) {
                underType = "panties";
            }
            else {
                underType = "none";
            }
        }
        else if (innocence > 50) {
            if (morality > 75) {
                topCover = "robe";
                topAccess = "into";
                bottomCover = "robe";
                bottomAccess = "into";
            }
            else if (morality > 50) {
                topCover = "blouse";
                topAccess = "down";
                bottomCover = "skirt";
                bottomAccess = "up";
            }
            else if (morality > 25) {
                topCover = "jacket";
                topAccess = "down";
                bottomCover = "trousers";
                bottomAccess = "down";
            }
            else {
                topCover = "strips";
                topAccess = "around";
                bottomCover = "strips";
                bottomAccess = "around";
            }
            if (dignity > 50) {
                underType = "panties";
            }
            else if (dignity > 25) {
                underType = "wrap";
            }
            else {
                underType = "none";
            }
        }
        else if (innocence > 25) {
            if (morality > 75) {
                topCover = "bodice";
                topAccess = "cutout";
                bottomCover = "skirt";
                bottomAccess = "cutout";
            }
            else if (morality > 50) {
                topCover = "crop";
                topAccess = "up";
                bottomCover = "miniskirt";
                bottomAccess = "front";
            }
            else if (morality > 25) {
                topCover = "bindings";
                topAccess = "under";
                bottomCover = "trousers";
                bottomAccess = "down";
            }
            else {
                topCover = "armor";
                topAccess = "around";
                bottomCover = "armor";
                bottomAccess = "around";
            }
            if (dignity > 75) {
                underType = "shorts";
            }
            else if (dignity > 50) {
                underType = "g-string";
            }
            else if (dignity > 25) {
                underType = "straps";
            }
            else {
                underType = "none";
            }
        }
        else {
            if (morality > 75) {
                topCover = "leotard";
                topAccess = "into";
                bottomCover = "leotard";
                bottomAccess = "into";
            }
            else if (morality > 50) {
                topCover = "bodysuit";
                topAccess = "into";
                bottomCover = "bodysuit";
                bottomAccess = "into";
            }
            else if (morality > 25) {
                topCover = "shirt";
                topAccess = "up";
                bottomCover = "shorts";
                bottomAccess = "down";
            }
            else {
                topCover = "belts";
                topAccess = "around";
                bottomCover = "belts";
                bottomAccess = "around";
            }
            if (dignity > 75) {
                underType = "panties";
            }
            else if (dignity > 50) {
                underType = "panties";
            }
            else {
                underType = "none";
            }
        }
        if (dignity > 75) {
            if (confidence > 50) {
                color = "dark";
            }
            else if (confidence > 25) {
                color = "pastel";
            }
            else {
                color = "white";
            }
        }
        else if (dignity > 50) {
            if (confidence > 75) {
                color = "bright";
            }
            else if (confidence > 50) {
                color = "bright";
            }
            else if (confidence > 25) {
                color = "pastel";
            }
            else {
                color = "white";
            }
        }
        else if (dignity > 25) {
            if (confidence > 75) {
                color = "bright";
            }
            else if (confidence > 50) {
                color = "bright";
            }
            else if (confidence > 25) {
                color = "pastel";
            }
            else {
                color = "gray";
            }
        }
        else if (confidence > 75) {
            color = "clashing";
        }
        else if (confidence > 50) {
            color = "clashing";
        }
        else if (confidence > 25) {
            color = "drab";
        }
        else {
            color = "drab";
        }
        if (confidence > 75) {
            if (morality > 75) {
                if (innocence > 75) {
                    accessory = "gown";
                }
                else if (innocence > 50) {
                    accessory = "robe";
                }
                else if (innocence > 25) {
                    accessory = "dress";
                }
                else {
                    accessory = "cape";
                }
            }
            else if (morality > 50) {
                accessory = "skirt";
            }
            else if (morality > 25) {
                accessory = "bands";
            }
            else if (innocence > 75) {
                accessory = "cloak";
            }
            else if (innocence > 50) {
                accessory = "cloth";
            }
            else {
                accessory = "chains";
            }
        }
        else if (confidence > 50) {
            if (morality > 75) {
                accessory = "sleeves";
            }
            else if (morality > 50) {
                accessory = "ribbons";
            }
            else if (morality > 25) {
                accessory = "bandages";
            }
            else if (innocence > 75) {
                accessory = "cloak";
            }
            else if (innocence > 50) {
                accessory = "cloth";
            }
            else {
                accessory = "chains";
            }
        }
        else if (confidence > 25) {
            if (morality > 75) {
                accessory = "holy";
            }
            else if (morality > 50) {
                accessory = "charms";
            }
            else if (morality > 25) {
                accessory = "belts";
            }
            else {
                accessory = "occult";
            }
        }
        else if (morality > 75) {
            accessory = "holy";
        }
        else if (morality > 50) {
            accessory = "jewellery";
        }
        else if (morality > 25) {
            accessory = "armor";
        }
        else {
            accessory = "trophies";
        }
        if (dignity < 26) {
            if (morality > 75) {
                weapon = "boots";
            }
            else if (morality > 50) {
                weapon = "gauntlets";
            }
            else if (morality > 25) {
                weapon = "fists";
            }
            else {
                weapon = "claws";
            }
        }
        else if (dignity < 51) {
            if (morality > 75) {
                weapon = "mace";
            }
            else if (morality > 50) {
                weapon = "sword";
            }
            else if (morality > 25) {
                weapon = "greatsword";
            }
            else {
                weapon = "scythe";
            }
        }
        else if (dignity < 76) {
            if (morality > 75) {
                weapon = "shurikens";
            }
            else if (morality > 50) {
                weapon = "revolver";
            }
            else if (morality > 25) {
                weapon = "pistols";
            }
            else {
                weapon = "spirits";
            }
        }
        else if (morality > 75) {
            weapon = "staff";
        }
        else if (morality > 50) {
            weapon = "bow";
        }
        else if (morality > 25) {
            weapon = "rifle";
        }
        else {
            weapon = "monster";
        }
        if (morality > 75 && dignity < 26) {
            feetType = "armored boots";
        }
        else if (innocence > 75) {
            if (confidence > 75) {
                feetType = "none";
            }
            else if (confidence > 50) {
                feetType = "high-heeled sandals";
            }
            else if (confidence > 25) {
                feetType = "strappy sandals";
            }
            else {
                feetType = "ribbon-laced sandals";
            }
        }
        else if (innocence > 50) {
            if (confidence > 75) {
                feetType = "foot wraps";
            }
            else if (confidence > 50) {
                feetType = "high heels";
            }
            else if (confidence > 25) {
                feetType = "sneakers";
            }
            else {
                feetType = "doll shoes";
            }
        }
        else if (innocence > 25) {
            if (confidence > 75) {
                feetType = "combat boots";
            }
            else if (confidence > 50) {
                feetType = "high-heeled boots";
            }
            else if (confidence > 25) {
                feetType = "running shoes and athletic socks";
            }
            else {
                feetType = "loafers";
            }
        }
        else if (confidence > 75) {
            feetType = "thigh-high boots";
        }
        else if (confidence > 50) {
            feetType = "thigh-high stockings";
        }
        else if (confidence > 25) {
            feetType = "kneesocks";
        }
        else {
            feetType = "lacy stockings";
        }
        cosmetics[0] = topCover;
        cosmetics[1] = topAccess;
        cosmetics[2] = bottomCover;
        cosmetics[3] = bottomAccess;
        cosmetics[4] = underType;
        cosmetics[5] = color;
        cosmetics[6] = accessory;
        cosmetics[7] = weapon;
        cosmetics[8] = customWeaponType;
        cosmetics[9] = feetType;
        return cosmetics;
    }
    
    public void cosmeticsGen(final JTextPane t, final JPanel p, final JFrame f) {
        p.removeAll();
        this.append(t, "The final step is to customize the appearances of the team.  None of the questions in this section will affect their combat performance.  Because the default appearances are connected to their personalities, players who wish to avoid spoiling themselves may prefer to skip this step.  Otherwise, click on the team member to be customized.  Clicking on a team member you've already customized will completely reset that member's customization process.");
        for (int i = 0; i < 3; ++i) {
            final JButton ThisOne = new JButton(this.customNames[i * 2]);
            final int thisChosen = i;
            ThisOne.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    final String[] baseAesthetics = WorldState.this.pickCosmetics(WorldState.this.statSeed[thisChosen * 4], WorldState.this.statSeed[thisChosen * 4 + 1], WorldState.this.statSeed[thisChosen * 4 + 2], WorldState.this.statSeed[thisChosen * 4 + 3]);
                    WorldState.this.aliasCustomize(t, p, f, thisChosen, baseAesthetics);
                }
            });
            p.add(ThisOne);
        }
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                p.removeAll();
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nReally go back to Vulnerability review?  The cosmetic traits set on this screen will be reset.");
                final JButton ReallyQuit = new JButton("Back");
                ReallyQuit.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        WorldState.this.vulnerabilityMenu(t, p, f, false);
                    }
                });
                p.add(ReallyQuit);
                final JButton Back = new JButton("Cancel");
                Back.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        WorldState.this.cosmeticsGen(t, p, f);
                    }
                });
                p.add(Back);
                p.validate();
                p.repaint();
            }
        });
        p.add(Back);
        final WorldState w = this;
        final JButton Quit = new JButton("Quit");
        Quit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                p.removeAll();
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nReally quit?  All customization of this team will be lost.");
                final JButton ReallyQuit = new JButton("Quit");
                ReallyQuit.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        final WorldState x = new WorldState();
                        x.copySettings(t, w);
                        x.copyToggles(w);
                        Project.IntroOne(t, p, f, x);
                    }
                });
                p.add(ReallyQuit);
                final JButton Back = new JButton("Cancel");
                Back.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        WorldState.this.cosmeticsGen(t, p, f);
                    }
                });
                p.add(Back);
                p.validate();
                p.repaint();
            }
        });
        final JButton Finish = new JButton("Finish");
        Finish.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                p.removeAll();
                String path = Project.class.getProtectionDomain().getCodeSource().getLocation().getPath();
                String fileName = "";
                for (int i = path.length() - 1; i >= 0; --i) {
                    if (path.charAt(i) != '/') {
                        fileName = String.valueOf(path.charAt(i)) + fileName;
                    }
                    else {
                        i = -1;
                    }
                }
                path = path.substring(0, path.length() - fileName.length() - 1);
                try {
                    path = URLDecoder.decode(path, "UTF-8");
                }
                catch (Exception ex) {
                    ex.printStackTrace();
                }
                path = path.replaceAll("file:/", "");
                path = path.replaceAll(String.valueOf(File.separator) + "u0020", String.valueOf(File.separator) + " ");
                final File saveLocation = new File(String.valueOf(path) + File.separator + "saves.sav");
                SaveData saves = null;
                if (saveLocation.exists()) {
                    final ReadObject robj = new ReadObject();
                    saves = robj.deserializeSaveData(String.valueOf(path) + File.separator + "saves.sav");
                }
                else {
                    saves = new SaveData();
                }
                final WriteObject wobj = new WriteObject();
                final SaveData saveFile = saves;
                if (w.getCast()[0] == null) {
                    final Chosen newChosen = new Chosen();
                    newChosen.setNumber(0);
                    newChosen.generate(w);
                    w.addChosen(newChosen);
                }
                String newSaveName = JOptionPane.showInputDialog("What would you like to name this team?");
                Boolean blankName = false;
                if (newSaveName == null) {
                    blankName = true;
                }
                else if (newSaveName.length() == 0) {
                    blankName = true;
                }
                if (blankName) {
                    final DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                    final Date date = new Date();
                    newSaveName = "Team of " + dateFormat.format(date);
                }
                saves.endSave(w, newSaveName);
                wobj.serializeSaveData(saves);
                final String displayedName = newSaveName;
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\nA new save file has been added in slot " + saves.getSaves().length + " which allows you to fight this team.  You may also wish to export this team to an external file for easy sharing.");
                final JButton Export = new JButton("Export");
                Export.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        String newFileName = JOptionPane.showInputDialog("What would you like the file to be named?  Leave blank to use '" + displayedName + "'.");
                        Boolean noNameProvided = false;
                        if (newFileName == null) {
                            noNameProvided = true;
                        }
                        else if (newFileName.length() == 0) {
                            noNameProvided = true;
                        }
                        if (noNameProvided) {
                            newFileName = displayedName;
                        }
                        String editedName = "";
                        for (int i = 0; i < newFileName.length(); ++i) {
                            if (newFileName.charAt(i) == '/' || newFileName.charAt(i) == ':') {
                                editedName = String.valueOf(editedName) + "-";
                            }
                            else {
                                editedName = String.valueOf(editedName) + newFileName.charAt(i);
                            }
                        }
                        wobj.exportFile(w, editedName);
                        w.append(t, "\n\n" + WorldState.this.separator + "\n\nCustomized team saved to '" + editedName + ".par'.");
                    }
                });
                p.add(Export);
                final JButton Back = new JButton("Back");
                Back.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        WorldState.this.cosmeticsGen(t, p, f);
                    }
                });
                p.add(Back);
                final JButton Done = new JButton("Done");
                Done.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(final ActionEvent e) {
                        WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                        final WorldState x = new WorldState();
                        x.copySettings(t, w);
                        x.copyToggles(w);
                        Project.IntroOne(t, p, f, x);
                    }
                });
                p.add(Done);
                p.validate();
                p.repaint();
            }
        });
        p.add(Finish);
        p.add(Quit);
        p.validate();
        p.repaint();
    }
    
    public void aliasCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        final Chosen dummy = new Chosen();
        String HeShe = "She";
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            HeShe = "He";
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        final String ownChoice = dummy.genMainName(this.statSeed[i * 4], this.statSeed[i * 4 + 1], this.statSeed[i * 4 + 2], this.statSeed[i * 4 + 3]);
        this.append(t, "\n\n" + this.separator + "\n\nThe first step is to decide what " + heShe + "'ll call " + himHer + "self.  " + HeShe + " likes the sound of '" + ownChoice + "', but the civilian identities of the Chosen are a matter of public record, so it wouldn't be too strange for " + himHer + " to go by " + hisHer + " real name.  Which should " + heShe + " choose?");
        final JButton Alias = new JButton(ownChoice);
        Alias.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.customAliases[i] = ownChoice;
                WorldState.this.titleCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Alias);
        final JButton Given = new JButton(this.customNames[i * 2]);
        Given.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.customAliases[i] = WorldState.this.customNames[i * 2];
                WorldState.this.titleCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Given);
        if (this.customNames[i * 2 + 1].length() > 0) {
            final JButton Surname = new JButton(this.customNames[i * 2 + 1]);
            Surname.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    WorldState.this.customAliases[i] = WorldState.this.customNames[i * 2 + 1];
                    WorldState.this.titleCustomize(t, p, f, i, baseAesthetics);
                }
            });
            p.add(Surname);
        }
        final JButton Custom = new JButton("Something else");
        Custom.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the name to be used here.  Leave blank to use the default, '" + ownChoice + "'.");
                WorldState.this.customAliases[i] = ownChoice;
                if (input != null && input.length() > 0) {
                    WorldState.this.customAliases[i] = input;
                }
                WorldState.this.titleCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Custom);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.append(t, "\n\n" + WorldState.this.separator + "\n\n");
                WorldState.this.cosmeticsGen(t, p, f);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomAliases() {
        return this.customAliases;
    }
    
    public String[] getCustomNames() {
        return this.customNames;
    }
    
    public Boolean[] getGaijinStatus() {
        return this.gaijinStatus;
    }
    
    public void titleCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        final Chosen dummy = new Chosen();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        if (this.genders[i].equals("male")) {
            dummy.gender = "male";
        }
        final String ownChoice = String.valueOf(dummy.genAdjectiveName(this.statSeed[i * 4 + 1], this.statSeed[i * 4 + 2])) + " " + dummy.genNounName(this.statSeed[i * 4], this.statSeed[i * 4 + 1]);
        this.append(t, "\n\n" + this.separator + "\n\nMost Chosen also use a descriptive title that defines how they see themselves.  " + this.customAliases[i] + "'s first idea is to use '" + ownChoice + "', so that " + heShe + "'d be '" + ownChoice + " " + this.customAliases[i] + "'.  Should " + heShe + " use something different?");
        this.customTitles[i] = ownChoice;
        final JButton Default = new JButton(ownChoice);
        Default.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.incantationCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Default);
        final JButton Custom = new JButton("Something else");
        Custom.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the title to be used here.  Leave blank to just go by '" + WorldState.this.customAliases[i] + "'.");
                if (input != null) {
                    if (input.length() > 0) {
                        WorldState.this.customTitles[i] = input;
                    }
                    else {
                        WorldState.this.customTitles[i] = "none";
                    }
                }
                WorldState.this.incantationCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Custom);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.aliasCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomTitles() {
        return this.customTitles;
    }
    
    public void incantationCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        final Chosen dummy = new Chosen();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        this.append(t, "\n\n" + this.separator + "\n\nIn order to transform from " + this.customNames[i * 2] + " into ");
        if (!this.customTitles[i].equals("none") || !this.customAliases[i].equals(this.customNames[i * 2])) {
            if (this.customTitles[i].equals("none")) {
                this.append(t, this.customAliases[i]);
            }
            else {
                this.append(t, String.valueOf(this.customTitles[i]) + " " + this.customAliases[i]);
            }
        }
        else {
            this.append(t, String.valueOf(dummy.hisHer()) + " Chosen identity");
        }
        final String ownChoice = dummy.genIncantation(this.statSeed[i * 4], this.statSeed[i * 4 + 3]);
        this.append(t, ", " + heShe + " needs to speak an incantation of " + hisHer + " choice.  The first that comes to " + hisHer + " mind is '" + ownChoice + "'.");
        this.customIncantations[i] = ownChoice;
        final JButton Keep = new JButton("Keep");
        Keep.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.topCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Keep);
        final JButton Change = new JButton("Change");
        Change.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the new incantation here.  Leave blank to leave it unchanged.");
                if (input != null && input.length() > 0) {
                    WorldState.this.customIncantations[i] = input;
                }
                WorldState.this.topCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Change);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.titleCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomIncantations() {
        return this.customIncantations;
    }
    
    public void topCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        String result = "";
        result = this.customIncantations[i];
        if (!this.customTitles[i].equals("none")) {
            result = String.valueOf(result) + "  " + this.customTitles[i];
        }
        else {
            result = String.valueOf(result) + " ";
        }
        result = String.valueOf(result) + " " + this.customAliases[i] + ", transform!";
        this.append(t, "\n\n" + this.separator + "\n\n" + this.customNames[i * 2] + "'s civilian clothes will disintegrate when " + heShe + " says '" + result + "'  In their place, garments and equipment woven of psychic energy representing " + hisHer + " true nature will materialize.  Click 'Change' to give " + himHer + " something different, or click the button for the current item to keep it.\n\nFirst off, what does " + heShe + " wear to cover " + hisHer + " chest?");
        String current = baseAesthetics[0];
        if (current.equals("strips")) {
            current = "strips of cloth";
        }
        else if (current.equals("bindings")) {
            current = "wrapped chest bindings";
        }
        else if (current.equals("crop")) {
            current = "crop top";
        }
        final String finalCurrent = current;
        final JButton Default = new JButton(current);
        Default.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.bottomCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Default);
        final JButton Change = new JButton("Change");
        Change.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the name of the garment here.  Leave blank to use '" + finalCurrent + "'.");
                Boolean changed = false;
                if (input != null && !input.equals(finalCurrent) && input.length() > 0) {
                    changed = true;
                }
                if (changed) {
                    WorldState.this.topChange(t, p, f, i, baseAesthetics, input);
                }
                else {
                    WorldState.this.bottomCustomize(t, p, f, i, baseAesthetics);
                }
            }
        });
        p.add(Change);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.incantationCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomTop() {
        return this.customTop;
    }
    
    public void topChange(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics, final String input) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        if (this.genders[i].equals("male")) {
            this.append(t, "\n\n" + this.separator + "\n\nAnd in order to get at " + hisHer + " nipples, does one go up " + hisHer + " " + input + ", into " + hisHer + " " + input + ", down " + hisHer + " " + input + ", or around " + hisHer + " " + input + "?");
        }
        else {
            this.append(t, "\n\n" + this.separator + "\n\nAnd in order to get at " + hisHer + " breasts, does one go up " + hisHer + " " + input + ", into " + hisHer + " " + input + ", down " + hisHer + " " + input + ", or around " + hisHer + " " + input + "?");
        }
        for (int j = 0; j < 4; ++j) {
            String method = "";
            if (j == 0) {
                method = "up";
            }
            else if (j == 1) {
                method = "into";
            }
            else if (j == 2) {
                method = "down";
            }
            else if (j == 3) {
                method = "around";
            }
            final String finalMethod = method;
            final JButton ThisOne = new JButton(method);
            ThisOne.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    baseAesthetics[0] = input;
                    baseAesthetics[1] = finalMethod;
                    WorldState.this.bottomCustomize(t, p, f, i, baseAesthetics);
                }
            });
            p.add(ThisOne);
        }
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.topCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomTopAccess() {
        return this.customTopAccess;
    }
    
    public void bottomCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        this.append(t, "\n\n" + this.separator + "\n\nNext, what does " + heShe + " wear to cover " + hisHer + " hips?");
        String current = baseAesthetics[2];
        if (current.equals("strips")) {
            current = "strips of cloth";
        }
        final String finalCurrent = current;
        final JButton Default = new JButton(current);
        Default.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.feetCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Default);
        final JButton Change = new JButton("Change");
        Change.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the name of the garment here.  Leave blank to use '" + finalCurrent + "'.");
                Boolean changed = false;
                if (input != null && !input.equals(finalCurrent) && input.length() > 0) {
                    changed = true;
                }
                if (changed) {
                    WorldState.this.bottomChange(t, p, f, i, baseAesthetics, input);
                }
                else {
                    WorldState.this.feetCustomize(t, p, f, i, baseAesthetics);
                }
            }
        });
        p.add(Change);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.topCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomBottom() {
        return this.customBottom;
    }
    
    public void bottomChange(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics, final String input) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        String organ = "pussy";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
            organ = "penis";
        }
        this.append(t, "\n\n" + this.separator + "\n\nAnd in order to get at " + hisHer + " " + organ + ", does one go up " + hisHer + " " + input + ", into " + hisHer + " " + input + ", down " + hisHer + " " + input + ", or around " + hisHer + " " + input + "?");
        for (int j = 0; j < 4; ++j) {
            String method = "";
            if (j == 0) {
                method = "up";
            }
            else if (j == 1) {
                method = "into";
            }
            else if (j == 2) {
                method = "down";
            }
            else if (j == 3) {
                method = "around";
            }
            final String finalMethod = method;
            final JButton ThisOne = new JButton(method);
            ThisOne.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    baseAesthetics[2] = input;
                    baseAesthetics[3] = finalMethod;
                    WorldState.this.feetCustomize(t, p, f, i, baseAesthetics);
                }
            });
            p.add(ThisOne);
        }
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.bottomCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomBottomAccess() {
        return this.customBottomAccess;
    }
    
    public String[] getCustomFeet() {
        return this.customFeet;
    }
    
    public void feetCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        this.append(t, "\n\n" + this.separator + "\n\nWhat footwear does " + this.customAliases[i] + "'s transformation give " + himHer + "?  Enter 'none' (without the quotes) to have " + himHer + " go barefoot.");
        final String current = baseAesthetics[9];
        final JButton Default = new JButton(current);
        Default.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.colorCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Default);
        final JButton Change = new JButton("Change");
        Change.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the name of the garment here.  Leave blank to use '" + current + "'.");
                if (input != null && !input.equals(current) && input.length() > 0) {
                    baseAesthetics[9] = input;
                }
                WorldState.this.colorCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Change);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.bottomCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public void colorCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        this.append(t, "\n\n" + this.separator + "\n\nWhen " + heShe + "'s transformed, " + this.customAliases[i] + " is surrounded by '" + baseAesthetics[5] + "' light.  Is this alright?");
        final JButton Keep = new JButton("Yes");
        Keep.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.weaponCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Keep);
        final JButton Change = new JButton("Change");
        Change.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the color description to be used.  Leave blank to use '" + baseAesthetics[5] + "'.");
                if (input != null && !input.equals(baseAesthetics[5]) && input.length() > 0) {
                    baseAesthetics[5] = input;
                }
                WorldState.this.weaponCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Change);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.bottomCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomColor() {
        return this.customColor;
    }
    
    public String[] getCustomAccessory() {
        return this.customAccessory;
    }
    
    public void weaponCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        this.append(t, "\n\n" + this.separator + "\n\nCurrently, " + this.customAliases[i] + " is set to fight using " + hisHer + " " + baseAesthetics[7] + ".  Is this okay?");
        final JButton Keep = new JButton("Yes");
        Keep.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.underwearCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Keep);
        final JButton Change = new JButton("Change");
        Change.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                final String input = JOptionPane.showInputDialog("Type the name of the weapon to be used.  Leave blank to use '" + baseAesthetics[7] + "'.");
                Boolean changed = false;
                if (input != null && !input.equals(baseAesthetics[7]) && input.length() > 0) {
                    changed = true;
                }
                if (changed) {
                    WorldState.this.weaponChange(t, p, f, i, baseAesthetics, input);
                }
                else {
                    WorldState.this.underwearCustomize(t, p, f, i, baseAesthetics);
                }
            }
        });
        p.add(Change);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.colorCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomWeapon() {
        return this.customWeapons;
    }
    
    public void weaponChange(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics, final String input) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        this.append(t, "\n\n" + this.separator + "\n\nDoes " + this.customAliases[i] + " swing " + hisHer + " " + input + ", shoot " + hisHer + " " + input + ", command " + hisHer + " " + input + ", or is " + hisHer + " weapon a part of " + himHer + "?");
        for (int j = 0; j < 4; ++j) {
            String method = "";
            if (j == 0) {
                method = "swing";
            }
            else if (j == 1) {
                method = "shoot";
            }
            else if (j == 2) {
                method = "command";
            }
            else if (j == 3) {
                method = "part of " + himHer;
            }
            final JButton ThisOne = new JButton(method);
            if (method.contains("part")) {
                method = "part";
            }
            final String finalMethod = method;
            ThisOne.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    baseAesthetics[7] = input;
                    baseAesthetics[8] = finalMethod;
                    WorldState.this.underwearCustomize(t, p, f, i, baseAesthetics);
                }
            });
            p.add(ThisOne);
        }
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.weaponCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomWeaponType() {
        return this.customWeaponTypes;
    }
    
    public void underwearCustomize(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        String hisHer = "her";
        String himHer = "her";
        String heShe = "she";
        if (this.genders[i].equals("male")) {
            hisHer = "his";
            himHer = "him";
            heShe = "he";
        }
        String bottomDesc = baseAesthetics[2];
        if (baseAesthetics[2].equals("strips")) {
            bottomDesc = "strips of cloth";
        }
        this.append(t, "\n\n" + this.separator + "\n\nThere's one final important question.  ");
        if (baseAesthetics[4].equals("none")) {
            this.append(t, String.valueOf(this.customAliases[i]) + "'s outfit doesn't currently include panties.  Should that be changed?");
            final JButton Change = new JButton("Wear panties");
            Change.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    baseAesthetics[4] = "panties";
                    WorldState.this.finalizeCustomization(t, p, f, i, baseAesthetics);
                }
            });
            p.add(Change);
        }
        else {
            this.append(t, "Would you prefer for " + this.customAliases[i] + " to stop wearing anything under " + hisHer + " " + bottomDesc + "?");
            final JButton Change = new JButton("Wear nothing");
            Change.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(final ActionEvent e) {
                    baseAesthetics[4] = "none";
                    WorldState.this.finalizeCustomization(t, p, f, i, baseAesthetics);
                }
            });
            p.add(Change);
        }
        final JButton Keep = new JButton("Leave it as is");
        Keep.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.finalizeCustomization(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Keep);
        final JButton Back = new JButton("Back");
        Back.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(final ActionEvent e) {
                WorldState.this.weaponCustomize(t, p, f, i, baseAesthetics);
            }
        });
        p.add(Back);
        p.validate();
        p.repaint();
    }
    
    public String[] getCustomUnder() {
        return this.customUnder;
    }
    
    public void finalizeCustomization(final JTextPane t, final JPanel p, final JFrame f, final int i, final String[] baseAesthetics) {
        p.removeAll();
        final String[] comparison = this.pickCosmetics(this.statSeed[i * 4], this.statSeed[i * 4 + 1], this.statSeed[i * 4 + 2], this.statSeed[i * 4 + 3]);
        for (int j = 0; j < comparison.length; ++j) {
            if (!comparison[j].equals(baseAesthetics[j])) {
                baseAesthetics[6] = "none";
            }
        }
        this.customTop[i] = baseAesthetics[0];
        this.customTopAccess[i] = baseAesthetics[1];
        this.customBottom[i] = baseAesthetics[2];
        this.customBottomAccess[i] = baseAesthetics[3];
        this.customUnder[i] = baseAesthetics[4];
        this.customColor[i] = baseAesthetics[5];
        this.customAccessory[i] = baseAesthetics[6];
        this.customWeapons[i] = baseAesthetics[7];
        this.customWeaponTypes[i] = baseAesthetics[8];
        this.customFeet[i] = baseAesthetics[9];
        this.append(t, "\n\n" + this.separator + "\n\n" + this.customAliases[i] + "'s customization is complete!\n\n");
        this.cosmeticsGen(t, p, f);
    }
    
    public void finalBattleIntro(final JTextPane t, final Chosen c) {
        c.say(t, "\"");
        int type = 0;
        for (int i = 0; i < 12; ++i) {
            if (i % 4 == 0) {
                if (c.getConfidence() > 66 - 33 * (i / 4) && c.isDrained()) {
                    type = 3;
                }
            }
            else if (i % 4 == 1) {
                if (c.getInnocence() > 66 - 33 * (i / 4) && c.isHypnotized()) {
                    type = 2;
                }
            }
            else if (i % 4 == 2) {
                if (c.getMorality() > 66 - 33 * (i / 4) && c.isImpregnated()) {
                    type = 1;
                }
            }
            else if (i % 4 == 3 && c.getDignity() > 66 - 33 * (i / 4) && c.isParasitized()) {
                type = 4;
            }
            if (type != 0) {
                i = 12;
            }
        }
        if (type == 3) {
            if (c.getConfidence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                if (c.getInnocence() > 66) {
                    c.say(t, "Demon Lord!  Hey, Demon Lord!  Come here and kill me already!");
                }
                else if (c.getInnocence() > 33) {
                    c.say(t, "Demon Lord!  You'd better kill me now, 'cause this is your last chance!");
                }
                else {
                    c.say(t, "This is it.  I will absolutely force the Demon Lord to kill me.");
                }
            }
            else if (c.getConfidence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                if (c.getInnocence() > 66) {
                    c.say(t, "So, this is my chance to die, right?");
                }
                else if (c.getInnocence() > 33) {
                    c.say(t, "I need to die right here.  I might not get another chance...");
                }
                else {
                    c.say(t, "This is my best - and perhaps only - opportunity to die.");
                }
            }
            else if (c.getInnocence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                c.say(t, "I really, really hope the Demon Lord kills me...");
            }
            else if (c.getInnocence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                c.say(t, "Please...  Please, let me find a way to die here...");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                c.say(t, "I fear that I am too insignificant to merit being killed by the Demon Lord... but I must try!");
            }
        }
        else if (type == 2) {
            if (c.getInnocence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                if (c.getConfidence() > 66) {
                    c.say(t, "Ah...  This is gonna be so much fun...");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "That big thing is so... pretty...");
                }
                else {
                    c.say(t, "For some reason... I feel like I should let this happen...");
                }
            }
            else if (c.getInnocence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                if (c.getConfidence() > 66) {
                    c.say(t, "Ugh, damn...  It's doing something to my head...!");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "My head feels...  No, no!  I can deal with this!");
                }
                else {
                    c.say(t, "No!  P-Please...!  Get out... of my head...!");
                }
            }
            else if (c.getConfidence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                c.say(t, "Hmph... It's attempting to exert control over my mind...");
            }
            else if (c.getConfidence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.STRUGGLE);
                c.say(t, "I must... avoid looking directly at the tower...!");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                c.say(t, "My... mind...  No!  I-I'm not strong enough to resist...!");
            }
        }
        else if (type == 1) {
            if (c.getMorality() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                if (c.getConfidence() > 66) {
                    c.say(t, "Though humanity will come to consider me an enemy soon, I will fight for them one last time!");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "One way or another, this will be my last fight on the side of humanity...");
                }
                else {
                    c.say(t, "I've become a terrible person, but...  At least I can fight to save people one last time...");
                }
            }
            else if (c.getMorality() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                if (c.getConfidence() > 66) {
                    c.say(t, "I don't know why I'm still bothering to save this city...  But it's too late to back down now!");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "After this, things are going to get complicated.  But at least for now, I'm still one of the Chosen!");
                }
                else {
                    c.say(t, "I've killed so many people...  But maybe I can make up for it now...");
                }
            }
            else if (c.getConfidence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                c.say(t, "First, I'll kill the Demon Lord.  Then, the true bloodshed will begin!");
            }
            else if (c.getConfidence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                c.say(t, "Alright, I just have to survive here, and then I can make my move against the government...");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                c.say(t, "Ugh, I don't care about this city or these people...  Why am I still doing this!?");
            }
        }
        else if (type == 4) {
            if (c.getDignity() > 66) {
                if (c.getConfidence() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                    c.say(t, "I will show mercy on my new fans in order to win an even deeper degree of devotion from them.");
                }
                else if (c.getConfidence() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                    c.say(t, "I see my fans among the Thralls, but I'm going to hold back against them.  I'm sure it'll turn out alright.");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    c.say(t, "My fans are here on the Demons' side...  I-I can't oppose them, I can't do it...!");
                }
            }
            else if (c.getDignity() > 33) {
                if (c.getConfidence() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                    c.say(t, "After I defeat the Demon Lord, my fans must acknowledge me as their new master!");
                }
                else if (c.getConfidence() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                    c.say(t, "I should still be able to convince my fans to switch sides...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                    c.say(t, "Ah, I see my fans out there...  Th-They'll go easy on me, right...?");
                }
            }
            else if (c.getConfidence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                c.say(t, "Well, I might have to beat up a few of my new friends, but I'm sure they won't hold it against me.");
            }
            else if (c.getConfidence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                c.say(t, "Hey, Thrall!  I recognize you from my fanclub!  No hard feelings, right?");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                c.say(t, "I feel bad for having to fight my new friends...");
            }
        }
        else {
            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FOCUS, Project.Emotion.FOCUS);
            if (c.getMorality() > 66) {
                if (c.getConfidence() > 66) {
                    c.say(t, "This is it.  I will save as many people as possible.");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "I'm going to do my best to save everyone!");
                }
                else {
                    c.say(t, "I-I'm ready!  Everyone's counting on us!");
                }
            }
            else if (c.getMorality() > 33) {
                if (c.getConfidence() > 66) {
                    c.say(t, "Alright, let's do this!  I won't lose!");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "I think we can get through this.");
                }
                else {
                    c.say(t, "A-Alright, I'm here!");
                }
            }
            else if (c.getConfidence() > 66) {
                c.say(t, "Hah!  No more holding back!");
            }
            else if (c.getConfidence() > 33) {
                c.say(t, "Everyone will know that I'm the one who saved them!");
            }
            else {
                c.say(t, "Let's just get this over with.");
            }
        }
        c.say(t, "\"");
    }
    
    public void finalThreaten(final JTextPane t, final WorldState w, final Chosen c) {
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        Chosen subject = null;
        Chosen loved = null;
        Chosen hated = null;
        Boolean hateful = true;
        Boolean loving = false;
        int resolveLost = 0;
        for (int i = 0; i < 3; ++i) {
            if (i != c.getNumber() && w.getCast()[i].isImpregnated() && w.getCast()[i].alive) {
                resolveLost += this.threatenResolve();
                if (subject == null) {
                    subject = w.getCast()[i];
                }
                else {
                    subject = null;
                }
                if (this.getRelationship(c.getNumber(), i) >= 0) {
                    if (hateful) {
                        hateful = false;
                        loved = w.getCast()[i];
                    }
                    else {
                        loving = true;
                    }
                }
                else {
                    hated = w.getCast()[i];
                }
            }
        }
        if (c.finalThreatened == 0) {
            if (c.getMorality() > 66) {
                w.append(t, "You torment " + c.getMainName() + " with visions, more clear than ever, of ");
                if (subject == null) {
                    w.append(t, String.valueOf(c.hisHer()) + " companions ");
                }
                else {
                    w.append(t, String.valueOf(subject.getMainName()) + " ");
                }
                w.append(t, "suffering a fate worse than death at the hands of the human governments, punishment for being impregnated by the Demon Lord.  ");
                if (c.isImpregnated()) {
                    w.append(t, "Even though " + c.getMainName() + " " + c.himHer() + "self is in the same position, " + c.heShe() + "'s more prone to worrying about other people than to worrying about " + c.himHer() + "self.  ");
                }
                else {
                    w.append(t, "Even though " + c.heShe() + "'s been told how important it is to stop such a child from being born, it's painful to see.  ");
                }
                if (subject == null) {
                    if (loving) {
                        w.append(t, String.valueOf(c.HeShe()) + " cares deeply about them both, perhaps even more than " + c.heShe() + " cares about right and wrong.");
                    }
                    else if (hateful) {
                        w.append(t, String.valueOf(c.HeShe()) + " may consider them both to be bad people, but " + c.heShe() + " doesn't think they deserve what's in store for them.");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " cares deeply about " + loved.getMainName() + ", and even though " + c.heShe() + " thinks far less of " + hated.getMainName() + ", " + c.heShe() + " doesn't think that " + hated.heShe() + " deserves what's in store for " + hated.himHer() + ".");
                    }
                }
                else if (this.getRelationship(c.getNumber(), subject.getNumber()) >= 0) {
                    w.append(t, String.valueOf(c.HeShe()) + " cares deeply about " + subject.getMainName() + ", perhaps even more than " + c.heShe() + " cares about right and wrong.");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " may consider " + subject.getMainName() + " to be a bad person, but " + c.heShe() + " doesn't think " + subject.heShe() + " deserves what's in store for " + subject.himHer() + ".");
                }
            }
            else if (c.getMorality() > 33) {
                w.append(t, "Images of ");
                if (subject == null) {
                    w.append(t, String.valueOf(c.hisHer()) + " allies ");
                }
                else {
                    w.append(t, String.valueOf(subject.getMainName()) + " ");
                }
                w.append(t, "being captured and cruelly sealed away are forced into " + c.getMainName() + "'s mind along with the undeniable fact that this is what will happen even if they're victorious against the Demons, as the human governments will not permit the abominations born from unions between the Chosen and a Demon Lord to exist.  ");
                if (c.isImpregnated()) {
                    w.append(t, "As if the fact that " + c.heShe() + "'d face the same treatment wasn't bad enough, ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " knows " + c.heShe() + " could very well be forced to carry such a child " + c.himHer() + "self, and ");
                }
                if (subject == null) {
                    if (loving) {
                        w.append(t, String.valueOf(c.hisHer()) + " concern for " + c.hisHer() + " friends makes it impossible to remain objective.");
                    }
                    else if (hateful) {
                        w.append(t, String.valueOf(c.heShe()) + " finds the visions so awful that " + c.heShe() + " can't even enjoy seeing those " + c.heShe() + " hates get their punishment.");
                    }
                    else {
                        w.append(t, String.valueOf(c.hisHer()) + " concern for them (more " + loved.getMainName() + " than " + hated.getMainName() + ") makes it impossible to remain objective.");
                    }
                }
                else if (this.getRelationship(c.getNumber(), subject.getNumber()) >= 0) {
                    w.append(t, String.valueOf(c.hisHer()) + " concern for " + subject.getMainName() + " makes it impossible to remain objective.");
                }
                else {
                    w.append(t, String.valueOf(c.heShe()) + " finds the visions so awful that " + c.heShe() + " can't even enjoy seeing " + c.hisHer() + " rival get punished.");
                }
            }
            else {
                w.append(t, String.valueOf(c.getMainName()) + "'s mind is filled with visions of ");
                if (subject == null) {
                    w.append(t, "the other two Chosen ");
                }
                else {
                    w.append(t, String.valueOf(subject.getMainName()) + " ");
                }
                w.append(t, "undergoing the endless, torturous sealing the government performs to stop the Chosen from giving birth to a Demon Lord's child.  ");
                if (subject == null) {
                    if (loving) {
                        w.append(t, "They're possibly the only other people " + c.heShe() + " genuinely cares about, and ");
                    }
                    else if (hateful) {
                        w.append(t, String.valueOf(c.HeShe()) + " doesn't care at all about them for their own sake, but ");
                    }
                    else {
                        w.append(t, String.valueOf(c.HeShe()) + " would happily condemn " + hated.getMainName() + " to that fate, but " + loved.getMainName() + " is actually someone " + c.heShe() + " genuinely cares about, and ");
                    }
                }
                else if (this.getRelationship(c.getNumber(), subject.getNumber()) >= 0) {
                    w.append(t, String.valueOf(subject.getMainName()) + " is possibly the only other person " + c.heShe() + " genuinely cares about, and ");
                }
                else {
                    w.append(t, String.valueOf(c.HeShe()) + " doesn't care at all about " + subject.getMainName() + " " + subject.himHer() + "self, but ");
                }
                if (c.isImpregnated()) {
                    w.append(t, "the reminder that " + c.getMainName() + " will suffer the same way fills " + c.himHer() + " with helpless rage.");
                }
                else {
                    w.append(t, "the fact that it can happen to people " + c.heShe() + " knows so well makes the risk of being put in the same situation feel very real.");
                }
            }
        }
        else if (c.getMorality() > 66) {
            w.append(t, String.valueOf(c.getMainName()) + " is forced to endure more visions of ");
            if (subject == null) {
                w.append(t, String.valueOf(c.hisHer()) + " fellow Chosen ");
            }
            else {
                w.append(t, String.valueOf(subject.getMainName()) + " ");
            }
            w.append(t, "being sealed away.  " + c.HisHer() + " heart aches as " + c.heShe() + " struggles to focus on " + c.hisHer() + " mission.");
        }
        else if (c.getMorality() > 33) {
            w.append(t, String.valueOf(c.getMainName()) + "'s blood seems to run cold as you show " + c.himHer() + " more images of ");
            if (subject == null) {
                w.append(t, String.valueOf(c.hisHer()) + " allies ");
            }
            else {
                w.append(t, String.valueOf(subject.getMainName()) + " ");
            }
            w.append(t, "being effectively tortured at the hands of the humans they're currently fighting for.  " + c.HeShe() + "'s filled with terror and revulsion.");
        }
        else {
            w.append(t, "You send " + c.getMainName() + " more telepathic imagery of ");
            if (subject == null) {
                w.append(t, "the other two Chosen ");
            }
            else {
                w.append(t, String.valueOf(subject.getMainName()) + " ");
            }
            w.append(t, "facing a horrible fate.  " + c.HisHer() + " thoughts turn in increasingly dark directions.");
        }
        w.append(t, "\n\n");
        final int[] parameters = new int[8];
        parameters[0] = 200;
        c.damage(t, w, parameters);
        resolveLost *= c.getFEARLevel();
        c.resolve -= resolveLost;
        if (c.resolve <= 0) {
            c.defeatType = 1;
            w.append(t, "-" + resolveLost + "% Resolve\n\n");
            w.underlineAppend(t, "Resolve Broken");
            w.append(t, "\n\n");
            if (c.getMorality() > 66) {
                w.append(t, String.valueOf(c.getMainName()) + " falls to " + c.hisHer() + " knees, overwhelmed by emotion.  " + c.HeShe() + " comes to the realization that " + c.heShe() + " can't support the side of humanity anymore.");
            }
            else if (c.getMorality() > 33) {
                w.append(t, String.valueOf(c.getMainName()) + " abruptly stops fighting your forces.  Something inside " + c.himHer() + " has snapped.  Instead, " + c.heShe() + " turns " + c.hisHer() + " back on the battlefield.");
            }
            else {
                w.append(t, "Grinding " + c.hisHer() + " teeth, " + c.getMainName() + " abruptly breaks off " + c.hisHer() + " attack, leaving the cluster of Demons " + c.heShe() + " was targeting unscathed.  As much as it angers " + c.himHer() + ", " + c.heShe() + "'s realized that this isn't " + c.hisHer() + " fight.");
            }
            c.say(t, "\n\n\"");
            if (c.getMorality() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                if (c.getInnocence() > 66) {
                    c.say(t, "It was... really stupid of me ");
                    this.corruptColors(c);
                    c.say(t, "to think I was fighting on the right side...");
                }
                else if (c.getInnocence() > 33) {
                    c.say(t, "I... I need to apologize to the others ");
                    this.corruptColors(c);
                    c.say(t, "for taking so long to realize it...");
                }
                else {
                    c.say(t, "Both sides are equally evil.  The Demons... ");
                    this.corruptColors(c);
                    c.say(t, "perhaps even less so...");
                }
            }
            else if (c.getMorality() > 33) {
                if (c.getInnocence() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    c.say(t, "I get it now...  ");
                    this.corruptColors(c);
                    c.say(t, "I've been fighting for the bad guys all along...");
                }
                else if (c.getInnocence() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    c.say(t, "I think... ");
                    this.corruptColors(c);
                    c.say(t, "the only way to stop this is to join the Demons...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.ANGER);
                    c.say(t, "No... ");
                    this.corruptColors(c);
                    c.say(t, "I cannot lend my support to those who use such cruel methods!");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                if (c.getInnocence() > 66) {
                    c.say(t, "Am I seriously considering joining the Demons!?  I... ");
                    this.corruptColors(c);
                    c.say(t, "actually, I guess I am...");
                }
                else if (c.getInnocence() > 33) {
                    c.say(t, "From the start, ");
                    this.corruptColors(c);
                    c.say(t, "I guess it made more sense for me to be on the Demons' side...");
                }
                else {
                    c.say(t, "This was your plan all along, wasn't it?  Very well.  ");
                    this.corruptColors(c);
                    c.say(t, "I will join you.");
                }
            }
        }
        else {
            w.append(t, "-" + resolveLost + "% Resolve (" + c.resolve + "% remaining)\n\n");
            c.say(t, "\"");
            if (c.getMorality() > 66) {
                if (c.finalThreatened % 3 == 0) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    if (c.getInnocence() > 66) {
                        c.say(t, "This...  This is too cruel...");
                    }
                    else if (c.getInnocence() > 33) {
                        c.say(t, "It doesn't seem right...");
                    }
                    else {
                        c.say(t, "Is...  Is this truly justifiable...?");
                    }
                }
                else if (c.finalThreatened % 3 == 1) {
                    if (c.getConfidence() > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                        c.say(t, "Ugh...!  Stop trying to manipulate me...!");
                    }
                    else if (c.getConfidence() > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                        c.say(t, "There has to be something I can do...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                        c.say(t, "This is wrong... but what can I do about it...?");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.ANGER);
                    if (c.getDignity() > 66) {
                        c.say(t, "There's nothing I can do...  Or is there?");
                    }
                    else if (c.getDignity() > 33) {
                        c.say(t, "Could it be better for the Demons to win after all...?");
                    }
                    else {
                        c.say(t, "This is actually making me a little angry...");
                    }
                }
            }
            else if (c.getMorality() > 33) {
                if (c.finalThreatened % 3 == 0) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    if (c.getInnocence() > 66) {
                        c.say(t, "Who... Who are the real bad guys...?");
                    }
                    else if (c.getInnocence() > 33) {
                        c.say(t, "This is... just wrong...");
                    }
                    else {
                        c.say(t, "Which outcome is better...?");
                    }
                }
                else if (c.finalThreatened % 3 == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                    if (c.getConfidence() > 66) {
                        c.say(t, "I should be strong enough to stop this...!");
                    }
                    else if (c.getConfidence() > 33) {
                        c.say(t, "I don't want this...");
                    }
                    else {
                        c.say(t, "I... I don't want to think about this anymore...!");
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                    if (c.getDignity() > 66) {
                        c.say(t, "I could just lose on purpose...");
                    }
                    else if (c.getDignity() > 33) {
                        c.say(t, "Huh?  You...  You don't want this to happen either...?");
                    }
                    else {
                        c.say(t, "I can't allow this, no matter what I have to do...");
                    }
                }
            }
            else if (c.finalThreatened % 3 == 0) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.SHAME);
                if (c.getInnocence() > 66) {
                    c.say(t, "No way, I don't wanna let that happen to me!");
                }
                else if (c.getInnocence() > 33) {
                    c.say(t, "Even if I win here, I'm still...");
                }
                else {
                    c.say(t, "I must admit that the same could happen to me...");
                }
            }
            else if (c.finalThreatened % 3 == 1) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.ANGER);
                if (c.getConfidence() > 66) {
                    c.say(t, "But at least the government could never catch me, right?  R-Right, definitely not!");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "I want to fight it...!");
                }
                else {
                    c.say(t, "It's only a matter of time until I end up like that too...");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.SHAME);
                if (c.getDignity() > 66) {
                    c.say(t, "I liked being called a hero, but...");
                }
                else if (c.getDignity() > 33) {
                    c.say(t, "I hate the Demons... but I think I hate this more...");
                }
                else {
                    c.say(t, "Hahah...  I could actually... help the Demons win instead...");
                }
            }
        }
        c.say(t, "\"");
        ++c.finalThreatened;
    }
    
    public void finalSlime(final JTextPane t, final WorldState w, final Chosen c) {
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        if (c.finalSlimed == 0) {
            if (c.getInnocence() > 66) {
                w.append(t, String.valueOf(c.getMainName()) + "'s face and body are smeared by the white, sticky goop launched by your Demons.  But rather than recoiling from it as " + c.heShe() + " originally did, " + c.heShe() + " unthinkingly spreads " + c.hisHer() + " arms and allows it to fall upon " + c.himHer() + ".  The feelings of dissociation with " + c.hisHer() + " own body, stronger than ever, are almost comforting now.");
            }
            else if (c.getInnocence() > 33) {
                w.append(t, "With your deeper incursion into material reality, your slime is more potent than ever, and against those like " + c.getMainName() + " whose minds have already been weakened, the effects are immediate.  As the substance splatters against " + c.hisHer() + " skin, " + c.heShe() + " briefly feels like " + c.hisHer() + " body isn't " + c.hisHer() + " body briefly feels like it isn't " + c.hisHer() + " own - and if this continues, it truly won't be.");
            }
            else {
                w.append(t, String.valueOf(c.getMainName()) + " scrambles to dodge the globs of slime spurted out by your Demons, fully aware that contact with the substance will be too intense for " + c.hisHer() + " sanity to survive, but plenty still hit " + c.himHer() + ".  " + c.HeShe() + " groans, " + c.hisHer() + " rationality fading away in favor of the animalistic desires that dominate the Demonic hivemind.");
            }
        }
        else if (c.getInnocence() > 66) {
            w.append(t, "With every spatter of slime against " + c.hisHer() + " skin, " + c.getMainName() + "'s eyes glaze over further and " + c.hisHer() + " expression becomes more detached and dreamy.  At this rate, " + c.hisHer() + " mind will soon be completely yours.");
        }
        else if (c.getInnocence() > 33) {
            w.append(t, String.valueOf(c.getMainName()) + " falters under the weight of the slime covering " + c.himHer() + ", " + c.hisHer() + " mind and " + c.hisHer() + " body both feeling the effects strongly.  " + c.HeShe() + " shakes " + c.hisHer() + " head, but the haze only grows deeper and deeper.");
        }
        else {
            w.append(t, String.valueOf(c.getMainName()) + "'s shouts of protest are meant to help " + c.himHer() + " focus and keep " + c.hisHer() + " sanity, but they just let more of the white fluid trickle into " + c.hisHer() + " mouth.  " + c.HeShe() + "'s powerless to stop the process of " + c.hisHer() + " brainwashing now that it's begun in earnest.");
        }
        w.append(t, "\n\n");
        final int[] parameters = new int[8];
        parameters[1] = 200;
        c.damage(t, w, parameters);
        final int resolveLost = this.slimeResolve() * c.getDISGLevel();
        c.resolve -= resolveLost;
        if (c.resolve <= 0) {
            c.defeatType = 2;
            w.append(t, "-" + resolveLost + "% Resolve\n\n");
            w.underlineAppend(t, "Resolve Broken");
            w.append(t, "\n\n");
            if (c.getInnocence() > 66) {
                w.append(t, String.valueOf(c.getMainName()) + " gradually stops fighting, unable to even remember why " + c.heShe() + " ever opposed you in the first place.  A smile spreads across " + c.hisHer() + " face as " + c.heShe() + " realizes how much happier " + c.heShe() + " is now that " + c.heShe() + "'s not actively opposing you.  Getting " + c.himHer() + " to fight " + c.hisHer() + " allies would be more difficult, but for the time being, you allow " + c.himHer() + " to simply stand in the middle of the street, ignoring and being ignored by your forces battling around " + c.himHer() + ".");
            }
            else if (c.getInnocence() > 33) {
                w.append(t, "You blast a command with all of your psychic might into " + c.getMainName() + "'s mind, ordering " + c.himHer() + " to release " + c.hisHer() + " transformation and stop moving.  Before " + c.heShe() + " can even think of resisting, " + c.heShe() + "'s returned to being ");
                if (c.givenName.equals(c.getMainName())) {
                    w.append(t, "a regular civilian");
                }
                else {
                    w.append(t, "merely " + c.getGivenName());
                }
                w.append(t, ", " + c.hisHer() + " Chosen garb turning into sparkles and drifting away.  " + c.HeShe() + "'s forced to stand in the middle of the street naked, unable to even move " + c.hisHer() + " hands to cover " + c.himHer() + "self.  Meanwhile, the white slime continues to seep into " + c.hisHer() + " skin, deepening your control even further to aid the training " + c.heShe() + "'ll receive after the battle.");
            }
            else {
                w.append(t, "Your psychic control over " + c.getMainName() + " has finally grown to the point that you can order " + c.himHer() + " to slumber on demand.  " + c.HeShe() + " screams and clutches " + c.hisHer() + " head, then bites " + c.hisHer() + " lip and uses " + c.hisHer() + " fingers to pinch " + c.himHer() + "self, trying every possible method to keep " + c.himHer() + "self awake.  But none of them work, and " + c.heShe() + " soon passes out, leaving you free to cement your victory.");
            }
            c.say(t, "\n\n\"");
            if (c.getInnocence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                if (c.getMorality() > 66) {
                    c.say(t, "Yes... ");
                    this.corruptColors(c);
                    c.say(t, "it's better to just let my master tell me what's right and wrong...");
                }
                else if (c.getMorality() > 33) {
                    c.say(t, "I'm just... ");
                    this.corruptColors(c);
                    c.say(t, "gonna stop thinking...");
                }
                else {
                    c.say(t, "Ah... ");
                    this.corruptColors(c);
                    c.say(t, "this feels so much better...");
                }
            }
            else if (c.getInnocence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                if (c.getConfidence() > 66) {
                    c.say(t, "I've been reduced to... ");
                    this.corruptColors(c);
                    c.say(t, "this...");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "Everyone can see that I'm... ");
                    this.corruptColors(c);
                    c.say(t, "a failure...");
                }
                else {
                    c.say(t, "Nnh...  I never should have pretended to be anyone but ");
                    this.corruptColors(c);
                    c.say(t, "the weak, stupid " + c.getGivenName() + "...");
                }
            }
            else if (c.getConfidence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                c.say(t, "No!  Without me... we'll certainly... ");
                this.corruptColors(c);
                c.say(t, "be defeated...");
            }
            else if (c.getConfidence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.STRUGGLE);
                c.say(t, "There must... be something I...  ");
                this.corruptColors(c);
                c.say(t, "Unh...");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                c.say(t, "I suppose... I never... had... ");
                this.corruptColors(c);
                c.say(t, "a chance...");
            }
        }
        else {
            w.append(t, "-" + resolveLost + "% Resolve (" + c.resolve + "% remaining)\n\n");
            c.say(t, "\"");
            if (c.getInnocence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.JOY);
                if (c.finalSlimed % 3 == 0) {
                    if (c.getConfidence() > 66) {
                        c.say(t, "Huh...  I feel like I should be kinda mad?  I dunno why...");
                    }
                    else if (c.getConfidence() > 33) {
                        c.say(t, "Feels so weeeird...");
                    }
                    else {
                        c.say(t, "Yes... mess me up...");
                    }
                }
                else if (c.finalSlimed % 3 == 1) {
                    if (c.getDignity() > 66) {
                        c.say(t, "That's right, give me all your white stuff!");
                    }
                    else if (c.getDignity() > 33) {
                        c.say(t, "This is nice...");
                    }
                    else {
                        c.say(t, "Heheh, I'm all sticky...");
                    }
                }
                else if (c.getMorality() > 66) {
                    c.say(t, "Join you?  That would be... a bad thing, right...?  But I don't remember why...");
                }
                else if (c.getMorality() > 33) {
                    c.say(t, "It would be nice... not to have to think anymore... yeah...");
                }
                else {
                    c.say(t, "I... hate the Demons, right...?  But joining them actually sounds kinda fun...");
                }
            }
            else if (c.getInnocence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                if (c.finalSlimed % 3 == 0) {
                    if (c.getConfidence() > 66) {
                        c.say(t, "Damn it!  Damn it, no...!");
                    }
                    else if (c.getConfidence() > 33) {
                        c.say(t, "Need to... get away...!");
                    }
                    else {
                        c.say(t, "I can't... I can't do anything...!");
                    }
                }
                else if (c.finalSlimed % 3 == 1) {
                    if (c.getDignity() > 66) {
                        c.say(t, "Everyone's... voices...");
                    }
                    else if (c.getDignity() > 33) {
                        c.say(t, "Ah...!  Agh...");
                    }
                    else {
                        c.say(t, "I won't... lose to this...!");
                    }
                }
                else if (c.getMorality() > 66) {
                    c.say(t, "I don't want to... let everyone down...");
                }
                else if (c.getMorality() > 33) {
                    c.say(t, "I-I can... take it...!");
                }
                else {
                    c.say(t, "Don't... mess with me...!");
                }
            }
            else if (c.finalSlimed % 3 == 0) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                if (c.getConfidence() > 66) {
                    c.say(t, "I will not allow you to take my mind!");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "Focus!  Focus!");
                }
                else {
                    c.say(t, "If this keeps up...!");
                }
            }
            else if (c.finalSlimed % 3 == 1) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FEAR);
                if (c.getDignity() > 66) {
                    c.say(t, "I will not face such a shameful end...!");
                }
                else if (c.getDignity() > 33) {
                    c.say(t, "Must... think through this...!");
                }
                else {
                    c.say(t, "Aaagh!  No!  I will absolutely not give in!  Gaah!");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                if (c.getMorality() > 66) {
                    c.say(t, "Everyone, please forgive me...");
                }
                else if (c.getMorality() > 33) {
                    c.say(t, "I'm... slipping away...!");
                }
                else {
                    c.say(t, "I will never bow... to another...!");
                }
            }
        }
        c.say(t, "\"");
        ++c.finalSlimed;
    }
    
    public void finalAttack(final JTextPane t, final WorldState w, final Chosen c) {
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        int resolveLost = 1;
        if (c.isDrained()) {
            resolveLost = this.attackResolve();
        }
        if (c.finalAttacked == 0) {
            if (!this.tickleOn) {
                if (c.isDrained()) {
                    if (c.getConfidence() > 66) {
                        w.append(t, String.valueOf(c.getMainName()) + " has always thrown " + c.himHer() + "self into your Demons' attacks without hesitation, and that still hasn't changed.  But while " + c.heShe() + " originally did it to scoff at the weakness of your minions, now " + c.heShe() + " continues out of determination to die.  Your Demons' enhanced claws, more powerful and painful than ever, serve to punish " + c.himHer() + " for forgetting that it is ultimately the Demon Lord's choice whether " + c.heShe() + " will be granted death.");
                    }
                    else if (c.getConfidence() > 33) {
                        w.append(t, String.valueOf(c.getMainName()) + " had hoped to force you to kill " + c.himHer() + " in this battle by fighting to stop you, but " + c.hisHer() + " resolve falters when " + c.heShe() + " feels how much more painful your Demons' enhanced attacks are.  The fear that " + c.heShe() + "'s just extending " + c.hisHer() + " torment even longer causes " + c.himHer() + " to seriously consider throwing " + c.himHer() + "self completely on your mercy.");
                    }
                    else {
                        w.append(t, String.valueOf(c.getMainName()) + " had already accepted that " + c.heShe() + " could only be granted death on the Demon Lord's whim, but upon feeling the bite of the Demon's claws into " + c.hisHer() + " flesh, " + c.heShe() + " desperately throws " + c.hisHer() + " body onto them, greedily seeking to end it all " + c.himHer() + "self.  " + c.HeShe() + " needs to be shown that this is completely futile before " + c.heShe() + " finally submits.");
                    }
                }
                else if (c.getConfidence() > 66) {
                    w.append(t, "At first glance, " + c.getMainName() + " is still throwing " + c.himHer() + "self into your Demons' attacks without hesitation, the same way as " + c.heShe() + " always has, but there's a slight defensiveness in " + c.hisHer() + " movements that wasn't there before.  Your Demons' claws are sharper than ever, and while " + c.heShe() + " isn't afraid of the pain, " + c.heShe() + " knows " + c.heShe() + " could actually die here.  The question of whether " + c.heShe() + "'s willing to do so keeps returning to " + c.hisHer() + " mind.");
                }
                else if (c.getConfidence() > 33) {
                    w.append(t, "Your Demons advance on " + c.getMainName() + ", and " + c.heShe() + " backs up warily.  The pain of their enhanced claws is distracting and debilitating, but " + c.hisHer() + " true concern is the possibility that " + c.heShe() + " could die.  " + c.HeShe() + " thought " + c.heShe() + " was prepared for it, but now " + c.heShe() + " realizes that " + c.heShe() + " was deluding " + c.himHer() + "self.");
                }
                else {
                    w.append(t, String.valueOf(c.getMainName()) + " is trying harder than ever to dodge your Demons' attacks, terrified by the prospect of being killed here.  But " + c.heShe() + " can't avoid them all, and when one of them cuts into " + c.hisHer() + " skin, " + c.hisHer() + " screams come more from fear than from pain.  " + c.HeShe() + " begins to find the prospect of complete surrender more and more appealing.");
                }
            }
            else if (c.isDrained()) {
                if (c.getConfidence() > 66) {
                    w.append(t, String.valueOf(c.getMainName()) + " has always thrown " + c.himHer() + "self into your Demons' attacks without hesitation, and that still hasn't changed.  But while " + c.heShe() + " originally did it to scoff at the weakness of your minions, now " + c.heShe() + " continues out of determination to die.  However, your Demons' claws, now optimized further than ever to inflict unbearable tickling without the slighest bit of actual bodily harm, only serve to punish " + c.himHer() + " for forgetting that it is ultimately the Demon Lord's choice whether " + c.heShe() + " will be granted death.");
                }
                else if (c.getConfidence() > 33) {
                    w.append(t, String.valueOf(c.getMainName()) + " had hoped to force you to kill " + c.himHer() + " in this battle by fighting to stop you, but " + c.hisHer() + " resolve falters when " + c.heShe() + " feels how much worse your Demons' tickling has become under the influence of your incursion into reality.  The fear that " + c.heShe() + "'s just extending " + c.hisHer() + " torment even longer causes " + c.himHer() + " to seriously consider throwing " + c.himHer() + "self completely on your mercy.");
                }
                else {
                    w.append(t, String.valueOf(c.getMainName()) + " had already accepted that " + c.heShe() + " could only be granted death on the Demon Lord's whim, but upon feeling your Demon's claws beginning to tickle " + c.himHer() + ", " + c.heShe() + " desperately throws " + c.hisHer() + " body onto them, greedily attempting to impale " + c.himHer() + "self on them and end it all.  Of course, they bend harmlessly, having been specially designed with the Chosen's temporarily lower durability in mind.  " + c.getMainName() + " needs to be shown that this is completely futile before " + c.heShe() + " finally submits.");
                }
            }
            else if (c.getConfidence() > 66) {
                w.append(t, "At first glance, " + c.getMainName() + " is still throwing " + c.himHer() + "self into your Demons' attacks without hesitation, the same way as " + c.heShe() + " always has, but there's a slight defensiveness in " + c.hisHer() + " movements that wasn't there before.  Your Demons' appendages are capable of tickling more brutally than ever, and while " + c.heShe() + " doesn't want to acknowledge the discomfort, " + c.heShe() + " knows that if " + c.heShe() + " gets tickled into submission, it would be easy to kill " + c.himHer() + " while " + c.hisHer() + " guard is down.  The question of whether " + c.heShe() + "'s willing to accept that risk keeps returning to " + c.hisHer() + " mind.");
            }
            else if (c.getConfidence() > 33) {
                w.append(t, "Your Demons advance on " + c.getMainName() + ", and " + c.heShe() + " backs up warily.  The tickling inflicted by their enhanced claws is distracting and debilitating, but " + c.hisHer() + " true concern is the possibility that they could go further and actually kill " + c.himHer() + ".  " + c.HeShe() + " thought " + c.heShe() + " was prepared for it, but now " + c.heShe() + " realizes that " + c.heShe() + " was deluding " + c.himHer() + "self.");
            }
            else {
                w.append(t, String.valueOf(c.getMainName()) + " is trying harder than ever to dodge your Demons' attacks, terrified by the prospect of being killed here.  But " + c.heShe() + " can't avoid them all, and when one of them pins " + c.himHer() + " down and starts jabbing " + c.hisHer() + " armpits, " + c.hisHer() + " screams come more from fear than from discomfort.  " + c.HeShe() + " begins to find the prospect of complete surrender more and more appealing.");
            }
        }
        else if (this.tickleOn) {
            if (c.isDrained()) {
                if (c.getConfidence() > 66) {
                    w.append(t, String.valueOf(c.getMainName()) + " grabs your Demons by the claws and forcefully tries to stab " + c.himHer() + "self with them, but all " + c.heShe() + " gets for " + c.hisHer() + " trouble is more tickling.  " + c.HisHer() + " determined expression is marred by the tears flowing down " + c.hisHer() + " cheeks.");
                }
                else if (c.getConfidence() > 33) {
                    w.append(t, "Staggering with pain, " + c.getMainName() + " keeps fighting in hopes that one of your Demons will deal " + c.himHer() + " a fatal blow, but they continue to restrain themselves to tickling as they strike back.  It's becoming harder and harder for " + c.himHer() + " to convince " + c.himHer() + "self that this will work.");
                }
                else {
                    w.append(t, "Your Demons continue to tickle " + c.getMainName() + " as punishment for trying to fight back.  " + c.HisHer() + " struggles slow as " + c.heShe() + " comes to realize that nothing short of complete submission will save " + c.himHer() + ".");
                }
            }
            else if (c.getConfidence() > 66) {
                w.append(t, "As prideful as " + c.heShe() + " is, " + c.getMainName() + " has to admit that your tickling Demons could have inflicted some grievous wounds on " + c.himHer() + " by now if they really wanted to.  It makes " + c.himHer() + " question whether " + c.heShe() + " can really afford to push you any further.");
            }
            else if (c.getConfidence() > 33) {
                w.append(t, String.valueOf(c.getMainName()) + " tries to defend " + c.himHer() + "self against your Demons' continued tickling, but they still manage to jab " + c.hisHer() + " sensitive spots and make " + c.himHer() + " gasp and squirm.  It's becoming more and more clear that " + c.heShe() + "'s only surviving because you're letting " + c.himHer() + ".");
            }
            else {
                w.append(t, "Your Demons tickle " + c.getMainName() + " roughly, their claws stopping just short of actually piercing " + c.hisHer() + " skin.  " + c.HeShe() + " can't suppress " + c.hisHer() + " terror at the thought that they could easily go further.");
            }
        }
        else if (c.isDrained()) {
            if (c.getConfidence() > 66) {
                w.append(t, String.valueOf(c.getMainName()) + " grabs your Demons by the claws and forcefully tries to stab " + c.himHer() + "self with them, but they retract the blades before they can do more than break the skin.  " + c.getMainName() + "'s determined expression is marred by the tears flowing down " + c.hisHer() + " cheeks.");
            }
            else if (c.getConfidence() > 33) {
                w.append(t, "Staggering with pain, " + c.getMainName() + " keeps fighting in hopes that one of your Demons will deal " + c.himHer() + " a fatal blow, but they continue to avoid " + c.hisHer() + " vitals as they strike back.  It's becoming harder and harder for " + c.himHer() + " to convince " + c.himHer() + "self that this will work.");
            }
            else {
                w.append(t, "Your Demons continue to torture " + c.getMainName() + " as punishment for trying to fight back.  " + c.HisHer() + " struggles slow as " + c.heShe() + " comes to realize that nothing short of complete submission will save " + c.himHer() + ".");
            }
        }
        else if (c.getConfidence() > 66) {
            w.append(t, "As prideful as " + c.heShe() + " is, " + c.getMainName() + " has to admit that your attacking Demons could have inflicted more than mere flesh wounds on " + c.himHer() + " by now if they really wanted to.  It makes " + c.himHer() + " question whether " + c.heShe() + " can really afford to push you any further.");
        }
        else if (c.getConfidence() > 33) {
            w.append(t, String.valueOf(c.getMainName()) + " tries to defend " + c.himHer() + "self against your Demons' continued attacks, but they still manage to give " + c.himHer() + " several painful shallow cuts.  It's becoming more and more clear that " + c.heShe() + "'s only surviving because you're letting " + c.himHer() + ".");
        }
        else {
            w.append(t, "Your Demons savagely attack " + c.getMainName() + ", their claws stopping just short of actually piercing " + c.hisHer() + " vitals.  " + c.HeShe() + " can't suppress " + c.hisHer() + " terror at the thought that they could easily go for the kill.");
        }
        w.append(t, "\n\n");
        final int[] parameters = new int[8];
        parameters[2] = 200;
        c.damage(t, w, parameters);
        resolveLost *= c.getPAINLevel();
        c.resolve -= resolveLost;
        if (c.resolve <= 0) {
            w.append(t, "-" + resolveLost + "% Resolve\n\n");
            w.underlineAppend(t, "Resolve Broken");
            w.append(t, "\n\n");
            if (c.isDrained()) {
                c.defeatType = 3;
                if (c.getConfidence() > 66) {
                    w.append(t, String.valueOf(c.getMainName()) + " collapses face-first onto the pavement, exhausted after fighting so hard and enduring ");
                    if (this.tickleOn) {
                        w.append(t, "so much tickling");
                    }
                    else {
                        w.append(t, "the sting of so many wounds");
                    }
                    w.append(t, ".  " + c.HeShe() + " closes " + c.hisHer() + " eyes, accepting at last that " + c.heShe() + "'s powerless to save " + c.himHer() + "self.");
                }
                else if (c.getConfidence() > 33) {
                    w.append(t, String.valueOf(c.getMainName()) + " can no longer fight through the tears");
                    if (this.tickleOn) {
                        w.append(t, " of laughter");
                    }
                    w.append(t, ", and " + c.heShe() + " collapses onto " + c.hisHer() + " hands and knees in an obvious show of submission.  " + c.HeShe() + " doesn't even try to protect " + c.himHer() + "self or squirm away from your Demons' claws anymore, accepting that the torture will continue as long as the Demon Lord wants it to.");
                }
                else {
                    w.append(t, String.valueOf(c.getMainName()) + " finally realizes that " + c.heShe() + "'s being punished for continuing to fight.  " + c.HeShe() + " stops struggling, even though " + c.heShe() + " can't suppress ");
                    if (this.tickleOn) {
                        w.append(t, String.valueOf(c.hisHer()) + " screams of laughter as your Demons tickle " + c.himHer() + ".");
                    }
                    else {
                        w.append(t, "sobs of pain.");
                    }
                }
                c.say(t, "\n\n\"");
                if (c.getConfidence() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    if (c.getInnocence() > 66) {
                        c.say(t, "I guess... ");
                        this.corruptColors(c);
                        c.say(t, "I'm really not used to submitting to my new master...");
                    }
                    else if (c.getInnocence() > 33) {
                        c.say(t, "Ugh... ");
                        this.corruptColors(c);
                        c.say(t, "I never had a chance after all..");
                    }
                    else {
                        c.say(t, "It was only foolish pride ");
                        this.corruptColors(c);
                        c.say(t, "that led me to resist...");
                    }
                }
                else if (c.getConfidence() > 33) {
                    if (this.tickleOn) {
                        Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.LEWD);
                        if (c.getInnocence() > 66) {
                            c.say(t, "Ahahah!  I give up!  ");
                            this.corruptColors(c);
                            c.say(t, "I give uuup!  Hahahahah!");
                        }
                        else if (c.getInnocence() > 33) {
                            c.say(t, "Ahah... g-go on... ");
                            this.corruptColors(c);
                            c.say(t, "I won't stop you.  Ahahah!");
                        }
                        else {
                            c.say(t, "I yield!  Ah!  Hahah, I mean, I give up, ");
                            this.corruptColors(c);
                            c.say(t, "I give up, I won't fight you anymore, ahahahahah!");
                        }
                    }
                    else if (c.getInnocence() > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                        c.say(t, "Ow!  I give up!  ");
                        this.corruptColors(c);
                        c.say(t, "I give uuup!  Aaah!");
                    }
                    else if (c.getInnocence() > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.STRUGGLE);
                        c.say(t, "Ergh!  Guh!  Phew...  K-Keep going, ");
                        this.corruptColors(c);
                        c.say(t, "I won't stop you...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                        c.say(t, "Ah!  Gah!  I yield!  I-I give up!  ");
                        this.corruptColors(c);
                        c.say(t, "I give up!  I won't fight you anymore!  Aaagh!");
                    }
                }
                else if (this.tickleOn) {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.LEWD);
                    if (c.getInnocence() > 66) {
                        c.say(t, "Hahahah, I'm breaking, I'm breaking, ahahahah, ");
                        this.corruptColors(c);
                        c.say(t, "I'm breakiiing!");
                    }
                    else if (c.getInnocence() > 33) {
                        c.say(t, "Hahah, I-I can't, hahahah, anymore- ");
                        this.corruptColors(c);
                        c.say(t, "Hahahahah!");
                    }
                    else {
                        c.say(t, "Hahahah, y-yes, ");
                        this.corruptColors(c);
                        c.say(t, "punish me mooore, hahahahah!");
                    }
                }
                else if (c.getInnocence() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                    c.say(t, "Aaah!  I p-promise, I won't fight you- Naah!  ");
                    this.corruptColors(c);
                    c.say(t, "I won't fight you anymooore!");
                }
                else if (c.getInnocence() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                    c.say(t, "Gh!  I-I can't, ");
                    this.corruptColors(c);
                    c.say(t, "I can't fight anymore...  Ngh...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.LEWD);
                    c.say(t, "Ngh!  Y-Yes, ");
                    this.corruptColors(c);
                    c.say(t, "punish me more...");
                }
            }
            else {
                if (c.getConfidence() > 66) {
                    w.append(t, "With every attack that comes a fraction of an inch from killing " + c.himHer() + ", " + c.getMainName() + " comes up with more justifications for why it wouldn't be shameful to surrender here.  Before your Demons can get their claws on " + c.himHer() + " again, " + c.heShe() + " abruptly declares that " + c.heShe() + "'s done fighting.");
                }
                else if (c.getConfidence() > 33) {
                    w.append(t, String.valueOf(c.getMainName()) + " had hoped that " + c.heShe() + "'d be able to defeat the Demons, but as they continue to toy with " + c.himHer() + " and just barely avoid inflicting fatal wounds, " + c.heShe() + " begins to think that " + c.heShe() + " has no realistic chance of victory.  Faced with the likelihood of being defeated either way, " + c.heShe() + " opts to at least save " + c.hisHer() + " own life by surrendering.");
                }
                else {
                    w.append(t, "The Demons charge at " + c.getMainName() + ", causing " + c.himHer() + " to flinch away, closing " + c.hisHer() + " eyes and raising " + c.hisHer() + " hands.  Before " + c.heShe() + " knows it, " + c.heShe() + "'s started to blurt out apologies and offers of surrender - and " + c.heShe() + " realizes that " + c.heShe() + "'s actually willing to follow through with them.");
                }
                c.say(t, "\n\n\"");
                Project.changePortrait(c.convertGender(), c.type, false, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                if (c.getConfidence() > 66) {
                    if (c.getMorality() > 66) {
                        c.say(t, "I am humanity's only hope!  ");
                        this.corruptColors(c);
                        c.say(t, "I can't die here!  F-For everyone else's sake!");
                    }
                    else if (c.getMorality() > 33) {
                        c.say(t, "I will defeat the Demon Lord someday.  ");
                        this.corruptColors(c);
                        c.say(t, "But for now, I need to survive...");
                    }
                    else {
                        c.say(t, "I must survive and become even stronger in order to get my revenge.  ");
                        this.corruptColors(c);
                        c.say(t, "Even if it means working with Demons...");
                    }
                }
                else if (c.getConfidence() > 33) {
                    if (c.getMorality() > 66) {
                        c.say(t, "If I die here, ");
                        this.corruptColors(c);
                        c.say(t, "I won't be able to save anyone...");
                    }
                    else if (c.getMorality() > 33) {
                        c.say(t, "There's no point ");
                        this.corruptColors(c);
                        c.say(t, "in dying here...");
                    }
                    else {
                        c.say(t, "There's no way I'm dying ");
                        this.corruptColors(c);
                        c.say(t, "for the sake of these people...");
                    }
                }
                else if (c.getMorality() > 66) {
                    c.say(t, "I-I'm sorry, everyone... ");
                    this.corruptColors(c);
                    c.say(t, "but I'm afraid of dying after all...");
                }
                else if (c.getMorality() > 33) {
                    c.say(t, "Ah...  I-I ended up surrendering ");
                    this.corruptColors(c);
                    c.say(t, "before I could stop myself...");
                }
                else {
                    c.say(t, "I-I don't wanna ");
                    this.corruptColors(c);
                    c.say(t, "die!");
                }
            }
        }
        else {
            w.append(t, "-" + resolveLost + "% Resolve (" + c.resolve + "% remaining)\n\n");
            c.say(t, "\"");
            if (c.isDrained()) {
                if (w.tickle()) {
                    if (c.getConfidence() > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.STRUGGLE);
                        if (c.finalAttacked % 3 == 0) {
                            if (c.getInnocence() > 66) {
                                c.say(t, "Ahah!?  Ahahah, no, no, you have to kill meee!");
                            }
                            else if (c.getInnocence() > 33) {
                                c.say(t, "Ngah!  Stop toying with me, damn- Nahahahah!");
                            }
                            else {
                                c.say(t, "Ghah!  Need to... push harder... gahahahah!");
                            }
                        }
                        else if (c.finalAttacked % 3 == 1) {
                            if (c.getDignity() > 66) {
                                c.say(t, "Ahahah, stop!  You'll kill me this instant if you know what's good for- Hahahahah!");
                            }
                            else if (c.getDignity() > 33) {
                                c.say(t, "Hahahah!  Gaah, stop!  St-ahahahah!");
                            }
                            else {
                                c.say(t, "Hng...!  Gah!  Hahahah!  Ergh, no, again...!");
                            }
                        }
                        else if (c.getMorality() > 66) {
                            c.say(t, "Hah... agh!  What am I even doing...?");
                        }
                        else if (c.getMorality() > 33) {
                            c.say(t, "If I had fought this hard from the start, I...  Ah!  Ahahah, no!");
                        }
                        else {
                            c.say(t, "Hahah, agh, no!  You won't take this from me!");
                        }
                    }
                    else if (c.getConfidence() > 33) {
                        if (c.finalAttacked % 3 == 0) {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FEAR);
                            if (c.getInnocence() > 66) {
                                c.say(t, "Ahah...  Why...?  Ahahah!  Why isn't it working!?");
                            }
                            else if (c.getInnocence() > 33) {
                                c.say(t, "Just... ahahah... have to fight harder... ah!");
                            }
                            else {
                                c.say(t, "Is this... pointless...?  Ahahah, no, stop!");
                            }
                        }
                        else if (c.finalAttacked % 3 == 1) {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.SHAME);
                            if (c.getDignity() > 66) {
                                c.say(t, "Ahah... hahah... ah...");
                            }
                            else if (c.getDignity() > 33) {
                                c.say(t, "Can't... hah... can't give up yet...");
                            }
                            else {
                                c.say(t, "Ahah, hah... I can't do this anymore...");
                            }
                        }
                        else {
                            Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                            if (c.getMorality() > 66) {
                                c.say(t, "I wanted... to go out fighting like a hero...");
                            }
                            else if (c.getMorality() > 33) {
                                c.say(t, "I guess... I might not have any choice...");
                            }
                            else {
                                c.say(t, "Ugh...  What else can I do to make them kill me...?");
                            }
                        }
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.LEWD, Project.Emotion.FEAR);
                        if (c.finalAttacked % 3 == 0) {
                            if (c.getInnocence() > 66) {
                                c.say(t, "I'm sorry!  I'm sorry!  Please just kill meee!");
                            }
                            else if (c.getInnocence() > 33) {
                                c.say(t, "Gah!  Ahahah, p-please, nooo!");
                            }
                            else {
                                c.say(t, "Ahah!  N-No!  This is e-excessive!");
                            }
                        }
                        else if (c.finalAttacked % 3 == 1) {
                            if (c.getDignity() > 66) {
                                c.say(t, "Ahah, s-stop, I'm- hahahahah!");
                            }
                            else if (c.getDignity() > 33) {
                                c.say(t, "Ah, ahahah, n-no more...!");
                            }
                            else {
                                c.say(t, "Ahahah, aaagh!");
                            }
                        }
                        else if (c.getMorality() > 66) {
                            c.say(t, "Hah... I d-deserve this...");
                        }
                        else if (c.getMorality() > 33) {
                            c.say(t, "Hahahah, I can't, I can't...");
                        }
                        else {
                            c.say(t, "I-I'll do anything, just stooop!");
                        }
                    }
                }
                else if (c.getConfidence() > 66) {
                    if (c.finalAttacked % 3 == 0) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                        if (c.getInnocence() > 66) {
                            c.say(t, "Gah!?  Ow, no, no, you have to kill meee!");
                        }
                        else if (c.getInnocence() > 33) {
                            c.say(t, "Ngah!  Stop toying with me, damn it...!");
                        }
                        else {
                            c.say(t, "Gh!  Need to... push harder...!");
                        }
                    }
                    else if (c.finalAttacked % 3 == 1) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                        if (c.getDignity() > 66) {
                            c.say(t, "Enough!  You'll kill me this instant if you know what's good for- Gaah!");
                        }
                        else if (c.getDignity() > 33) {
                            c.say(t, "Gaah, stop!");
                        }
                        else {
                            c.say(t, "Hng...!  Gah!  Ergh, no, again...!");
                        }
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FEAR);
                        if (c.getMorality() > 66) {
                            c.say(t, "Agh!  What am I even doing...!?");
                        }
                        else if (c.getMorality() > 33) {
                            c.say(t, "If I had fought this hard from the start, I...");
                        }
                        else {
                            c.say(t, "No!  You won't take this from me!");
                        }
                    }
                }
                else if (c.getConfidence() > 33) {
                    if (c.finalAttacked % 3 == 0) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FEAR);
                        if (c.getInnocence() > 66) {
                            c.say(t, "Ow!  Why!?  Why isn't it working!?");
                        }
                        else if (c.getInnocence() > 33) {
                            c.say(t, "Just... have to fight harder... ergh!");
                        }
                        else {
                            c.say(t, "Is this... pointless...?");
                        }
                    }
                    else if (c.finalAttacked % 3 == 1) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.SHAME);
                        if (c.getDignity() > 66) {
                            c.say(t, "Gah!  Agh...");
                        }
                        else if (c.getDignity() > 33) {
                            c.say(t, "Can't... hah... can't give up yet...");
                        }
                        else {
                            c.say(t, "I can't do this anymore...");
                        }
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                        if (c.getMorality() > 66) {
                            c.say(t, "I wanted... to go out fighting like a hero...");
                        }
                        else if (c.getMorality() > 33) {
                            c.say(t, "I guess... I might not have any choice...");
                        }
                        else {
                            c.say(t, "Ugh...  What else can I do to make them kill me...?");
                        }
                    }
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FEAR);
                    if (c.finalAttacked % 3 == 0) {
                        if (c.getInnocence() > 66) {
                            c.say(t, "I'm sorry!  I'm sorry!  Please just kill meee!");
                        }
                        else if (c.getInnocence() > 33) {
                            c.say(t, "Gah!  P-Please, nooo!");
                        }
                        else {
                            c.say(t, "N-No!  This is e-excessive!");
                        }
                    }
                    else if (c.finalAttacked % 3 == 1) {
                        if (c.getDignity() > 66) {
                            c.say(t, "S-Stop, I'm... already...");
                        }
                        else if (c.getDignity() > 33) {
                            c.say(t, "N-No more...!");
                        }
                        else {
                            c.say(t, "Ow...");
                        }
                    }
                    else if (c.getMorality() > 66) {
                        c.say(t, "I d-deserve this...");
                    }
                    else if (c.getMorality() > 33) {
                        c.say(t, "I can't, I can't...");
                    }
                    else {
                        c.say(t, "I-I'll do anything, just stop!");
                    }
                }
            }
            else if (c.getConfidence() > 66) {
                if (c.finalAttacked % 3 == 0) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    if (c.getInnocence() > 66) {
                        c.say(t, "I'm supposed to be the strongest!  So why...?");
                    }
                    else if (c.getInnocence() > 33) {
                        c.say(t, "I have to fight even harder...!");
                    }
                    else {
                        c.say(t, "I was absolutely certain that I could win...");
                    }
                }
                else if (c.finalAttacked % 3 == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                    if (c.getDignity() > 66) {
                        c.say(t, "R-Ridiculous!");
                    }
                    else if (c.getDignity() > 33) {
                        c.say(t, "I won't let you kill me!");
                    }
                    else {
                        c.say(t, "Ergh!");
                    }
                }
                else if (c.getMorality() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "I can't... can't die when so many people are counting on me...!");
                }
                else if (c.getMorality() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.SHAME);
                    c.say(t, "I could actually die after all...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.FEAR);
                    c.say(t, "I'll kill you before you can kill me!");
                }
            }
            else if (c.getConfidence() > 33) {
                if (c.finalAttacked % 3 == 0) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    if (c.getInnocence() > 66) {
                        c.say(t, "N-No fair!  You got way too strong!");
                    }
                    else if (c.getInnocence() > 33) {
                        c.say(t, "Ugh, they're fast!");
                    }
                    else {
                        c.say(t, "I have grown overly reliant upon my immortality...");
                    }
                }
                else if (c.finalAttacked % 3 == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    if (c.getDignity() > 66) {
                        c.say(t, "I won't let something like this kill me!");
                    }
                    else if (c.getDignity() > 33) {
                        c.say(t, "Not yet...!");
                    }
                    else {
                        c.say(t, "I could die here...");
                    }
                }
                else if (c.getMorality() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FOCUS);
                    c.say(t, "For everyone's sake, I can't give in!");
                }
                else if (c.getMorality() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FOCUS);
                    c.say(t, "I'm not done yet!");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.ANGER);
                    c.say(t, "This is... ergh... really getting on my nerves...");
                }
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                if (c.finalAttacked % 3 == 0) {
                    if (c.getInnocence() > 66) {
                        c.say(t, "I'm scared!  I'm really scared!");
                    }
                    else if (c.getInnocence() > 33) {
                        c.say(t, "Aaah, no!");
                    }
                    else {
                        c.say(t, "My odds of survival... a-are dropping quickly...");
                    }
                }
                else if (c.finalAttacked % 3 == 1) {
                    if (c.getDignity() > 66) {
                        c.say(t, "I need to stop pretending I can take this...!");
                    }
                    else if (c.getDignity() > 33) {
                        c.say(t, "I need to call for help!");
                    }
                    else {
                        c.say(t, "Help!  Someone, save me!");
                    }
                }
                else if (c.getMorality() > 66) {
                    c.say(t, "I said I was willing to sacrifice my life... I really thought I was...");
                }
                else if (c.getMorality() > 33) {
                    c.say(t, "This is too much for me after all...");
                }
                else {
                    c.say(t, "This is crazy!  I-I'm not gonna die here!");
                }
            }
        }
        c.say(t, "\"");
        ++c.finalAttacked;
    }
    
    public void finalTaunt(final JTextPane t, final WorldState w, final Chosen c) {
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        if (c.finalTaunted == 0) {
            if (c.getDignity() > 66) {
                w.append(t, "The once-respected " + c.getMainName() + " is driven back by a wave of Thralls advancing on " + c.himHer() + ".  They spit on " + c.himHer() + " and throw balls of trash, shouting lewd threats and raunchy jokes after " + c.himHer() + ".  Although it wouldn't be hard for them to catch up and grab " + c.himHer() + ", they know that this treatment stings " + c.hisHer() + " pride worse than any tortures they could inflict, and the damage to both " + c.hisHer() + " self-image and " + c.hisHer() + " first impression on the high number of viewers watching the final battle will greatly impact " + c.hisHer() + " ability to draw on the psychic energy that fuels " + c.hisHer() + " powers.");
            }
            else if (c.getDignity() > 33) {
                w.append(t, "The Thralls close in on " + c.getMainName() + " from all directions, but rather than grabbing " + c.himHer() + " like they usually do, they just trip " + c.himHer() + " up, shove " + c.himHer() + " around, and grope " + c.himHer() + " a little before letting " + c.himHer() + " go.  The fact that they clearly aren't taking " + c.himHer() + " seriously, combined with the humiliation of being forced into an outfit " + c.heShe() + " didn't choose, makes " + c.hisHer() + " confidence in " + c.himHer() + "self (and the confidence of those watching illicit broadcasts of the fight) grow dangerously low, to the point that it threatens " + c.hisHer() + " supply of psychic energy.");
            }
            else {
                w.append(t, "Even before " + c.getMainName() + " became a complete laughingstock, " + c.heShe() + " didn't show much concern for the opinions of the public.  However, the Chosen are dependent on psychic energy received from the rest of humanity to maintain their transformation.  More people than ever are watching broadcasts of the climactic final battle, and the first thing they see is " + c.getMainName() + " dressed in Demonically-influenced clothing and being taunted by Thralls who clearly don't even care enough to take the opportunity to immobilize " + c.himHer() + ".");
            }
        }
        else if (c.getDignity() > 66) {
            w.append(t, "The Thralls continue to tear apart the last shreds of " + c.getMainName() + "'s credibility, herding " + c.himHer() + " this way and that without actually bothering to grab " + c.himHer() + ".  Tears of shame sting " + c.hisHer() + " eyes.");
        }
        else if (c.getDignity() > 33) {
            w.append(t, String.valueOf(c.getMainName()) + " stumbles out of the crowd of Thralls, only for them to catch up and harass " + c.himHer() + " some more.  In the eyes of the people watching the battle from afar, " + c.heShe() + " looks like nothing more than another victim.");
        }
        else {
            w.append(t, "As the Thralls make light of " + c.getMainName() + ", " + c.heShe() + " feels " + c.hisHer() + " transformation waver.  " + c.HeShe() + " can't maintain " + c.hisHer() + " power unless " + c.heShe() + " continues to be viewed as powerful.");
        }
        w.append(t, "\n\n");
        c.damage(t, w, new int[] { 0, 0, 0, 200, 0, 0, 0, 0 });
        final int resolveLost = this.tauntResolve() * c.getSHAMLevel();
        c.resolve -= resolveLost;
        if (c.resolve <= 0) {
            c.defeatType = 4;
            w.append(t, "-" + resolveLost + "% Resolve\n\n");
            w.underlineAppend(t, "Resolve Broken");
            w.append(t, "\n\n");
            if (c.getDignity() > 66) {
                w.append(t, "Finally, the illusion of " + c.getMainName() + "'s strength is shattered, and with the change in the public's perception, reality follows suit.  " + c.HisHer() + " clothes, already twisted by Demonic influence, finally fade away completely, leaving ");
                if (c.getMainName().equals(c.getGivenName())) {
                    w.append(t, String.valueOf(c.himHer()) + " naked and helpless in the middle of the street.  ");
                }
                else {
                    w.append(t, "the naked " + c.getGivenName() + " helpless in the middle of the street.  ");
                }
                w.append(t, String.valueOf(c.HeShe()) + " sobs with despair, not only at " + c.hisHer() + " utter defeat, but also at the fact that " + c.heShe() + "'ll surely be remembered as nothing but a failure.");
            }
            else if (c.getDignity() > 33) {
                w.append(t, "Finally, the public's perception of " + c.getMainName() + " reaches the tipping point.  With a flash of light, " + c.hisHer() + " Chosen garb is gone.  " + c.HeShe() + " glances down at " + c.himHer() + "self in shock, then looks around frantically in hopes of finding where " + c.hisHer() + " " + c.weapon + " went, but it's no use.  Your Demons ignore the newly-depowered " + c.getGivenName() + ", leaving " + c.himHer() + " to be collected after the battle.");
            }
            else {
                w.append(t, String.valueOf(c.getMainName()) + "'s corrupted Chosen garb fades away, but " + c.heShe() + " still tries to fight, swinging a punch at the massive Demon before " + c.himHer() + ".  " + c.HisHer() + " fist stings with the impact, and the Demon shows no reaction.  " + c.HeShe() + "'s just ");
                if (c.getMainName().equals(c.getGivenName())) {
                    w.append(t, "just a normal human now");
                }
                else {
                    w.append(t, "just " + c.getGivenName() + " now, a normal human");
                }
                w.append(t, ", having lost " + c.hisHer() + " access to the psychic energy that made " + c.himHer() + " something more.");
            }
            c.say(t, "\n\n\"");
            if (c.getDignity() > 66) {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                if (c.getMorality() > 66) {
                    c.say(t, "I was supposed to be ");
                    this.corruptColors(c);
                    c.say(t, "their savior...");
                }
                else if (c.getMorality() > 33) {
                    c.say(t, "I can't go back to being a ");
                    this.corruptColors(c);
                    c.say(t, "normal person...");
                }
                else {
                    c.say(t, "My fame...  ");
                    this.corruptColors(c);
                    c.say(t, "My power...");
                }
            }
            else if (c.getDignity() > 33) {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                if (c.getInnocence() > 66) {
                    c.say(t, "Huh!?  What's happening!?  ");
                    this.corruptColors(c);
                    c.say(t, "Where are my powers!?");
                }
                else if (c.getInnocence() > 33) {
                    c.say(t, "S-Stop ignoring me!  I'm not giving up yet!  Come back here!  I can still... ");
                    this.corruptColors(c);
                    c.say(t, "fight...");
                }
                else {
                    c.say(t, "There... There still must be something I can do!  It cannot end like... ");
                    this.corruptColors(c);
                    c.say(t, "this...");
                }
            }
            else if (c.getInnocence() > 66) {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                c.say(t, "Huh!?  My punches are supposed to be way, way stronger than that!  Hey, let go of me!  ");
                this.corruptColors(c);
                c.say(t, "Let gooo!");
            }
            else if (c.getInnocence() > 33) {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.FEAR);
                c.say(t, "Wh-What!?  No...  No, ");
                this.corruptColors(c);
                c.say(t, "this can't be happening!");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                c.say(t, "Hmph.  It seems... ");
                this.corruptColors(c);
                c.say(t, "I have been utterly defeated...");
            }
        }
        else {
            w.append(t, "-" + resolveLost + "% Resolve (" + c.resolve + "% remaining)\n\n");
            c.say(t, "\"");
            if (c.getDignity() > 66) {
                if (c.finalTaunted % 3 == 0) {
                    if (c.getInnocence() > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.ANGER);
                        c.say(t, "Th-They keep making fun of me, over and over again...  Stop it, stop it...!");
                    }
                    else if (c.getInnocence() > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.FEAR);
                        c.say(t, "There must be so many people watching...");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.SHAME);
                        c.say(t, "Even now, they continue to take me so lightly...");
                    }
                }
                else if (c.finalTaunted % 3 == 1) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    if (c.getMorality() > 66) {
                        c.say(t, "Everyone... thought they could count on me...");
                    }
                    else if (c.getMorality() > 33) {
                        c.say(t, "No one respects me anymore...");
                    }
                    else {
                        c.say(t, "They used to be afraid of me.  But now...");
                    }
                }
                else if (c.finalTaunted % 3 == 2) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    if (c.getConfidence() > 66) {
                        c.say(t, "I'm... supposed to be strong...!");
                    }
                    else if (c.getConfidence() > 33) {
                        c.say(t, "I wasn't as strong as they thought I was...");
                    }
                    else {
                        c.say(t, "I was never actually strong in the first place...");
                    }
                }
            }
            else if (c.getDignity() > 33) {
                if (c.finalTaunted % 3 == 0) {
                    if (c.getInnocence() > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                        c.say(t, "Stop... messing with me...");
                    }
                    else if (c.getInnocence() > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.STRUGGLE, Project.Emotion.FEAR);
                        c.say(t, "I need to stop them...!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.ANGER);
                        c.say(t, "Stop this foolishness!  Stop!");
                    }
                }
                else if (c.finalTaunted % 3 == 1) {
                    if (c.getMorality() > 66) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                        c.say(t, "I should be able to ignore them and focus on saving everyone, but...");
                    }
                    else if (c.getMorality() > 33) {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                        c.say(t, "You're still doing this...!");
                    }
                    else {
                        Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.STRUGGLE);
                        c.say(t, "I won't let them get away with this...!");
                    }
                }
                else if (c.finalTaunted % 3 == 2) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    if (c.getConfidence() > 66) {
                        c.say(t, "I just need to... believe in myself...!");
                    }
                    else if (c.getConfidence() > 33) {
                        c.say(t, "I can't let them get to me...");
                    }
                    else {
                        c.say(t, "I know I'm weak, stop rubbing it in my face!");
                    }
                }
            }
            else if (c.finalTaunted % 3 == 0) {
                if (c.getInnocence() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    c.say(t, "Ah...  I don't really care anymore...");
                }
                else if (c.getInnocence() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    c.say(t, "I guess I had this coming...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.FEAR, Project.Emotion.STRUGGLE);
                    c.say(t, "The Demon Lord is targeting my supply of psychic energy!");
                }
            }
            else if (c.finalTaunted % 3 == 1) {
                if (c.getMorality() > 66) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                    c.say(t, "I deserve this...");
                }
                else if (c.getMorality() > 33) {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.ANGER);
                    c.say(t, "I think I recognize a few of my fans...");
                }
                else {
                    Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.ANGER, Project.Emotion.SHAME);
                    c.say(t, "Go on, laugh while you can!");
                }
            }
            else if (c.finalTaunted % 3 == 2) {
                Project.changePortrait(c.convertGender(), c.type, false, false, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.STRUGGLE);
                if (c.getConfidence() > 66) {
                    c.say(t, "Hah, I think I've become the biggest laughingstock in the city...");
                }
                else if (c.getConfidence() > 33) {
                    c.say(t, "Are my powers getting weaker...?");
                }
                else {
                    c.say(t, "I guess they're not wrong about me...");
                }
            }
        }
        c.say(t, "\"");
        ++c.finalTaunted;
    }
    
    public void finalTempt(final JTextPane t, final Chosen c) {
        this.append(t, "\n\n" + this.getSeparator() + "\n\n");
        if (c.hypnotized) {
            if (c.innocence > 66) {
                this.append(t, "As " + c.mainName + "'s pleasure reaches its peak, you release your hypnotic hold on " + c.hisHer() + " mind.  But at this point, " + c.heShe() + "'s been trained so well that " + c.heShe() + " doesn't even need your direct influence.  ");
            }
            else if (c.innocence > 33) {
                this.append(t, "Sudden clarity returns to " + c.mainName + "'s mind as you allow " + c.himHer() + " to remember the situation " + c.heShe() + "'s in and everything " + c.heShe() + "'s done.  However, it actually doesn't bother " + c.himHer() + " much.  ");
            }
            else {
                this.append(t, "Knowing that " + c.mainName + " has learned to recognize the signs of your hypnotic influence, you release all your control over " + c.hisHer() + " mind so that " + c.heShe() + " knows that the coming decision is " + c.hisHer() + " and " + c.hisHer() + " alone.  ");
            }
        }
        else if (c.innocence > 66) {
            this.append(t, String.valueOf(c.mainName) + " giggles and closes " + c.hisHer() + " eyes as " + c.heShe() + " prepares for the Thralls to make " + c.himHer() + " cum like always, only to open them back up and blink in confusion when they stop.  ");
        }
        else if (c.innocence > 33) {
            this.append(t, String.valueOf(c.mainName) + " has been both hoping for and dreading this moment, going back and forth in " + c.hisHer() + " mind as to how " + c.heShe() + "'d respond.  But as " + c.hisHer() + " feelings overflow with both lust and affection, " + c.heShe() + " finds " + c.hisHer() + " answer.  ");
        }
        else {
            this.append(t, String.valueOf(c.mainName) + " would have preferred to win this battle, but " + c.heShe() + " had decided beforehand what " + c.heShe() + " would do if defeated looked inevitable.  Now, with " + c.hisHer() + " body being so effortlessly toyed with, " + c.heShe() + " can see no path to victory.  ");
        }
        if (c.parasitized) {
            if (c.morality > 66) {
                this.append(t, String.valueOf(c.HeShe()) + " thinks about the ungrateful criticisms " + c.heShe() + "'s faced from human society, and when " + c.heShe() + " compares it to the benevolence of the Thralls asking permission to pleasure " + c.himHer() + " now, " + c.heShe() + " knows that " + c.heShe() + " could never make any other choice.  " + c.HeShe() + " tells the Thralls to hurry and win the battle so that they can have some fun with " + c.himHer() + " afterward.");
            }
            else if (c.morality > 33) {
                this.append(t, "When the Thralls remind " + c.himHer() + " of all the fun times they've had together, the last bit of " + c.hisHer() + " resistance melts away, and " + c.heShe() + " pledges to join them against the ungrateful society that " + c.heShe() + " once fought for.");
            }
            else {
                this.append(t, "The instant the Thralls ask " + c.himHer() + " to join them, " + c.heShe() + "'s eagerly agreeing.  Part of it is the desire for pleasure, but most of it is spite for the human society that rejected " + c.himHer() + ".");
            }
        }
        else if (c.morality > 66) {
            this.append(t, "The Thralls beg " + c.himHer() + " to join them and keep making them feel good in the same way that they've made " + c.himHer() + " feel good, and " + c.heShe() + " can't make " + c.himHer() + "self refuse them.");
        }
        else if (c.morality > 33) {
            this.append(t, "The Thralls ask " + c.himHer() + " whether " + c.heShe() + "'d really be happy never feeling their caresses again, and " + c.heShe() + " has to confess that " + c.heShe() + " wouldn't.");
        }
        else {
            this.append(t, "The Thralls offer " + c.himHer() + " even greater heights of pleasure if " + c.heShe() + " returns to the hive with them, and " + c.heShe() + " embraces the realization that " + c.heShe() + " cares less about fame and fortune in the human world than " + c.heShe() + " does about just feeling good.");
        }
        this.append(t, "\n\n");
        c.resolve = 0;
        c.defeatType = 5;
        this.underlineAppend(t, "Resolve Broken");
        this.append(t, "\n\n");
        if (c.confidence > 66) {
            this.append(t, String.valueOf(c.HisHer()) + " inner denial of " + c.hisHer() + " status as Chosen causes " + c.mainName + "'s magical clothes to fade away, but " + c.heShe() + " still walks like a queen, naked and proud, as an honor guard of Thralls escorts " + c.himHer() + " back to the hive.\n\n");
            c.say(t, "\"");
            if (c.morality > 66) {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.SHAME, Project.Emotion.SHAME);
                c.say(t, "Of my own free will, I choose to become one of... ");
                this.corruptColors(c);
                c.say(t, "the Forsaken.");
            }
            else if (c.morality > 33) {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                c.say(t, "Heh.  What would you do ");
                this.corruptColors(c);
                c.say(t, "without me?");
            }
            else {
                Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
                c.say(t, "We're going to have... ");
                this.corruptColors(c);
                c.say(t, "lots of fun.");
            }
        }
        else if (c.confidence > 33) {
            this.append(t, "Deliberately releasing " + c.hisHer() + " transformation, " + c.mainName + " entrusts " + c.hisHer() + " naked body to the Thralls.  They briefly lay their hands on " + c.himHer() + ", bringing " + c.himHer() + " to a quick and very satisfying orgasm, but they need to return their attention to the fight, so they happily part ways while " + c.mainName + " makes " + c.hisHer() + " way to the hive in order to present " + c.himHer() + "self to you.\n\n");
            c.say(t, "\"");
            Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
            if (c.morality > 66) {
                c.say(t, "I think of you all as... ");
                this.corruptColors(c);
                c.say(t, "my new family.");
            }
            else if (c.morality > 33) {
                c.say(t, "I need you... ");
                this.corruptColors(c);
                c.say(t, "more than I need to be a good person.");
            }
            else {
                c.say(t, "Hurry up and win... ");
                this.corruptColors(c);
                c.say(t, "so that you can come back and make me cum some more.");
            }
        }
        else {
            this.append(t, "Overcome by emotion, " + c.mainName + " is no longer able to maintain " + c.hisHer() + " Chosen transformation.  " + c.HisHer() + " clothes fade away, and " + c.heShe() + "'s briefly startled, but then " + c.heShe() + " smiles with gratitude at the Thrall who hands " + c.himHer() + " a coat, and " + c.heShe() + " feels oddly happy as " + c.heShe() + " begins the walk back to the hive.\n\n");
            Project.changePortrait(c.convertGender(), c.type, true, true, this, this.nameCombatants(), c.combatantNumber(this), Project.Emotion.JOY, Project.Emotion.JOY);
            c.say(t, "\"");
            if (c.morality > 66) {
                c.say(t, "You've been so kind to me.  I promise to make it up to you... ");
                this.corruptColors(c);
                c.say(t, "no matter what it takes.");
            }
            else if (c.morality > 33) {
                c.say(t, "I belong to you now...  ");
                this.corruptColors(c);
                c.say(t, "I think I've belonged to you for a long time...");
            }
            else {
                c.say(t, "I think... ");
                this.corruptColors(c);
                c.say(t, "I don't hate you anymore...");
            }
        }
        c.say(t, "\"");
        c.endSurround();
    }
    
    public void ending(final JTextPane t, final int type, final Chosen first, final Chosen second, final Chosen third) {
        this.save.newScene();
        if (type == 0) {
            if (second == null) {
                if (first.getInnocence() > 66) {
                    this.append(t, "Even after escaping the range of your influence, " + first.getMainName() + " continues to fly higher and faster as " + first.heShe() + " distances " + first.himHer() + "self from the city.  ");
                    if (first.getConfidence() > 66) {
                        this.append(t, String.valueOf(first.HisHer()) + " headstrong nature left " + first.himHer() + " completely unprepared for how helpless " + first.heShe() + " felt when forced to fight alone.  The longer " + first.heShe() + " dwells on it, the more " + first.heShe() + " sinks into blind panic.  When " + first.heShe() + " sees another figure flying up from the clouds to intercept " + first.himHer() + ", " + first.heShe() + " just tries to shove " + first.himHer() + " aside with brute force.\n\n");
                        first.say(t, "\"No!  Get outta my way!  Leave me alone!\"\n\n");
                        this.append(t, String.valueOf(first.HeShe()) + "'s shocked and horrified yet again when " + first.heShe() + " just bounces backward, leaving the other person - obviously also one of the Chosen - completely unharmed.\n\n");
                        this.orangeAppend(t, "\"You have nothing to fear from me, young " + first.getMainName() + ".  I am Basis.  ");
                        if (first.getMorality() > 33) {
                            this.orangeAppend(t, "I am an ally.\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + " backs off warily, unsettled by how easily " + first.hisHer() + " charge was deflected.\n\n");
                            first.say(t, "\"What do you want from me!?  I-I'm in a hurry!\"\n\n");
                            this.orangeAppend(t, "\"I simply wished to make certain that you were safe.  After all, the Chosen would be helpless without your leadership.\"\n\n");
                            first.say(t, "\"Huh?  But I can't actually do anything!  Did you see that big black thing?  I couldn't even scratch it!  It turns out I'm actually way weaker than the Demon Lord!\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + " continues to drift backward, but Basis quickly closes the distance, smiling softly.\n\n");
                            this.orangeAppend(t, "\"Oh, " + first.getMainName() + ", is that what you were worried about?  The Demon Lord was actually just using an unfair power that gave him perfect protection against one Chosen attacking alone.  If you had even one other Chosen - even a much weaker one - to attack from the other side, you would have defeated him easily.  You shouldn't doubt yourself.  You are strong!\"\n\n");
                            first.say(t, "\"I'm... I'm strong...  That's right, I'm strong, I'm not weak at all...\"\n\n");
                            this.append(t, "The fear of being weak is too much for " + first.getMainName() + "'s mind to bear, and with Basis offering " + first.himHer() + " a much more comforting way to think about " + first.hisHer() + " defeat, " + first.heShe() + " allows " + first.himHer() + "self to be persuaded to continue to fight as one of the Chosen.");
                        }
                        else {
                            this.orangeAppend(t, "I am here to help.\"\n\n");
                            first.say(t, "\"Then where were you during the battle!?  The rest of you Chosen are worthless!  I'm done fighting this stupid war!  I quit!\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + " turns to leave, only to find that Basis is still somehow hovering in front of " + first.himHer() + ", smiling softly.\n\n");
                            this.orangeAppend(t, "\"Are you really going to run away?  Are you going to let the Demon Lord win?\"\n\n");
                            first.say(t, "\"Shut up!  I'm not running away!  It's just...  It's just pointless, I tried everything I could to kill that thing, and it still didn't die!\"\n\n");
                            this.orangeAppend(t, "\"That's just because your allies were too weak to help - and because you were holding back in the early fights, before the Demon Lord reached full power.  If you aren't being held back by weaklings, and if you go all-out from the start, I'm sure you'll be able to start killing Demon Lords.  And it'll feel good to get them back for what they did to you.  I promise.\"\n\n");
                            this.append(t, "With both " + first.hisHer() + " pride and " + first.hisHer() + " vindictive nature being leveraged against " + first.himHer() + ", " + first.getMainName() + " isn't difficult to convince.  " + first.HeShe() + " soon forgets " + first.hisHer() + " prior fear and goes back to looking forward to killing some more Demons.");
                        }
                    }
                    else if (first.getDignity() > 66) {
                        this.append(t, "At first, " + first.hisHer() + " mind doesn't have room for anything beyond sheer terror at the seemingly unbeatable foe " + first.heShe() + " faced.  But when " + first.heShe() + " sees a point of light rising from the clouds beneath " + first.himHer() + " - another Chosen - " + first.heShe() + " freezes up.\n\n");
                        this.orangeAppend(t, "You're " + first.getMainName() + ", correct?  I'm glad to have caught up with you.  My name is Basis.  I came to-");
                        if (first.getMorality() > 33) {
                            first.say(t, "\"I'm sorry!  I-I'm so, so sorry!  I tried my best, but I couldn't... I was too weak to... do anything.  We failed, and it's all my fault.  I never should have become one of the Chosen...\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + "'s shame over " + first.hisHer() + " failure comes out in a rush of tearful words.  Basis is taken aback for a moment, but she quickly recovers.\n\n");
                            this.orangeAppend(t, "No, no, it wasn't your fault.  This war is bigger than any of us, and sometimes we happen to end up against forces too powerful for us to reasonably defeat.  Right now, the most important thing is that you continue to show a strong face for the sake of all your fans.  There are so many people who are still counting on you!\"\n\n");
                            first.say(t, "\"Th-They're... counting on me...?\"\n\n");
                            this.append(t, "Clinging desperately to the idea that not all is lost, that " + first.heShe() + " isn't a complete failure, " + first.getMainName() + " allows " + first.himHer() + "self to be pulled back from the brink of despair.  " + first.HeShe() + " is desperate to face the Demons again, delusionally hoping that " + first.heShe() + "'ll be able to once again earn the public praise that made " + first.himHer() + " feel like " + first.heShe() + " wasn't worthless.");
                        }
                        else {
                            first.say(t, "\"I-I'm not running away!  I was just, um... regrouping.  By myself.  Yeah.  I'm about to go back and beat up the Demon Lord, honest!\"\n\n");
                            this.append(t, "Basis graciously pretends to be fooled by " + first.getMainName() + "'s act, a reassuring smile on her face.\n\n");
                            this.orangeAppend(t, "\"That's very brave of you!  However, it looks like this battle has already been lost.  Of course, you still tried your best, so you'll be paid in full for your efforts.  Why don't you come back to base, so we can discuss your living arrangements while you recuperate?\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + " hesitates.  In truth, " + first.heShe() + " had been wanting to run away, hide from the government, and never fight another Demon ever again.  But the fact that " + first.heShe() + " was apparently being rewarded even though " + first.heShe() + " failed, along with the fact that " + first.heShe() + " was apparently going to be able to continue " + first.hisHer() + " lavish lifestyle even while not actively fighting the Demons, was enough to tempt " + first.himHer() + ".\n\n");
                            first.say(t, "\"Well, uh...  Okay...  But this really sucked, you know?  I wanna get paid a lot more if you're gonna ask me to do this again...\"");
                        }
                    }
                    else if (first.getMorality() > 66) {
                        this.append(t, "It takes some time before " + first.hisHer() + " terror at finding " + first.himHer() + "self up against a foe far beyond " + first.hisHer() + " abilities begins to fade.  But then, " + first.heShe() + " gradually comes to a stop and turns around, looking back at the city on the distant horizon and the black spire erupting from its center.\n\n");
                        if (first.getConfidence() > 33) {
                            first.say(t, "\"I don't understand...  I tried my hardest, I did my best... but we still lost.  Did I do something wrong...?\"\n\n");
                            this.append(t, String.valueOf(first.HeShe()) + " starts to sob, but then quickly regains control of " + first.himHer() + "self, wiping the tears from " + first.hisHer() + " eyes.\n\n");
                            first.say(t, "\"No!  I can't lose hope!  There are still lots of other people who need my help.  As bad as I feel now, they'll end up feeling even worse if I don't do anything!\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + " turns away from the city once again, now flying at a more steady, purposeful pace.  " + first.HeShe() + " looks for the nearest allied unit down on the ground so that " + first.heShe() + " can give " + first.hisHer() + " report.\n\n");
                            first.say(t, "\"As long as I try my hardest...  I'm sure it'll turn out better next time!\"");
                        }
                        else {
                            first.say(t, "\"I... I can't believe I ran away.  We lost... and it's all my fault...\"\n\n");
                            this.append(t, "For several minutes, " + first.heShe() + " hovers there in the sky, sobbing pitifully.  Finally, though, the cold winds whipping by " + first.himHer() + " remind " + first.himHer() + " that " + first.heShe() + " can't stay there forever.\n\n");
                            first.say(t, "\"I might have been pretty useless down there... but I'm even more useless up here.  I need to find someone smart and ask them what I should be doing to help save the people who got away.\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + " dives downward, searching for the nearest allied unit and trying to distract " + first.himHer() + "self from " + first.hisHer() + " despairing thoughts.\n\n");
                            first.say(t, "\"I need to make up for messing up so badly back there.  I'll do whatever they need me to.  E-Even... even if it means fighting the Demons again...\"");
                        }
                    }
                    else if (first.getConfidence() < 34) {
                        this.append(t, "Having " + first.hisHer() + " Chosen powers so thoroughly outmatched has driven " + first.himHer() + " into a blind panic.  When " + first.heShe() + " sees another glowing figure rise out of the clouds to block " + first.hisHer() + " + path, " + first.heShe() + " screams and immediately throws " + first.hisHer() + " hands up in surrender.\n\n");
                        if (first.getMorality() < 34) {
                            first.say(t, "\"Aaah!  Wait, wait, I'll join your side!  I'll fight the Chosen for you, I'll become one of the bad guys, just don't hurt meee!\"");
                            this.append(t, "There's an awkward pause as the person hovering in front of " + first.getMainName() + " stares at " + first.himHer() + ".\n\n");
                            this.orangeAppend(t, "\"That is... hm... not the response I was hoping for.  My name is Basis.  I am also one of the Chosen.\"\n\n");
                            first.say(t, "\"Oh...  That was... uh, a joke!  To lighten the mood, since we just kinda lost a city and all.  Yeah!  Ahah, hah...\"\n\n");
                            this.append(t, "Basis sighs and shakes her head.\n\n");
                            this.orangeAppend(t, "\"Right.  On an unrelated note, I hope you understand what the consequences for you will be if the Demons win this war.  The cities will fall, one by one, until there's no safe place left for you.  And your fate if captured will be worse than if they kill you outright.  You will be far more safe fighting alongside the rest of us than alone.\"\n\n");
                            first.say(t, "\"Safe...  Yes, yes, I want to be safe...\"\n\n");
                            this.append(t, "Cowardly as " + first.heShe() + " is, " + first.getMainName() + " still finds the prospect of continuing to fight less frightening than the unknown fate " + first.heShe() + "'d face by trying something different.  After " + first.heShe() + " calms down, " + first.heShe() + " once again agrees to join another team and fight to save a different city.");
                        }
                        else if (first.getDignity() < 34) {
                            first.say(t, "\"No!  We have to run away!  D-Don't try to stop me!  The Demons are too strong, we can't win!\"\n\n");
                            this.append(t, "In contrast to " + first.hisHer() + " terror, the other figure wears a calm expression, motioning gently for " + first.getMainName() + " to slow down.\n\n");
                            this.orangeAppend(t, "\"Everything's okay.  My name is Basis.  I'm here with a few other Chosen and some reinforcements from the military.  We won't be letting any Demons out of the city, so you're safe here.\"\n\n");
                            this.append(t, "Basis's words are only partially effective.  " + first.getMainName() + " stops trying to fly away, but " + first.heShe() + " still trembles and hugs " + first.himHer() + "self, eyes darting left and right.\n\n");
                            first.say(t, "\"I can't go back in there...!  P-Please, please, don't make me go back!\"\n\n");
                            this.orangeAppend(t, "\"Unfortunately, the city's been lost now, so there wouldn't be any point in making you go back.  You have plenty of time to rest and recuperate.  However... I do hope that you'll consider fighting for humanity again at some point.  If everyone runs away, then it's only a matter of time until the Demons get their hands on every last one of us...\"\n\n");
                            this.append(t, "For now, " + first.getMainName() + " is too terrified to listen.  But with time, " + first.heShe() + "'ll forget just how severe the trauma " + first.heShe() + " faced at your hands was, and then it will be a simple matter for the other Chosen to convince " + first.himHer() + " to take up arms again.");
                        }
                        else {
                            first.say(t, "\"Please say you're one of the good guys!  Please, please, I don't wanna fight anymore!\"\n\n");
                            this.orangeAppend(t, "\"I am in fact one of the good guys.  My name is Basis.  I'm here to help you.\"\n\n");
                            this.append(t, "At first, " + first.getMainName() + " looks relieved.  But then, a nervous expression creeps back onto " + first.hisHer() + " face.\n\n\"");
                            first.say(t, "\"Um, Ms. Basis, I...  I think I want to stop being one of the Chosen.  It's really scary, and the Demon Lord is way too strong, and it's not like I'm really helping much anyway, and you seem like a smart person, so... do you know how I can quit?  Like, right now?\"\n\n");
                            this.append(t, "Basis appears taken aback by " + first.getMainName() + "'s request.  However, " + first.heShe() + " quickly recovers, putting on a gentle smile.\n\n");
                            this.orangeAppend(t, "\"Of course, if you want to give up your powers, there are ways to make it happen.  But... losing one of the Chosen is always tough for the rest of us.  A lot of people will probably die without your help.  This battle must have really shaken you up, so why don't you just come back to base and sleep on it for now?  It's better not to make big decisions until you're well-rested.\"\n\n");
                            this.append(t, String.valueOf(first.getMainName()) + " reluctantly nods and allows " + first.himHer() + "self to be led back down to the ground.  And " + first.heShe() + " doesn't have the willpower to resist the pressure that will be put on " + first.himHer() + " by the other Chosen in order to get " + first.himHer() + " to fight again.  Soon, " + first.heShe() + "'ll be back on the battlefield.");
                        }
                    }
                    else if (first.getMorality() < 34) {
                        this.append(t, "Tears of frustration run down " + first.hisHer() + " face, ");
                    }
                }
                else if (first.getInnocence() < 34) {
                    first.getMorality();
                }
            }
        }
        else if (type == 1) {
            if (second == null) {
                this.append(t, "Several weeks later, " + first.getMainName() + " has been captured and sealed away by the military.  ");
                if (first.getConfidence() > 66) {
                    this.append(t, String.valueOf(first.HeShe()) + " fought with all " + first.hisHer() + " considerable strength, taking down several platoons of mundane soldiers before enough other Chosen arrived to subdue " + first.himHer() + ", but in the end, it made no difference.\n\n");
                    first.say(t, "(Even I couldn't hold out against the entire world...)\n\n");
                }
                else if (first.getConfidence() > 33) {
                    this.append(t, String.valueOf(first.HeShe()) + " tried to escape into the wilderness, but a team of Chosen was sent to hunt " + first.himHer() + " down and bring " + first.himHer() + " back.\n\n");
                    first.say(t, "(For a little while, I thought I had actually made it...)\n\n");
                }
                else {
                    this.append(t, String.valueOf(first.HeShe()) + " tried to hide among the general populace, not using " + first.hisHer() + " powers and fleeing at the first sign that the authorities were searching for " + first.himHer() + ".  But eventually, a team of Chosen ambushed " + first.himHer() + " in " + first.hisHer() + " sleep and captured " + first.himHer() + ".\n\n");
                    first.say(t, "(I should have just given up in the first place...)\n\n");
                }
                if (first.getInnocence() > 66) {
                    this.append(t, "Before " + first.heShe() + " knew it, " + first.heShe() + " was imprisoned in a dark, impossibly cold place.  " + first.HisHer() + " muscles are completely frozen - " + first.hisHer() + " heart doesn't even beat anymore.  " + first.HeShe() + " knows that this is being done to " + first.himHer() + " because " + first.heShe() + " bears the Demon Lord's child in " + first.hisHer() + " belly, but it still feels pointlessly cruel.  And to make matters worse, " + first.heShe() + " has no idea how long " + first.heShe() + "'ll have to endure it.\n\n");
                    first.say(t, "(I'm... I'm scared...)\n\n");
                }
                else if (first.getInnocence() > 33) {
                    this.append(t, String.valueOf(first.HeShe()) + " had heard the rumors about how Chosen impregnated by a Demon Lord were placed in cold storage in order to halt the progression of the pregnancy, but nothing could have prepared " + first.himHer() + " to experience it " + first.himHer() + "self.  " + first.HisHer() + " cell is completely dark and completely silent, and even if " + first.heShe() + " weren't chained up, " + first.heShe() + " wouldn't be able to move a muscle due to " + first.hisHer() + " vital functions being brought to a halt by the extremely low temperature.  A dull ache seeps into " + first.hisHer() + " bones as the minutes turn into hours and then days.\n\n");
                    first.say(t, "(I can't take this...  I'm going to go crazy...!)\n\n");
                }
                else {
                    this.append(t, String.valueOf(first.HeShe()) + " resisted so hard because " + first.heShe() + " knew exactly what would be done to " + first.himHer() + " in order to stop the Demon Lord's child from growing inside " + first.himHer() + ".  " + first.HeShe() + " was taken to a classified facility deep underground and locked away in a containment chamber kept at close to absolute zero in order to halt " + first.hisHer() + " vital functions.  Then, " + first.heShe() + " was left alone in darkness and silence with only the company of " + first.hisHer() + " own thoughts and the ache of the extreme cold which paralyzes even " + first.hisHer() + " Chosen physiology.\n\n");
                    first.say(t, "(This can't last forever...  Surely, it must kill me at some point...!)\n\n");
                }
                if (first.getDignity() > 66) {
                    this.append(t, "Now more than ever, " + first.hisHer() + " popularity works against " + first.himHer() + ".  As long as the public remembers " + first.himHer() + " as one of the Chosen, " + first.heShe() + " will continue to receive psychic energy, and " + first.heShe() + " will continue to slowly regenerate on the brink of death.  It will be years before " + first.heShe() + "'s forgotten and " + first.heShe() + "'s finally allowed to die.\n\n");
                    first.say(t, "(My fans will protest!  They'll save me!  They have to...!)\n\n");
                }
                else if (first.getDignity() > 33) {
                    this.append(t, "The Chosen can't die, but it's the psychic energy received from the public that turns a regular person into one of the Chosen in the first place.  That energy can still reach " + first.himHer() + ", even here, but now that " + first.heShe() + "'s no longer fighting or making public appearances, people will be thinking about " + first.himHer() + " less and less.  " + first.HeShe() + "'ll die eventually, though probably not as quickly as " + first.heShe() + "'d prefer.\n\n");
                    first.say(t, "(It... hurts...)\n\n");
                }
                else {
                    this.append(t, "It's a small mercy that " + first.hisHer() + " cult fanbase is much smaller than those of other Chosen.  The damage dealt to " + first.hisHer() + " bodily tissues by the cold is currently balanced out by the flow of psychic energy from the public, but as they forget " + first.himHer() + ", that energy grows weaker and weaker.  It won't be too long before the torture ends.\n\n");
                    first.say(t, "(I'm going to die here...)\n\n");
                }
                if (first.getMorality() > 66) {
                    this.append(t, "The physical pain is the lesser of the two tortures " + first.getMainName() + " is facing, however.  Far worse is the sense of betrayal " + first.heShe() + " feels after being sealed away by the people " + first.heShe() + " fought so hard to protect.\n\n");
                    first.say(t, "(Why...?  Why...?)");
                }
                else if (first.getMorality() > 33) {
                    this.append(t, String.valueOf(first.getMainName()) + " was once a hero, but even if " + first.heShe() + " were to be miraculously rescued from " + first.hisHer() + " fate, " + first.heShe() + "'ll never be the same.  " + first.HisHer() + " emotions have already been twisted by the torture, and now " + first.heShe() + " can only think of revenge as " + first.hisHer() + " mind fades away.\n\n");
                    first.say(t, "(I'll never forgive them...  I'll never forgive them!)");
                }
                else {
                    this.append(t, "The pain and the despair shatter what's left of " + first.getMainName() + "'s mind into pieces.  " + first.HeShe() + " descends further and further into violent fantasies in order to occupy " + first.himHer() + "self, trying to forget " + first.hisHer() + " miserable situation.\n\n");
                    first.say(t, "(I'll kill them all... hahahah, yes, yes, kill them, tear them apart, devour their warm, warm guts!)");
                }
                Project.clearPortraits();
                final String[] array = new String[5];
                array[0] = first.mainName;
                final String[] nameDisplay = array;
                Project.changePortrait(first.convertGender(), first.type, true, false, this, nameDisplay, 0, Project.Emotion.SWOON, Project.Emotion.SWOON);
                this.save.saveScene(4, String.valueOf(first.mainName) + " Sealed", "In order to prevent the monstrous child of the Demon Lord and one of the Chosen from being born, " + first.mainName + " is locked away in cold storage...");
            }
        }
        else if (type == 2) {
            if (second == null) {
                this.append(t, "Several weeks later...\n\nA town on the border of Demon-controlled territory has been targeted by a raiding party.  Demons strike under cover of darkness, grabbing as many innocents as possible in order to drag them back to the hive, while Thralls mingled among the rescue workers sabotage any attempts to organize and repel the threat.  However, as the Demons start to make their escape, a brilliant blast of light shines down from the sky, disintegrating them before they even have a chance to retaliate.\n\nWhen the light fades, " + first.getMainName() + " is hovering in the air where the Demons once stood.  The grateful civilians emerge from their hiding places, calling out to thank " + first.himHer() + " for saving them.  ");
                if (first.getConfidence() > 66) {
                    this.append(t, "However, when " + first.getMainName() + " turns to look at them, " + first.heShe() + " just smirks and raises " + first.hisHer() + " hand to fire a lethal blast at them as well.\n\n");
                    first.say(t, "\"Pathetic.  Your tricks won't work on me, Demons!\"\n\n");
                }
                else if (first.getConfidence() > 33) {
                    this.append(t, "But " + first.getMainName() + " doesn't seem to recognize their words, and when " + first.heShe() + " responds, it's with lethal intent.\n\n");
                    first.say(t, "\"There were more Demons hiding here?  I'll take them all out!\"\n\n");
                }
                else {
                    this.append(t, String.valueOf(first.getMainName()) + " shouts in alarm when " + first.heShe() + " hears them, spinning around and shooting rays of lethal light in their direction too.\n\n");
                    first.say(t, "\"Aaah!  Th-There are more of them!  I won't let you sneak up on me!\"\n\n");
                }
                if (first.getMorality() > 66) {
                    this.append(t, String.valueOf(first.HisHer()) + " mind wasn't able to hold up under the strain of the sins " + first.heShe() + " was forced to commit, and now " + first.hisHer() + " hallucinations have grown beyond even your control.  " + first.HeShe() + " has imagined for " + first.himHer() + "self a world where " + first.heShe() + "'s surrounded by enemies " + first.heShe() + "'s allowed to kill.\n\n");
                    first.say(t, "\"Phew...  No humans here this time, either.  Looks like I got here in time to stop the Demons from reaching them.\"\n\n");
                }
                else if (first.getMorality() > 33) {
                    this.append(t, "Even though " + first.heShe() + " managed to escape your direct control, " + first.hisHer() + " grasp on reality has been broken beyond repair.  Now, there's nothing to stop " + first.himHer() + " from seeing the world however " + first.heShe() + " wants to see it.\n\n");
                    first.say(t, "\"Looks like there's no one here to appreciate my victory.  Oh well, that's fine too.\"\n\n");
                }
                else {
                    this.append(t, "After " + first.heShe() + " escaped from the Demon Lord, " + first.hisHer() + " mind only deteriorated further and further into violent fantasies, and soon " + first.heShe() + " began to lose track of where the fantasy ended and reality began.  Even though a part of " + first.himHer() + " suspects that " + first.heShe() + "'s actually killing humans, " + first.heShe() + " doesn't care enough to heed it.\n\n");
                    first.say(t, "\"Those last ones died too quickly.  I'm going to keep hunting until I'm satisfied.\"\n\n");
                }
                if (first.getDignity() > 66) {
                    this.append(t, "This kind of wanton slaughter is obviously unbefitting of one of the Chosen, but " + first.getMainName() + "'s prolific former reputation means that " + first.heShe() + "'ll continue to receive psychic energy from the public for some time, even as the human authorities do their best to scrub " + first.hisHer() + " name from all media.\n\n");
                    first.say(t, "\"Still, I was hoping to encounter the mass murderer that was supposed to be somewhere around here.  If I can stop " + first.himHer() + ", maybe the news sites will go back to covering my heroics.\"\n\n");
                }
                else if (first.getDignity() > 33) {
                    this.append(t, String.valueOf(first.getMainName()) + " is slowly losing " + first.hisHer() + " Chosen powers as a result of " + first.hisHer() + " behavior, but " + first.hisHer() + " faith in " + first.himHer() + "self is also greater than ever, so " + first.heShe() + "'s still strong enough that neither the human authorities nor the local Demon Lords are interested in spending resources to bring " + first.himHer() + " down.\n\n");
                    first.say(t, "\"I should probably report in to base and take some time off soon... but for now, I'm enjoying this.\"\n\n");
                }
                else {
                    this.append(t, String.valueOf(first.getMainName()) + " is no longer receiving any psychic energy as one of the Chosen, but public's growing terror after every attack is turning " + first.himHer() + " into something different - neither Chosen nor Demon, and too strong for either side to want to oppose.  " + first.HeShe() + " hasn't yet realized that " + first.heShe() + "'s starting to grow horns and fangs.\n\n");
                    first.say(t, "\"Working alone is nice.  I don't have to worry about what anyone else says.\"\n\n");
                }
                Project.clearPortraits();
                final String[] array2 = new String[5];
                array2[0] = first.mainName;
                final String[] nameDisplay = array2;
                Project.changePortrait(first.convertGender(), first.type, false, false, this, nameDisplay, 0, Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                if (first.getInnocence() > 66) {
                    this.append(t, String.valueOf(first.HeShe()) + " smiles through the blood spattering " + first.hisHer() + " face.  For the first time in a long while, " + first.getMainName() + " is truly happy.\n\n");
                    first.say(t, "\"Everything used to be so confusing, but now it all makes sense!\"");
                }
                else if (first.getInnocence() > 33) {
                    this.append(t, String.valueOf(first.HeShe()) + " continues on " + first.hisHer() + " rampage, not even realizing what " + first.heShe() + "'s doing.  Whenever " + first.heShe() + " starts to have doubts, " + first.hisHer() + " mind immediately recoils back into pure delusion.\n\n");
                    first.say(t, "\"I need to stop second-guessing myself.  Everything worked out alright, and that's that.\"");
                }
                else {
                    Project.changePortrait(first.convertGender(), first.type, false, false, this, nameDisplay, 0, Project.Emotion.FEAR, Project.Emotion.FEAR);
                    this.append(t, String.valueOf(first.HeShe()) + " can't help but notice the inconsistencies sometimes, and there are even nights that " + first.heShe() + " briefly returns to full horrified lucidity.  But when " + first.heShe() + " realizes that it's too late to go back to a normal life, " + first.heShe() + " willingly sinks back into " + first.hisHer() + " delusions, incapable of facing the reality that " + first.heShe() + "'s become a monster.\n\n");
                    first.say(t, "\"The dark thoughts are coming back... h-hurry, I need to find more 'Demons' to kill, or else I'll...!\"");
                }
                this.save.saveScene(4, String.valueOf(first.mainName) + "'s Insanity", "Having lost " + first.hisHer() + " mind but retained " + first.hisHer() + " godlike power, " + first.mainName + " cuts a bloody swath across the land.");
            }
        }
        else if (type == 3) {
            if (second == null) {
                Project.clearPortraits();
                this.append(t, "In a location undisclosed to the public, sealed within a region of space pinched off from the rest of reality, fragments of a holographic cathedral float in an endless sea of brilliant light.  A lone wooden doorway serves to connect it to the outside world.  The perfect silence and serenity of the scene are broken when the door opens, revealing concrete walls and fluorescent lighting on the other side.\n\nA man in a military uniform steps through.  His task was to deliver a message, but his voice dies in his throat as he sees the glowing figure kneeling at the altar before him.  Overcome with reverence, he drops to his knees as well, the door swinging shut behind him.\n\nFor several moments, silence reclaims the cathedral.  The messenger feels that he is unworthy to look directly at the one before him - unworthy to even exist in her presence.  He wants to gouge out his own eyes for daring to even glance in her direction.  But to soothe his shame in such a grotesque manner would itself be even more shameful, and he wants to beat his brains out against the marble floor for thinking such unworthy thoughts.  His mind continues to spiral inward and downward until a voice from above reminds him of his mission.\n\n");
                this.orangeAppend(t, "\"You may speak.\"\n\n");
                this.append(t, "The voice is quiet, calm, and androgynous.  The messenger shudders as he feels its beauty wash over him, but the implicit command in its words helps to keep him from being struck speechless a second time.  He had planned out exactly how he'd word his message before he came here, but now that he's been asked to speak, the words come out in a disorganized jumble.\n\n");
                this.append(t, "\"Please forgive us, Crown.  We've failed.  The city is... it has fallen.  And the Chosen tasked to defend it...  They...  They couldn't...\"\n\n");
                int killed = 0;
                Chosen traitor = null;
                for (int i = 0; i < 3; ++i) {
                    if (!this.getCast()[i].alive) {
                        ++killed;
                    }
                    else {
                        traitor = this.getCast()[i];
                    }
                }
                this.orangeAppend(t, "\"");
                if (killed == 3) {
                    this.orangeAppend(t, "They died in defense of the city.\"\n\n");
                    this.append(t, "\"Y-Yes, Crown.  We failed to give them the support they needed in order to win.  I'm so sorry.\"\n\n");
                    this.append(t, "The messenger's thoughts once again start to turn in dark directions, but this time, he's immediately rescued by Crown's words.  Her tone is surprisingly light.\n\n");
                    this.orangeAppend(t, "\"Do not apologize.  Instead, rejoice.  The Holy Energy from their martyrdom will empower the forces of good.  This is the best possible result.  We can allow the Demon Lord to keep his new territory for now.  Our final victory is closer than ever.  Go, and spread the word to my lieutenants.\"");
                }
                else if (killed == 2) {
                    this.orangeAppend(t, "They were defeated.  But I felt only two of them die.  What of the third?\"\n\n");
                    this.append(t, "\"R-Right.  As for the third... " + traitor.getMainName() + "...  " + traitor.HeShe() + "... seems to have joined the side of the Demons.  At the very least, " + traitor.heShe() + " hasn't left the city, and there are no signs that " + traitor.heShe() + "'s fighting against the Demons occupying it.\"\n\n");
                    this.append(t, "The messenger gulps, full of regret over being forced to trouble Crown with such bad news.  But when Crown replies, her voice is as calm as ever.\n\n");
                    this.orangeAppend(t, "\"How... disappointing.  Nonetheless, this outcome still tips the scales in favor of the forces of good.  The Holy Energy produced from the martyrdom of two of the Chosen at once should empower the rest of us greatly.  Tell my lieutenants to prepare to press the attack on the other fronts.  We'll leave this Demon Lord undisturbed for now.  You may go.\"");
                }
                else {
                    this.orangeAppend(t, "I felt only one of them die.  The other two... did they defect?\"\n\n");
                    this.append(t, "\"Th-That's correct.  I'm sorry, Crown...  With two fallen Chosen defending it, there's no way we'll be able to retake the city.\"\n\n");
                    this.append(t, "Silence once again stretches for several moments as the messenger cringes and stares at the floor.  Finally, Crown lets out a sigh and then responds.\n\n");
                    this.orangeAppend(t, "\"This outcome is far from ideal, but it is not a complete loss.  When the Chosen martyr themselves, the resulting Holy Energy is considerable.  Go, and tell my lieutenants that " + first.getMainName() + "'s sacrifice shall drive us onward.\"");
                }
                final String[] array3 = new String[5];
                array3[0] = "Crown";
                final String[] nameDisplay2 = array3;
                Project.changePortrait(Forsaken.Gender.FEMALE, null, false, false, this, nameDisplay2, 0, Project.Emotion.NEUTRAL, Project.Emotion.NEUTRAL);
                this.save.saveScene(4, "Crown hears of " + first.getMainName(), "Following " + first.getMainName() + "'s death in battle, the leader of the Council of Ten reflects on the ramifications for the war as a whole.");
            }
        }
        else if (type == 4 && second == null) {
            this.append(t, "Several weeks later...\n\n");
            if (first.getDignity() > 66) {
                this.append(t, String.valueOf(first.getGivenName()) + "'s return to being a regular human has not gone well for " + first.himHer() + ".  " + first.HisHer() + " great fame meant that " + first.heShe() + " was recognized on the street even by people who didn't regularly follow the battles between the Demons and the Chosen, and " + first.hisHer() + " failures had already become a regular topic of conversation.  It was impossible for " + first.himHer() + " to return to a normal life.\n\n");
                first.say(t, "\"So much for my so-called fans...\"\n\n");
            }
            else if (first.getDignity() > 33) {
                this.append(t, "The return to being a regular human has been somewhat of a mixed bag for " + first.getGivenName() + ".  On one hand, after the stresses of fighting as one of the Chosen, returning to a normal life was oddly comforting.  But on the other hand, " + first.hisHer() + " depraved fanbase quickly moved on to other Chosen once " + first.heShe() + " lost " + first.hisHer() + " powers, and on the rare occasion that someone does recognize " + first.himHer() + ", they almost always have a very poor opinion of " + first.himHer() + ".\n\n");
                first.say(t, "\"Maybe I should get surgery to chance my face...\"\n\n");
            }
            else {
                this.append(t, "Because " + first.getGivenName() + " never had a particularly large fanbase even at the height of " + first.hisHer() + " Chosen career, " + first.hisHer() + " fall from grace isn't common knowledge except among those who pay close attention to such things.  " + first.HeShe() + "'s able to go back to a relatively normal life, and while " + first.heShe() + " makes no secret of the fact that " + first.heShe() + " used to be one of the Chosen, " + first.hisHer() + " acquaintances often don't even believe " + first.himHer() + ".\n\n");
                first.say(t, "\"Maybe a peaceful life isn't so bad...\"\n\n");
            }
            if (first.getMorality() > 66) {
                this.append(t, "However, when a routine shopping trip is interrupted by Demons tearing their way up through the ground and starting to drag civilians back down with them into a new hive, " + first.hisHer() + " battle-honed reflexes take over.  Just as one of the Demons is about to grab one of the civilians, " + first.getGivenName() + " pushes " + first.himHer() + " out of the way.\n\n");
                first.say(t, "\"Run!  Get to safety!\"\n\n");
            }
            else if (first.getMorality() > 33) {
                this.append(t, "However, things get significantly worse when the Demons start forming a hive under the city " + first.heShe() + " now calls " + first.hisHer() + " home.  " + first.HeShe() + " happens to get caught right in the middle of their first attack, surrounded by Demons erupting from the pavement around " + first.himHer() + " on all sides.\n\n");
                first.say(t, "\"What!?  They're here, too!?\"\n\n");
            }
            else {
                this.append(t, "However, " + first.hisHer() + " new lack of power means " + first.heShe() + "'s practically helpless when the city " + first.heShe() + " now calls home is targeted by the Demons.  " + first.HeShe() + " happens to get caught right in the middle of their first attack.  Desperate to escape, " + first.heShe() + " starts shoving other civilians to the ground in hopes of distracting the Demons with easier prey as " + first.heShe() + " flees.\n\n");
                first.say(t, "\"Get out of my way!\"\n\n");
            }
            if (first.getInnocence() > 66) {
                this.append(t, "Faced with a Demon right in front of " + first.himHer() + ", " + first.heShe() + " thoughtlessly tries to punch it aside - only to find that " + first.heShe() + " accomplishes nothing more than bruising " + first.hisHer() + " fist.\n\n");
                first.say(t, "\"Ow!  Oh, crap, that's right, I don't have my powers any-\"\n\n");
            }
            else if (first.getInnocence() > 33) {
                this.append(t, String.valueOf(first.getGivenName()) + " isn't used to retreating.  " + first.HeShe() + " hesitates, looking around for an escape route, which gives the Demons plenty of time to grab " + first.himHer() + ".\n\n");
                first.say(t, "\"I have to get out of here, or else-\"\n\n");
            }
            else {
                this.append(t, "Thinking quickly, " + first.getGivenName() + " immediately dives to the side, tumbling onto " + first.hisHer() + " feet as " + first.heShe() + " darts back and forth to evade the pursuing Demons.  But no matter how skillful " + first.hisHer() + " movements, " + first.hisHer() + " body is just too slow now, and they have no trouble catching " + first.himHer() + ".\n\n");
                first.say(t, "\"No!  I can't-\"\n\n");
            }
            this.append(t, "A tentacled Demon grabs " + first.himHer() + " by the ankles, spreads them wide apart, and then immediately rams a tentacle ");
            if (first.gender.equals("male")) {
                this.append(t, "up " + first.hisHer() + " ass, ");
            }
            else {
                this.append(t, "into " + first.hisHer() + " pussy, ");
            }
            if (first.vVirg && !first.gender.equals("male")) {
                this.append(t, "stealing the virginity " + first.heShe() + " had worked so hard to protect, and ");
            }
            this.append(t, "squirting copious amounts of slime inside.  ");
            Project.clearPortraits();
            final String[] array4 = new String[5];
            array4[0] = first.mainName;
            final String[] nameDisplay = array4;
            Project.changePortrait(first.convertGender(), first.type, false, false, this, nameDisplay, 0, Project.Emotion.LEWD, Project.Emotion.LEWD);
            if (first.getConfidence() > 66) {
                this.append(t, "The rough insertion is painful, but " + first.getGivenName() + " still grits " + first.hisHer() + " teeth and struggles with all " + first.hisHer() + " might, refusing to accept " + first.hisHer() + " fate even as " + first.heShe() + "'s dragged back to the Demonic hive.\n\n");
                first.say(t, "\"No!  You can't do this to me!  I'm... ngh... I'm supposed to be... stronger than this...\"\n\n");
            }
            else if (first.getConfidence() > 33) {
                this.append(t, String.valueOf(first.getGivenName()) + " kicks and screams pitifully, but " + first.hisHer() + " efforts to escape don't even slow the Demon down as it drags " + first.himHer() + " back to the hive.\n\n");
                first.say(t, "\"Aaah!  No, no, no, let me go!\"\n\n");
            }
            else {
                this.append(t, "For " + first.getGivenName() + ", who no longer has the partial protection of " + first.hisHer() + " Chosen resilience and regeneration, the insertion is even more painful than " + first.heShe() + " was expecting.  " + first.HeShe() + " whimpers and tries to curl into the fetal position, offering no resistance whatsoever as " + first.heShe() + "'s brought back to the Demonic hive.\n\n");
                first.say(t, "\"I should have known... it would turn out this way...\"\n\n");
            }
            this.append(t, "Before long, the slime takes effect, and " + first.getGivenName() + " is turned into an obedient Thrall, ");
            if (first.gender.equals("female")) {
                this.append(t, "learning to enjoy giving birth to countless Demons every day.");
            }
            else {
                Project.changePortrait(first.convertGender(), first.type, false, false, this, nameDisplay, 0, Project.Emotion.FOCUS, Project.Emotion.FOCUS);
                this.append(t, "venturing back up to the city every day to help torment the Chosen tasked with defending it.");
            }
            this.save.saveScene(4, String.valueOf(first.givenName) + " the Thrall", "Stripped of " + first.hisHer() + " powers, the civilian once known as " + first.mainName + " is captured by the Demons and turned into an eager slave.");
        }
    }
    
    public void corruptColors(final Chosen c) {
        if (c.innocence > 66) {
            c.textColor = new Color(255, 0, 150);
            c.darkColor = new Color(255, 0, 150);
        }
        else if (c.innocence > 33) {
            c.textColor = new Color(120, 50, 180);
            c.darkColor = new Color(150, 100, 200);
        }
        else {
            c.textColor = new Color(200, 100, 100);
            c.darkColor = new Color(255, 130, 220);
        }
    }
    
    public WorldState() {
        this.textSize = 16;
        this.version = "17";
        this.PURPLE = new Color(100, 0, 150);
        this.ORANGE = new Color(200, 100, 0);
        this.RED = new Color(180, 0, 0);
        this.GREEN = new Color(0, 110, 0);
        this.BLUE = new Color(0, 0, 230);
        this.BACKGROUND = Color.WHITE;
        this.FOREGROUND = Color.BLACK;
        this.separator = "---";
        this.nameSeed = new int[6];
        this.statSeed = new int[12];
        this.genders = new String[] { "female", "female", "female" };
        this.genderBalance = new int[] { 0, 3, 0, 0 };
        this.maleShift = 0;
        this.femaleShift = 0;
        this.repeatShift = true;
        this.tickleOn = false;
        this.portraits = true;
        this.disableAdaptations = false;
        this.totalThreatened = 0;
        this.totalSlimed = 0;
        this.totalAttacked = 0;
        this.totalTaunted = 0;
        this.nextTip = 0;
        this.cast = new Chosen[3];
        this.techs = new Tech[49];
        this.evilEnergy = 0;
        this.day = 1;
        this.totalRounds = 1;
        this.highScore = 0L;
        this.parScore = 0L;
        this.saveTitle = "";
        this.friendship = new int[3][3];
        this.friction = new int[3][3];
        this.remaining = new int[3][3];
        this.groupScenes = new Boolean[20];
        this.lastSpeaker = null;
        this.lastLine = 0;
        this.lastLastLine = 0;
        this.pendingBreaks = new int[0];
        this.resolvedBreaks = new int[0];
        this.evacuationPerTurn = 20;
        this.exterminationPerChosen = 10;
        this.evacNotice = false;
        this.rallyBonus = new int[3];
        this.distractBonus = new int[3];
        this.nextSurround = null;
        this.nextCapture = null;
        this.captureDuration = 2;
        this.capturesPossible = 0;
        this.arrivalTimer = new int[3];
        this.readyToEnd = false;
        this.barrierMulti = 10000L;
        this.clampStart = 11;
        this.clampPercent = 100;
        this.bodyStatus = new Boolean[27];
        this.tutorial = false;
        this.onTrack = true;
        this.commentary = new String[0];
        this.currentComment = "";
        this.actions = new int[0];
        this.currentAction = 0;
        this.recordedCommanders = new Boolean[0][this.bodyStatus.length];
        this.commentaryRead = true;
        this.commentaryWrite = false;
        this.cheater = false;
        this.earlyCheat = false;
        this.hardMode = false;
        this.eventOffset = 0;
        this.customNames = new String[6];
        this.customTop = new String[] { "", "", "" };
        this.customTopAccess = new String[] { "", "", "" };
        this.customBottom = new String[] { "", "", "" };
        this.customBottomAccess = new String[] { "", "", "" };
        this.customUnder = new String[] { "", "", "" };
        this.customColor = new String[] { "", "", "" };
        this.customAccessory = new String[] { "", "", "" };
        this.customWeapons = new String[] { "", "", "" };
        this.customWeaponTypes = new String[] { "", "", "" };
        this.customFeet = new String[] { "", "", "" };
        this.customAliases = new String[3];
        this.customTitles = new String[3];
        this.customIncantations = new String[3];
        this.invertVVirg = new Boolean[] { false, false, false };
        this.invertCVirg = new Boolean[] { false, false, false };
        this.invertAVirg = new Boolean[] { false, false, false };
        this.invertModest = new Boolean[] { false, false, false };
        this.gaijinStatus = new Boolean[] { false, false, false };
        this.personalityWeights = new int[24][3][8];
        this.quizAnswers = new String[24];
        this.orgyStage = 0;
        this.lastOrgyStage = new int[3];
        this.finalBattle = false;
        this.save = null;
        this.active = false;
        this.usedForsaken = null;
        this.usedForsakenIndex = 0;
        this.vignetteSeen = new Boolean[1];
        this.campaign = false;
        this.loops = 0;
        this.downtimeMultiplier = 100;
        this.conquered = new Forsaken[0];
        this.sacrificed = new Forsaken[0];
        this.returning = new Chosen[0];
        this.deceased = new Chosen[0];
        this.formerChosen = new Chosen[0];
        this.campaignCustom = new Chosen[0];
        this.loopChosen = new Chosen[3];
        this.cityName = "";
        this.campaignRand = new Random();
        this.loopComplete = false;
        this.achievementSeen = new int[7];
        this.types = new Chosen.Species[3];
    }
}
